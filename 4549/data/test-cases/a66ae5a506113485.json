{"uid":"a66ae5a506113485","name":"test_can_create_connection[Test for Frequency, url: wss://0.rpc.frequency.xyz]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"19c26034bddffc5dd1f8d98e703505a3","time":{"start":1705766641821,"stop":1705766641821,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1705766629392,"stop":1705766634655,"duration":5263},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 22, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 141, in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 347, in read_headers\n    line = recv_line(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 137, in recv_line\n    c = recv(sock, 1)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 129, in recv\n    raise WebSocketConnectionClosedException(\"Connection to remote host was lost.\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705766639739,"stop":1705766641821,"duration":2082},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"65b93059d596cc70","name":"stdout","source":"65b93059d596cc70.txt","type":"text/plain","size":112}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az661-991"},{"name":"thread","value":"2073-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://0.rpc.frequency.xyz', 'name': 'Frequency'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"237c36daef27dbe5","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705766629391,"stop":1705766629391,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":742,"unknown":0,"total":762},"items":[{"uid":"9b1ec0ccd1885467","reportUrl":"https://novasamatech.github.io/test-runner/4548//#testresult/9b1ec0ccd1885467","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705752247485,"stop":1705752247485,"duration":0}},{"uid":"56a2d829462c5a4f","reportUrl":"https://novasamatech.github.io/test-runner/4547//#testresult/56a2d829462c5a4f","status":"passed","time":{"start":1705737817843,"stop":1705737817844,"duration":1}},{"uid":"d563f19affdc67e7","reportUrl":"https://novasamatech.github.io/test-runner/4546//#testresult/d563f19affdc67e7","status":"passed","time":{"start":1705723427078,"stop":1705723427078,"duration":0}},{"uid":"63010ca95c1d568a","reportUrl":"https://novasamatech.github.io/test-runner/4545//#testresult/63010ca95c1d568a","status":"passed","time":{"start":1705709063610,"stop":1705709063610,"duration":0}},{"uid":"10533fd374e7da1e","reportUrl":"https://novasamatech.github.io/test-runner/4544//#testresult/10533fd374e7da1e","status":"passed","time":{"start":1705694708462,"stop":1705694708462,"duration":0}},{"uid":"1e67bce824ebaba3","reportUrl":"https://novasamatech.github.io/test-runner/4543//#testresult/1e67bce824ebaba3","status":"passed","time":{"start":1705680313465,"stop":1705680313465,"duration":0}},{"uid":"96703a91781dc660","reportUrl":"https://novasamatech.github.io/test-runner/4542//#testresult/96703a91781dc660","status":"passed","time":{"start":1705665869488,"stop":1705665869488,"duration":0}},{"uid":"f7f29eab6bb3dcf4","reportUrl":"https://novasamatech.github.io/test-runner/4541//#testresult/f7f29eab6bb3dcf4","status":"passed","time":{"start":1705655709139,"stop":1705655709139,"duration":0}},{"uid":"273cae946e831195","reportUrl":"https://novasamatech.github.io/test-runner/4540//#testresult/273cae946e831195","status":"passed","time":{"start":1705651492176,"stop":1705651492176,"duration":0}},{"uid":"232f4a1d4637af14","reportUrl":"https://novasamatech.github.io/test-runner/4539//#testresult/232f4a1d4637af14","status":"passed","time":{"start":1705637048092,"stop":1705637048093,"duration":1}},{"uid":"a04ca8f2f2889eb","reportUrl":"https://novasamatech.github.io/test-runner/4538//#testresult/a04ca8f2f2889eb","status":"passed","time":{"start":1705622766434,"stop":1705622766435,"duration":1}},{"uid":"51b88fc156c771cb","reportUrl":"https://novasamatech.github.io/test-runner/4537//#testresult/51b88fc156c771cb","status":"passed","time":{"start":1705608630845,"stop":1705608630845,"duration":0}},{"uid":"1a789c951d575c17","reportUrl":"https://novasamatech.github.io/test-runner/4536//#testresult/1a789c951d575c17","status":"passed","time":{"start":1705600078795,"stop":1705600078796,"duration":1}},{"uid":"73433db09d09bfcb","reportUrl":"https://novasamatech.github.io/test-runner/4535//#testresult/73433db09d09bfcb","status":"passed","time":{"start":1705579824359,"stop":1705579824359,"duration":0}},{"uid":"bfb5221a553faa0e","reportUrl":"https://novasamatech.github.io/test-runner/4533//#testresult/bfb5221a553faa0e","status":"passed","time":{"start":1705550873853,"stop":1705550873853,"duration":0}},{"uid":"c529772db3d2846d","reportUrl":"https://novasamatech.github.io/test-runner/4532//#testresult/c529772db3d2846d","status":"passed","time":{"start":1705536501095,"stop":1705536501095,"duration":0}},{"uid":"82e032510c90775b","reportUrl":"https://novasamatech.github.io/test-runner/4531//#testresult/82e032510c90775b","status":"passed","time":{"start":1705522113017,"stop":1705522113018,"duration":1}},{"uid":"6bfeab1cd2c577ae","reportUrl":"https://novasamatech.github.io/test-runner/4530//#testresult/6bfeab1cd2c577ae","status":"passed","time":{"start":1705507769587,"stop":1705507769587,"duration":0}},{"uid":"9e311a5e44d96e16","reportUrl":"https://novasamatech.github.io/test-runner/4529//#testresult/9e311a5e44d96e16","status":"passed","time":{"start":1705493257068,"stop":1705493257068,"duration":0}},{"uid":"769237d79801a22d","reportUrl":"https://novasamatech.github.io/test-runner/4528//#testresult/769237d79801a22d","status":"passed","time":{"start":1705478872111,"stop":1705478872111,"duration":0}}]},"tags":[]},"source":"a66ae5a506113485.json","parameterValues":["{'url': 'wss://0.rpc.frequency.xyz', 'name': 'Frequency'}"]}