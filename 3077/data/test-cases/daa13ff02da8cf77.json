{"uid":"daa13ff02da8cf77","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc-0.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3d8f2ce0558c9bfde019f2a96edd941d","time":{"start":1685045055857,"stop":1685045056348,"duration":491},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Thu, 25 May 2023 20:04:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Thu, 25 May 2023 20:04:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Thu, 25 May 2023 20:04:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Thu, 25 May 2023 20:04:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d8ac9eecb4a546da","name":"stdout","source":"d8ac9eecb4a546da.txt","type":"text/plain","size":928}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az612-94"},{"name":"thread","value":"1874-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1b59a95a453cf249","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Thu, 25 May 2023 20:04:05 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1685045045247,"stop":1685045045721,"duration":474}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":140,"unknown":0,"total":142},"items":[{"uid":"d012d9a3179d86fd","reportUrl":"https://nova-wallet.github.io/test-runner/3076//#testresult/d012d9a3179d86fd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Thu, 25 May 2023 16:04:36 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685030676559,"stop":1685030677060,"duration":501}},{"uid":"86d2c1ae47f58838","reportUrl":"https://nova-wallet.github.io/test-runner/3074//#testresult/86d2c1ae47f58838","status":"passed","time":{"start":1685005777258,"stop":1685005777862,"duration":604}},{"uid":"d40bd4c4144da7a4","reportUrl":"https://nova-wallet.github.io/test-runner/3054//#testresult/d40bd4c4144da7a4","status":"passed","time":{"start":1684742685339,"stop":1684742685918,"duration":579}},{"uid":"5436c3ab25ab5df3","reportUrl":"https://nova-wallet.github.io/test-runner/3052//#testresult/5436c3ab25ab5df3","status":"passed","time":{"start":1684714432500,"stop":1684714433126,"duration":626}},{"uid":"5ca9b2980e375cb0","reportUrl":"https://nova-wallet.github.io/test-runner/3050//#testresult/5ca9b2980e375cb0","status":"passed","time":{"start":1684685039891,"stop":1684685040627,"duration":736}},{"uid":"4c09de807103a785","reportUrl":"https://nova-wallet.github.io/test-runner/3049//#testresult/4c09de807103a785","status":"passed","time":{"start":1684670654196,"stop":1684670654676,"duration":480}},{"uid":"feb492bb7fba37d6","reportUrl":"https://nova-wallet.github.io/test-runner/3048//#testresult/feb492bb7fba37d6","status":"passed","time":{"start":1684656284960,"stop":1684656285707,"duration":747}},{"uid":"a93ffb882b06017f","reportUrl":"https://nova-wallet.github.io/test-runner/3047//#testresult/a93ffb882b06017f","status":"passed","time":{"start":1684641844527,"stop":1684641845039,"duration":512}},{"uid":"a1b598d8c71ffc61","reportUrl":"https://nova-wallet.github.io/test-runner/3046//#testresult/a1b598d8c71ffc61","status":"passed","time":{"start":1684628065827,"stop":1684628066575,"duration":748}},{"uid":"7c27e7b054e12f50","reportUrl":"https://nova-wallet.github.io/test-runner/3045//#testresult/7c27e7b054e12f50","status":"passed","time":{"start":1684613047838,"stop":1684613048583,"duration":745}},{"uid":"7129c64fcc591585","reportUrl":"https://nova-wallet.github.io/test-runner/3044//#testresult/7129c64fcc591585","status":"passed","time":{"start":1684598648780,"stop":1684598649421,"duration":641}},{"uid":"83fe503a7c596e39","reportUrl":"https://nova-wallet.github.io/test-runner/3043//#testresult/83fe503a7c596e39","status":"passed","time":{"start":1684584279439,"stop":1684584280040,"duration":601}},{"uid":"77ecd7404e34e95d","reportUrl":"https://nova-wallet.github.io/test-runner/3042//#testresult/77ecd7404e34e95d","status":"passed","time":{"start":1684569829376,"stop":1684569829846,"duration":470}},{"uid":"da516816eda28a05","reportUrl":"https://nova-wallet.github.io/test-runner/3041//#testresult/da516816eda28a05","status":"passed","time":{"start":1684555430116,"stop":1684555430614,"duration":498}},{"uid":"37e96cb008a94078","reportUrl":"https://nova-wallet.github.io/test-runner/3040//#testresult/37e96cb008a94078","status":"passed","time":{"start":1684541543587,"stop":1684541544099,"duration":512}},{"uid":"e2b80ab2b5ace4bb","reportUrl":"https://nova-wallet.github.io/test-runner/3039//#testresult/e2b80ab2b5ace4bb","status":"passed","time":{"start":1684526623874,"stop":1684526624417,"duration":543}},{"uid":"e09b1a7e9a6fabbd","reportUrl":"https://nova-wallet.github.io/test-runner/3038//#testresult/e09b1a7e9a6fabbd","status":"passed","time":{"start":1684512236963,"stop":1684512237447,"duration":484}},{"uid":"10fe0450ac78376b","reportUrl":"https://nova-wallet.github.io/test-runner/3037//#testresult/10fe0450ac78376b","status":"passed","time":{"start":1684497898636,"stop":1684497899190,"duration":554}},{"uid":"f3c9c8a2517a64dd","reportUrl":"https://nova-wallet.github.io/test-runner/3034//#testresult/f3c9c8a2517a64dd","status":"passed","time":{"start":1684455191641,"stop":1684455192399,"duration":758}},{"uid":"f7714ebad5ae0e24","reportUrl":"https://nova-wallet.github.io/test-runner/3033//#testresult/f7714ebad5ae0e24","status":"passed","time":{"start":1684440238199,"stop":1684440238694,"duration":495}}]},"tags":[]},"source":"daa13ff02da8cf77.json","parameterValues":["{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"]}