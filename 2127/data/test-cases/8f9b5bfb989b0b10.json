{"uid":"8f9b5bfb989b0b10","name":"test_can_create_connection[Test for GM, url: wss://ws-node-gm.terrabiodao.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3278cac67526220f4f1c0a171e1bb018","time":{"start":1671653130562,"stop":1671653130863,"duration":301},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"b21668d67a2159c7","name":"stdout","source":"b21668d67a2159c7.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az173-442"},{"name":"thread","value":"1703-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3c48208c7c68356","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671653120023,"stop":1671653120437,"duration":414}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":395,"skipped":0,"passed":0,"unknown":0,"total":395},"items":[{"uid":"b640801728f32084","reportUrl":"https://nova-wallet.github.io/test-runner/2126//#testresult/b640801728f32084","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671638850021,"stop":1671638850508,"duration":487}},{"uid":"51e734628ccb066","reportUrl":"https://nova-wallet.github.io/test-runner/2125//#testresult/51e734628ccb066","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671624501739,"stop":1671624502142,"duration":403}},{"uid":"3f19a3d62a05cda3","reportUrl":"https://nova-wallet.github.io/test-runner/2124//#testresult/3f19a3d62a05cda3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671610110835,"stop":1671610111349,"duration":514}},{"uid":"ccdbe4b5948504cb","reportUrl":"https://nova-wallet.github.io/test-runner/2123//#testresult/ccdbe4b5948504cb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671595661838,"stop":1671595662378,"duration":540}},{"uid":"a05367c12d226d88","reportUrl":"https://nova-wallet.github.io/test-runner/2122//#testresult/a05367c12d226d88","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671581768379,"stop":1671581768818,"duration":439}},{"uid":"a07be8af50e79119","reportUrl":"https://nova-wallet.github.io/test-runner/2121//#testresult/a07be8af50e79119","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671566863138,"stop":1671566863557,"duration":419}},{"uid":"6a5fdecad93fc3fb","reportUrl":"https://nova-wallet.github.io/test-runner/2120//#testresult/6a5fdecad93fc3fb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671552459048,"stop":1671552459373,"duration":325}},{"uid":"e8c12570fccdb904","reportUrl":"https://nova-wallet.github.io/test-runner/2119//#testresult/e8c12570fccdb904","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671538076467,"stop":1671538077025,"duration":558}},{"uid":"66f875fd0775a655","reportUrl":"https://nova-wallet.github.io/test-runner/2118//#testresult/66f875fd0775a655","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671523662028,"stop":1671523662522,"duration":494}},{"uid":"2f8d7511f53943f8","reportUrl":"https://nova-wallet.github.io/test-runner/2117//#testresult/2f8d7511f53943f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671509169828,"stop":1671509170147,"duration":319}},{"uid":"4f90c1df6d50da2d","reportUrl":"https://nova-wallet.github.io/test-runner/2116//#testresult/4f90c1df6d50da2d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671495399496,"stop":1671495399806,"duration":310}},{"uid":"ab30c419ff5dc819","reportUrl":"https://nova-wallet.github.io/test-runner/2115//#testresult/ab30c419ff5dc819","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671480466616,"stop":1671480467039,"duration":423}},{"uid":"b9c34c414be34805","reportUrl":"https://nova-wallet.github.io/test-runner/2113//#testresult/b9c34c414be34805","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671451678577,"stop":1671451678900,"duration":323}},{"uid":"3b4735604154036a","reportUrl":"https://nova-wallet.github.io/test-runner/2112//#testresult/3b4735604154036a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671437301536,"stop":1671437301837,"duration":301}},{"uid":"56f409deffc5deef","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/56f409deffc5deef","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671422841096,"stop":1671422841401,"duration":305}},{"uid":"1ce30be94e7a3f71","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/1ce30be94e7a3f71","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671408960388,"stop":1671408961034,"duration":646}},{"uid":"1fcff910e3f620d5","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/1fcff910e3f620d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671394017619,"stop":1671394018032,"duration":413}},{"uid":"a322cbc985cde36a","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/a322cbc985cde36a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671379663231,"stop":1671379663996,"duration":765}},{"uid":"2965e772c1ce555f","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/2965e772c1ce555f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671365395257,"stop":1671365395679,"duration":422}},{"uid":"b2a6c33131b478a3","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/b2a6c33131b478a3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671350968528,"stop":1671350968822,"duration":294}}]},"tags":[]},"source":"8f9b5bfb989b0b10.json","parameterValues":["{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"]}