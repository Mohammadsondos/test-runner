{"uid":"41539227a56b5a99","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://centrifuge-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c61d3131e170cf9bb6fa392a1937f08b","time":{"start":1671653128218,"stop":1671653139639,"duration":11421},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"85992ee56ebee675","name":"stdout","source":"85992ee56ebee675.txt","type":"text/plain","size":248}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az173-442"},{"name":"thread","value":"1706-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6199290d607f45d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671653108120,"stop":1671653118139,"duration":10019}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":187,"skipped":0,"passed":208,"unknown":0,"total":395},"items":[{"uid":"be5c505de6fa57c3","reportUrl":"https://nova-wallet.github.io/test-runner/2126//#testresult/be5c505de6fa57c3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671638758640,"stop":1671638771257,"duration":12617}},{"uid":"9192f735e9aa22cf","reportUrl":"https://nova-wallet.github.io/test-runner/2125//#testresult/9192f735e9aa22cf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671624402749,"stop":1671624415470,"duration":12721}},{"uid":"6657de32d0eecc1c","reportUrl":"https://nova-wallet.github.io/test-runner/2124//#testresult/6657de32d0eecc1c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671610016006,"stop":1671610028828,"duration":12822}},{"uid":"f5b2b415d58b2f61","reportUrl":"https://nova-wallet.github.io/test-runner/2123//#testresult/f5b2b415d58b2f61","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671595548720,"stop":1671595561486,"duration":12766}},{"uid":"aa16387887089dfb","reportUrl":"https://nova-wallet.github.io/test-runner/2122//#testresult/aa16387887089dfb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671581682340,"stop":1671581695075,"duration":12735}},{"uid":"9c32aa0693d80876","reportUrl":"https://nova-wallet.github.io/test-runner/2121//#testresult/9c32aa0693d80876","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671566746556,"stop":1671566759189,"duration":12633}},{"uid":"a193c8ca10c54bc2","reportUrl":"https://nova-wallet.github.io/test-runner/2120//#testresult/a193c8ca10c54bc2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671552355187,"stop":1671552367836,"duration":12649}},{"uid":"389ab7e699c27526","reportUrl":"https://nova-wallet.github.io/test-runner/2119//#testresult/389ab7e699c27526","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671538001954,"stop":1671538013510,"duration":11556}},{"uid":"94c4c2e850332b61","reportUrl":"https://nova-wallet.github.io/test-runner/2118//#testresult/94c4c2e850332b61","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671523583659,"stop":1671523596537,"duration":12878}},{"uid":"dc0bbd98e32f2e6a","reportUrl":"https://nova-wallet.github.io/test-runner/2117//#testresult/dc0bbd98e32f2e6a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671509143161,"stop":1671509155823,"duration":12662}},{"uid":"29dcceba3168a326","reportUrl":"https://nova-wallet.github.io/test-runner/2116//#testresult/29dcceba3168a326","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671495317799,"stop":1671495329625,"duration":11826}},{"uid":"c60f7a490adb311e","reportUrl":"https://nova-wallet.github.io/test-runner/2115//#testresult/c60f7a490adb311e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671480337011,"stop":1671480348406,"duration":11395}},{"uid":"8150d860ae6a55e4","reportUrl":"https://nova-wallet.github.io/test-runner/2113//#testresult/8150d860ae6a55e4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671451598989,"stop":1671451611631,"duration":12642}},{"uid":"335fbdaf892ff65f","reportUrl":"https://nova-wallet.github.io/test-runner/2112//#testresult/335fbdaf892ff65f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671437167929,"stop":1671437180565,"duration":12636}},{"uid":"68d482602d18d9ce","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/68d482602d18d9ce","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671422772928,"stop":1671422785592,"duration":12664}},{"uid":"c3b603400af07136","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/c3b603400af07136","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671408870420,"stop":1671408881788,"duration":11368}},{"uid":"6dc9e7b332ab0567","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/6dc9e7b332ab0567","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671393923625,"stop":1671393935056,"duration":11431}},{"uid":"866801b3a1baaf26","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/866801b3a1baaf26","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671379627234,"stop":1671379640090,"duration":12856}},{"uid":"4275614a906db069","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/4275614a906db069","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671365338463,"stop":1671365351209,"duration":12746}},{"uid":"8f02d2de19c9339d","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/8f02d2de19c9339d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671350872219,"stop":1671350884825,"duration":12606}}]},"tags":[]},"source":"41539227a56b5a99.json","parameterValues":["{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"]}