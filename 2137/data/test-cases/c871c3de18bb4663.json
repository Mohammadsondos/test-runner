{"uid":"c871c3de18bb4663","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1671797149447,"stop":1671797162222,"duration":12775},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4d395dfeebe16e16","name":"stdout","source":"4d395dfeebe16e16.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az988-330"},{"name":"thread","value":"1744-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1ad55321ac5eb92d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671797126564,"stop":1671797139338,"duration":12774}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":198,"skipped":0,"passed":207,"unknown":0,"total":405},"items":[{"uid":"55df889890601881","reportUrl":"https://nova-wallet.github.io/test-runner/2136//#testresult/55df889890601881","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671782703805,"stop":1671782715170,"duration":11365}},{"uid":"9fb6a3d96a187554","reportUrl":"https://nova-wallet.github.io/test-runner/2135//#testresult/9fb6a3d96a187554","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671768309914,"stop":1671768321312,"duration":11398}},{"uid":"42ce85c67f3a15ad","reportUrl":"https://nova-wallet.github.io/test-runner/2134//#testresult/42ce85c67f3a15ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671754436687,"stop":1671754449589,"duration":12902}},{"uid":"93b6d8a090a478a3","reportUrl":"https://nova-wallet.github.io/test-runner/2133//#testresult/93b6d8a090a478a3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671739474114,"stop":1671739486819,"duration":12705}},{"uid":"bd67d53675009233","reportUrl":"https://nova-wallet.github.io/test-runner/2132//#testresult/bd67d53675009233","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671725109842,"stop":1671725122191,"duration":12349}},{"uid":"7ea37ddcfc73b1db","reportUrl":"https://nova-wallet.github.io/test-runner/2131//#testresult/7ea37ddcfc73b1db","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671710745312,"stop":1671710758159,"duration":12847}},{"uid":"656c24c0f8d8616f","reportUrl":"https://nova-wallet.github.io/test-runner/2130//#testresult/656c24c0f8d8616f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671696303465,"stop":1671696314847,"duration":11382}},{"uid":"82633ec743253c2c","reportUrl":"https://nova-wallet.github.io/test-runner/2129//#testresult/82633ec743253c2c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671681901962,"stop":1671681913345,"duration":11383}},{"uid":"63f6631eff8a9a71","reportUrl":"https://nova-wallet.github.io/test-runner/2128//#testresult/63f6631eff8a9a71","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671668029770,"stop":1671668042464,"duration":12694}},{"uid":"202a9a991ef88191","reportUrl":"https://nova-wallet.github.io/test-runner/2127//#testresult/202a9a991ef88191","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671653096120,"stop":1671653107539,"duration":11419}},{"uid":"9ffae217991af75c","reportUrl":"https://nova-wallet.github.io/test-runner/2126//#testresult/9ffae217991af75c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671638724838,"stop":1671638736240,"duration":11402}},{"uid":"60fa48ea36370462","reportUrl":"https://nova-wallet.github.io/test-runner/2125//#testresult/60fa48ea36370462","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671624365639,"stop":1671624379169,"duration":13530}},{"uid":"e8353caffd8d3587","reportUrl":"https://nova-wallet.github.io/test-runner/2124//#testresult/e8353caffd8d3587","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671609979269,"stop":1671609992147,"duration":12878}},{"uid":"1a90e0d33da16e7b","reportUrl":"https://nova-wallet.github.io/test-runner/2123//#testresult/1a90e0d33da16e7b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671595512236,"stop":1671595525126,"duration":12890}},{"uid":"2770d54cb6135903","reportUrl":"https://nova-wallet.github.io/test-runner/2122//#testresult/2770d54cb6135903","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671581648646,"stop":1671581660064,"duration":11418}},{"uid":"de65b07310ee2912","reportUrl":"https://nova-wallet.github.io/test-runner/2121//#testresult/de65b07310ee2912","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671566710615,"stop":1671566723246,"duration":12631}},{"uid":"fe582af5ef75a803","reportUrl":"https://nova-wallet.github.io/test-runner/2120//#testresult/fe582af5ef75a803","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671552319219,"stop":1671552331828,"duration":12609}},{"uid":"abb8ad2933edcab4","reportUrl":"https://nova-wallet.github.io/test-runner/2119//#testresult/abb8ad2933edcab4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671537965608,"stop":1671537978336,"duration":12728}},{"uid":"cf7a2ed14557a743","reportUrl":"https://nova-wallet.github.io/test-runner/2118//#testresult/cf7a2ed14557a743","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671523548450,"stop":1671523559792,"duration":11342}},{"uid":"307ec205b79f2df1","reportUrl":"https://nova-wallet.github.io/test-runner/2117//#testresult/307ec205b79f2df1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671509107111,"stop":1671509119884,"duration":12773}}]},"tags":[]},"source":"c871c3de18bb4663.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}