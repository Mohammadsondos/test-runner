{"uid":"670a78948daf78ef","name":"test_can_create_connection[Test for Tinkernet, url: wss://invarch-tinkernet.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa04c589555648ef054595cb3e43047c","time":{"start":1671595590613,"stop":1671595650271,"duration":59658},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"d9a42a2bca3cccd7","name":"stdout","source":"d9a42a2bca3cccd7.txt","type":"text/plain","size":264}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az409-25"},{"name":"thread","value":"1700-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f608be46aaead47b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671595527347,"stop":1671595580532,"duration":53185}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":99,"skipped":0,"passed":235,"unknown":0,"total":334},"items":[{"uid":"8b5ab27736953258","reportUrl":"https://nova-wallet.github.io/test-runner/2122//#testresult/8b5ab27736953258","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671581697494,"stop":1671581756844,"duration":59350}},{"uid":"3bea9933f7f5c97e","reportUrl":"https://nova-wallet.github.io/test-runner/2121//#testresult/3bea9933f7f5c97e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671566791801,"stop":1671566851823,"duration":60022}},{"uid":"d97178941018d756","reportUrl":"https://nova-wallet.github.io/test-runner/2120//#testresult/d97178941018d756","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671552413361,"stop":1671552447830,"duration":34469}},{"uid":"62a1a5913c527b54","reportUrl":"https://nova-wallet.github.io/test-runner/2119//#testresult/62a1a5913c527b54","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671538034358,"stop":1671538064899,"duration":30541}},{"uid":"a94310ff9639c7b7","reportUrl":"https://nova-wallet.github.io/test-runner/2118//#testresult/a94310ff9639c7b7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671523619393,"stop":1671523650033,"duration":30640}},{"uid":"15481fb3f2c2062d","reportUrl":"https://nova-wallet.github.io/test-runner/2117//#testresult/15481fb3f2c2062d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671509194330,"stop":1671509254249,"duration":59919}},{"uid":"4e55dd9806cf1be4","reportUrl":"https://nova-wallet.github.io/test-runner/2116//#testresult/4e55dd9806cf1be4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671495357928,"stop":1671495388337,"duration":30409}},{"uid":"626e2f5ce0838f90","reportUrl":"https://nova-wallet.github.io/test-runner/2115//#testresult/626e2f5ce0838f90","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671480395210,"stop":1671480455297,"duration":60087}},{"uid":"c32387c1fff98726","reportUrl":"https://nova-wallet.github.io/test-runner/2113//#testresult/c32387c1fff98726","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671451626587,"stop":1671451667252,"duration":40665}},{"uid":"9fe2e2c0c438e7b4","reportUrl":"https://nova-wallet.github.io/test-runner/2112//#testresult/9fe2e2c0c438e7b4","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671437230223,"stop":1671437290134,"duration":59911}},{"uid":"2dc2580f46c25082","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/2dc2580f46c25082","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671422782960,"stop":1671422829621,"duration":46661}},{"uid":"3122c4b5511254d7","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/3122c4b5511254d7","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671408888072,"stop":1671408948336,"duration":60264}},{"uid":"6cab23a92866a10c","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/6cab23a92866a10c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671393965904,"stop":1671394006406,"duration":40502}},{"uid":"87a4df171614d6df","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/87a4df171614d6df","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671379600190,"stop":1671379651247,"duration":51057}},{"uid":"6b73e2e068cb8c4f","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/6b73e2e068cb8c4f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671365353221,"stop":1671365383717,"duration":30496}},{"uid":"ad3462e2acfc0783","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/ad3462e2acfc0783","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671350910609,"stop":1671350957425,"duration":46816}},{"uid":"83a893956cec53ba","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/83a893956cec53ba","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671336413935,"stop":1671336444572,"duration":30637}},{"uid":"4d72b688065eca8f","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/4d72b688065eca8f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671322522344,"stop":1671322559094,"duration":36750}},{"uid":"5cfa2096edd72ea3","reportUrl":"https://nova-wallet.github.io/test-runner/2103//#testresult/5cfa2096edd72ea3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671307563837,"stop":1671307594262,"duration":30425}},{"uid":"33d1d6ed7618c8cc","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/33d1d6ed7618c8cc","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671293197922,"stop":1671293257403,"duration":59481}}]},"tags":[]},"source":"670a78948daf78ef.json","parameterValues":["{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"]}