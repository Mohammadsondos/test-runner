{"uid":"3c537771a0a8f964","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1681013047262,"stop":1681013047799,"duration":537},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","steps":[],"attachments":[{"uid":"492d68e4a41776ef","name":"stdout","source":"492d68e4a41776ef.txt","type":"text/plain","size":348}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az305-274"},{"name":"thread","value":"1770-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"464be90ebc967cad","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1681013036639,"stop":1681013037084,"duration":445}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":121,"skipped":0,"passed":847,"unknown":0,"total":968},"items":[{"uid":"993ee419010d2973","reportUrl":"https://nova-wallet.github.io/test-runner/2788//#testresult/993ee419010d2973","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1680999229194,"stop":1680999234846,"duration":5652}},{"uid":"dcadf8e50e2d968f","reportUrl":"https://nova-wallet.github.io/test-runner/2787//#testresult/dcadf8e50e2d968f","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1680984232188,"stop":1680984232513,"duration":325}},{"uid":"bc5bc3a3a01a23ab","reportUrl":"https://nova-wallet.github.io/test-runner/2786//#testresult/bc5bc3a3a01a23ab","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1680969845331,"stop":1680969845779,"duration":448}},{"uid":"84912ff7b0e31d88","reportUrl":"https://nova-wallet.github.io/test-runner/2785//#testresult/84912ff7b0e31d88","status":"passed","time":{"start":1680955446015,"stop":1680955447440,"duration":1425}},{"uid":"edb149f00239b539","reportUrl":"https://nova-wallet.github.io/test-runner/2784//#testresult/edb149f00239b539","status":"passed","time":{"start":1680941044865,"stop":1680941045632,"duration":767}},{"uid":"c0a22966fb2f8b8b","reportUrl":"https://nova-wallet.github.io/test-runner/2783//#testresult/c0a22966fb2f8b8b","status":"passed","time":{"start":1680926655092,"stop":1680926656216,"duration":1124}},{"uid":"86d10970d2e03e3","reportUrl":"https://nova-wallet.github.io/test-runner/2782//#testresult/86d10970d2e03e3","status":"passed","time":{"start":1680912708029,"stop":1680912708984,"duration":955}},{"uid":"a2084da099b9fee4","reportUrl":"https://nova-wallet.github.io/test-runner/2781//#testresult/a2084da099b9fee4","status":"passed","time":{"start":1680897835587,"stop":1680897836925,"duration":1338}},{"uid":"4dacf0e763821b1f","reportUrl":"https://nova-wallet.github.io/test-runner/2780//#testresult/4dacf0e763821b1f","status":"passed","time":{"start":1680883448212,"stop":1680883449165,"duration":953}},{"uid":"46686ec73ea4d604","reportUrl":"https://nova-wallet.github.io/test-runner/2779//#testresult/46686ec73ea4d604","status":"passed","time":{"start":1680869092778,"stop":1680869094320,"duration":1542}},{"uid":"62a6855ad3fe9377","reportUrl":"https://nova-wallet.github.io/test-runner/2778//#testresult/62a6855ad3fe9377","status":"passed","time":{"start":1680854655698,"stop":1680854656564,"duration":866}},{"uid":"67b7f3389effab4c","reportUrl":"https://nova-wallet.github.io/test-runner/2777//#testresult/67b7f3389effab4c","status":"passed","time":{"start":1680840259196,"stop":1680840260346,"duration":1150}},{"uid":"a2f548ae6849b817","reportUrl":"https://nova-wallet.github.io/test-runner/2776//#testresult/a2f548ae6849b817","status":"passed","time":{"start":1680826327964,"stop":1680826329257,"duration":1293}},{"uid":"8d3e7d441a085dc0","reportUrl":"https://nova-wallet.github.io/test-runner/2775//#testresult/8d3e7d441a085dc0","status":"passed","time":{"start":1680811453404,"stop":1680811454816,"duration":1412}},{"uid":"37d02e0fd7f3f419","reportUrl":"https://nova-wallet.github.io/test-runner/2774//#testresult/37d02e0fd7f3f419","status":"passed","time":{"start":1680797045917,"stop":1680797047421,"duration":1504}},{"uid":"b30228d92f2c0c68","reportUrl":"https://nova-wallet.github.io/test-runner/2773//#testresult/b30228d92f2c0c68","status":"passed","time":{"start":1680782684924,"stop":1680782685658,"duration":734}},{"uid":"dbad7e08da0b5091","reportUrl":"https://nova-wallet.github.io/test-runner/2772//#testresult/dbad7e08da0b5091","status":"passed","time":{"start":1680768256627,"stop":1680768258049,"duration":1422}},{"uid":"7f0703d4883a22f6","reportUrl":"https://nova-wallet.github.io/test-runner/2771//#testresult/7f0703d4883a22f6","status":"passed","time":{"start":1680753852166,"stop":1680753853507,"duration":1341}},{"uid":"436ee8245488a550","reportUrl":"https://nova-wallet.github.io/test-runner/2770//#testresult/436ee8245488a550","status":"passed","time":{"start":1680739938734,"stop":1680739939942,"duration":1208}},{"uid":"5bee90f18bf02c6d","reportUrl":"https://nova-wallet.github.io/test-runner/2769//#testresult/5bee90f18bf02c6d","status":"passed","time":{"start":1680725051651,"stop":1680725052641,"duration":990}}]},"tags":[]},"source":"3c537771a0a8f964.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}