{"uid":"a6df0786ea9ac4f","name":"test_xcm_parameters[Check XCM data for Tinkernet]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"699f40a9f7ba28967ea433ffd82cef10","time":{"start":1665663083677,"stop":1665663088205,"duration":4528},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7ff5035663d0>\nchain = <tests.utils.chain_model.Chain object at 0x7ff503a62670>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7ff5035663d0>\nchain = <tests.utils.chain_model.Chain object at 0x7ff503a62670>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})\n\ntests/test_xcm_data.py:30: AssertionError","steps":[],"attachments":[{"uid":"e426c864830d55bc","name":"stdout","source":"e426c864830d55bc.txt","type":"text/plain","size":27}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az397-50"},{"name":"thread","value":"1630-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7ff503a62670>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"49b58180f97b6670","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","time":{"start":1665663072184,"stop":1665663073664,"duration":1480}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"c147ac55cca5f9fe","reportUrl":"https://nova-wallet.github.io/test-runner/1703//#testresult/c147ac55cca5f9fe","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665648563685,"stop":1665648564190,"duration":505}},{"uid":"ca597fa08af5dd4e","reportUrl":"https://nova-wallet.github.io/test-runner/1702//#testresult/ca597fa08af5dd4e","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","time":{"start":1665635914471,"stop":1665635915446,"duration":975}},{"uid":"629e4daaca2762e6","reportUrl":"https://nova-wallet.github.io/test-runner/1701//#testresult/629e4daaca2762e6","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665620601568,"stop":1665620602077,"duration":509}},{"uid":"250296b6ae1c7c4","reportUrl":"https://nova-wallet.github.io/test-runner/1700//#testresult/250296b6ae1c7c4","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665605293542,"stop":1665605293817,"duration":275}},{"uid":"81bb2d4386c15120","reportUrl":"https://nova-wallet.github.io/test-runner/1699//#testresult/81bb2d4386c15120","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","time":{"start":1665591101950,"stop":1665591103005,"duration":1055}},{"uid":"b264f796fa5c7c26","reportUrl":"https://nova-wallet.github.io/test-runner/1698//#testresult/b264f796fa5c7c26","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665576654634,"stop":1665576654670,"duration":36}},{"uid":"9dc8c719b4d82394","reportUrl":"https://nova-wallet.github.io/test-runner/1697//#testresult/9dc8c719b4d82394","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665562066670,"stop":1665562066960,"duration":290}},{"uid":"d59002ebce1bf8d","reportUrl":"https://nova-wallet.github.io/test-runner/1696//#testresult/d59002ebce1bf8d","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665549246849,"stop":1665549246912,"duration":63}},{"uid":"f462a71290a88087","reportUrl":"https://nova-wallet.github.io/test-runner/1695//#testresult/f462a71290a88087","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665534355803,"stop":1665534355825,"duration":22}},{"uid":"925ca9cda2b57f34","reportUrl":"https://nova-wallet.github.io/test-runner/1694//#testresult/925ca9cda2b57f34","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665518918854,"stop":1665518922540,"duration":3686}},{"uid":"6d729529838eb8e9","reportUrl":"https://nova-wallet.github.io/test-runner/1693//#testresult/6d729529838eb8e9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665504575633,"stop":1665504575707,"duration":74}},{"uid":"9b6444fd587934f9","reportUrl":"https://nova-wallet.github.io/test-runner/1692//#testresult/9b6444fd587934f9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665490248419,"stop":1665490252450,"duration":4031}},{"uid":"443f02df1ff67290","reportUrl":"https://nova-wallet.github.io/test-runner/1691//#testresult/443f02df1ff67290","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665475946922,"stop":1665475951709,"duration":4787}},{"uid":"e2edcc67c0b7d72e","reportUrl":"https://nova-wallet.github.io/test-runner/1690//#testresult/e2edcc67c0b7d72e","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665463056883,"stop":1665463057320,"duration":437}},{"uid":"cd024c160c3de71f","reportUrl":"https://nova-wallet.github.io/test-runner/1689//#testresult/cd024c160c3de71f","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665447839033,"stop":1665447839373,"duration":340}},{"uid":"b1c2797280d1db09","reportUrl":"https://nova-wallet.github.io/test-runner/1688//#testresult/b1c2797280d1db09","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","time":{"start":1665432472270,"stop":1665432473225,"duration":955}},{"uid":"39589dc3b70e9c3","reportUrl":"https://nova-wallet.github.io/test-runner/1687//#testresult/39589dc3b70e9c3","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665418164168,"stop":1665418166368,"duration":2200}},{"uid":"352734d6743c52c2","reportUrl":"https://nova-wallet.github.io/test-runner/1686//#testresult/352734d6743c52c2","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","time":{"start":1665403832890,"stop":1665403834059,"duration":1169}},{"uid":"afb6916e5fcef0e5","reportUrl":"https://nova-wallet.github.io/test-runner/1685//#testresult/afb6916e5fcef0e5","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665389460391,"stop":1665389460879,"duration":488}},{"uid":"3b9ba16bc37cf667","reportUrl":"https://nova-wallet.github.io/test-runner/1684//#testresult/3b9ba16bc37cf667","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1665387197912,"stop":1665387197968,"duration":56}}]},"tags":[]},"source":"a6df0786ea9ac4f.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7ff503a62670>"]}