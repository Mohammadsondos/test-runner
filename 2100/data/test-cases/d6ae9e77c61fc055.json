{"uid":"d6ae9e77c61fc055","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1671264338129,"stop":1671264338715,"duration":586},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"578d9ff14ed71b8d","name":"stdout","source":"578d9ff14ed71b8d.txt","type":"text/plain","size":232}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az298-472"},{"name":"thread","value":"1705-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a0c757686b521419","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671264327440,"stop":1671264328030,"duration":590}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":89,"skipped":0,"passed":280,"unknown":0,"total":369},"items":[{"uid":"e74658eaea218423","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/e74658eaea218423","status":"passed","time":{"start":1671249880080,"stop":1671249881259,"duration":1179}},{"uid":"fbe727efa54b24eb","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/fbe727efa54b24eb","status":"passed","time":{"start":1671235950183,"stop":1671235951020,"duration":837}},{"uid":"7145345cbd4d2f9e","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/7145345cbd4d2f9e","status":"passed","time":{"start":1671221041557,"stop":1671221042911,"duration":1354}},{"uid":"19c59c56ff561381","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/19c59c56ff561381","status":"passed","time":{"start":1671206678911,"stop":1671206680098,"duration":1187}},{"uid":"567505e9f5fb6699","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/567505e9f5fb6699","status":"passed","time":{"start":1671192289284,"stop":1671192290737,"duration":1453}},{"uid":"b10cbbadb9d14ed8","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/b10cbbadb9d14ed8","status":"passed","time":{"start":1671177878467,"stop":1671177880175,"duration":1708}},{"uid":"f0b869b9d6a3d4e6","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/f0b869b9d6a3d4e6","status":"passed","time":{"start":1671163459411,"stop":1671163460281,"duration":870}},{"uid":"9dca66b56828099","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/9dca66b56828099","status":"passed","time":{"start":1671149602442,"stop":1671149603292,"duration":850}},{"uid":"f93ca960eef6295b","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/f93ca960eef6295b","status":"passed","time":{"start":1671134677358,"stop":1671134678620,"duration":1262}},{"uid":"11f878e36d4fa25b","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/11f878e36d4fa25b","status":"passed","time":{"start":1671120293658,"stop":1671120294680,"duration":1022}},{"uid":"e57076d739f21032","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/e57076d739f21032","status":"passed","time":{"start":1671105923523,"stop":1671105924411,"duration":888}},{"uid":"1c013b53d914cac1","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/1c013b53d914cac1","status":"passed","time":{"start":1671091518597,"stop":1671091521702,"duration":3105}},{"uid":"6ab08d2b79fd9ad5","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/6ab08d2b79fd9ad5","status":"passed","time":{"start":1671077100472,"stop":1671077101727,"duration":1255}},{"uid":"176a203147d79012","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/176a203147d79012","status":"passed","time":{"start":1671063259551,"stop":1671063260763,"duration":1212}},{"uid":"16328c8ef6fd1cd9","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/16328c8ef6fd1cd9","status":"passed","time":{"start":1671048288240,"stop":1671048289078,"duration":838}},{"uid":"3bb5ea5a89de1108","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/3bb5ea5a89de1108","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671034323288,"stop":1671034323881,"duration":593}},{"uid":"4c16e091cb78e13","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/4c16e091cb78e13","status":"passed","time":{"start":1671019499899,"stop":1671019501735,"duration":1836}},{"uid":"e999778e5903e78","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/e999778e5903e78","status":"passed","time":{"start":1671005103465,"stop":1671005104754,"duration":1289}},{"uid":"f0eec57a07b07b","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/f0eec57a07b07b","status":"passed","time":{"start":1670990694608,"stop":1670990695279,"duration":671}},{"uid":"ac7f7a030acfc8dc","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/ac7f7a030acfc8dc","status":"passed","time":{"start":1670976874544,"stop":1670976876701,"duration":2157}}]},"tags":[]},"source":"d6ae9e77c61fc055.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}