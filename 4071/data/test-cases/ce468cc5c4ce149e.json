{"uid":"ce468cc5c4ce149e","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1699041750201,"stop":1699041750863,"duration":662},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f19c2036c20>\nchain = <scripts.utils.chain_model.Chain object at 0x7f19c1da0820>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f19c2036c20>\nchain = <scripts.utils.chain_model.Chain object at 0x7f19c1da0820>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c6e6fc32df46f335","name":"stdout","source":"c6e6fc32df46f335.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az564-151"},{"name":"thread","value":"2159-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f19c1da0820>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6119f1ed53284ccc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699041734537,"stop":1699041735175,"duration":638}},{"uid":"fbb42dda2e7c3343","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699041718418,"stop":1699041719509,"duration":1091}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":25,"skipped":0,"passed":406,"unknown":0,"total":431},"items":[{"uid":"337801640a31399c","reportUrl":"https://novasamatech.github.io/test-runner/4072//#testresult/337801640a31399c","status":"passed","time":{"start":1699056188383,"stop":1699056192055,"duration":3672}},{"uid":"ab8a961af79c7406","reportUrl":"https://novasamatech.github.io/test-runner/4070//#testresult/ab8a961af79c7406","status":"passed","time":{"start":1699027371660,"stop":1699027376018,"duration":4358}},{"uid":"82bfb5853bf50521","reportUrl":"https://novasamatech.github.io/test-runner/4069//#testresult/82bfb5853bf50521","status":"passed","time":{"start":1699012963142,"stop":1699012968622,"duration":5480}},{"uid":"7fb950e769a5d953","reportUrl":"https://novasamatech.github.io/test-runner/4068//#testresult/7fb950e769a5d953","status":"passed","time":{"start":1698998538788,"stop":1698998543255,"duration":4467}},{"uid":"d194a889a972181b","reportUrl":"https://novasamatech.github.io/test-runner/4067//#testresult/d194a889a972181b","status":"passed","time":{"start":1698984189228,"stop":1698984196186,"duration":6958}},{"uid":"c76848c130ce3e10","reportUrl":"https://novasamatech.github.io/test-runner/4066//#testresult/c76848c130ce3e10","status":"passed","time":{"start":1698969794433,"stop":1698969798337,"duration":3904}},{"uid":"45d84460069084cf","reportUrl":"https://novasamatech.github.io/test-runner/4065//#testresult/45d84460069084cf","status":"passed","time":{"start":1698955337600,"stop":1698955341136,"duration":3536}},{"uid":"49b761cd277c862c","reportUrl":"https://novasamatech.github.io/test-runner/4064//#testresult/49b761cd277c862c","status":"passed","time":{"start":1698940953324,"stop":1698940961824,"duration":8500}},{"uid":"4012e45712aa4ce6","reportUrl":"https://novasamatech.github.io/test-runner/4063//#testresult/4012e45712aa4ce6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698926623531,"stop":1698926624468,"duration":937}},{"uid":"dc15796585028ebe","reportUrl":"https://novasamatech.github.io/test-runner/4062//#testresult/dc15796585028ebe","status":"passed","time":{"start":1698912117459,"stop":1698912122438,"duration":4979}},{"uid":"9766cfbac503cd33","reportUrl":"https://novasamatech.github.io/test-runner/4061//#testresult/9766cfbac503cd33","status":"passed","time":{"start":1698897713237,"stop":1698897716539,"duration":3302}},{"uid":"ba843f967e59e9c0","reportUrl":"https://novasamatech.github.io/test-runner/4060//#testresult/ba843f967e59e9c0","status":"passed","time":{"start":1698883364913,"stop":1698883368422,"duration":3509}},{"uid":"4668759cb447c1d0","reportUrl":"https://novasamatech.github.io/test-runner/4059//#testresult/4668759cb447c1d0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698869012573,"stop":1698869013618,"duration":1045}},{"uid":"fb256f4262b682e5","reportUrl":"https://novasamatech.github.io/test-runner/4057//#testresult/fb256f4262b682e5","status":"passed","time":{"start":1698840155864,"stop":1698840162727,"duration":6863}},{"uid":"59cdd66c53bde5a3","reportUrl":"https://novasamatech.github.io/test-runner/4058//#testresult/59cdd66c53bde5a3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698854560070,"stop":1698854560529,"duration":459}},{"uid":"5ec2f44515f86c81","reportUrl":"https://novasamatech.github.io/test-runner/4056//#testresult/5ec2f44515f86c81","status":"passed","time":{"start":1698825739217,"stop":1698825742998,"duration":3781}},{"uid":"3d8911ead260e084","reportUrl":"https://novasamatech.github.io/test-runner/4055//#testresult/3d8911ead260e084","status":"passed","time":{"start":1698811330168,"stop":1698811334825,"duration":4657}},{"uid":"939b8e086ed82254","reportUrl":"https://novasamatech.github.io/test-runner/4054//#testresult/939b8e086ed82254","status":"passed","time":{"start":1698797013072,"stop":1698797018567,"duration":5495}},{"uid":"cdb06b89c37ada3f","reportUrl":"https://novasamatech.github.io/test-runner/4053//#testresult/cdb06b89c37ada3f","status":"passed","time":{"start":1698782528912,"stop":1698782531961,"duration":3049}},{"uid":"940b4fd8e019ff00","reportUrl":"https://novasamatech.github.io/test-runner/4052//#testresult/940b4fd8e019ff00","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698768193777,"stop":1698768195287,"duration":1510}}]},"tags":[]},"source":"ce468cc5c4ce149e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f19c1da0820>"]}