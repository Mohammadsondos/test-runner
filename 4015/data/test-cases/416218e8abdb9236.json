{"uid":"416218e8abdb9236","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1698235409862,"stop":1698235411014,"duration":1152},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f96f1c51ea0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f96f37c2590>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f96f1c51ea0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f96f37c2590>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a702e998cde8eef8","name":"stdout","source":"a702e998cde8eef8.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az555-45"},{"name":"thread","value":"2120-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f96f37c2590>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f06a537d0c8aac49","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698235393170,"stop":1698235394832,"duration":1662}},{"uid":"ce8fa38b18574f8e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698235376967,"stop":1698235378140,"duration":1173}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":360,"unknown":0,"total":374},"items":[{"uid":"7db0ee09ad7fd53a","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/7db0ee09ad7fd53a","status":"passed","time":{"start":1698220985187,"stop":1698220989935,"duration":4748}},{"uid":"b875ad0005eb9c54","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/b875ad0005eb9c54","status":"passed","time":{"start":1698206553342,"stop":1698206558666,"duration":5324}},{"uid":"59e10e225a6dcdf5","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/59e10e225a6dcdf5","status":"passed","time":{"start":1698192184884,"stop":1698192192780,"duration":7896}},{"uid":"c3e1e8896dddcf5d","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/c3e1e8896dddcf5d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698177765357,"stop":1698177766342,"duration":985}},{"uid":"53e27f40c757f9a","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/53e27f40c757f9a","status":"passed","time":{"start":1698163373195,"stop":1698163378979,"duration":5784}},{"uid":"dc1888613480bb21","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/dc1888613480bb21","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698148996159,"stop":1698148996997,"duration":838}},{"uid":"c1161233f02cf4e1","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/c1161233f02cf4e1","status":"passed","time":{"start":1698120184262,"stop":1698120192687,"duration":8425}},{"uid":"8325ad02a373a5b4","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/8325ad02a373a5b4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698134592864,"stop":1698134593834,"duration":970}},{"uid":"b4e4cc2945721fc9","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/b4e4cc2945721fc9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698105831705,"stop":1698105832455,"duration":750}},{"uid":"8d1a510239b6962","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/8d1a510239b6962","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698091384793,"stop":1698091385823,"duration":1030}},{"uid":"3593f52af783c28e","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/3593f52af783c28e","status":"passed","time":{"start":1698076982867,"stop":1698076986830,"duration":3963}},{"uid":"62492ca5f7df7bfc","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/62492ca5f7df7bfc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062618973,"stop":1698062620778,"duration":1805}},{"uid":"fe4a70a9233e242a","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/fe4a70a9233e242a","status":"passed","time":{"start":1698048167460,"stop":1698048173083,"duration":5623}},{"uid":"41a1d6aeb9decbdc","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/41a1d6aeb9decbdc","status":"passed","time":{"start":1698033738617,"stop":1698033743170,"duration":4553}},{"uid":"63997ae7d58898fd","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/63997ae7d58898fd","status":"passed","time":{"start":1698019397927,"stop":1698019402084,"duration":4157}},{"uid":"1a1d291330594dab","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/1a1d291330594dab","status":"passed","time":{"start":1698004958320,"stop":1698004964044,"duration":5724}},{"uid":"625faac8a8fc9452","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/625faac8a8fc9452","status":"passed","time":{"start":1697990540386,"stop":1697990548273,"duration":7887}},{"uid":"4255a5fba9dd5c98","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/4255a5fba9dd5c98","status":"passed","time":{"start":1697976139757,"stop":1697976144019,"duration":4262}},{"uid":"cfa79539236b5553","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/cfa79539236b5553","status":"passed","time":{"start":1697961740878,"stop":1697961748980,"duration":8102}},{"uid":"bfe7fdaf7b8647b2","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/bfe7fdaf7b8647b2","status":"passed","time":{"start":1697947340203,"stop":1697947347299,"duration":7096}}]},"tags":[]},"source":"416218e8abdb9236.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f96f37c2590>"]}