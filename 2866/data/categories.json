{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Bifrost Kusama]","uid":"14ab0d611a237b7a","parentUid":"4f259164810e5718c9bb3a676e1dff0a","status":"failed","time":{"start":1682093044164,"stop":1682093045332,"duration":1168},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f3b3c347be0>"]}],"uid":"4f259164810e5718c9bb3a676e1dff0a"},{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 3\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: INTR\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n2: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: IBTC\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n3: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Kintsugi]","uid":"47680534a42e72e","parentUid":"a48452b38450747c54e44e725ec69e07","status":"failed","time":{"start":1682093105318,"stop":1682093106366,"duration":1048},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f3db45de7d0>"]}],"uid":"a48452b38450747c54e44e725ec69e07"},{"name":"AssertionError: native asset has changed\nassert ('KPX' in dict_keys(['KAPEX', 'AUSD', 'XX']) or 'KPX' in dict_values(['', 'KUSD', 'xx']))\n +  where 'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7f3b01c62110>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7f3b01c62110> = <scripts.utils.chain_model.Chain object at 0x7f3b3c0a4580>.properties\n +  and   dict_keys(['KAPEX', 'AUSD', 'XX']) = <built-in method keys of dict object at 0x7f3b01b49780>()\n +    where <built-in method keys of dict object at 0x7f3b01b49780> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.keys\n +  and   'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7f3b01c62110>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7f3b01c62110> = <scripts.utils.chain_model.Chain object at 0x7f3b3c0a4580>.properties\n +  and   dict_values(['', 'KUSD', 'xx']) = <built-in method values of dict object at 0x7f3b01b49780>()\n +    where <built-in method values of dict object at 0x7f3b01b49780> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.values","children":[{"name":"test_has_new_assets[Test for Kapex]","uid":"b7bc7a611c3176d4","parentUid":"f0a0b544c7848708ccdbf28cab4f3498","status":"failed","time":{"start":1682093170487,"stop":1682093171824,"duration":1337},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f3b3c0a4580>"]}],"uid":"f0a0b544c7848708ccdbf28cab4f3498"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","children":[{"name":"test_can_create_connection[Test for Tanganika, url: wss://tanganika.datahighway.com]","uid":"b6e8c2071b0dad3b","parentUid":"47cc0c6fa0fbcb7e5e0ff54f8fda97b1","status":"broken","time":{"start":1682093086442,"stop":1682093086887,"duration":445},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"]},{"name":"test_can_create_connection[Test for Imbue, url: wss://imbue-kusama.imbue.network]","uid":"bab3e92a55f3a752","parentUid":"47cc0c6fa0fbcb7e5e0ff54f8fda97b1","status":"broken","time":{"start":1682093099178,"stop":1682093099384,"duration":206},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"]}],"uid":"47cc0c6fa0fbcb7e5e0ff54f8fda97b1"},{"name":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32601, 'message': 'Method system_chain is not supported'}","children":[{"name":"test_can_create_connection[Test for Exosama, url: wss://rpc.exosama.com]","uid":"215c4a8f85c36fca","parentUid":"216ddde9b6485d42e113b52340f71442","status":"broken","time":{"start":1682093106711,"stop":1682093107306,"duration":595},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://rpc.exosama.com', 'name': 'Exosama'}"]}],"uid":"216ddde9b6485d42e113b52340f71442"},{"name":"AttributeError: 'NoneType' object has no attribute 'get_constant'","children":[{"name":"test_has_new_assets[Test for Tanganika]","uid":"e42591ab33ed3c4d","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682093146274,"stop":1682093147247,"duration":973},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f3b3c0a43d0>"]},{"name":"test_has_new_assets[Test for Exosama]","uid":"24ee5ca1c327e12f","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682093196461,"stop":1682093197680,"duration":1219},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f3b3c0a4760>"]},{"name":"test_address_prefix[Test for Exosama]","uid":"69f6621fde319e02","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682093242627,"stop":1682093244451,"duration":1824},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fb266f44610>"]},{"name":"test_chainId[Test for Tanganika]","uid":"bd9fb1d9ede563dd","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682093333170,"stop":1682093335169,"duration":1999},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f69e538b130>"]},{"name":"test_chainId[Test for Exosama]","uid":"57003bd53971376f","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682093477734,"stop":1682093480583,"duration":2849},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f69e538ada0>"]},{"name":"test_precision[Test for Exosama]","uid":"4db6feabb3e2d7fa","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682093578682,"stop":1682093581446,"duration":2764},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f69e538ada0>"]}],"uid":"5aa24b8a3c4111290b34f017f14d2ab4"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}