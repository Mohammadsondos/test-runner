{"uid":"b6e8c2071b0dad3b","name":"test_can_create_connection[Test for Tanganika, url: wss://tanganika.datahighway.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82948670f054b2cd664c9319f41b4e5e","time":{"start":1682093086442,"stop":1682093086887,"duration":445},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"31fc6e742bdb9184","name":"stdout","source":"31fc6e742bdb9184.txt","type":"text/plain","size":242}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az193-872"},{"name":"thread","value":"1807-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c0ebfb3f7c42c220","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682093075799,"stop":1682093076258,"duration":459}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":8,"unknown":0,"total":11},"items":[{"uid":"80ac624996239057","reportUrl":"https://nova-wallet.github.io/test-runner/2865//#testresult/80ac624996239057","status":"passed","time":{"start":1682078718541,"stop":1682078719138,"duration":597}},{"uid":"fbb0b108549597e5","reportUrl":"https://nova-wallet.github.io/test-runner/2864//#testresult/fbb0b108549597e5","status":"passed","time":{"start":1682064278373,"stop":1682064278854,"duration":481}},{"uid":"cd4faa7b991208b6","reportUrl":"https://nova-wallet.github.io/test-runner/2863//#testresult/cd4faa7b991208b6","status":"passed","time":{"start":1682049885936,"stop":1682049886323,"duration":387}},{"uid":"d559d947e8bbbd6f","reportUrl":"https://nova-wallet.github.io/test-runner/2862//#testresult/d559d947e8bbbd6f","status":"passed","time":{"start":1682035968720,"stop":1682035969318,"duration":598}},{"uid":"a9c275aec8fe02da","reportUrl":"https://nova-wallet.github.io/test-runner/2861//#testresult/a9c275aec8fe02da","status":"passed","time":{"start":1682021067292,"stop":1682021067891,"duration":599}},{"uid":"af6669b519fa0fa6","reportUrl":"https://nova-wallet.github.io/test-runner/2860//#testresult/af6669b519fa0fa6","status":"passed","time":{"start":1682006695650,"stop":1682006696209,"duration":559}},{"uid":"4b0d6c90d5de0e8f","reportUrl":"https://nova-wallet.github.io/test-runner/2859//#testresult/4b0d6c90d5de0e8f","status":"passed","time":{"start":1681992325692,"stop":1681992326143,"duration":451}},{"uid":"7bc006d29f42c29f","reportUrl":"https://nova-wallet.github.io/test-runner/2858//#testresult/7bc006d29f42c29f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681977879998,"stop":1681977880349,"duration":351}},{"uid":"c289856593bb436f","reportUrl":"https://nova-wallet.github.io/test-runner/2857//#testresult/c289856593bb436f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681972264652,"stop":1681972264987,"duration":335}},{"uid":"13df92d68d9c54ad","reportUrl":"https://nova-wallet.github.io/test-runner/2856//#testresult/13df92d68d9c54ad","status":"passed","time":{"start":1681963467250,"stop":1681963467840,"duration":590}}]},"tags":[]},"source":"b6e8c2071b0dad3b.json","parameterValues":["{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"]}