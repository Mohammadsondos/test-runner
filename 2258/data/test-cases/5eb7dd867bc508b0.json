{"uid":"5eb7dd867bc508b0","name":"test_can_create_connection[Test for Dora Factory, url: wss://kusama.dorafactory.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"44f7ea25da73f158b35cd75eda9ebb4b","time":{"start":1673510723559,"stop":1673510724379,"duration":820},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Dora Factory', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Dora Factory', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"de8257fa354301fc","name":"stdout","source":"de8257fa354301fc.txt","type":"text/plain","size":236}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az412-551"},{"name":"thread","value":"1781-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ee0dadbf5459a65","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1673510712656,"stop":1673510713478,"duration":822}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":470,"unknown":0,"total":525},"items":[{"uid":"88cd184e7ce62325","reportUrl":"https://nova-wallet.github.io/test-runner/2257//#testresult/88cd184e7ce62325","status":"passed","time":{"start":1673496273127,"stop":1673496274064,"duration":937}},{"uid":"826b7210a8bd4c9d","reportUrl":"https://nova-wallet.github.io/test-runner/2256//#testresult/826b7210a8bd4c9d","status":"passed","time":{"start":1673482484532,"stop":1673482485446,"duration":914}},{"uid":"c3948c7f384d4e6d","reportUrl":"https://nova-wallet.github.io/test-runner/2255//#testresult/c3948c7f384d4e6d","status":"passed","time":{"start":1673467454465,"stop":1673467455539,"duration":1074}},{"uid":"41c552e367b7eca3","reportUrl":"https://nova-wallet.github.io/test-runner/2254//#testresult/41c552e367b7eca3","status":"passed","time":{"start":1673453277564,"stop":1673453278515,"duration":951}},{"uid":"f892930501a30b69","reportUrl":"https://nova-wallet.github.io/test-runner/2253//#testresult/f892930501a30b69","status":"passed","time":{"start":1673438742570,"stop":1673438743838,"duration":1268}},{"uid":"dfccba861a79e6fa","reportUrl":"https://nova-wallet.github.io/test-runner/2252//#testresult/dfccba861a79e6fa","status":"passed","time":{"start":1673424288744,"stop":1673424290029,"duration":1285}},{"uid":"f2f5f0c324c80d6a","reportUrl":"https://nova-wallet.github.io/test-runner/2251//#testresult/f2f5f0c324c80d6a","status":"passed","time":{"start":1673409864237,"stop":1673409865574,"duration":1337}},{"uid":"ac9d0618fd42b018","reportUrl":"https://nova-wallet.github.io/test-runner/2250//#testresult/ac9d0618fd42b018","status":"passed","time":{"start":1673396011807,"stop":1673396012818,"duration":1011}},{"uid":"b591aee78cd0c627","reportUrl":"https://nova-wallet.github.io/test-runner/2249//#testresult/b591aee78cd0c627","status":"passed","time":{"start":1673381046955,"stop":1673381048059,"duration":1104}},{"uid":"90fa718027a1b6a","reportUrl":"https://nova-wallet.github.io/test-runner/2248//#testresult/90fa718027a1b6a","status":"passed","time":{"start":1673366672289,"stop":1673366673475,"duration":1186}},{"uid":"5331234eb56b8e07","reportUrl":"https://nova-wallet.github.io/test-runner/2247//#testresult/5331234eb56b8e07","status":"passed","time":{"start":1673352313067,"stop":1673352314227,"duration":1160}},{"uid":"836aeffaa456178c","reportUrl":"https://nova-wallet.github.io/test-runner/2246//#testresult/836aeffaa456178c","status":"passed","time":{"start":1673337918972,"stop":1673337920038,"duration":1066}},{"uid":"bb1752b9e82a73ad","reportUrl":"https://nova-wallet.github.io/test-runner/2245//#testresult/bb1752b9e82a73ad","status":"passed","time":{"start":1673323464151,"stop":1673323465082,"duration":931}},{"uid":"49496d5d84016e06","reportUrl":"https://nova-wallet.github.io/test-runner/2244//#testresult/49496d5d84016e06","status":"passed","time":{"start":1673309672577,"stop":1673309673598,"duration":1021}},{"uid":"e60acaa3ac5bcb8c","reportUrl":"https://nova-wallet.github.io/test-runner/2243//#testresult/e60acaa3ac5bcb8c","status":"passed","time":{"start":1673294658658,"stop":1673294659577,"duration":919}},{"uid":"f64d08096a182927","reportUrl":"https://nova-wallet.github.io/test-runner/2242//#testresult/f64d08096a182927","status":"passed","time":{"start":1673280386525,"stop":1673280387731,"duration":1206}},{"uid":"2ca4fb31cb726853","reportUrl":"https://nova-wallet.github.io/test-runner/2241//#testresult/2ca4fb31cb726853","status":"passed","time":{"start":1673265941579,"stop":1673265942764,"duration":1185}},{"uid":"62b82d0c559aeab9","reportUrl":"https://nova-wallet.github.io/test-runner/2240//#testresult/62b82d0c559aeab9","status":"passed","time":{"start":1673251488985,"stop":1673251490128,"duration":1143}},{"uid":"d0656f00b6055cb8","reportUrl":"https://nova-wallet.github.io/test-runner/2239//#testresult/d0656f00b6055cb8","status":"passed","time":{"start":1673237081275,"stop":1673237082191,"duration":916}},{"uid":"2721cffc1d57935a","reportUrl":"https://nova-wallet.github.io/test-runner/2238//#testresult/2721cffc1d57935a","status":"passed","time":{"start":1673223295399,"stop":1673223296655,"duration":1256}}]},"tags":[]},"source":"5eb7dd867bc508b0.json","parameterValues":["{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory'}"]}