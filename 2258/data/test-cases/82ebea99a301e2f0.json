{"uid":"82ebea99a301e2f0","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-kusama.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"326bea541bc487a2f647b5a8f020251e","time":{"start":1673510781020,"stop":1673510796618,"duration":15598},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-kusama.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-kusama.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d89e582e4567d539","name":"stdout","source":"d89e582e4567d539.txt","type":"text/plain","size":282}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az412-551"},{"name":"thread","value":"1778-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-kusama.api.onfinality.io/public-ws', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b16512fd57652868","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1673510755281,"stop":1673510770940,"duration":15659}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":470,"unknown":0,"total":525},"items":[{"uid":"e93719ba50464e33","reportUrl":"https://nova-wallet.github.io/test-runner/2257//#testresult/e93719ba50464e33","status":"passed","time":{"start":1673496335560,"stop":1673496336308,"duration":748}},{"uid":"47f014162e21ec70","reportUrl":"https://nova-wallet.github.io/test-runner/2256//#testresult/47f014162e21ec70","status":"passed","time":{"start":1673482545499,"stop":1673482546226,"duration":727}},{"uid":"924b5f8c490cee1e","reportUrl":"https://nova-wallet.github.io/test-runner/2255//#testresult/924b5f8c490cee1e","status":"passed","time":{"start":1673467512586,"stop":1673467513358,"duration":772}},{"uid":"a90814def3266f06","reportUrl":"https://nova-wallet.github.io/test-runner/2254//#testresult/a90814def3266f06","status":"passed","time":{"start":1673453337193,"stop":1673453338139,"duration":946}},{"uid":"f9eb192e68f6ec5a","reportUrl":"https://nova-wallet.github.io/test-runner/2253//#testresult/f9eb192e68f6ec5a","status":"passed","time":{"start":1673438804146,"stop":1673438805080,"duration":934}},{"uid":"1ac52c2d860b84f1","reportUrl":"https://nova-wallet.github.io/test-runner/2252//#testresult/1ac52c2d860b84f1","status":"passed","time":{"start":1673424348862,"stop":1673424349813,"duration":951}},{"uid":"2c2c6981d6f0bd3d","reportUrl":"https://nova-wallet.github.io/test-runner/2251//#testresult/2c2c6981d6f0bd3d","status":"passed","time":{"start":1673409857968,"stop":1673409858944,"duration":976}},{"uid":"58545472f596be8b","reportUrl":"https://nova-wallet.github.io/test-runner/2250//#testresult/58545472f596be8b","status":"passed","time":{"start":1673396006666,"stop":1673396007490,"duration":824}},{"uid":"a0a3d55744415b8d","reportUrl":"https://nova-wallet.github.io/test-runner/2249//#testresult/a0a3d55744415b8d","status":"passed","time":{"start":1673381041777,"stop":1673381042589,"duration":812}},{"uid":"bc1337c1d3d40cf1","reportUrl":"https://nova-wallet.github.io/test-runner/2248//#testresult/bc1337c1d3d40cf1","status":"passed","time":{"start":1673366665690,"stop":1673366666623,"duration":933}},{"uid":"c1614bde4184b092","reportUrl":"https://nova-wallet.github.io/test-runner/2247//#testresult/c1614bde4184b092","status":"passed","time":{"start":1673352307996,"stop":1673352308820,"duration":824}},{"uid":"95a40c9948e81e5b","reportUrl":"https://nova-wallet.github.io/test-runner/2246//#testresult/95a40c9948e81e5b","status":"passed","time":{"start":1673337900947,"stop":1673337901708,"duration":761}},{"uid":"20beedae24b1b754","reportUrl":"https://nova-wallet.github.io/test-runner/2245//#testresult/20beedae24b1b754","status":"passed","time":{"start":1673323458790,"stop":1673323459517,"duration":727}},{"uid":"38d140a697dbe80d","reportUrl":"https://nova-wallet.github.io/test-runner/2244//#testresult/38d140a697dbe80d","status":"passed","time":{"start":1673309667386,"stop":1673309668252,"duration":866}},{"uid":"7cd02367843d6bc4","reportUrl":"https://nova-wallet.github.io/test-runner/2243//#testresult/7cd02367843d6bc4","status":"passed","time":{"start":1673294653482,"stop":1673294654223,"duration":741}},{"uid":"baf75b63358d04e4","reportUrl":"https://nova-wallet.github.io/test-runner/2242//#testresult/baf75b63358d04e4","status":"passed","time":{"start":1673280379660,"stop":1673280380609,"duration":949}},{"uid":"2267abf4f5728f34","reportUrl":"https://nova-wallet.github.io/test-runner/2241//#testresult/2267abf4f5728f34","status":"passed","time":{"start":1673265935738,"stop":1673265936717,"duration":979}},{"uid":"fcc722416d44c92f","reportUrl":"https://nova-wallet.github.io/test-runner/2240//#testresult/fcc722416d44c92f","status":"passed","time":{"start":1673251480175,"stop":1673251481145,"duration":970}},{"uid":"f5121d12391eae9b","reportUrl":"https://nova-wallet.github.io/test-runner/2239//#testresult/f5121d12391eae9b","status":"passed","time":{"start":1673237074791,"stop":1673237075520,"duration":729}},{"uid":"7112b0d179bcfba9","reportUrl":"https://nova-wallet.github.io/test-runner/2238//#testresult/7112b0d179bcfba9","status":"passed","time":{"start":1673223279712,"stop":1673223280677,"duration":965}}]},"tags":[]},"source":"82ebea99a301e2f0.json","parameterValues":["{'url': 'wss://integritee-kusama.api.onfinality.io/public-ws', 'name': 'Integritee Parachain'}"]}