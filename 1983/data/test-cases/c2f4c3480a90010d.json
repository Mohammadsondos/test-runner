{"uid":"c2f4c3480a90010d","name":"test_chainId[Test for Moonriver]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"0838140e5453b1c212296e1a07795da7","time":{"start":1669639095687,"stop":1669639096833,"duration":1146},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Moonriver","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f22c95db520>\nchain = <tests.utils.chain_model.Chain object at 0x7f22ca70ebe0>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f22ca70ebe0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Moonriver\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Moonriver","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f22c95db520>\nchain = <tests.utils.chain_model.Chain object at 0x7f22ca70ebe0>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f22ca70ebe0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Moonriver\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"6853d5c3ece3b0b2","name":"stdout","source":"6853d5c3ece3b0b2.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az375-417"},{"name":"thread","value":"1641-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f22ca70ebe0>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c2f4c3480a90010d.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f22ca70ebe0>"]}