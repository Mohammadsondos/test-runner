{"uid":"4e014e27b1e7cc40","name":"testBalancesLoading[Getting balance for Nodle Parachain network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Nodle Parachain network]","historyId":"37a476cf2310007718a293f4e9b3bcab","time":{"start":1694693894975,"stop":1694693975037,"duration":80062},"status":"broken","statusMessage":"Socket state: Connected(url=wss://nodle-parachain.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(1716976790)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(82436910)=0}, subscriptions=[Subscription(id=DRWXw25I6PxC3ZGH, initiatorId=1716976790)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://nodle-parachain.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(1716976790)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(82436910)=0}, subscriptions=[Subscription(id=DRWXw25I6PxC3ZGH, initiatorId=1716976790)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Nodle Parachain network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":111,"unknown":0,"total":127},"items":[{"uid":"6a4c36dbea9b98ea","reportUrl":"https://novasamatech.github.io/test-runner/3766//#testresult/6a4c36dbea9b98ea","status":"passed","time":{"start":1694679324862,"stop":1694679360343,"duration":35481}},{"uid":"a6b1ceeb9feb5c65","reportUrl":"https://novasamatech.github.io/test-runner/3765//#testresult/a6b1ceeb9feb5c65","status":"passed","time":{"start":1694664905593,"stop":1694664905627,"duration":34}},{"uid":"4a3de5b66baca4be","reportUrl":"https://novasamatech.github.io/test-runner/3764//#testresult/4a3de5b66baca4be","status":"passed","time":{"start":1694650668641,"stop":1694650668673,"duration":32}},{"uid":"f7bf76d5adfb4b8","reportUrl":"https://novasamatech.github.io/test-runner/3763//#testresult/f7bf76d5adfb4b8","status":"passed","time":{"start":1694636142714,"stop":1694636142763,"duration":49}},{"uid":"3af955c901347634","reportUrl":"https://novasamatech.github.io/test-runner/3762//#testresult/3af955c901347634","status":"passed","time":{"start":1694621761673,"stop":1694621761731,"duration":58}},{"uid":"ad4b91c80b1704e7","reportUrl":"https://novasamatech.github.io/test-runner/3761//#testresult/ad4b91c80b1704e7","status":"passed","time":{"start":1694607410229,"stop":1694607440489,"duration":30260}},{"uid":"632aaeeb4638389f","reportUrl":"https://novasamatech.github.io/test-runner/3760//#testresult/632aaeeb4638389f","status":"passed","time":{"start":1694598105668,"stop":1694598157386,"duration":51718}},{"uid":"78a66746cd5cf83f","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/78a66746cd5cf83f","status":"passed","time":{"start":1694592951106,"stop":1694592951202,"duration":96}},{"uid":"490e50ab6bf354d","reportUrl":"https://novasamatech.github.io/test-runner/3758//#testresult/490e50ab6bf354d","status":"passed","time":{"start":1694578435370,"stop":1694578435505,"duration":135}},{"uid":"be1b74c6a022d692","reportUrl":"https://novasamatech.github.io/test-runner/3757//#testresult/be1b74c6a022d692","status":"passed","time":{"start":1694564166628,"stop":1694564194749,"duration":28121}},{"uid":"494a1489899a139f","reportUrl":"https://novasamatech.github.io/test-runner/3756//#testresult/494a1489899a139f","status":"passed","time":{"start":1694549785567,"stop":1694549785734,"duration":167}},{"uid":"bb48c9893903ebd6","reportUrl":"https://novasamatech.github.io/test-runner/3755//#testresult/bb48c9893903ebd6","status":"passed","time":{"start":1694535299202,"stop":1694535310355,"duration":11153}},{"uid":"a1c7be54573ddf8e","reportUrl":"https://novasamatech.github.io/test-runner/3754//#testresult/a1c7be54573ddf8e","status":"passed","time":{"start":1694520864726,"stop":1694520864768,"duration":42}},{"uid":"713a3f600c6e143c","reportUrl":"https://novasamatech.github.io/test-runner/3753//#testresult/713a3f600c6e143c","status":"passed","time":{"start":1694506754979,"stop":1694506755004,"duration":25}},{"uid":"1f1febb5c0804bb1","reportUrl":"https://novasamatech.github.io/test-runner/3752//#testresult/1f1febb5c0804bb1","status":"passed","time":{"start":1694492025142,"stop":1694492025171,"duration":29}},{"uid":"d8c38b27208e36dd","reportUrl":"https://novasamatech.github.io/test-runner/3751//#testresult/d8c38b27208e36dd","status":"passed","time":{"start":1694477723628,"stop":1694477762391,"duration":38763}},{"uid":"1a852254ff646462","reportUrl":"https://novasamatech.github.io/test-runner/3750//#testresult/1a852254ff646462","status":"passed","time":{"start":1694463310752,"stop":1694463336685,"duration":25933}},{"uid":"8ba834968456b43f","reportUrl":"https://novasamatech.github.io/test-runner/3749//#testresult/8ba834968456b43f","status":"passed","time":{"start":1694449210337,"stop":1694449210418,"duration":81}},{"uid":"8140b406b73a7869","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/8140b406b73a7869","status":"passed","time":{"start":1694434943554,"stop":1694434972509,"duration":28955}},{"uid":"89dac83d82fa05f5","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/89dac83d82fa05f5","status":"passed","time":{"start":1694420340301,"stop":1694420340322,"duration":21}}]},"tags":[]},"source":"4e014e27b1e7cc40.json","parameterValues":[]}