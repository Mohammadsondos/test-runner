{"uid":"2f7da8b2a5d45b0","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1698955389548,"stop":1698955390325,"duration":777},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9660253400>\nchain = <scripts.utils.chain_model.Chain object at 0x7f966022be20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9660253400>\nchain = <scripts.utils.chain_model.Chain object at 0x7f966022be20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"e1e9ddb66a6e5f00","name":"stdout","source":"e1e9ddb66a6e5f00.txt","type":"text/plain","size":1361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az841-882"},{"name":"thread","value":"2159-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f966022be20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3a59d13fab379313","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698955373739,"stop":1698955374523,"duration":784}},{"uid":"715b32fea93ebcd5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698955357931,"stop":1698955358710,"duration":779}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":58,"skipped":0,"passed":366,"unknown":0,"total":424},"items":[{"uid":"8b27fb550dc5b269","reportUrl":"https://novasamatech.github.io/test-runner/4064//#testresult/8b27fb550dc5b269","status":"passed","time":{"start":1698940946046,"stop":1698940949810,"duration":3764}},{"uid":"7c252dbacc4993ed","reportUrl":"https://novasamatech.github.io/test-runner/4063//#testresult/7c252dbacc4993ed","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698926611373,"stop":1698926612203,"duration":830}},{"uid":"2ef0da741881fdcf","reportUrl":"https://novasamatech.github.io/test-runner/4062//#testresult/2ef0da741881fdcf","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698912144967,"stop":1698912145563,"duration":596}},{"uid":"e44e4dcc09e43d11","reportUrl":"https://novasamatech.github.io/test-runner/4061//#testresult/e44e4dcc09e43d11","status":"passed","time":{"start":1698897707758,"stop":1698897711044,"duration":3286}},{"uid":"9591a859fffac95f","reportUrl":"https://novasamatech.github.io/test-runner/4060//#testresult/9591a859fffac95f","status":"passed","time":{"start":1698883360372,"stop":1698883363188,"duration":2816}},{"uid":"21be43ba4a5e58fa","reportUrl":"https://novasamatech.github.io/test-runner/4059//#testresult/21be43ba4a5e58fa","status":"passed","time":{"start":1698868966155,"stop":1698868974033,"duration":7878}},{"uid":"93a42d85ad80cb9c","reportUrl":"https://novasamatech.github.io/test-runner/4057//#testresult/93a42d85ad80cb9c","status":"passed","time":{"start":1698840161939,"stop":1698840166018,"duration":4079}},{"uid":"5b8c6cef0b889e67","reportUrl":"https://novasamatech.github.io/test-runner/4058//#testresult/5b8c6cef0b889e67","status":"passed","time":{"start":1698854523802,"stop":1698854527709,"duration":3907}},{"uid":"6db8b6ed722ad19b","reportUrl":"https://novasamatech.github.io/test-runner/4056//#testresult/6db8b6ed722ad19b","status":"passed","time":{"start":1698825732291,"stop":1698825736371,"duration":4080}},{"uid":"dbc81965961f0a6","reportUrl":"https://novasamatech.github.io/test-runner/4055//#testresult/dbc81965961f0a6","status":"passed","time":{"start":1698811321644,"stop":1698811325244,"duration":3600}},{"uid":"1d36091458e0f160","reportUrl":"https://novasamatech.github.io/test-runner/4054//#testresult/1d36091458e0f160","status":"passed","time":{"start":1698797007443,"stop":1698797013058,"duration":5615}},{"uid":"64a8491ee6c75ab5","reportUrl":"https://novasamatech.github.io/test-runner/4053//#testresult/64a8491ee6c75ab5","status":"passed","time":{"start":1698782553717,"stop":1698782556711,"duration":2994}},{"uid":"67075ded1d4f18b6","reportUrl":"https://novasamatech.github.io/test-runner/4052//#testresult/67075ded1d4f18b6","status":"passed","time":{"start":1698768177111,"stop":1698768183028,"duration":5917}},{"uid":"c65bf11b704811d0","reportUrl":"https://novasamatech.github.io/test-runner/4051//#testresult/c65bf11b704811d0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698753777795,"stop":1698753779113,"duration":1318}},{"uid":"60e53edefea0f402","reportUrl":"https://novasamatech.github.io/test-runner/4050//#testresult/60e53edefea0f402","status":"passed","time":{"start":1698739352037,"stop":1698739356617,"duration":4580}},{"uid":"b4a5c8bb1ce6f7c2","reportUrl":"https://novasamatech.github.io/test-runner/4049//#testresult/b4a5c8bb1ce6f7c2","status":"passed","time":{"start":1698724943073,"stop":1698724946882,"duration":3809}},{"uid":"d7142def5308867f","reportUrl":"https://novasamatech.github.io/test-runner/4048//#testresult/d7142def5308867f","status":"passed","time":{"start":1698710580166,"stop":1698710583988,"duration":3822}},{"uid":"cab97b4c012e92ce","reportUrl":"https://novasamatech.github.io/test-runner/4047//#testresult/cab97b4c012e92ce","status":"passed","time":{"start":1698696181498,"stop":1698696186534,"duration":5036}},{"uid":"9f167e636c344b1e","reportUrl":"https://novasamatech.github.io/test-runner/4046//#testresult/9f167e636c344b1e","status":"passed","time":{"start":1698681737830,"stop":1698681741250,"duration":3420}},{"uid":"c680a7823dcebbbf","reportUrl":"https://novasamatech.github.io/test-runner/4045//#testresult/c680a7823dcebbbf","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698667404187,"stop":1698667405455,"duration":1268}}]},"tags":[]},"source":"2f7da8b2a5d45b0.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f966022be20>"]}