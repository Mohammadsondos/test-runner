{"uid":"60ec0d8038e7c3e","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1697357027950,"stop":1697357029170,"duration":1220},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f5b0efde680>\nchain = <scripts.utils.chain_model.Chain object at 0x7f5b0f23f0a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f5b0efde680>\nchain = <scripts.utils.chain_model.Chain object at 0x7f5b0f23f0a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c84d52f3cab34ed0","name":"stdout","source":"c84d52f3cab34ed0.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az795-0"},{"name":"thread","value":"2119-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f5b0f23f0a0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"71c986d57a0729b5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697357011473,"stop":1697357012921,"duration":1448}},{"uid":"21df6d51975e77ec","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697356995097,"stop":1697356996438,"duration":1341}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":300,"unknown":0,"total":312},"items":[{"uid":"63a5f448fe91f898","reportUrl":"https://novasamatech.github.io/test-runner/3952//#testresult/63a5f448fe91f898","status":"passed","time":{"start":1697342551032,"stop":1697342556925,"duration":5893}},{"uid":"8d5e6bdcda406c3f","reportUrl":"https://novasamatech.github.io/test-runner/3951//#testresult/8d5e6bdcda406c3f","status":"passed","time":{"start":1697328215244,"stop":1697328219227,"duration":3983}},{"uid":"e053768733699e55","reportUrl":"https://novasamatech.github.io/test-runner/3950//#testresult/e053768733699e55","status":"passed","time":{"start":1697313792357,"stop":1697313797314,"duration":4957}},{"uid":"4638b8b42889bfc1","reportUrl":"https://novasamatech.github.io/test-runner/3949//#testresult/4638b8b42889bfc1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697299844661,"stop":1697299846068,"duration":1407}},{"uid":"71b9c8b7eb3f15d7","reportUrl":"https://novasamatech.github.io/test-runner/3948//#testresult/71b9c8b7eb3f15d7","status":"passed","time":{"start":1697284956475,"stop":1697284962861,"duration":6386}},{"uid":"197d7d868f671371","reportUrl":"https://novasamatech.github.io/test-runner/3947//#testresult/197d7d868f671371","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697270632755,"stop":1697270634162,"duration":1407}},{"uid":"e670be39f484ebc4","reportUrl":"https://novasamatech.github.io/test-runner/3946//#testresult/e670be39f484ebc4","status":"passed","time":{"start":1697256158155,"stop":1697256162272,"duration":4117}},{"uid":"17f8b7b727ae50ab","reportUrl":"https://novasamatech.github.io/test-runner/3945//#testresult/17f8b7b727ae50ab","status":"passed","time":{"start":1697241834124,"stop":1697241838670,"duration":4546}},{"uid":"f0005c629325c6f7","reportUrl":"https://novasamatech.github.io/test-runner/3944//#testresult/f0005c629325c6f7","status":"passed","time":{"start":1697227371533,"stop":1697227375602,"duration":4069}},{"uid":"b135065bf98175a3","reportUrl":"https://novasamatech.github.io/test-runner/3943//#testresult/b135065bf98175a3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697213015512,"stop":1697213016937,"duration":1425}},{"uid":"5d851fe7dba1f301","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/5d851fe7dba1f301","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697198649144,"stop":1697198650577,"duration":1433}},{"uid":"2d1fc00e1ddcdd9f","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/2d1fc00e1ddcdd9f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697184204419,"stop":1697184205464,"duration":1045}},{"uid":"a47ed44fdbf79f1b","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/a47ed44fdbf79f1b","status":"passed","time":{"start":1697169783521,"stop":1697169789647,"duration":6126}},{"uid":"e9418ada37b67e77","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/e9418ada37b67e77","status":"passed","time":{"start":1697155399406,"stop":1697155403850,"duration":4444}},{"uid":"b1358fec3779c646","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/b1358fec3779c646","status":"passed","time":{"start":1697140958276,"stop":1697140967617,"duration":9341}},{"uid":"9312fbd932ad0d37","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/9312fbd932ad0d37","status":"passed","time":{"start":1697126572734,"stop":1697126576586,"duration":3852}},{"uid":"8b254a08b605484c","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/8b254a08b605484c","status":"passed","time":{"start":1697112154726,"stop":1697112158639,"duration":3913}},{"uid":"baa7ae2fb49e5a90","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/baa7ae2fb49e5a90","status":"passed","time":{"start":1697097758145,"stop":1697097769509,"duration":11364}},{"uid":"ddf7c59c260fb3ec","reportUrl":"https://novasamatech.github.io/test-runner/3934//#testresult/ddf7c59c260fb3ec","status":"passed","time":{"start":1697083356508,"stop":1697083361580,"duration":5072}},{"uid":"ed9a86ee2d9f85af","reportUrl":"https://novasamatech.github.io/test-runner/3933//#testresult/ed9a86ee2d9f85af","status":"passed","time":{"start":1697069046749,"stop":1697069052555,"duration":5806}}]},"tags":[]},"source":"60ec0d8038e7c3e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f5b0f23f0a0>"]}