{"uid":"a81752b60e9d743a","name":"test_can_create_connection[Test for Moonriver, url: wss://moonriver.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"90ea9856c4c0a688d86ac22df2f1ecd3","time":{"start":1669421730427,"stop":1669421730465,"duration":38},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Moonriver', 'url': 'wss://moonriver.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az136-984"},{"name":"thread","value":"1778-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://moonriver.api.onfinality.io/public-ws', 'name': 'Moonriver'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dc1d03a21d485c9f","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421720281,"stop":1669421720366,"duration":85}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":250,"unknown":0,"total":255},"items":[{"uid":"be391c7c75f41b0e","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/be391c7c75f41b0e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406783123,"stop":1669406783276,"duration":153}},{"uid":"28fefa3111627b5a","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/28fefa3111627b5a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392381094,"stop":1669392381240,"duration":146}},{"uid":"3a88dfca9a1f165a","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/3a88dfca9a1f165a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378035510,"stop":1669378035526,"duration":16}},{"uid":"dc0409015c6a6a07","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/dc0409015c6a6a07","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370783858,"stop":1669370783987,"duration":129}},{"uid":"ac775ae8157f1ae6","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/ac775ae8157f1ae6","status":"passed","time":{"start":1669118705210,"stop":1669118705250,"duration":40}},{"uid":"3926cc3685d287c","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/3926cc3685d287c","status":"passed","time":{"start":1669104278082,"stop":1669104278306,"duration":224}},{"uid":"c0e64c1b50627fa2","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/c0e64c1b50627fa2","status":"passed","time":{"start":1669089840008,"stop":1669089840339,"duration":331}},{"uid":"be667a808305eb88","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/be667a808305eb88","status":"passed","time":{"start":1669076125256,"stop":1669076125313,"duration":57}},{"uid":"7ab0b13325f537a9","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/7ab0b13325f537a9","status":"passed","time":{"start":1669061037785,"stop":1669061038079,"duration":294}},{"uid":"bf3aa8d095a905ca","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/bf3aa8d095a905ca","status":"passed","time":{"start":1669046647760,"stop":1669046648010,"duration":250}},{"uid":"28b7090d37acc1ba","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/28b7090d37acc1ba","status":"passed","time":{"start":1669032319457,"stop":1669032319490,"duration":33}},{"uid":"3395cf57986868a0","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/3395cf57986868a0","status":"passed","time":{"start":1669017872771,"stop":1669017872994,"duration":223}},{"uid":"4fa39097af9fd5","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/4fa39097af9fd5","status":"passed","time":{"start":1669003716524,"stop":1669003716766,"duration":242}},{"uid":"d268109736c2c960","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/d268109736c2c960","status":"passed","time":{"start":1668989726770,"stop":1668989726857,"duration":87}},{"uid":"e19978c900256a75","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/e19978c900256a75","status":"passed","time":{"start":1668974623256,"stop":1668974623336,"duration":80}},{"uid":"9a9468402a69559d","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/9a9468402a69559d","status":"passed","time":{"start":1668960228589,"stop":1668960228796,"duration":207}},{"uid":"5d8b933c38e135c7","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/5d8b933c38e135c7","status":"passed","time":{"start":1668945880551,"stop":1668945880921,"duration":370}},{"uid":"e8a5a57831e35061","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/e8a5a57831e35061","status":"passed","time":{"start":1668931446349,"stop":1668931446418,"duration":69}},{"uid":"409510b6b247e243","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/409510b6b247e243","status":"passed","time":{"start":1668917201656,"stop":1668917201905,"duration":249}},{"uid":"89df92c71353e403","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/89df92c71353e403","status":"passed","time":{"start":1668903336695,"stop":1668903336786,"duration":91}}]},"tags":[]},"source":"a81752b60e9d743a.json","parameterValues":["{'url': 'wss://moonriver.api.onfinality.io/public-ws', 'name': 'Moonriver'}"]}