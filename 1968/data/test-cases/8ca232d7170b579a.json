{"uid":"8ca232d7170b579a","name":"test_can_create_connection[Test for Statemine, url: wss://statemine.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2af8ed980fdeaa28200c44615fafb25d","time":{"start":1669421655585,"stop":1669421656085,"duration":500},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Statemine', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az136-984"},{"name":"thread","value":"1778-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Statemine'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"864ce35fbd63e59a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421645006,"stop":1669421645522,"duration":516}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":250,"unknown":0,"total":255},"items":[{"uid":"649302f84e1f7197","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/649302f84e1f7197","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406707135,"stop":1669406707562,"duration":427}},{"uid":"eab26298747bbb10","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/eab26298747bbb10","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392305125,"stop":1669392305550,"duration":425}},{"uid":"991971cbe786d8b2","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/991971cbe786d8b2","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669377961201,"stop":1669377961704,"duration":503}},{"uid":"f50442c7490e63e5","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/f50442c7490e63e5","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370707812,"stop":1669370708231,"duration":419}},{"uid":"353e805d0f306306","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/353e805d0f306306","status":"passed","time":{"start":1669118697210,"stop":1669118697923,"duration":713}},{"uid":"4bd47754f5147c7f","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/4bd47754f5147c7f","status":"passed","time":{"start":1669104273855,"stop":1669104274618,"duration":763}},{"uid":"4261e551787df79","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/4261e551787df79","status":"passed","time":{"start":1669089836219,"stop":1669089836831,"duration":612}},{"uid":"4c13b15b035ea72c","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/4c13b15b035ea72c","status":"passed","time":{"start":1669076122228,"stop":1669076122946,"duration":718}},{"uid":"672e190c6ac38974","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/672e190c6ac38974","status":"passed","time":{"start":1669061033613,"stop":1669061034461,"duration":848}},{"uid":"ae5947d2691dc72","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/ae5947d2691dc72","status":"passed","time":{"start":1669046643504,"stop":1669046644225,"duration":721}},{"uid":"236b5395a3f403e","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/236b5395a3f403e","status":"passed","time":{"start":1669032316511,"stop":1669032317218,"duration":707}},{"uid":"c0293fbbcac9b500","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/c0293fbbcac9b500","status":"passed","time":{"start":1669017869033,"stop":1669017869658,"duration":625}},{"uid":"f351fc0cbc099797","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/f351fc0cbc099797","status":"passed","time":{"start":1669003713343,"stop":1669003714040,"duration":697}},{"uid":"5a9bd41a5460ba77","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/5a9bd41a5460ba77","status":"passed","time":{"start":1668989723576,"stop":1668989724377,"duration":801}},{"uid":"291e1589cc503272","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/291e1589cc503272","status":"passed","time":{"start":1668974620041,"stop":1668974620749,"duration":708}},{"uid":"3d68699a90833885","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/3d68699a90833885","status":"passed","time":{"start":1668960224471,"stop":1668960225130,"duration":659}},{"uid":"5327548119158250","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/5327548119158250","status":"passed","time":{"start":1668945875845,"stop":1668945876441,"duration":596}},{"uid":"36cf151f8a023663","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/36cf151f8a023663","status":"passed","time":{"start":1668931442999,"stop":1668931443704,"duration":705}},{"uid":"8721b254013424cf","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/8721b254013424cf","status":"passed","time":{"start":1668917197727,"stop":1668917198400,"duration":673}},{"uid":"79387f5eea1ad73a","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/79387f5eea1ad73a","status":"passed","time":{"start":1668903333676,"stop":1668903334388,"duration":712}}]},"tags":[]},"source":"8ca232d7170b579a.json","parameterValues":["{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Statemine'}"]}