{"uid":"55f2784680232a63","name":"test_can_create_connection[Test for Composable Finance, url: wss://rpc.composable.finance]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e1c6edf5649802bd02e402a73e097467","time":{"start":1669422173546,"stop":1669422174131,"duration":585},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Composable Finance', 'url': 'wss://rpc.composable.finance'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az136-984"},{"name":"thread","value":"1778-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.composable.finance', 'name': 'Composable Finance'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3954960a8d615200","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669422163203,"stop":1669422163484,"duration":281}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":250,"unknown":0,"total":255},"items":[{"uid":"c28ac46c0266cee6","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/c28ac46c0266cee6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669407229851,"stop":1669407230246,"duration":395}},{"uid":"f7eb087a4fc313ba","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/f7eb087a4fc313ba","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392826151,"stop":1669392826562,"duration":411}},{"uid":"b9a482253de2d8ac","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/b9a482253de2d8ac","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378485509,"stop":1669378485766,"duration":257}},{"uid":"a1a8fd5cb01301a4","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/a1a8fd5cb01301a4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371232810,"stop":1669371233172,"duration":362}},{"uid":"32d669d08a324495","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/32d669d08a324495","status":"passed","time":{"start":1669118760416,"stop":1669118760766,"duration":350}},{"uid":"fda71b6d3aa576ce","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/fda71b6d3aa576ce","status":"passed","time":{"start":1669104330750,"stop":1669104331305,"duration":555}},{"uid":"da88ed3d21e30205","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/da88ed3d21e30205","status":"passed","time":{"start":1669089900118,"stop":1669089900639,"duration":521}},{"uid":"5339d26b3d179399","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/5339d26b3d179399","status":"passed","time":{"start":1669076181081,"stop":1669076181588,"duration":507}},{"uid":"c524f86659be6666","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c524f86659be6666","status":"passed","time":{"start":1669061104386,"stop":1669061105076,"duration":690}},{"uid":"4a5b160bdecff95b","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/4a5b160bdecff95b","status":"passed","time":{"start":1669046773036,"stop":1669046773572,"duration":536}},{"uid":"da9fcad18a409fbb","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/da9fcad18a409fbb","status":"passed","time":{"start":1669032373994,"stop":1669032374336,"duration":342}},{"uid":"14c418b916b70051","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/14c418b916b70051","status":"passed","time":{"start":1669017930552,"stop":1669017931213,"duration":661}},{"uid":"444ea32fb01b9f0","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/444ea32fb01b9f0","status":"passed","time":{"start":1669003770055,"stop":1669003770400,"duration":345}},{"uid":"2dc8d7b60395f11c","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/2dc8d7b60395f11c","status":"passed","time":{"start":1668989790843,"stop":1668989791460,"duration":617}},{"uid":"4a597a80b2e558ef","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/4a597a80b2e558ef","status":"passed","time":{"start":1668974685570,"stop":1668974686022,"duration":452}},{"uid":"5d2f40647f89ec7e","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/5d2f40647f89ec7e","status":"passed","time":{"start":1668960281431,"stop":1668960281967,"duration":536}},{"uid":"20a766b9a49eec5f","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/20a766b9a49eec5f","status":"passed","time":{"start":1668945948503,"stop":1668945949126,"duration":623}},{"uid":"b2ebcd98531d860f","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/b2ebcd98531d860f","status":"passed","time":{"start":1668931504807,"stop":1668931505343,"duration":536}},{"uid":"9907d0a4ff13ec48","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/9907d0a4ff13ec48","status":"passed","time":{"start":1668917255091,"stop":1668917255725,"duration":634}},{"uid":"854ce0f11e2e4333","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/854ce0f11e2e4333","status":"passed","time":{"start":1668903391931,"stop":1668903392422,"duration":491}}]},"tags":[]},"source":"55f2784680232a63.json","parameterValues":["{'url': 'wss://rpc.composable.finance', 'name': 'Composable Finance'}"]}