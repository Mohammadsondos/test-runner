{"uid":"6387b2500613565d","name":"test_can_create_connection[Test for Parallel, url: wss://parallel.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a7ab9d9529e5de75504b37c990b86bf9","time":{"start":1669421809923,"stop":1669421809972,"duration":49},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Parallel', 'url': 'wss://parallel.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az136-984"},{"name":"thread","value":"1781-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://parallel.api.onfinality.io/public-ws', 'name': 'Parallel'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4c53f23bfb522f9f","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421799734,"stop":1669421799862,"duration":128}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":250,"unknown":0,"total":255},"items":[{"uid":"fe58a9c40945feee","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/fe58a9c40945feee","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406860689,"stop":1669406860814,"duration":125}},{"uid":"f386ba239d9d38e1","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/f386ba239d9d38e1","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392458787,"stop":1669392458936,"duration":149}},{"uid":"a3defbfc283ddf04","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/a3defbfc283ddf04","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378126784,"stop":1669378126804,"duration":20}},{"uid":"df4be7150daf0525","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/df4be7150daf0525","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370866154,"stop":1669370866296,"duration":142}},{"uid":"c3816afd53917257","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/c3816afd53917257","status":"passed","time":{"start":1669118714932,"stop":1669118714978,"duration":46}},{"uid":"fc7dd195ec6a4b01","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/fc7dd195ec6a4b01","status":"passed","time":{"start":1669104283202,"stop":1669104283494,"duration":292}},{"uid":"447359b731327606","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/447359b731327606","status":"passed","time":{"start":1669089845072,"stop":1669089845318,"duration":246}},{"uid":"7330fb4b21f737e5","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7330fb4b21f737e5","status":"passed","time":{"start":1669076137040,"stop":1669076137131,"duration":91}},{"uid":"eb6e00306effc5a9","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/eb6e00306effc5a9","status":"passed","time":{"start":1669061042881,"stop":1669061043107,"duration":226}},{"uid":"eca9f75507b672a","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/eca9f75507b672a","status":"passed","time":{"start":1669046721562,"stop":1669046721806,"duration":244}},{"uid":"ca5a2cd04990189b","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/ca5a2cd04990189b","status":"passed","time":{"start":1669032327995,"stop":1669032328036,"duration":41}},{"uid":"98b8fdd27ef314a6","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/98b8fdd27ef314a6","status":"passed","time":{"start":1669017877770,"stop":1669017877972,"duration":202}},{"uid":"cfb8d5d3ad7dffbb","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/cfb8d5d3ad7dffbb","status":"passed","time":{"start":1669003725433,"stop":1669003725479,"duration":46}},{"uid":"2dee51e951c151bd","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/2dee51e951c151bd","status":"passed","time":{"start":1668989744361,"stop":1668989744447,"duration":86}},{"uid":"64ec22228228403a","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/64ec22228228403a","status":"passed","time":{"start":1668974632772,"stop":1668974632858,"duration":86}},{"uid":"d6887a842ab965a5","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/d6887a842ab965a5","status":"passed","time":{"start":1668960234220,"stop":1668960234469,"duration":249}},{"uid":"541244181e2877ac","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/541244181e2877ac","status":"passed","time":{"start":1668945885722,"stop":1668945886081,"duration":359}},{"uid":"9ee06be632e33ecf","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/9ee06be632e33ecf","status":"passed","time":{"start":1668931458710,"stop":1668931458775,"duration":65}},{"uid":"cd0ffb238138655d","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/cd0ffb238138655d","status":"passed","time":{"start":1668917206916,"stop":1668917207173,"duration":257}},{"uid":"fd96d7bfb7282e6a","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/fd96d7bfb7282e6a","status":"passed","time":{"start":1668903343137,"stop":1668903343230,"duration":93}}]},"tags":[]},"source":"6387b2500613565d.json","parameterValues":["{'url': 'wss://parallel.api.onfinality.io/public-ws', 'name': 'Parallel'}"]}