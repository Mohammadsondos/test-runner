{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Bifrost Kusama]","uid":"16f652bc69e71f09","parentUid":"4f259164810e5718c9bb3a676e1dff0a","status":"failed","time":{"start":1682107433102,"stop":1682107434317,"duration":1215},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f6e9f947d30>"]}],"uid":"4f259164810e5718c9bb3a676e1dff0a"},{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 3\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: INTR\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n2: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: IBTC\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n3: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Kintsugi]","uid":"f26c20bafc703100","parentUid":"a48452b38450747c54e44e725ec69e07","status":"failed","time":{"start":1682107500541,"stop":1682107501685,"duration":1144},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fc9ef97a770>"]}],"uid":"a48452b38450747c54e44e725ec69e07"},{"name":"AssertionError: native asset has changed\nassert ('KPX' in dict_keys(['KAPEX', 'AUSD', 'XX']) or 'KPX' in dict_values(['', 'KUSD', 'xx']))\n +  where 'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7fc9b42394e0>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7fc9b42394e0> = <scripts.utils.chain_model.Chain object at 0x7fc9ef97af20>.properties\n +  and   dict_keys(['KAPEX', 'AUSD', 'XX']) = <built-in method keys of dict object at 0x7fc9b4111bc0>()\n +    where <built-in method keys of dict object at 0x7fc9b4111bc0> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.keys\n +  and   'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7fc9b42394e0>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7fc9b42394e0> = <scripts.utils.chain_model.Chain object at 0x7fc9ef97af20>.properties\n +  and   dict_values(['', 'KUSD', 'xx']) = <built-in method values of dict object at 0x7fc9b4111bc0>()\n +    where <built-in method values of dict object at 0x7fc9b4111bc0> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.values","children":[{"name":"test_has_new_assets[Test for Kapex]","uid":"c3c0d015c89e9748","parentUid":"4538a6da0b29fd954e0fbccc44aa6cb9","status":"failed","time":{"start":1682107565635,"stop":1682107567173,"duration":1538},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fc9ef97af20>"]}],"uid":"4538a6da0b29fd954e0fbccc44aa6cb9"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32601, 'message': 'Method system_chain is not supported'}","children":[{"name":"test_can_create_connection[Test for Exosama, url: wss://rpc.exosama.com]","uid":"13b0f24a185e3ba7","parentUid":"216ddde9b6485d42e113b52340f71442","status":"broken","time":{"start":1682107478636,"stop":1682107479233,"duration":597},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://rpc.exosama.com', 'name': 'Exosama'}"]}],"uid":"216ddde9b6485d42e113b52340f71442"},{"name":"AttributeError: 'NoneType' object has no attribute 'get_constant'","children":[{"name":"test_address_prefix[Test for Tanganika]","uid":"5a67916cd7dfe978","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682107526264,"stop":1682107527473,"duration":1209},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f0bb69202e0>"]},{"name":"test_has_new_assets[Test for Exosama]","uid":"47d65d12620ea17d","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682107595896,"stop":1682107597266,"duration":1370},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fc9ef97ad40>"]},{"name":"test_address_prefix[Test for Exosama]","uid":"a1c865959e39ff03","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682107624415,"stop":1682107626196,"duration":1781},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f0bb6920670>"]},{"name":"test_chainId[Test for Exosama]","uid":"d839e309b7356a39","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682107858602,"stop":1682107861382,"duration":2780},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f090ed56e00>"]},{"name":"test_precision[Test for Exosama]","uid":"eae313afea79bd7b","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682107947780,"stop":1682107950081,"duration":2301},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f0bb6920670>"]}],"uid":"5aa24b8a3c4111290b34f017f14d2ab4"},{"name":"Socket state: WaitingForReconnect(url=wss://tanganika.datahighway.com, attempt=9, pendingSendables=[Sendable(2123050538)])","children":[{"name":"testBalancesLoading[Getting balance for Tanganika network]","uid":"b5e8ab468f5df14d","parentUid":"3f64bbc996c1145912aed76ff1e6c65c","status":"broken","time":{"start":1682108305479,"stop":1682108385559,"duration":80080},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"3f64bbc996c1145912aed76ff1e6c65c"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}