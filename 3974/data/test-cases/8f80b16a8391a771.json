{"uid":"8f80b16a8391a771","name":"test_can_create_connection[Test for Polkadot Asset Hub, url: wss://statemint.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"7131157551c739209ed665b16e9b5869","time":{"start":1697659322445,"stop":1697659322909,"duration":464},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","statusTrace":"data = {'name': 'Polkadot Asset Hub', 'url': 'wss://statemint.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","statusTrace":"data = {'name': 'Polkadot Asset Hub', 'url': 'wss://statemint.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","steps":[],"attachments":[{"uid":"e2e9515ddf76bd5e","name":"stdout","source":"e2e9515ddf76bd5e.txt","type":"text/plain","size":576}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az173-473"},{"name":"thread","value":"2117-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemint.api.onfinality.io/public-ws', 'name': 'Polkadot Asset Hub'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a4b30f9bd6e28307","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1697659306835,"stop":1697659307298,"duration":463}},{"uid":"7f59eba5f2d4c3a1","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1697659291103,"stop":1697659291603,"duration":500}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":333,"unknown":0,"total":334},"items":[{"uid":"10327842404e3294","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/10327842404e3294","status":"passed","time":{"start":1697644886158,"stop":1697644887243,"duration":1085}},{"uid":"c4186863eabf1ac4","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/c4186863eabf1ac4","status":"passed","time":{"start":1697630498056,"stop":1697630505612,"duration":7556}},{"uid":"31f10ccc9b0b3e7","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/31f10ccc9b0b3e7","status":"passed","time":{"start":1697616082091,"stop":1697616082984,"duration":893}},{"uid":"3fc3bf33afba491f","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/3fc3bf33afba491f","status":"passed","time":{"start":1697601690596,"stop":1697601691567,"duration":971}},{"uid":"4f6d2dfdfc83715e","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/4f6d2dfdfc83715e","status":"passed","time":{"start":1697587338421,"stop":1697587339152,"duration":731}},{"uid":"f868843e8b5be13","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/f868843e8b5be13","status":"passed","time":{"start":1697572886989,"stop":1697572887943,"duration":954}},{"uid":"16c50e861748fcee","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/16c50e861748fcee","status":"passed","time":{"start":1697558485869,"stop":1697558486834,"duration":965}},{"uid":"b231b58530539057","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/b231b58530539057","status":"passed","time":{"start":1697544105730,"stop":1697544106663,"duration":933}},{"uid":"8ccc8ff7450d3901","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/8ccc8ff7450d3901","status":"passed","time":{"start":1697529687661,"stop":1697529688600,"duration":939}},{"uid":"73279200e59c1a89","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/73279200e59c1a89","status":"passed","time":{"start":1697515282815,"stop":1697515283813,"duration":998}},{"uid":"1cee4532b72e655e","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/1cee4532b72e655e","status":"passed","time":{"start":1697500926046,"stop":1697500926882,"duration":836}},{"uid":"da364c330805175f","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/da364c330805175f","status":"passed","time":{"start":1697486491458,"stop":1697486492477,"duration":1019}},{"uid":"a40d1916484f9f8b","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/a40d1916484f9f8b","status":"passed","time":{"start":1697472092282,"stop":1697472093152,"duration":870}},{"uid":"79209b19641772a9","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/79209b19641772a9","status":"passed","time":{"start":1697457706955,"stop":1697457707798,"duration":843}},{"uid":"75266a390e7912f4","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/75266a390e7912f4","status":"passed","time":{"start":1697443291890,"stop":1697443292847,"duration":957}},{"uid":"9b639371e108a322","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/9b639371e108a322","status":"passed","time":{"start":1697428875913,"stop":1697428876879,"duration":966}},{"uid":"2ac72cce761c033a","reportUrl":"https://novasamatech.github.io/test-runner/3957//#testresult/2ac72cce761c033a","status":"passed","time":{"start":1697414532559,"stop":1697414533352,"duration":793}},{"uid":"5c8f8fafb46bf5cc","reportUrl":"https://novasamatech.github.io/test-runner/3956//#testresult/5c8f8fafb46bf5cc","status":"passed","time":{"start":1697400088114,"stop":1697400088886,"duration":772}},{"uid":"2955073af031172a","reportUrl":"https://novasamatech.github.io/test-runner/3955//#testresult/2955073af031172a","status":"passed","time":{"start":1697385684444,"stop":1697385685258,"duration":814}},{"uid":"d3d3ac71b37e9ac3","reportUrl":"https://novasamatech.github.io/test-runner/3954//#testresult/d3d3ac71b37e9ac3","status":"passed","time":{"start":1697371281939,"stop":1697371282999,"duration":1060}}]},"tags":[]},"source":"8f80b16a8391a771.json","parameterValues":["{'url': 'wss://statemint.api.onfinality.io/public-ws', 'name': 'Polkadot Asset Hub'}"]}