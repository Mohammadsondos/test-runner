{"uid":"167f61d54257b253","name":"test_can_create_connection[Test for Crab, url: wss://crab.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"58a7b8c2f8659c261eb4c7a54fb84fd8","time":{"start":1697659801068,"stop":1697659921591,"duration":120523},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"162d8f98e15ba354","name":"stdout","source":"162d8f98e15ba354.txt","type":"text/plain","size":698}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az173-473"},{"name":"thread","value":"2111-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://crab.api.onfinality.io/public-ws', 'name': 'Crab'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ef533beb946c4306","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697659698862,"stop":1697659785949,"duration":87087}},{"uid":"6a3b9dffef09fab6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Wed, 18 Oct 2023 20:08:03 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300003', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697659323553,"stop":1697659683619,"duration":360066}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":311,"unknown":0,"total":334},"items":[{"uid":"401785ca0d81d37","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/401785ca0d81d37","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Wed, 18 Oct 2023 16:20:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60007', 'x-kong-proxy-latency': '300138', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697645655529,"stop":1697646015738,"duration":360209}},{"uid":"917e7d0557018de0","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/917e7d0557018de0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Wed, 18 Oct 2023 12:20:39 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60004', 'x-kong-proxy-latency': '300008', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697631279391,"stop":1697631639661,"duration":360270}},{"uid":"966ed105fff56f58","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/966ed105fff56f58","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Wed, 18 Oct 2023 08:20:12 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60002', 'x-kong-proxy-latency': '300003', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697616852277,"stop":1697617212443,"duration":360166}},{"uid":"961724a811e1ffc5","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/961724a811e1ffc5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Wed, 18 Oct 2023 04:20:14 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60106', 'x-kong-proxy-latency': '300092', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697602454399,"stop":1697602814634,"duration":360235}},{"uid":"8b883c72f9a30c2d","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/8b883c72f9a30c2d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Wed, 18 Oct 2023 00:21:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300003', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697588111498,"stop":1697588471754,"duration":360256}},{"uid":"b6a14a149ba95935","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/b6a14a149ba95935","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 17 Oct 2023 20:20:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697573647966,"stop":1697574008196,"duration":360230}},{"uid":"44de386bb22de0ce","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/44de386bb22de0ce","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 17 Oct 2023 16:20:16 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60002', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697559256165,"stop":1697559616200,"duration":360035}},{"uid":"9b470186ba0ceb36","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/9b470186ba0ceb36","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 17 Oct 2023 12:20:21 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697544861070,"stop":1697545221161,"duration":360091}},{"uid":"a2ce7385277582a7","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/a2ce7385277582a7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 17 Oct 2023 08:20:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60002', 'x-kong-proxy-latency': '300007', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697530455717,"stop":1697530815780,"duration":360063}},{"uid":"860f43ff961cfbcc","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/860f43ff961cfbcc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Tue, 17 Oct 2023 04:09:27 GMT', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '37174', 'x-kong-proxy-latency': '60002', 'via': 'kong/3.3.1'} -+-+- b''","time":{"start":1697515670492,"stop":1697515767714,"duration":97222}},{"uid":"3d41e707511aa4e1","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/3d41e707511aa4e1","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697501063973,"stop":1697501124540,"duration":60567}},{"uid":"ec46e233ee8fe92","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/ec46e233ee8fe92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Mon, 16 Oct 2023 20:04:02 GMT', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '24009', 'x-kong-proxy-latency': '1', 'via': 'kong/3.3.1'} -+-+- b''","time":{"start":1697486618485,"stop":1697486642554,"duration":24069}},{"uid":"a40d5a649ac6863e","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/a40d5a649ac6863e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Mon, 16 Oct 2023 16:20:39 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300003', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697472879475,"stop":1697473239698,"duration":360223}},{"uid":"a1fc87f4c08ce711","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/a1fc87f4c08ce711","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Mon, 16 Oct 2023 12:21:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300002', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697458515684,"stop":1697458875886,"duration":360202}},{"uid":"b3c6ffd428ac2f8b","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/b3c6ffd428ac2f8b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Mon, 16 Oct 2023 08:20:24 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300001', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697444064180,"stop":1697444424257,"duration":360077}},{"uid":"a26f724fd1cd7c9","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/a26f724fd1cd7c9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Mon, 16 Oct 2023 04:20:07 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60004', 'x-kong-proxy-latency': '300066', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697429647541,"stop":1697430007666,"duration":360125}},{"uid":"3ae09e68443ee405","reportUrl":"https://novasamatech.github.io/test-runner/3957//#testresult/3ae09e68443ee405","status":"passed","time":{"start":1697414559611,"stop":1697414561029,"duration":1418}},{"uid":"7517fd34348b59ff","reportUrl":"https://novasamatech.github.io/test-runner/3956//#testresult/7517fd34348b59ff","status":"passed","time":{"start":1697400118651,"stop":1697400119707,"duration":1056}},{"uid":"5c05033d8c6e27c9","reportUrl":"https://novasamatech.github.io/test-runner/3955//#testresult/5c05033d8c6e27c9","status":"passed","time":{"start":1697385775380,"stop":1697385776675,"duration":1295}},{"uid":"33721c00e3adc765","reportUrl":"https://novasamatech.github.io/test-runner/3954//#testresult/33721c00e3adc765","status":"passed","time":{"start":1697371327748,"stop":1697371328262,"duration":514}}]},"tags":[]},"source":"167f61d54257b253.json","parameterValues":["{'url': 'wss://crab.api.onfinality.io/public-ws', 'name': 'Crab'}"]}