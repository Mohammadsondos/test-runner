{"uid":"6734b0a17fd17bd7","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1696262590554,"stop":1696262590927,"duration":373},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 02 Oct 2023 16:03:10 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 02 Oct 2023 16:03:10 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 02 Oct 2023 16:03:10 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 02 Oct 2023 16:03:10 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"fc2724e6178bbd90","name":"stdout","source":"fc2724e6178bbd90.txt","type":"text/plain","size":1139}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-838"},{"name":"thread","value":"2074-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4f8724f03c2642ea","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1696262575148,"stop":1696262575395,"duration":247}},{"uid":"272fd25d5543996e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 02 Oct 2023 16:02:39 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1696262559606,"stop":1696262560047,"duration":441}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":37,"skipped":0,"passed":199,"unknown":0,"total":236},"items":[{"uid":"e85b15eaefb21c30","reportUrl":"https://novasamatech.github.io/test-runner/3875//#testresult/e85b15eaefb21c30","status":"passed","time":{"start":1696248144770,"stop":1696248145152,"duration":382}},{"uid":"1cc7ae6af1b4ef48","reportUrl":"https://novasamatech.github.io/test-runner/3874//#testresult/1cc7ae6af1b4ef48","status":"passed","time":{"start":1696233734497,"stop":1696233734882,"duration":385}},{"uid":"f93eb2634a66204b","reportUrl":"https://novasamatech.github.io/test-runner/3873//#testresult/f93eb2634a66204b","status":"passed","time":{"start":1696219327196,"stop":1696219327600,"duration":404}},{"uid":"f949c1f2ebc9a93b","reportUrl":"https://novasamatech.github.io/test-runner/3872//#testresult/f949c1f2ebc9a93b","status":"passed","time":{"start":1696204988059,"stop":1696204988813,"duration":754}},{"uid":"8c746527a59fd7a5","reportUrl":"https://novasamatech.github.io/test-runner/3871//#testresult/8c746527a59fd7a5","status":"passed","time":{"start":1696190540874,"stop":1696190541262,"duration":388}},{"uid":"97b36f8f689e867a","reportUrl":"https://novasamatech.github.io/test-runner/3870//#testresult/97b36f8f689e867a","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1696176166797,"stop":1696176167121,"duration":324}},{"uid":"ef3d16b980793a8b","reportUrl":"https://novasamatech.github.io/test-runner/3869//#testresult/ef3d16b980793a8b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sun, 01 Oct 2023 12:02:38 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1696161758501,"stop":1696161758775,"duration":274}},{"uid":"b79958ea64af1c0a","reportUrl":"https://novasamatech.github.io/test-runner/3868//#testresult/b79958ea64af1c0a","status":"passed","time":{"start":1696147331588,"stop":1696147332258,"duration":670}},{"uid":"8d65bf3658a5b9c0","reportUrl":"https://novasamatech.github.io/test-runner/3867//#testresult/8d65bf3658a5b9c0","status":"passed","time":{"start":1696132909439,"stop":1696132909849,"duration":410}},{"uid":"6b3c903b5e2a499e","reportUrl":"https://novasamatech.github.io/test-runner/3866//#testresult/6b3c903b5e2a499e","status":"passed","time":{"start":1696118576597,"stop":1696118577200,"duration":603}},{"uid":"1bde25e3f9d952be","reportUrl":"https://novasamatech.github.io/test-runner/3865//#testresult/1bde25e3f9d952be","status":"passed","time":{"start":1696104129415,"stop":1696104129980,"duration":565}},{"uid":"7852573c9fd2372e","reportUrl":"https://novasamatech.github.io/test-runner/3864//#testresult/7852573c9fd2372e","status":"passed","time":{"start":1696089739097,"stop":1696089739499,"duration":402}},{"uid":"70dc1d32e67b17f","reportUrl":"https://novasamatech.github.io/test-runner/3863//#testresult/70dc1d32e67b17f","status":"passed","time":{"start":1696075350426,"stop":1696075351082,"duration":656}},{"uid":"effbf1e0722ef332","reportUrl":"https://novasamatech.github.io/test-runner/3862//#testresult/effbf1e0722ef332","status":"passed","time":{"start":1696060921247,"stop":1696060921853,"duration":606}},{"uid":"922912f2af01a889","reportUrl":"https://novasamatech.github.io/test-runner/3861//#testresult/922912f2af01a889","status":"passed","time":{"start":1696046563016,"stop":1696046563700,"duration":684}},{"uid":"9621e77da6ece19b","reportUrl":"https://novasamatech.github.io/test-runner/3860//#testresult/9621e77da6ece19b","status":"passed","time":{"start":1696032238534,"stop":1696032239181,"duration":647}},{"uid":"26fe45ee1c762d20","reportUrl":"https://novasamatech.github.io/test-runner/3859//#testresult/26fe45ee1c762d20","status":"passed","time":{"start":1696017804318,"stop":1696017804820,"duration":502}},{"uid":"f1a5fc3de1c70c37","reportUrl":"https://novasamatech.github.io/test-runner/3858//#testresult/f1a5fc3de1c70c37","status":"passed","time":{"start":1696003363758,"stop":1696003364257,"duration":499}},{"uid":"2be795df2307ef20","reportUrl":"https://novasamatech.github.io/test-runner/3857//#testresult/2be795df2307ef20","status":"passed","time":{"start":1695988931054,"stop":1695988931425,"duration":371}},{"uid":"f173a3f2002c325c","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/f173a3f2002c325c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 29 Sep 2023 08:03:01 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1695974581043,"stop":1695974581529,"duration":486}}]},"tags":[]},"source":"6734b0a17fd17bd7.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}