{"uid":"c24abb980cf4868e","name":"test_can_create_connection[Test for Altair, url: wss://altair-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"abcba6d159bf02fac13745bbd963686a","time":{"start":1670429081257,"stop":1670429094025,"duration":12768},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a6fbb009e70a0f26","name":"stdout","source":"a6fbb009e70a0f26.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az206-218"},{"name":"thread","value":"1658-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cf83f75a5be9990e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670429060102,"stop":1670429071147,"duration":11045}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":104,"skipped":0,"passed":208,"unknown":0,"total":312},"items":[{"uid":"8f735861b34c53e3","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/8f735861b34c53e3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670414735670,"stop":1670414748474,"duration":12804}},{"uid":"d2dd25f210f8c5ac","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/d2dd25f210f8c5ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670400273645,"stop":1670400286264,"duration":12619}},{"uid":"ab43bbe79eb71441","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/ab43bbe79eb71441","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670385864521,"stop":1670385877348,"duration":12827}},{"uid":"112bafc02b505077","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/112bafc02b505077","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670372067151,"stop":1670372079887,"duration":12736}},{"uid":"21a7b114ab324af0","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/21a7b114ab324af0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670357065252,"stop":1670357077992,"duration":12740}},{"uid":"6bbddc9bae7361d2","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/6bbddc9bae7361d2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670342668080,"stop":1670342680849,"duration":12769}},{"uid":"7df9f81cbed15ec5","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/7df9f81cbed15ec5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670333415640,"stop":1670333428385,"duration":12745}},{"uid":"79d16d74673008f5","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/79d16d74673008f5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670242149880,"stop":1670242162070,"duration":12190}},{"uid":"77f0cfb91b248bc9","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/77f0cfb91b248bc9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670227714346,"stop":1670227725769,"duration":11423}},{"uid":"ad212eb964b1c77f","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/ad212eb964b1c77f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670213290014,"stop":1670213301432,"duration":11418}},{"uid":"71a47964d0930cb","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/71a47964d0930cb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670199491396,"stop":1670199502789,"duration":11393}},{"uid":"aaca76d7841d848a","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/aaca76d7841d848a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670184507456,"stop":1670184518879,"duration":11423}},{"uid":"401c229cfc2569e8","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/401c229cfc2569e8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670170078194,"stop":1670170090608,"duration":12414}},{"uid":"dbb14eb8fd3c3016","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/dbb14eb8fd3c3016","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670156960666,"stop":1670156973387,"duration":12721}},{"uid":"c19e1c06ed2cf4a7","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/c19e1c06ed2cf4a7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670142047956,"stop":1670142060732,"duration":12776}},{"uid":"2e32837d849e149d","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/2e32837d849e149d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670127629103,"stop":1670127641977,"duration":12874}},{"uid":"3a3394c723031c6f","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/3a3394c723031c6f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670116388373,"stop":1670116401239,"duration":12866}},{"uid":"60a58096ae4deed","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/60a58096ae4deed","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670098650077,"stop":1670098662835,"duration":12758}},{"uid":"af1578293772b3d3","reportUrl":"https://nova-wallet.github.io/test-runner/2016//#testresult/af1578293772b3d3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670084495596,"stop":1670084508370,"duration":12774}},{"uid":"5641929965c4fd42","reportUrl":"https://nova-wallet.github.io/test-runner/2015//#testresult/5641929965c4fd42","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670070471209,"stop":1670070483806,"duration":12597}}]},"tags":[]},"source":"c24abb980cf4868e.json","parameterValues":["{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"]}