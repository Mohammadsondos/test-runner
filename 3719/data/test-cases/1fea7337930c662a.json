{"uid":"1fea7337930c662a","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1694016219568,"stop":1694016220478,"duration":910},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fe654bf2a40>\nchain = <scripts.utils.chain_model.Chain object at 0x7fe654ccdbd0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fe654bf2a40>\nchain = <scripts.utils.chain_model.Chain object at 0x7fe654ccdbd0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"663819a21e78466f","name":"stdout","source":"663819a21e78466f.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az790-44"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fe654ccdbd0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"305d54c404cbd613","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694016203640,"stop":1694016204532,"duration":892}},{"uid":"adfa89e0525fe34","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694016187623,"stop":1694016188609,"duration":986}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":75,"unknown":0,"total":79},"items":[{"uid":"d88d3d016071fa8f","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/d88d3d016071fa8f","status":"passed","time":{"start":1694001789647,"stop":1694001792649,"duration":3002}},{"uid":"1183f21136f495ce","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/1183f21136f495ce","status":"passed","time":{"start":1693987388948,"stop":1693987395902,"duration":6954}},{"uid":"b945456aaa6c4296","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/b945456aaa6c4296","status":"passed","time":{"start":1693972950253,"stop":1693972953978,"duration":3725}},{"uid":"1a7b04115a00e843","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/1a7b04115a00e843","status":"passed","time":{"start":1693958609794,"stop":1693958614795,"duration":5001}},{"uid":"8c0be522eeefa095","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/8c0be522eeefa095","status":"passed","time":{"start":1693944155142,"stop":1693944159421,"duration":4279}},{"uid":"d2384b6bf0f8e368","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/d2384b6bf0f8e368","status":"passed","time":{"start":1693929765419,"stop":1693929769660,"duration":4241}},{"uid":"f8f791c540f23831","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/f8f791c540f23831","status":"passed","time":{"start":1693915403627,"stop":1693915407487,"duration":3860}},{"uid":"b332fab496eb1c74","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/b332fab496eb1c74","status":"passed","time":{"start":1693872222479,"stop":1693872227537,"duration":5058}},{"uid":"aab3580df4785e15","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/aab3580df4785e15","status":"passed","time":{"start":1693857797521,"stop":1693857801595,"duration":4074}},{"uid":"f0a403dbba2e9dc9","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/f0a403dbba2e9dc9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693843379374,"stop":1693843380099,"duration":725}},{"uid":"6411b2ce5f82038","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/6411b2ce5f82038","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693828975447,"stop":1693828976404,"duration":957}},{"uid":"4fcc26c276d99338","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/4fcc26c276d99338","status":"passed","time":{"start":1693814586261,"stop":1693814591044,"duration":4783}},{"uid":"44ea9e9bf8676e67","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/44ea9e9bf8676e67","status":"passed","time":{"start":1693800146250,"stop":1693800149559,"duration":3309}},{"uid":"784c2fc21d661a6e","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/784c2fc21d661a6e","status":"passed","time":{"start":1693785811239,"stop":1693785815784,"duration":4545}},{"uid":"e2c3d9d2aef30956","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/e2c3d9d2aef30956","status":"passed","time":{"start":1693771374366,"stop":1693771379005,"duration":4639}},{"uid":"d86b58130bb2978f","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/d86b58130bb2978f","status":"passed","time":{"start":1693756970625,"stop":1693756976398,"duration":5773}},{"uid":"41d7f8e755a89","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/41d7f8e755a89","status":"passed","time":{"start":1693742574284,"stop":1693742578856,"duration":4572}},{"uid":"581a49a53a07b0c3","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/581a49a53a07b0c3","status":"passed","time":{"start":1693728176778,"stop":1693728182785,"duration":6007}},{"uid":"d8e4ae9de50d0dc2","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/d8e4ae9de50d0dc2","status":"passed","time":{"start":1693713740717,"stop":1693713745517,"duration":4800}},{"uid":"c8887aa2fefe0b8f","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/c8887aa2fefe0b8f","status":"passed","time":{"start":1693699412658,"stop":1693699418961,"duration":6303}}]},"tags":[]},"source":"1fea7337930c662a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fe654ccdbd0>"]}