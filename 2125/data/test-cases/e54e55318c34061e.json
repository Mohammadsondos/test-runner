{"uid":"e54e55318c34061e","name":"test_can_create_connection[Test for Altair, url: wss://altair-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"abcba6d159bf02fac13745bbd963686a","time":{"start":1671624312993,"stop":1671624324390,"duration":11397},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"97e7a774dcc021d2","name":"stdout","source":"97e7a774dcc021d2.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az203-464"},{"name":"thread","value":"1777-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"be7bc7e31a7581bb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671624291889,"stop":1671624302886,"duration":10997}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":185,"skipped":0,"passed":208,"unknown":0,"total":393},"items":[{"uid":"8cc7097ceaf68f3","reportUrl":"https://nova-wallet.github.io/test-runner/2124//#testresult/8cc7097ceaf68f3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671609923433,"stop":1671609936319,"duration":12886}},{"uid":"1847cc9ad05d245a","reportUrl":"https://nova-wallet.github.io/test-runner/2123//#testresult/1847cc9ad05d245a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671595459025,"stop":1671595471754,"duration":12729}},{"uid":"332353696630545e","reportUrl":"https://nova-wallet.github.io/test-runner/2122//#testresult/332353696630545e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671581595682,"stop":1671581608416,"duration":12734}},{"uid":"a09dd7c7e8e462bf","reportUrl":"https://nova-wallet.github.io/test-runner/2121//#testresult/a09dd7c7e8e462bf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671566663366,"stop":1671566676021,"duration":12655}},{"uid":"a096f28f36436897","reportUrl":"https://nova-wallet.github.io/test-runner/2120//#testresult/a096f28f36436897","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671552272464,"stop":1671552285084,"duration":12620}},{"uid":"9f3801bd91ebf455","reportUrl":"https://nova-wallet.github.io/test-runner/2119//#testresult/9f3801bd91ebf455","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671537910536,"stop":1671537923238,"duration":12702}},{"uid":"f38450318995fb2b","reportUrl":"https://nova-wallet.github.io/test-runner/2118//#testresult/f38450318995fb2b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671523485426,"stop":1671523498303,"duration":12877}},{"uid":"a197aba44460dc1a","reportUrl":"https://nova-wallet.github.io/test-runner/2117//#testresult/a197aba44460dc1a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671509063206,"stop":1671509075917,"duration":12711}},{"uid":"8e44cdd45660c0b9","reportUrl":"https://nova-wallet.github.io/test-runner/2116//#testresult/8e44cdd45660c0b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671495234806,"stop":1671495247452,"duration":12646}},{"uid":"763c3977e19bd9c9","reportUrl":"https://nova-wallet.github.io/test-runner/2115//#testresult/763c3977e19bd9c9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671480248399,"stop":1671480261077,"duration":12678}},{"uid":"ebab7a03720e9bcf","reportUrl":"https://nova-wallet.github.io/test-runner/2113//#testresult/ebab7a03720e9bcf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671451517644,"stop":1671451527919,"duration":10275}},{"uid":"97ba4e8fea65b88e","reportUrl":"https://nova-wallet.github.io/test-runner/2112//#testresult/97ba4e8fea65b88e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671437080266,"stop":1671437092918,"duration":12652}},{"uid":"f21242f3f3f94d52","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/f21242f3f3f94d52","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671422683802,"stop":1671422696408,"duration":12606}},{"uid":"3f6ded13bbd5ac44","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/3f6ded13bbd5ac44","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671408779350,"stop":1671408792220,"duration":12870}},{"uid":"12086ae5a8af5d43","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/12086ae5a8af5d43","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671393843394,"stop":1671393856042,"duration":12648}},{"uid":"d4e4b0e58a4fc3af","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/d4e4b0e58a4fc3af","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671379478044,"stop":1671379490902,"duration":12858}},{"uid":"5d2b23bfc51d3285","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/5d2b23bfc51d3285","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671365247238,"stop":1671365259974,"duration":12736}},{"uid":"403f9a3d437604a6","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/403f9a3d437604a6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671350789877,"stop":1671350802520,"duration":12643}},{"uid":"6b0429287d89fc32","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/6b0429287d89fc32","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671336292720,"stop":1671336305566,"duration":12846}},{"uid":"50650655694ee616","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/50650655694ee616","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671322414256,"stop":1671322426998,"duration":12742}}]},"tags":[]},"source":"e54e55318c34061e.json","parameterValues":["{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"]}