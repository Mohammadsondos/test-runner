{"uid":"7132b59f50c3bb9c","name":"test_can_create_connection[Test for XX network, url: wss://rpc-hetzner.xx.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"abf2a17b6aef2d9ab63489620bf6dc46","time":{"start":1689609898706,"stop":1689609899298,"duration":592},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 17 Jul 2023 16:04:59 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=s48CG%2BrSf0HbGtOPtEP1AKI047tbw2HZmM46r8dmnNQVix2xbli7bLJb8oxw8Fv6HdmBUh8lju4uYyH0mL6RjYccmTVCstrBLsiXztJaAeU%2Bq069UROUXIW209UjEmNdU3nI5aPfJnJ9\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '7e83b94b0b10cec5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'XX network', 'url': 'wss://rpc-hetzner.xx.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 17 Jul 2023 16:04:59 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=s48CG%2BrSf0HbGtOPtEP1AKI047tbw2HZmM46r8dmnNQVix2xbli7bLJb8oxw8Fv6HdmBUh8lju4uYyH0mL6RjYccmTVCstrBLsiXztJaAeU%2Bq069UROUXIW209UjEmNdU3nI5aPfJnJ9\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '7e83b94b0b10cec5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 17 Jul 2023 16:04:59 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=s48CG%2BrSf0HbGtOPtEP1AKI047tbw2HZmM46r8dmnNQVix2xbli7bLJb8oxw8Fv6HdmBUh8lju4uYyH0mL6RjYccmTVCstrBLsiXztJaAeU%2Bq069UROUXIW209UjEmNdU3nI5aPfJnJ9\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '7e83b94b0b10cec5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'XX network', 'url': 'wss://rpc-hetzner.xx.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 17 Jul 2023 16:04:59 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=s48CG%2BrSf0HbGtOPtEP1AKI047tbw2HZmM46r8dmnNQVix2xbli7bLJb8oxw8Fv6HdmBUh8lju4uYyH0mL6RjYccmTVCstrBLsiXztJaAeU%2Bq069UROUXIW209UjEmNdU3nI5aPfJnJ9\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '7e83b94b0b10cec5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c2003b1299929d52","name":"stdout","source":"c2003b1299929d52.txt","type":"text/plain","size":2506}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az507-177"},{"name":"thread","value":"1923-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc-hetzner.xx.network', 'name': 'XX network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d0e3ee89c533c973","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 17 Jul 2023 16:04:43 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=nyXy%2FkHWn9xk2EjXzpl%2FsQ%2BC7snHmArSjNL5la7t9tgjH%2B7VHZwgRiIHh2sCpz%2FF3ojKbtxgDbEbUz1msL36iZBEAFc2FTSa02PhyIZxRY4XxHCYj3meOaQHnQhPlE1Ca%2FEIeby24ZI2\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '7e83b8e92edb96c5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1689609883043,"stop":1689609883608,"duration":565}},{"uid":"be7ecec3e995038f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 17 Jul 2023 16:04:27 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=tArFlcIoVTgVCqmwPC%2Fz%2FDghwp5NfzcNPDUUaSt8UutVh5lgH3VJb%2BAf0e3ohsnJBH2Vm35sSm%2BpW8Jgx8Ek33mZuJH30xmlX7re2oTHlXL5BNThhdZ3cGuXW76YIki%2FraRIn%2FdUIXOZ\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'strict-transport-security': 'max-age=0; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '7e83b886be24cec5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1689609867286,"stop":1689609867895,"duration":609}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":409,"unknown":0,"total":410},"items":[{"uid":"345a4a5b2f8f6886","reportUrl":"https://novasamatech.github.io/test-runner/3404//#testresult/345a4a5b2f8f6886","status":"passed","time":{"start":1689595542493,"stop":1689595543159,"duration":666}},{"uid":"a68a0611df9f0245","reportUrl":"https://novasamatech.github.io/test-runner/3403//#testresult/a68a0611df9f0245","status":"passed","time":{"start":1689581113034,"stop":1689581113747,"duration":713}},{"uid":"d36a7560f9fa1b15","reportUrl":"https://novasamatech.github.io/test-runner/3402//#testresult/d36a7560f9fa1b15","status":"passed","time":{"start":1689566671976,"stop":1689566672690,"duration":714}},{"uid":"e87958482c81d407","reportUrl":"https://novasamatech.github.io/test-runner/3401//#testresult/e87958482c81d407","status":"passed","time":{"start":1689553081905,"stop":1689553082570,"duration":665}},{"uid":"1b6ca7cdc31876cb","reportUrl":"https://novasamatech.github.io/test-runner/3400//#testresult/1b6ca7cdc31876cb","status":"passed","time":{"start":1689537830961,"stop":1689537831645,"duration":684}},{"uid":"7e81aaec53ff902","reportUrl":"https://novasamatech.github.io/test-runner/3399//#testresult/7e81aaec53ff902","status":"passed","time":{"start":1689523453383,"stop":1689523454173,"duration":790}},{"uid":"2dbd2d14aba5720a","reportUrl":"https://novasamatech.github.io/test-runner/3398//#testresult/2dbd2d14aba5720a","status":"passed","time":{"start":1689509100590,"stop":1689509101128,"duration":538}},{"uid":"60db0414cff626da","reportUrl":"https://novasamatech.github.io/test-runner/3397//#testresult/60db0414cff626da","status":"passed","time":{"start":1689494643859,"stop":1689494644359,"duration":500}},{"uid":"f31eb57e6870304f","reportUrl":"https://novasamatech.github.io/test-runner/3396//#testresult/f31eb57e6870304f","status":"passed","time":{"start":1689480240119,"stop":1689480240617,"duration":498}},{"uid":"c2d62cb4c1f1ae09","reportUrl":"https://novasamatech.github.io/test-runner/3395//#testresult/c2d62cb4c1f1ae09","status":"passed","time":{"start":1689466679800,"stop":1689466680568,"duration":768}},{"uid":"6086d1d99576fa49","reportUrl":"https://novasamatech.github.io/test-runner/3394//#testresult/6086d1d99576fa49","status":"passed","time":{"start":1689451448600,"stop":1689451449263,"duration":663}},{"uid":"aefdd028499e0843","reportUrl":"https://novasamatech.github.io/test-runner/3393//#testresult/aefdd028499e0843","status":"passed","time":{"start":1689437050628,"stop":1689437051240,"duration":612}},{"uid":"7d3e37097ecd3b95","reportUrl":"https://novasamatech.github.io/test-runner/3392//#testresult/7d3e37097ecd3b95","status":"passed","time":{"start":1689422697435,"stop":1689422698127,"duration":692}},{"uid":"cf8048d7e1dbdb99","reportUrl":"https://novasamatech.github.io/test-runner/3391//#testresult/cf8048d7e1dbdb99","status":"passed","time":{"start":1689408247775,"stop":1689408248561,"duration":786}},{"uid":"125d3828d5a7ae16","reportUrl":"https://novasamatech.github.io/test-runner/3390//#testresult/125d3828d5a7ae16","status":"passed","time":{"start":1689393845467,"stop":1689393846125,"duration":658}},{"uid":"bbb84b5599c9cedc","reportUrl":"https://novasamatech.github.io/test-runner/3389//#testresult/bbb84b5599c9cedc","status":"passed","time":{"start":1689380137000,"stop":1689380137936,"duration":936}},{"uid":"b650b542ee1ecea3","reportUrl":"https://novasamatech.github.io/test-runner/3388//#testresult/b650b542ee1ecea3","status":"passed","time":{"start":1689365049266,"stop":1689365050129,"duration":863}},{"uid":"d102ce63e23ca0f2","reportUrl":"https://novasamatech.github.io/test-runner/3387//#testresult/d102ce63e23ca0f2","status":"passed","time":{"start":1689350662269,"stop":1689350662780,"duration":511}},{"uid":"c6e44b03e59b6074","reportUrl":"https://novasamatech.github.io/test-runner/3386//#testresult/c6e44b03e59b6074","status":"passed","time":{"start":1689336319289,"stop":1689336319811,"duration":522}},{"uid":"5edaeafef20def93","reportUrl":"https://novasamatech.github.io/test-runner/3385//#testresult/5edaeafef20def93","status":"passed","time":{"start":1689321871145,"stop":1689321871946,"duration":801}}]},"tags":[]},"source":"7132b59f50c3bb9c.json","parameterValues":["{'url': 'wss://rpc-hetzner.xx.network', 'name': 'XX network'}"]}