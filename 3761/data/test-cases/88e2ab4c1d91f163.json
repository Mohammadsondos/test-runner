{"uid":"88e2ab4c1d91f163","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1694606599965,"stop":1694606600734,"duration":769},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f301c271c90>\nchain = <scripts.utils.chain_model.Chain object at 0x7f301c2433d0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f301c271c90>\nchain = <scripts.utils.chain_model.Chain object at 0x7f301c2433d0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"3c265d2d633fcf0f","name":"stdout","source":"3c265d2d633fcf0f.txt","type":"text/plain","size":1036}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az502-117"},{"name":"thread","value":"2054-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f301c2433d0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"abe711c2d8774ce9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694606584245,"stop":1694606584931,"duration":686}},{"uid":"331bfd982086d255","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694606568621,"stop":1694606569218,"duration":597}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":111,"unknown":0,"total":121},"items":[{"uid":"a5b03c2088317f50","reportUrl":"https://novasamatech.github.io/test-runner/3760//#testresult/a5b03c2088317f50","status":"passed","time":{"start":1694597394526,"stop":1694597398135,"duration":3609}},{"uid":"c83b7e60c4301adf","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/c83b7e60c4301adf","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694592223890,"stop":1694592224775,"duration":885}},{"uid":"f66ed91ba8480579","reportUrl":"https://novasamatech.github.io/test-runner/3758//#testresult/f66ed91ba8480579","status":"passed","time":{"start":1694577763033,"stop":1694577768627,"duration":5594}},{"uid":"2d45bf2d6a82e7da","reportUrl":"https://novasamatech.github.io/test-runner/3757//#testresult/2d45bf2d6a82e7da","status":"passed","time":{"start":1694563421464,"stop":1694563425844,"duration":4380}},{"uid":"b30b5fca628ba357","reportUrl":"https://novasamatech.github.io/test-runner/3756//#testresult/b30b5fca628ba357","status":"passed","time":{"start":1694548980013,"stop":1694548983242,"duration":3229}},{"uid":"2edb132480fbb1fb","reportUrl":"https://novasamatech.github.io/test-runner/3755//#testresult/2edb132480fbb1fb","status":"passed","time":{"start":1694534555858,"stop":1694534561123,"duration":5265}},{"uid":"13e673b2f68fea38","reportUrl":"https://novasamatech.github.io/test-runner/3754//#testresult/13e673b2f68fea38","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694520214301,"stop":1694520215201,"duration":900}},{"uid":"fa9a5ffcb2b809b1","reportUrl":"https://novasamatech.github.io/test-runner/3753//#testresult/fa9a5ffcb2b809b1","status":"passed","time":{"start":1694505837911,"stop":1694505842423,"duration":4512}},{"uid":"999b285be7d739b0","reportUrl":"https://novasamatech.github.io/test-runner/3752//#testresult/999b285be7d739b0","status":"passed","time":{"start":1694491376462,"stop":1694491380170,"duration":3708}},{"uid":"73ed322b0d0c0b7e","reportUrl":"https://novasamatech.github.io/test-runner/3751//#testresult/73ed322b0d0c0b7e","status":"passed","time":{"start":1694476993851,"stop":1694476997347,"duration":3496}},{"uid":"23311929c49fd3ca","reportUrl":"https://novasamatech.github.io/test-runner/3750//#testresult/23311929c49fd3ca","status":"passed","time":{"start":1694462556673,"stop":1694462560007,"duration":3334}},{"uid":"ba758f7b5370701","reportUrl":"https://novasamatech.github.io/test-runner/3749//#testresult/ba758f7b5370701","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694448188004,"stop":1694448188980,"duration":976}},{"uid":"e441d6560067c83e","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/e441d6560067c83e","status":"passed","time":{"start":1694433789815,"stop":1694433793775,"duration":3960}},{"uid":"1296a11dcec95b0f","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/1296a11dcec95b0f","status":"passed","time":{"start":1694419438478,"stop":1694419442249,"duration":3771}},{"uid":"22c735ca76bcadfb","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/22c735ca76bcadfb","status":"passed","time":{"start":1694404976720,"stop":1694404980299,"duration":3579}},{"uid":"eadcf63af5d672c0","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/eadcf63af5d672c0","status":"passed","time":{"start":1694390627780,"stop":1694390633068,"duration":5288}},{"uid":"cfa82cefc603dca7","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/cfa82cefc603dca7","status":"passed","time":{"start":1694376206449,"stop":1694376210893,"duration":4444}},{"uid":"d23eb8fbc905d4c6","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/d23eb8fbc905d4c6","status":"passed","time":{"start":1694361771704,"stop":1694361775653,"duration":3949}},{"uid":"b609245a13120325","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/b609245a13120325","status":"passed","time":{"start":1694347386788,"stop":1694347395911,"duration":9123}},{"uid":"995e34ad94b78be4","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/995e34ad94b78be4","status":"passed","time":{"start":1694333003479,"stop":1694333008823,"duration":5344}}]},"tags":[]},"source":"88e2ab4c1d91f163.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f301c2433d0>"]}