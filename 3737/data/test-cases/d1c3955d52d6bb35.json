{"uid":"d1c3955d52d6bb35","name":"testBalancesLoading[Getting balance for DAO IPCI network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for DAO IPCI network]","historyId":"16b6e31987a6cae9bc3d606222bfb675","time":{"start":1694276185232,"stop":1694276265248,"duration":80016},"status":"broken","statusMessage":"Socket state: WaitingForReconnect(url=wss://kusama.rpc.ipci.io, attempt=10, pendingSendables=[Sendable(75042741)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: WaitingForReconnect(url=wss://kusama.rpc.ipci.io, attempt=10, pendingSendables=[Sendable(75042741)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for DAO IPCI network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":96,"unknown":0,"total":97},"items":[{"uid":"9b19f5b7a593e038","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/9b19f5b7a593e038","status":"passed","time":{"start":1694261767601,"stop":1694261767711,"duration":110}},{"uid":"19ec90ea7f1bf892","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/19ec90ea7f1bf892","status":"passed","time":{"start":1694247282100,"stop":1694247282228,"duration":128}},{"uid":"b74fc8fd7965794d","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/b74fc8fd7965794d","status":"passed","time":{"start":1694232934443,"stop":1694232934553,"duration":110}},{"uid":"33d9c4b42d108c89","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/33d9c4b42d108c89","status":"passed","time":{"start":1694204121237,"stop":1694204121394,"duration":157}},{"uid":"e2394f3be7732e90","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/e2394f3be7732e90","status":"passed","time":{"start":1694189778133,"stop":1694189778309,"duration":176}},{"uid":"d1209f54680b1c46","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/d1209f54680b1c46","status":"passed","time":{"start":1694175504766,"stop":1694175504886,"duration":120}},{"uid":"7d7bd411530c4990","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/7d7bd411530c4990","status":"passed","time":{"start":1694160943519,"stop":1694160943694,"duration":175}},{"uid":"6992946b0caf6b50","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/6992946b0caf6b50","status":"passed","time":{"start":1694146464305,"stop":1694146464411,"duration":106}},{"uid":"8639c2ea13a63cf9","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/8639c2ea13a63cf9","status":"passed","time":{"start":1694132539568,"stop":1694132539686,"duration":118}},{"uid":"464c989f141f4944","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/464c989f141f4944","status":"passed","time":{"start":1694103357856,"stop":1694103357986,"duration":130}},{"uid":"872ebda5e6c1bd43","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/872ebda5e6c1bd43","status":"passed","time":{"start":1694089143648,"stop":1694089148351,"duration":4703}},{"uid":"12e335adf015811d","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/12e335adf015811d","status":"passed","time":{"start":1694074605493,"stop":1694074605613,"duration":120}},{"uid":"ee8827f8591c34b4","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/ee8827f8591c34b4","status":"passed","time":{"start":1694060312315,"stop":1694060312471,"duration":156}},{"uid":"839becb01d82c71a","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/839becb01d82c71a","status":"passed","time":{"start":1694046019468,"stop":1694046019649,"duration":181}},{"uid":"2f1d9d7891f7ef04","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/2f1d9d7891f7ef04","status":"passed","time":{"start":1694031245723,"stop":1694031255578,"duration":9855}},{"uid":"6014b5902241d53f","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/6014b5902241d53f","status":"passed","time":{"start":1693988212877,"stop":1693988213056,"duration":179}},{"uid":"759686af78a74b14","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/759686af78a74b14","status":"passed","time":{"start":1693973694161,"stop":1693973694282,"duration":121}},{"uid":"682310dc7ffe6c41","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/682310dc7ffe6c41","status":"passed","time":{"start":1693959525091,"stop":1693959525199,"duration":108}},{"uid":"3c906cc2b290a7af","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/3c906cc2b290a7af","status":"passed","time":{"start":1693945067562,"stop":1693945067995,"duration":433}},{"uid":"57e8b3ea8861454","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/57e8b3ea8861454","status":"passed","time":{"start":1693930788794,"stop":1693930789187,"duration":393}}]},"tags":[]},"source":"d1c3955d52d6bb35.json","parameterValues":[]}