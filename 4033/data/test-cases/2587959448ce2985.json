{"uid":"2587959448ce2985","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1698494584753,"stop":1698494585872,"duration":1119},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f470db02260>\nchain = <scripts.utils.chain_model.Chain object at 0x7f470da79ed0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f470db02260>\nchain = <scripts.utils.chain_model.Chain object at 0x7f470da79ed0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"def8fe1e97aab163","name":"stdout","source":"def8fe1e97aab163.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az402-157"},{"name":"thread","value":"2229-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f470da79ed0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"29c63f3433c113c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698494568700,"stop":1698494569722,"duration":1022}},{"uid":"f54b148d9827694b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698494552078,"stop":1698494553663,"duration":1585}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":369,"unknown":0,"total":392},"items":[{"uid":"fe18f55320540221","reportUrl":"https://novasamatech.github.io/test-runner/4032//#testresult/fe18f55320540221","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698480451047,"stop":1698480581423,"duration":130376}},{"uid":"a9c54009c26d11","reportUrl":"https://novasamatech.github.io/test-runner/4031//#testresult/a9c54009c26d11","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698466035370,"stop":1698466165748,"duration":130378}},{"uid":"449e55bf5e9cca9a","reportUrl":"https://novasamatech.github.io/test-runner/4030//#testresult/449e55bf5e9cca9a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698451455709,"stop":1698451456685,"duration":976}},{"uid":"a24ff85dd2f48efd","reportUrl":"https://novasamatech.github.io/test-runner/4029//#testresult/a24ff85dd2f48efd","status":"passed","time":{"start":1698436974506,"stop":1698436979102,"duration":4596}},{"uid":"ff4884078c6a3260","reportUrl":"https://novasamatech.github.io/test-runner/4028//#testresult/ff4884078c6a3260","status":"passed","time":{"start":1698422579996,"stop":1698422585495,"duration":5499}},{"uid":"4369a42c93ddfd9a","reportUrl":"https://novasamatech.github.io/test-runner/4027//#testresult/4369a42c93ddfd9a","status":"passed","time":{"start":1698408159092,"stop":1698408163804,"duration":4712}},{"uid":"3f1337ed7a442565","reportUrl":"https://novasamatech.github.io/test-runner/4026//#testresult/3f1337ed7a442565","status":"passed","time":{"start":1698393746461,"stop":1698393752219,"duration":5758}},{"uid":"a109587f831473d","reportUrl":"https://novasamatech.github.io/test-runner/4025//#testresult/a109587f831473d","status":"passed","time":{"start":1698379377709,"stop":1698379386930,"duration":9221}},{"uid":"7b5dc8cb098428c","reportUrl":"https://novasamatech.github.io/test-runner/4024//#testresult/7b5dc8cb098428c","status":"passed","time":{"start":1698365015932,"stop":1698365021245,"duration":5313}},{"uid":"b074bbe77a12aaac","reportUrl":"https://novasamatech.github.io/test-runner/4023//#testresult/b074bbe77a12aaac","status":"passed","time":{"start":1698350581506,"stop":1698350589902,"duration":8396}},{"uid":"a177a782eec0a7a8","reportUrl":"https://novasamatech.github.io/test-runner/4022//#testresult/a177a782eec0a7a8","status":"passed","time":{"start":1698336174537,"stop":1698336179847,"duration":5310}},{"uid":"8914b9d4bf19fb77","reportUrl":"https://novasamatech.github.io/test-runner/4021//#testresult/8914b9d4bf19fb77","status":"passed","time":{"start":1698321771878,"stop":1698321781335,"duration":9457}},{"uid":"a79b8a8b1271f51c","reportUrl":"https://novasamatech.github.io/test-runner/4020//#testresult/a79b8a8b1271f51c","status":"passed","time":{"start":1698307397609,"stop":1698307403271,"duration":5662}},{"uid":"bac231977de1f867","reportUrl":"https://novasamatech.github.io/test-runner/4019//#testresult/bac231977de1f867","status":"passed","time":{"start":1698292968954,"stop":1698292976201,"duration":7247}},{"uid":"7728f38ceb71031d","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/7728f38ceb71031d","status":"passed","time":{"start":1698278650148,"stop":1698278656613,"duration":6465}},{"uid":"95d608a1115de274","reportUrl":"https://novasamatech.github.io/test-runner/4017//#testresult/95d608a1115de274","status":"passed","time":{"start":1698264194132,"stop":1698264199920,"duration":5788}},{"uid":"122037d3d3d1a09","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/122037d3d3d1a09","status":"passed","time":{"start":1698249803806,"stop":1698249809134,"duration":5328}},{"uid":"a3939b6647dc2d21","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/a3939b6647dc2d21","status":"passed","time":{"start":1698235393239,"stop":1698235398097,"duration":4858}},{"uid":"be6e4eb0370f8aa","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/be6e4eb0370f8aa","status":"passed","time":{"start":1698220982669,"stop":1698220988542,"duration":5873}},{"uid":"209f67b3f6fa2a88","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/209f67b3f6fa2a88","status":"passed","time":{"start":1698206559539,"stop":1698206564278,"duration":4739}}]},"tags":[]},"source":"2587959448ce2985.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f470da79ed0>"]}