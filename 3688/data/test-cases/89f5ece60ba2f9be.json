{"uid":"89f5ece60ba2f9be","name":"test_has_new_assets[Test for Tinkernet]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"d969e3cf97286b18cdcce33aa2d558b4","time":{"start":1693569776987,"stop":1693569777855,"duration":868},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fd1d14123b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd1d14cc640>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fd1d14123b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd1d14cc640>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"fc29600bcf5b1c2d","name":"stdout","source":"fc29600bcf5b1c2d.txt","type":"text/plain","size":825}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1226-829"},{"name":"thread","value":"2115-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fd1d14cc640>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2a7b76f8af4cb626","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693569761177,"stop":1693569761956,"duration":779}},{"uid":"8dc225b73dd279c4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693569745190,"stop":1693569746141,"duration":951}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":46,"unknown":0,"total":50},"items":[{"uid":"a43485aa9e7e92ad","reportUrl":"https://novasamatech.github.io/test-runner/3687//#testresult/a43485aa9e7e92ad","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693555826725,"stop":1693555888066,"duration":61341}},{"uid":"710079740efecb0b","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/710079740efecb0b","status":"passed","time":{"start":1693540931089,"stop":1693540934466,"duration":3377}},{"uid":"fbb722090c7355a","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/fbb722090c7355a","status":"passed","time":{"start":1693526607762,"stop":1693526617242,"duration":9480}},{"uid":"5fb7cf62dafceaf7","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/5fb7cf62dafceaf7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693512169019,"stop":1693512169834,"duration":815}},{"uid":"827174cfa36526c6","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/827174cfa36526c6","status":"passed","time":{"start":1693497764330,"stop":1693497771382,"duration":7052}},{"uid":"73be37a250f0e922","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/73be37a250f0e922","status":"passed","time":{"start":1693483368068,"stop":1693483372920,"duration":4852}},{"uid":"b4da18d8bd6881b5","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/b4da18d8bd6881b5","status":"passed","time":{"start":1693468933974,"stop":1693468937267,"duration":3293}},{"uid":"8f2a92cbad8a5948","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/8f2a92cbad8a5948","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693454592315,"stop":1693454593399,"duration":1084}},{"uid":"418dc35e698ef810","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/418dc35e698ef810","status":"passed","time":{"start":1693440213903,"stop":1693440219475,"duration":5572}},{"uid":"9bd5154ea0042c97","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/9bd5154ea0042c97","status":"passed","time":{"start":1693425739393,"stop":1693425743364,"duration":3971}},{"uid":"64f9147f6d35f48c","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/64f9147f6d35f48c","status":"passed","time":{"start":1693411346576,"stop":1693411361207,"duration":14631}},{"uid":"39bc90f7644576f7","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/39bc90f7644576f7","status":"passed","time":{"start":1693396966884,"stop":1693396972704,"duration":5820}},{"uid":"83cf8b29ab2f07ba","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/83cf8b29ab2f07ba","status":"passed","time":{"start":1693382562718,"stop":1693382569343,"duration":6625}},{"uid":"a815bbabe7a3eecb","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/a815bbabe7a3eecb","status":"passed","time":{"start":1693368154351,"stop":1693368158628,"duration":4277}},{"uid":"889fd54364e9b5b5","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/889fd54364e9b5b5","status":"passed","time":{"start":1693353799877,"stop":1693353804283,"duration":4406}},{"uid":"56b7443cf36bacfe","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/56b7443cf36bacfe","status":"passed","time":{"start":1693339363734,"stop":1693339367943,"duration":4209}},{"uid":"682ff3ad0fc426ca","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/682ff3ad0fc426ca","status":"passed","time":{"start":1693324983128,"stop":1693324988291,"duration":5163}},{"uid":"e1311c2c4f6ddfec","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/e1311c2c4f6ddfec","status":"passed","time":{"start":1693310564912,"stop":1693310572743,"duration":7831}},{"uid":"7151024c54efe847","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/7151024c54efe847","status":"passed","time":{"start":1693296161438,"stop":1693296165978,"duration":4540}},{"uid":"ff85b46fa14dcdb","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/ff85b46fa14dcdb","status":"passed","time":{"start":1693281737475,"stop":1693281742827,"duration":5352}}]},"tags":[]},"source":"89f5ece60ba2f9be.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fd1d14cc640>"]}