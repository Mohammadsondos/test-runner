{"uid":"8b460ead6054875","name":"test_has_new_assets[Test for Parallel Heiko]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"ba9e0ac8b151af68e315a5713f83d589","time":{"start":1693569736416,"stop":1693569737092,"duration":676},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f59578991e0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f595789bb20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f59578991e0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f595789bb20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"d0de6f48b5148fe8","name":"stdout","source":"d0de6f48b5148fe8.txt","type":"text/plain","size":2046}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1226-829"},{"name":"thread","value":"2118-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f595789bb20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2783224b6f14a16","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693569720501,"stop":1693569721378,"duration":877}},{"uid":"1678abd6eb7cfbe8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693569704599,"stop":1693569705465,"duration":866}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":48,"unknown":0,"total":50},"items":[{"uid":"c1375d2973579488","reportUrl":"https://novasamatech.github.io/test-runner/3687//#testresult/c1375d2973579488","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693555357560,"stop":1693555358314,"duration":754}},{"uid":"78fbb4b52a37c35f","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/78fbb4b52a37c35f","status":"passed","time":{"start":1693540890445,"stop":1693540894725,"duration":4280}},{"uid":"e91cbcf77be778f0","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/e91cbcf77be778f0","status":"passed","time":{"start":1693526551655,"stop":1693526558008,"duration":6353}},{"uid":"7935a59613fa6aac","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/7935a59613fa6aac","status":"passed","time":{"start":1693512094655,"stop":1693512099218,"duration":4563}},{"uid":"b6e4f950096156de","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/b6e4f950096156de","status":"passed","time":{"start":1693497731291,"stop":1693497738674,"duration":7383}},{"uid":"70840ea06582a742","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/70840ea06582a742","status":"passed","time":{"start":1693483307790,"stop":1693483314161,"duration":6371}},{"uid":"8ae9f4d5c92040bb","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/8ae9f4d5c92040bb","status":"passed","time":{"start":1693468904484,"stop":1693468908206,"duration":3722}},{"uid":"3c074a3e8ffddbf6","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/3c074a3e8ffddbf6","status":"passed","time":{"start":1693454508119,"stop":1693454513470,"duration":5351}},{"uid":"a48bce433b0cfaf5","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/a48bce433b0cfaf5","status":"passed","time":{"start":1693440161175,"stop":1693440175327,"duration":14152}},{"uid":"b5da51497b33a0e3","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/b5da51497b33a0e3","status":"passed","time":{"start":1693425702934,"stop":1693425706919,"duration":3985}},{"uid":"4d27e61880374e79","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/4d27e61880374e79","status":"passed","time":{"start":1693411313729,"stop":1693411319741,"duration":6012}},{"uid":"584461d757cee393","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/584461d757cee393","status":"passed","time":{"start":1693396912530,"stop":1693396918574,"duration":6044}},{"uid":"96aa7dbddccb9819","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/96aa7dbddccb9819","status":"passed","time":{"start":1693382519205,"stop":1693382525257,"duration":6052}},{"uid":"fce26f19347ee413","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/fce26f19347ee413","status":"passed","time":{"start":1693368103656,"stop":1693368109419,"duration":5763}},{"uid":"efee7925e1151fb4","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/efee7925e1151fb4","status":"passed","time":{"start":1693353743873,"stop":1693353749418,"duration":5545}},{"uid":"8ac048081d96d07b","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/8ac048081d96d07b","status":"passed","time":{"start":1693339306421,"stop":1693339312416,"duration":5995}},{"uid":"edff2fa5218b0fd2","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/edff2fa5218b0fd2","status":"passed","time":{"start":1693324912316,"stop":1693324920507,"duration":8191}},{"uid":"2534ccb5e39e28a0","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/2534ccb5e39e28a0","status":"passed","time":{"start":1693310508134,"stop":1693310516829,"duration":8695}},{"uid":"1f027dc85c86a49a","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/1f027dc85c86a49a","status":"passed","time":{"start":1693296107716,"stop":1693296113511,"duration":5795}},{"uid":"c5b5597047c5a845","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/c5b5597047c5a845","status":"passed","time":{"start":1693281692194,"stop":1693281702284,"duration":10090}}]},"tags":[]},"source":"8b460ead6054875.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f595789bb20>"]}