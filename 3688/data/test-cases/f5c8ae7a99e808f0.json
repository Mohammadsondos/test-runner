{"uid":"f5c8ae7a99e808f0","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1693569790281,"stop":1693569791754,"duration":1473},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fc2c57ca410>\nchain = <scripts.utils.chain_model.Chain object at 0x7fc2c5a3f040>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fc2c57ca410>\nchain = <scripts.utils.chain_model.Chain object at 0x7fc2c5a3f040>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"5bb50a0c75763352","name":"stdout","source":"5bb50a0c75763352.txt","type":"text/plain","size":1036}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1226-829"},{"name":"thread","value":"2121-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fc2c5a3f040>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"46ebef0ffea5a372","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693569774181,"stop":1693569775249,"duration":1068}},{"uid":"b2694eb2fd369fc3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693569758114,"stop":1693569759152,"duration":1038}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":49,"unknown":0,"total":50},"items":[{"uid":"be14ebd5baafbd1d","reportUrl":"https://novasamatech.github.io/test-runner/3687//#testresult/be14ebd5baafbd1d","status":"passed","time":{"start":1693555379583,"stop":1693555387055,"duration":7472}},{"uid":"4cb05aee6c9e30c2","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/4cb05aee6c9e30c2","status":"passed","time":{"start":1693540944716,"stop":1693540947990,"duration":3274}},{"uid":"d2165ec71f3f80af","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/d2165ec71f3f80af","status":"passed","time":{"start":1693526618207,"stop":1693526623375,"duration":5168}},{"uid":"c4158a58105cb8f6","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/c4158a58105cb8f6","status":"passed","time":{"start":1693512153365,"stop":1693512158725,"duration":5360}},{"uid":"5e978f0fb05cdbe4","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/5e978f0fb05cdbe4","status":"passed","time":{"start":1693497777642,"stop":1693497783933,"duration":6291}},{"uid":"5f1e6fbb81b94246","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/5f1e6fbb81b94246","status":"passed","time":{"start":1693483395474,"stop":1693483403329,"duration":7855}},{"uid":"1f9727a927ac1b61","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/1f9727a927ac1b61","status":"passed","time":{"start":1693468943788,"stop":1693468949954,"duration":6166}},{"uid":"713c42b7b116b4a2","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/713c42b7b116b4a2","status":"passed","time":{"start":1693454568742,"stop":1693454572476,"duration":3734}},{"uid":"17a435422aeff79e","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/17a435422aeff79e","status":"passed","time":{"start":1693440232294,"stop":1693440238164,"duration":5870}},{"uid":"71107b58d6ec79ca","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/71107b58d6ec79ca","status":"passed","time":{"start":1693425752568,"stop":1693425757010,"duration":4442}},{"uid":"71414c4019119870","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/71414c4019119870","status":"passed","time":{"start":1693411382711,"stop":1693411387770,"duration":5059}},{"uid":"5cd505a5125907ff","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/5cd505a5125907ff","status":"passed","time":{"start":1693396981831,"stop":1693396987323,"duration":5492}},{"uid":"b2c7f5c26e9fdc28","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/b2c7f5c26e9fdc28","status":"passed","time":{"start":1693382590591,"stop":1693382596257,"duration":5666}},{"uid":"458a97d5764caf69","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/458a97d5764caf69","status":"passed","time":{"start":1693368170687,"stop":1693368175657,"duration":4970}},{"uid":"745c1fcef9375356","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/745c1fcef9375356","status":"passed","time":{"start":1693353808617,"stop":1693353813822,"duration":5205}},{"uid":"2f4303ec832002e3","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/2f4303ec832002e3","status":"passed","time":{"start":1693339380810,"stop":1693339386233,"duration":5423}},{"uid":"85203f5097853980","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/85203f5097853980","status":"passed","time":{"start":1693324999157,"stop":1693325006948,"duration":7791}},{"uid":"aa6ab1344febe363","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/aa6ab1344febe363","status":"passed","time":{"start":1693310581510,"stop":1693310587891,"duration":6381}},{"uid":"8ebfd2d727814279","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/8ebfd2d727814279","status":"passed","time":{"start":1693296171892,"stop":1693296181453,"duration":9561}},{"uid":"2b954f766cc90524","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/2b954f766cc90524","status":"passed","time":{"start":1693281753718,"stop":1693281757593,"duration":3875}}]},"tags":[]},"source":"f5c8ae7a99e808f0.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fc2c5a3f040>"]}