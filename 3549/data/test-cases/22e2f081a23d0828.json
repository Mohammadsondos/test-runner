{"uid":"22e2f081a23d0828","name":"test_has_new_assets[Test for krest]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"3d67617994964329092e8a296bddf514","time":{"start":1691683546219,"stop":1691683550506,"duration":4287},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff681b4fd30>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff681b7a440>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff681b4fd30>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff681b7a440>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"87450a490d0874c","name":"stdout","source":"87450a490d0874c.txt","type":"text/plain","size":1029}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az493-190"},{"name":"thread","value":"1915-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff681b7a440>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c04c19601d4cbaf3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691683530366,"stop":1691683531193,"duration":827}},{"uid":"a8416bf484ae9f34","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691683514233,"stop":1691683515337,"duration":1104}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":8,"unknown":0,"total":13},"items":[{"uid":"ed7bf95eee84a0b1","reportUrl":"https://novasamatech.github.io/test-runner/3548//#testresult/ed7bf95eee84a0b1","status":"passed","time":{"start":1691669155038,"stop":1691669162215,"duration":7177}},{"uid":"a209fb6596ebf46d","reportUrl":"https://novasamatech.github.io/test-runner/3547//#testresult/a209fb6596ebf46d","status":"passed","time":{"start":1691654752438,"stop":1691654757900,"duration":5462}},{"uid":"af2cdf1c0ed0a55f","reportUrl":"https://novasamatech.github.io/test-runner/3546//#testresult/af2cdf1c0ed0a55f","status":"passed","time":{"start":1691640313990,"stop":1691640319870,"duration":5880}},{"uid":"5a95f0b95421b0c2","reportUrl":"https://novasamatech.github.io/test-runner/3545//#testresult/5a95f0b95421b0c2","status":"passed","time":{"start":1691626542370,"stop":1691626547452,"duration":5082}},{"uid":"a7fc22e61103ed3e","reportUrl":"https://novasamatech.github.io/test-runner/3544//#testresult/a7fc22e61103ed3e","status":"passed","time":{"start":1691611510959,"stop":1691611515500,"duration":4541}},{"uid":"993a91219604c955","reportUrl":"https://novasamatech.github.io/test-runner/3543//#testresult/993a91219604c955","status":"passed","time":{"start":1691597138556,"stop":1691597141496,"duration":2940}},{"uid":"a2465b609ee7d5a6","reportUrl":"https://novasamatech.github.io/test-runner/3542//#testresult/a2465b609ee7d5a6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691582776982,"stop":1691582777897,"duration":915}},{"uid":"8a56aa4d1810cf12","reportUrl":"https://novasamatech.github.io/test-runner/3541//#testresult/8a56aa4d1810cf12","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691568390721,"stop":1691568391434,"duration":713}},{"uid":"7dce11b5e37baed8","reportUrl":"https://novasamatech.github.io/test-runner/3540//#testresult/7dce11b5e37baed8","status":"passed","time":{"start":1691553902560,"stop":1691553909043,"duration":6483}},{"uid":"2b5018af216af0fc","reportUrl":"https://novasamatech.github.io/test-runner/3539//#testresult/2b5018af216af0fc","status":"passed","time":{"start":1691540116611,"stop":1691540121128,"duration":4517}},{"uid":"3a83515f03a53c14","reportUrl":"https://novasamatech.github.io/test-runner/3538//#testresult/3a83515f03a53c14","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691525166523,"stop":1691525167378,"duration":855}},{"uid":"76964955a00ddab6","reportUrl":"https://novasamatech.github.io/test-runner/3537//#testresult/76964955a00ddab6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691510744817,"stop":1691510745653,"duration":836}}]},"tags":[]},"source":"22e2f081a23d0828.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff681b7a440>"]}