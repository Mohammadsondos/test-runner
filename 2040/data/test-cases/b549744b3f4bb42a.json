{"uid":"b549744b3f4bb42a","name":"test_can_create_connection[Test for Statemine, url: wss://statemine-rpc.polkadot.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"dfad1ea1444d49766784249e2a4ae0b4","time":{"start":1670400268147,"stop":1670400268522,"duration":375},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Statemine', 'url': 'wss://statemine-rpc.polkadot.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Statemine', 'url': 'wss://statemine-rpc.polkadot.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3603a23aebfad260","name":"stdout","source":"3603a23aebfad260.txt","type":"text/plain","size":230}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az362-206"},{"name":"thread","value":"1683-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemine-rpc.polkadot.io', 'name': 'Statemine'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fc9922beba3c266c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670400257653,"stop":1670400258015,"duration":362}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":71,"skipped":0,"passed":239,"unknown":0,"total":310},"items":[{"uid":"892661ad6d65a261","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/892661ad6d65a261","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670385857379,"stop":1670385857927,"duration":548}},{"uid":"12387e001f6f1f58","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/12387e001f6f1f58","status":"passed","time":{"start":1670372039138,"stop":1670372039872,"duration":734}},{"uid":"e700a796618d5d65","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/e700a796618d5d65","status":"passed","time":{"start":1670357045823,"stop":1670357046529,"duration":706}},{"uid":"475d5ef8ca7a0638","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/475d5ef8ca7a0638","status":"passed","time":{"start":1670342640209,"stop":1670342640960,"duration":751}},{"uid":"c18760895d8d3463","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/c18760895d8d3463","status":"passed","time":{"start":1670333399341,"stop":1670333400250,"duration":909}},{"uid":"e373ee283297bb06","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/e373ee283297bb06","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670241974783,"stop":1670241975310,"duration":527}},{"uid":"bc3d93d0b430145d","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/bc3d93d0b430145d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670227539853,"stop":1670227540689,"duration":836}},{"uid":"b70aca687782633d","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/b70aca687782633d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670213116085,"stop":1670213116444,"duration":359}},{"uid":"634824c4fb3f5229","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/634824c4fb3f5229","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670199315770,"stop":1670199316372,"duration":602}},{"uid":"5ae8c63e659435ee","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/5ae8c63e659435ee","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670184322877,"stop":1670184323252,"duration":375}},{"uid":"e28cfbab9736dbca","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/e28cfbab9736dbca","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670169904642,"stop":1670169905011,"duration":369}},{"uid":"ae0b08fa541418d2","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/ae0b08fa541418d2","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670156785134,"stop":1670156785896,"duration":762}},{"uid":"c40af8b624e57c25","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/c40af8b624e57c25","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670141871347,"stop":1670141871864,"duration":517}},{"uid":"5d44f3f11a182368","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/5d44f3f11a182368","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670127451891,"stop":1670127452601,"duration":710}},{"uid":"4b7622ec4e90fa9a","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/4b7622ec4e90fa9a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670116211007,"stop":1670116211615,"duration":608}},{"uid":"6383c88261d859d4","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/6383c88261d859d4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670098478530,"stop":1670098478878,"duration":348}},{"uid":"42ff0e4c896199cb","reportUrl":"https://nova-wallet.github.io/test-runner/2016//#testresult/42ff0e4c896199cb","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670084319623,"stop":1670084320155,"duration":532}},{"uid":"8239bba4ffb0e54f","reportUrl":"https://nova-wallet.github.io/test-runner/2015//#testresult/8239bba4ffb0e54f","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670070296681,"stop":1670070297023,"duration":342}},{"uid":"582a9cebf21a1676","reportUrl":"https://nova-wallet.github.io/test-runner/2014//#testresult/582a9cebf21a1676","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670055470115,"stop":1670055470482,"duration":367}},{"uid":"4d95317157971fae","reportUrl":"https://nova-wallet.github.io/test-runner/2013//#testresult/4d95317157971fae","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670041037799,"stop":1670041038157,"duration":358}}]},"tags":[]},"source":"b549744b3f4bb42a.json","parameterValues":["{'url': 'wss://statemine-rpc.polkadot.io', 'name': 'Statemine'}"]}