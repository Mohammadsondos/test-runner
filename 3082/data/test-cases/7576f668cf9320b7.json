{"uid":"7576f668cf9320b7","name":"test_can_create_connection[Test for 3DPass, url: wss://rpc2.3dpass.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f5a6d4af0313219dce7fc1642cad31bd","time":{"start":1685117113888,"stop":1685117114502,"duration":614},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Fri, 26 May 2023 16:05:14 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': '3DPass', 'url': 'wss://rpc2.3dpass.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Fri, 26 May 2023 16:05:14 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Fri, 26 May 2023 16:05:14 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': '3DPass', 'url': 'wss://rpc2.3dpass.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Fri, 26 May 2023 16:05:14 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"f320e9e3e446b86c","name":"stdout","source":"f320e9e3e446b86c.txt","type":"text/plain","size":952}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az565-633"},{"name":"thread","value":"1882-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc2.3dpass.org', 'name': '3DPass'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"57e205530b856ca4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Fri, 26 May 2023 16:05:03 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1685117103078,"stop":1685117103735,"duration":657}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":115,"unknown":0,"total":116},"items":[{"uid":"9b54db0771ee5c3a","reportUrl":"https://nova-wallet.github.io/test-runner/3081//#testresult/9b54db0771ee5c3a","status":"passed","time":{"start":1685102734396,"stop":1685102735072,"duration":676}},{"uid":"7ca212616a019d57","reportUrl":"https://nova-wallet.github.io/test-runner/3077//#testresult/7ca212616a019d57","status":"passed","time":{"start":1685045092512,"stop":1685045093049,"duration":537}},{"uid":"be15980ccdabd7f","reportUrl":"https://nova-wallet.github.io/test-runner/3076//#testresult/be15980ccdabd7f","status":"passed","time":{"start":1685030703096,"stop":1685030703727,"duration":631}},{"uid":"ab04d67b2b375933","reportUrl":"https://nova-wallet.github.io/test-runner/3074//#testresult/ab04d67b2b375933","status":"passed","time":{"start":1685005809295,"stop":1685005809941,"duration":646}},{"uid":"9fcb07fbd54f2c67","reportUrl":"https://nova-wallet.github.io/test-runner/3054//#testresult/9fcb07fbd54f2c67","status":"passed","time":{"start":1684742724426,"stop":1684742725079,"duration":653}},{"uid":"c82d446469761a51","reportUrl":"https://nova-wallet.github.io/test-runner/3052//#testresult/c82d446469761a51","status":"passed","time":{"start":1684714462204,"stop":1684714462855,"duration":651}},{"uid":"6fe46ccef9ba31a1","reportUrl":"https://nova-wallet.github.io/test-runner/3050//#testresult/6fe46ccef9ba31a1","status":"passed","time":{"start":1684685079746,"stop":1684685080327,"duration":581}},{"uid":"5573fe4fb31a899a","reportUrl":"https://nova-wallet.github.io/test-runner/3049//#testresult/5573fe4fb31a899a","status":"passed","time":{"start":1684670693101,"stop":1684670693660,"duration":559}},{"uid":"88871ab8b63bc326","reportUrl":"https://nova-wallet.github.io/test-runner/3048//#testresult/88871ab8b63bc326","status":"passed","time":{"start":1684656315192,"stop":1684656315957,"duration":765}},{"uid":"30b71f362ded8d66","reportUrl":"https://nova-wallet.github.io/test-runner/3047//#testresult/30b71f362ded8d66","status":"passed","time":{"start":1684641872026,"stop":1684641872593,"duration":567}},{"uid":"ece5926c5e32c071","reportUrl":"https://nova-wallet.github.io/test-runner/3046//#testresult/ece5926c5e32c071","status":"passed","time":{"start":1684628097320,"stop":1684628098115,"duration":795}},{"uid":"e2bd9c9852fbf1ad","reportUrl":"https://nova-wallet.github.io/test-runner/3045//#testresult/e2bd9c9852fbf1ad","status":"passed","time":{"start":1684613083203,"stop":1684613083879,"duration":676}},{"uid":"b51104e2367f6bc1","reportUrl":"https://nova-wallet.github.io/test-runner/3044//#testresult/b51104e2367f6bc1","status":"passed","time":{"start":1684598682241,"stop":1684598682814,"duration":573}},{"uid":"4e2db86debf8d42","reportUrl":"https://nova-wallet.github.io/test-runner/3043//#testresult/4e2db86debf8d42","status":"passed","time":{"start":1684584313152,"stop":1684584313820,"duration":668}},{"uid":"35ca22fee1d6de57","reportUrl":"https://nova-wallet.github.io/test-runner/3042//#testresult/35ca22fee1d6de57","status":"passed","time":{"start":1684569865188,"stop":1684569865569,"duration":381}},{"uid":"d265af306d61fd16","reportUrl":"https://nova-wallet.github.io/test-runner/3041//#testresult/d265af306d61fd16","status":"passed","time":{"start":1684555470469,"stop":1684555471035,"duration":566}},{"uid":"fb86633fadc467b1","reportUrl":"https://nova-wallet.github.io/test-runner/3040//#testresult/fb86633fadc467b1","status":"passed","time":{"start":1684541572991,"stop":1684541573503,"duration":512}},{"uid":"e356ce3068cd0b08","reportUrl":"https://nova-wallet.github.io/test-runner/3039//#testresult/e356ce3068cd0b08","status":"passed","time":{"start":1684526660463,"stop":1684526660965,"duration":502}},{"uid":"8323feffd008b88d","reportUrl":"https://nova-wallet.github.io/test-runner/3038//#testresult/8323feffd008b88d","status":"passed","time":{"start":1684512313642,"stop":1684512314196,"duration":554}},{"uid":"81a29cda1c4ba6f5","reportUrl":"https://nova-wallet.github.io/test-runner/3037//#testresult/81a29cda1c4ba6f5","status":"passed","time":{"start":1684497919842,"stop":1684497920350,"duration":508}}]},"tags":[]},"source":"7576f668cf9320b7.json","parameterValues":["{'url': 'wss://rpc2.3dpass.org', 'name': '3DPass'}"]}