{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Bifrost Kusama]","uid":"61992cdb6903e921","parentUid":"4f259164810e5718c9bb3a676e1dff0a","status":"failed","time":{"start":1682251462210,"stop":1682251463371,"duration":1161},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f46e7377d00>"]}],"uid":"4f259164810e5718c9bb3a676e1dff0a"},{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 3\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: INTR\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n2: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: IBTC\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n3: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Kintsugi]","uid":"d24cebec694db52d","parentUid":"a48452b38450747c54e44e725ec69e07","status":"failed","time":{"start":1682251521376,"stop":1682251522474,"duration":1098},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f51b0915540>"]}],"uid":"a48452b38450747c54e44e725ec69e07"},{"name":"AssertionError: native asset has changed\nassert ('KPX' in dict_keys(['KAPEX', 'AUSD', 'XX']) or 'KPX' in dict_values(['', 'KUSD', 'xx']))\n +  where 'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7f46b094dc00>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7f46b094dc00> = <scripts.utils.chain_model.Chain object at 0x7f46e743c6a0>.properties\n +  and   dict_keys(['KAPEX', 'AUSD', 'XX']) = <built-in method keys of dict object at 0x7f46af35a780>()\n +    where <built-in method keys of dict object at 0x7f46af35a780> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.keys\n +  and   'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7f46b094dc00>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7f46b094dc00> = <scripts.utils.chain_model.Chain object at 0x7f46e743c6a0>.properties\n +  and   dict_values(['', 'KUSD', 'xx']) = <built-in method values of dict object at 0x7f46af35a780>()\n +    where <built-in method values of dict object at 0x7f46af35a780> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.values","children":[{"name":"test_has_new_assets[Test for Kapex]","uid":"2c9b1dfe051a233a","parentUid":"67d3312c4fc00b817832518359049b1d","status":"failed","time":{"start":1682251722440,"stop":1682251723740,"duration":1300},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f46e743c6a0>"]}],"uid":"67d3312c4fc00b817832518359049b1d"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"TimeoutError: [Errno 110] Connection timed out","children":[{"name":"test_can_create_connection[Test for Altair, url: wss://fullnode.altair.centrifuge.io]","uid":"2c73a74b96d94472","parentUid":"652bdb8b8bbfa3e1ba6b3a98bcc126fe","status":"broken","time":{"start":1682251601670,"stop":1682251732856,"duration":131186},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://fullnode.altair.centrifuge.io', 'name': 'Altair'}"]},{"name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://fullnode.parachain.centrifuge.io]","uid":"9ee0e4ee54a860f5","parentUid":"652bdb8b8bbfa3e1ba6b3a98bcc126fe","status":"broken","time":{"start":1682251616004,"stop":1682251747192,"duration":131188},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://fullnode.parachain.centrifuge.io', 'name': 'Centrifuge Parachain'}"]}],"uid":"652bdb8b8bbfa3e1ba6b3a98bcc126fe"},{"name":"AttributeError: 'NoneType' object has no attribute 'get_constant'","children":[{"name":"test_address_prefix[Test for Centrifuge Parachain]","uid":"cc8b566f21109376","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682251616754,"stop":1682251747990,"duration":131236},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f667054bd30>"]},{"name":"test_has_new_assets[Test for Centrifuge Parachain]","uid":"6f3edc38b6fb3d9c","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682251695039,"stop":1682251826327,"duration":131288},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f51b0915e10>"]},{"name":"test_has_new_assets[Test for Exosama]","uid":"24b16398e6f5effc","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682251777873,"stop":1682251779327,"duration":1454},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f46e743c880>"]},{"name":"test_address_prefix[Test for Imbue]","uid":"a653c4a5c92dc6ed","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682251860871,"stop":1682251861966,"duration":1095},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f6670238130>"]},{"name":"test_address_prefix[Test for Exosama]","uid":"9ae2f1c52c56ba86","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682251866305,"stop":1682251868874,"duration":2569},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f60547fa470>"]},{"name":"test_chainId[Test for Centrifuge Parachain]","uid":"5f3ec9c6b450a273","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682252052929,"stop":1682252184214,"duration":131285},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f667054bd30>"]},{"name":"test_chainId[Test for Exosama]","uid":"3b87300329500889","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682252147354,"stop":1682252149952,"duration":2598},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f60547fa470>"]},{"name":"test_precision[Test for Centrifuge Parachain]","uid":"afe05906f433a27","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682252403132,"stop":1682252534423,"duration":131291},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f667054bd30>"]},{"name":"test_precision[Test for Exosama]","uid":"78f2dca9b175c208","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682252455849,"stop":1682252457479,"duration":1630},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f60547fa470>"]}],"uid":"5aa24b8a3c4111290b34f017f14d2ab4"},{"name":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32601, 'message': 'Method system_chain is not supported'}","children":[{"name":"test_can_create_connection[Test for Exosama, url: wss://rpc.exosama.com]","uid":"ec255c193bede05","parentUid":"216ddde9b6485d42e113b52340f71442","status":"broken","time":{"start":1682251769697,"stop":1682251770121,"duration":424},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://rpc.exosama.com', 'name': 'Exosama'}"]}],"uid":"216ddde9b6485d42e113b52340f71442"},{"name":"Socket state: Connecting(url=wss://fullnode.parachain.centrifuge.io, attempt=1, pendingSendables=[Sendable(1952615600)])","children":[{"name":"testBalancesLoading[Getting balance for Centrifuge Parachain network]","uid":"bbdedd495783b45","parentUid":"ab685526c820dc49d5b68e3db41bf698","status":"broken","time":{"start":1682252222578,"stop":1682252302635,"duration":80057},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"ab685526c820dc49d5b68e3db41bf698"},{"name":"Socket state: Connecting(url=wss://fullnode.altair.centrifuge.io, attempt=2, pendingSendables=[Sendable(1952615600)])","children":[{"name":"testBalancesLoading[Getting balance for Altair network]","uid":"2aaf67bcc5f9292f","parentUid":"826574abdb4e06e1c9af4b153360b07a","status":"broken","time":{"start":1682252305138,"stop":1682252385164,"duration":80026},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"826574abdb4e06e1c9af4b153360b07a"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}