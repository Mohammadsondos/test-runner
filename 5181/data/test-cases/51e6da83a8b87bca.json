{"uid":"51e6da83a8b87bca","name":"test_can_create_connection[Test for krest, url: wss://krest.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"22747a0530bfde24fdbd98151553d82c","time":{"start":1714752237306,"stop":1714752237306,"duration":0},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for krest, url: wss://krest.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:147: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:307: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:277: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1100: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1371: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1714752226790,"stop":1714752226961,"duration":171},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1714752232049,"stop":1714752232218,"duration":169},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1714752237307,"stop":1714752237676,"duration":369},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 147, in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 307, in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 277, in _wrap_sni_socket\n    return context.wrap_socket(\n  File \"/usr/lib/python3.10/ssl.py\", line 513, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/lib/python3.10/ssl.py\", line 1100, in _create\n    self.do_handshake()\n  File \"/usr/lib/python3.10/ssl.py\", line 1371, in do_handshake\n    self._sslobj.do_handshake()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for krest, url: wss://krest.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:147: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:307: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:277: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1100: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1371: SSLCertVerificationError","steps":[],"attachments":[{"uid":"14f7293a687062b2","name":"stdout","source":"14f7293a687062b2.txt","type":"text/plain","size":564}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az659-258"},{"name":"thread","value":"2077-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://krest.api.onfinality.io/public-ws', 'name': 'krest'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c616daa110b31782","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714752232049,"stop":1714752232049,"duration":0}},{"uid":"4778e53da48ded51","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714752226789,"stop":1714752226789,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":26,"skipped":0,"passed":0,"unknown":0,"total":26},"items":[{"uid":"3d5d35740dba7f45","reportUrl":"https://novasamatech.github.io/test-runner/5180//#testresult/3d5d35740dba7f45","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714737864792,"stop":1714737864792,"duration":0}},{"uid":"902027fb0ebe1623","reportUrl":"https://novasamatech.github.io/test-runner/5179//#testresult/902027fb0ebe1623","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714723476095,"stop":1714723476095,"duration":0}},{"uid":"384cea424dc1909f","reportUrl":"https://novasamatech.github.io/test-runner/5178//#testresult/384cea424dc1909f","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714709072554,"stop":1714709072554,"duration":0}},{"uid":"c5baa8a16c192e01","reportUrl":"https://novasamatech.github.io/test-runner/5177//#testresult/c5baa8a16c192e01","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714694711014,"stop":1714694711014,"duration":0}},{"uid":"cd0bf4934fec5ecc","reportUrl":"https://novasamatech.github.io/test-runner/5176//#testresult/cd0bf4934fec5ecc","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714680234166,"stop":1714680234166,"duration":0}},{"uid":"2da39bb68c580ec7","reportUrl":"https://novasamatech.github.io/test-runner/5175//#testresult/2da39bb68c580ec7","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714665841758,"stop":1714665841758,"duration":0}},{"uid":"7a8d126de06b0bdd","reportUrl":"https://novasamatech.github.io/test-runner/5174//#testresult/7a8d126de06b0bdd","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714651454498,"stop":1714651454498,"duration":0}},{"uid":"3fa74868b95a31d3","reportUrl":"https://novasamatech.github.io/test-runner/5172//#testresult/3fa74868b95a31d3","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714622632016,"stop":1714622632016,"duration":0}},{"uid":"8054f7d961cf7ac8","reportUrl":"https://novasamatech.github.io/test-runner/5173//#testresult/8054f7d961cf7ac8","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714637050238,"stop":1714637050238,"duration":0}},{"uid":"a4cbb3c520322d0d","reportUrl":"https://novasamatech.github.io/test-runner/5170//#testresult/a4cbb3c520322d0d","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714593849064,"stop":1714593849064,"duration":0}},{"uid":"a64f6b221d7c597","reportUrl":"https://novasamatech.github.io/test-runner/5171//#testresult/a64f6b221d7c597","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714608277831,"stop":1714608277831,"duration":0}},{"uid":"4b6968805ae7ac6b","reportUrl":"https://novasamatech.github.io/test-runner/5169//#testresult/4b6968805ae7ac6b","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714579473027,"stop":1714579473027,"duration":0}},{"uid":"dd41dd28aa90f775","reportUrl":"https://novasamatech.github.io/test-runner/5168//#testresult/dd41dd28aa90f775","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714565072743,"stop":1714565072743,"duration":0}},{"uid":"9b38529ed55d1992","reportUrl":"https://novasamatech.github.io/test-runner/5166//#testresult/9b38529ed55d1992","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714536241997,"stop":1714536241997,"duration":0}},{"uid":"b6221ec44f37b5c6","reportUrl":"https://novasamatech.github.io/test-runner/5167//#testresult/b6221ec44f37b5c6","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714550628676,"stop":1714550628676,"duration":0}},{"uid":"2434517d82cb9c98","reportUrl":"https://novasamatech.github.io/test-runner/5165//#testresult/2434517d82cb9c98","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714521900534,"stop":1714521900534,"duration":0}},{"uid":"50d6653279e17eb0","reportUrl":"https://novasamatech.github.io/test-runner/5164//#testresult/50d6653279e17eb0","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714507431506,"stop":1714507431506,"duration":0}},{"uid":"fa3a006cb297aebe","reportUrl":"https://novasamatech.github.io/test-runner/5163//#testresult/fa3a006cb297aebe","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714493055063,"stop":1714493055063,"duration":0}},{"uid":"a7677c8ac4e6d2eb","reportUrl":"https://novasamatech.github.io/test-runner/5161//#testresult/a7677c8ac4e6d2eb","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714464262903,"stop":1714464262903,"duration":0}},{"uid":"8ec0e71378637403","reportUrl":"https://novasamatech.github.io/test-runner/5162//#testresult/8ec0e71378637403","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:1007)","time":{"start":1714478648110,"stop":1714478648110,"duration":0}}]},"tags":[]},"source":"51e6da83a8b87bca.json","parameterValues":["{'url': 'wss://krest.api.onfinality.io/public-ws', 'name': 'krest'}"]}