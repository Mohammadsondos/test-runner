{"uid":"692f4d6b482d4fc6","name":"test_can_create_connection[Test for Zeitgeist, url: wss://zeitgeist.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"4e4bafe18ecd3560f8865fceae8e0c9e","time":{"start":1695111266883,"stop":1695111627077,"duration":360194},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 08:20:27 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300001', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 08:20:27 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300001', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 08:20:27 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300001', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 08:20:27 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300001', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d6fafd497a68170","name":"stdout","source":"d6fafd497a68170.txt","type":"text/plain","size":1359}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az339-164"},{"name":"thread","value":"2032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://zeitgeist.api.onfinality.io/public-ws', 'name': 'Zeitgeist'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"30c783a64bcb64d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 08:14:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60002', 'x-kong-proxy-latency': '300002', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695110891576,"stop":1695111251783,"duration":360207}},{"uid":"bc3052fdf443e38a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 08:07:56 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60007', 'x-kong-proxy-latency': '300599', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695110515589,"stop":1695110876390,"duration":360801}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":155,"unknown":0,"total":157},"items":[{"uid":"2748cc91cb973620","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/2748cc91cb973620","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:20:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60004', 'x-kong-proxy-latency': '300056', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695096851306,"stop":1695097211442,"duration":360136}},{"uid":"4d8a26f6bad0c1d5","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/4d8a26f6bad0c1d5","status":"passed","time":{"start":1695081774519,"stop":1695081775316,"duration":797}},{"uid":"f5a87e250fb1830c","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/f5a87e250fb1830c","status":"passed","time":{"start":1695052893417,"stop":1695052894419,"duration":1002}},{"uid":"e1bc1151d350011f","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/e1bc1151d350011f","status":"passed","time":{"start":1695067300820,"stop":1695067301933,"duration":1113}},{"uid":"9393b86a96fe5b7d","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/9393b86a96fe5b7d","status":"passed","time":{"start":1695038517810,"stop":1695038518812,"duration":1002}},{"uid":"3e80347d0a945be4","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/3e80347d0a945be4","status":"passed","time":{"start":1695024112138,"stop":1695024112978,"duration":840}},{"uid":"6cb64e1758c304f","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/6cb64e1758c304f","status":"passed","time":{"start":1695009700521,"stop":1695009701562,"duration":1041}},{"uid":"18f2ae75d6da5bac","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/18f2ae75d6da5bac","status":"passed","time":{"start":1694995344004,"stop":1694995345071,"duration":1067}},{"uid":"f545bf5bde08967d","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/f545bf5bde08967d","status":"passed","time":{"start":1694980895473,"stop":1694980896425,"duration":952}},{"uid":"660bfb61ab7ce156","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/660bfb61ab7ce156","status":"passed","time":{"start":1694966484403,"stop":1694966485414,"duration":1011}},{"uid":"b41118c150d1c9ab","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/b41118c150d1c9ab","status":"passed","time":{"start":1694952088961,"stop":1694952089793,"duration":832}},{"uid":"7fb344bb062f92a5","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/7fb344bb062f92a5","status":"passed","time":{"start":1694937697697,"stop":1694937698795,"duration":1098}},{"uid":"7abfbe864adb953b","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/7abfbe864adb953b","status":"passed","time":{"start":1694923314980,"stop":1694923315834,"duration":854}},{"uid":"b799eada40413e00","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/b799eada40413e00","status":"passed","time":{"start":1694908952326,"stop":1694908953378,"duration":1052}},{"uid":"67e1162a7b73b9a1","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/67e1162a7b73b9a1","status":"passed","time":{"start":1694894492913,"stop":1694894493925,"duration":1012}},{"uid":"b01df0b3ee472276","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/b01df0b3ee472276","status":"passed","time":{"start":1694880122243,"stop":1694880123047,"duration":804}},{"uid":"a36dc7bdc0be26c","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/a36dc7bdc0be26c","status":"passed","time":{"start":1694865705415,"stop":1694865706461,"duration":1046}},{"uid":"f545d7ede166040b","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/f545d7ede166040b","status":"passed","time":{"start":1694851292464,"stop":1694851293432,"duration":968}},{"uid":"6e8d0bcc80581b2a","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/6e8d0bcc80581b2a","status":"passed","time":{"start":1694836896540,"stop":1694836897575,"duration":1035}},{"uid":"27dfe74c18340a62","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/27dfe74c18340a62","status":"passed","time":{"start":1694822537271,"stop":1694822538265,"duration":994}}]},"tags":[]},"source":"692f4d6b482d4fc6.json","parameterValues":["{'url': 'wss://zeitgeist.api.onfinality.io/public-ws', 'name': 'Zeitgeist'}"]}