{"uid":"6fa938105078e757","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1672013656532,"stop":1672013669139,"duration":12607},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c639e3f4ed464bac","name":"stdout","source":"c639e3f4ed464bac.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az399-964"},{"name":"thread","value":"1780-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"73ad970b93c0eb14","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1672013633857,"stop":1672013646447,"duration":12590}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":213,"skipped":0,"passed":207,"unknown":0,"total":420},"items":[{"uid":"8e88524e09dbfb7b","reportUrl":"https://nova-wallet.github.io/test-runner/2151//#testresult/8e88524e09dbfb7b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671998718840,"stop":1671998731713,"duration":12873}},{"uid":"35c9bda114c66aad","reportUrl":"https://nova-wallet.github.io/test-runner/2150//#testresult/35c9bda114c66aad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671984310456,"stop":1671984323122,"duration":12666}},{"uid":"ccf8c7a5387d50d7","reportUrl":"https://nova-wallet.github.io/test-runner/2149//#testresult/ccf8c7a5387d50d7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671970016891,"stop":1671970028294,"duration":11403}},{"uid":"9aa84d6457caa31c","reportUrl":"https://nova-wallet.github.io/test-runner/2148//#testresult/9aa84d6457caa31c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671955501982,"stop":1671955514795,"duration":12813}},{"uid":"edb89a37fb2b8935","reportUrl":"https://nova-wallet.github.io/test-runner/2147//#testresult/edb89a37fb2b8935","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671941088826,"stop":1671941101489,"duration":12663}},{"uid":"1aa8410cc1a5471","reportUrl":"https://nova-wallet.github.io/test-runner/2146//#testresult/1aa8410cc1a5471","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671927268500,"stop":1671927281362,"duration":12862}},{"uid":"c5a59b912bd530a9","reportUrl":"https://nova-wallet.github.io/test-runner/2145//#testresult/c5a59b912bd530a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671912287930,"stop":1671912300706,"duration":12776}},{"uid":"5e1fdaa5303b2dce","reportUrl":"https://nova-wallet.github.io/test-runner/2144//#testresult/5e1fdaa5303b2dce","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671897875313,"stop":1671897887956,"duration":12643}},{"uid":"532f78b56db56169","reportUrl":"https://nova-wallet.github.io/test-runner/2143//#testresult/532f78b56db56169","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671883542227,"stop":1671883555024,"duration":12797}},{"uid":"f38544e21ccb17f2","reportUrl":"https://nova-wallet.github.io/test-runner/2142//#testresult/f38544e21ccb17f2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671869181319,"stop":1671869192705,"duration":11386}},{"uid":"6831b644d601873a","reportUrl":"https://nova-wallet.github.io/test-runner/2141//#testresult/6831b644d601873a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671854777756,"stop":1671854790369,"duration":12613}},{"uid":"221ab683c3ae9d65","reportUrl":"https://nova-wallet.github.io/test-runner/2140//#testresult/221ab683c3ae9d65","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671840730721,"stop":1671840743428,"duration":12707}},{"uid":"15a95d21f7232288","reportUrl":"https://nova-wallet.github.io/test-runner/2139//#testresult/15a95d21f7232288","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671825893445,"stop":1671825906287,"duration":12842}},{"uid":"521711e00957a3b9","reportUrl":"https://nova-wallet.github.io/test-runner/2138//#testresult/521711e00957a3b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671811487608,"stop":1671811497238,"duration":9630}},{"uid":"c871c3de18bb4663","reportUrl":"https://nova-wallet.github.io/test-runner/2137//#testresult/c871c3de18bb4663","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671797149447,"stop":1671797162222,"duration":12775}},{"uid":"55df889890601881","reportUrl":"https://nova-wallet.github.io/test-runner/2136//#testresult/55df889890601881","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671782703805,"stop":1671782715170,"duration":11365}},{"uid":"9fb6a3d96a187554","reportUrl":"https://nova-wallet.github.io/test-runner/2135//#testresult/9fb6a3d96a187554","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671768309914,"stop":1671768321312,"duration":11398}},{"uid":"42ce85c67f3a15ad","reportUrl":"https://nova-wallet.github.io/test-runner/2134//#testresult/42ce85c67f3a15ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671754436687,"stop":1671754449589,"duration":12902}},{"uid":"93b6d8a090a478a3","reportUrl":"https://nova-wallet.github.io/test-runner/2133//#testresult/93b6d8a090a478a3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671739474114,"stop":1671739486819,"duration":12705}},{"uid":"bd67d53675009233","reportUrl":"https://nova-wallet.github.io/test-runner/2132//#testresult/bd67d53675009233","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671725109842,"stop":1671725122191,"duration":12349}}]},"tags":[]},"source":"6fa938105078e757.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}