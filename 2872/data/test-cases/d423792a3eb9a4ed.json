{"uid":"d423792a3eb9a4ed","name":"test_can_create_connection[Test for Hashed Network, url: wss://c1.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82d36aa15e8a5bcf4ff7d8702aa21bfe","time":{"start":1682179475158,"stop":1682179475374,"duration":216},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"66026bff4fa2e5b9","name":"stdout","source":"66026bff4fa2e5b9.txt","type":"text/plain","size":226}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az471-442"},{"name":"thread","value":"1781-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"94a4f6653ab5ed73","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682179464710,"stop":1682179465012,"duration":302}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":11,"unknown":0,"total":17},"items":[{"uid":"8120f970ce23c006","reportUrl":"https://nova-wallet.github.io/test-runner/2871//#testresult/8120f970ce23c006","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682165123454,"stop":1682165123637,"duration":183}},{"uid":"967b815e0dcf41c0","reportUrl":"https://nova-wallet.github.io/test-runner/2870//#testresult/967b815e0dcf41c0","status":"passed","time":{"start":1682150693965,"stop":1682150694210,"duration":245}},{"uid":"77ab742968a42259","reportUrl":"https://nova-wallet.github.io/test-runner/2869//#testresult/77ab742968a42259","status":"passed","time":{"start":1682136305051,"stop":1682136305304,"duration":253}},{"uid":"c6970b236bf45802","reportUrl":"https://nova-wallet.github.io/test-runner/2868//#testresult/c6970b236bf45802","status":"passed","time":{"start":1682122417168,"stop":1682122417226,"duration":58}},{"uid":"56060b91dd7646b6","reportUrl":"https://nova-wallet.github.io/test-runner/2867//#testresult/56060b91dd7646b6","status":"passed","time":{"start":1682107467441,"stop":1682107467695,"duration":254}},{"uid":"f125bf98c35f77af","reportUrl":"https://nova-wallet.github.io/test-runner/2866//#testresult/f125bf98c35f77af","status":"passed","time":{"start":1682093095405,"stop":1682093095648,"duration":243}},{"uid":"10cc3142424569df","reportUrl":"https://nova-wallet.github.io/test-runner/2865//#testresult/10cc3142424569df","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682078742491,"stop":1682078742617,"duration":126}},{"uid":"9d9da660f2b647dd","reportUrl":"https://nova-wallet.github.io/test-runner/2864//#testresult/9d9da660f2b647dd","status":"passed","time":{"start":1682064277034,"stop":1682064277202,"duration":168}},{"uid":"9a1e27fc31174936","reportUrl":"https://nova-wallet.github.io/test-runner/2863//#testresult/9a1e27fc31174936","status":"passed","time":{"start":1682049888580,"stop":1682049888639,"duration":59}},{"uid":"aad9047cb18d3d28","reportUrl":"https://nova-wallet.github.io/test-runner/2862//#testresult/aad9047cb18d3d28","status":"passed","time":{"start":1682035977966,"stop":1682035978364,"duration":398}},{"uid":"855a8b689ca85034","reportUrl":"https://nova-wallet.github.io/test-runner/2861//#testresult/855a8b689ca85034","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682021086528,"stop":1682021086694,"duration":166}},{"uid":"acc45cb80d970a00","reportUrl":"https://nova-wallet.github.io/test-runner/2860//#testresult/acc45cb80d970a00","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682006710076,"stop":1682006710244,"duration":168}},{"uid":"4def6737c7201f60","reportUrl":"https://nova-wallet.github.io/test-runner/2859//#testresult/4def6737c7201f60","status":"passed","time":{"start":1681992333715,"stop":1681992333861,"duration":146}},{"uid":"3a2c244293ab3bf","reportUrl":"https://nova-wallet.github.io/test-runner/2858//#testresult/3a2c244293ab3bf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681977897731,"stop":1681977897782,"duration":51}},{"uid":"97c32ad1d7c9f894","reportUrl":"https://nova-wallet.github.io/test-runner/2857//#testresult/97c32ad1d7c9f894","status":"passed","time":{"start":1681972266317,"stop":1681972266407,"duration":90}},{"uid":"b19006dd36f6cd20","reportUrl":"https://nova-wallet.github.io/test-runner/2856//#testresult/b19006dd36f6cd20","status":"passed","time":{"start":1681963481564,"stop":1681963481784,"duration":220}}]},"tags":[]},"source":"d423792a3eb9a4ed.json","parameterValues":["{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"]}