{"uid":"faad6003731daae3","name":"test_can_create_connection[Test for GM, url: wss://ws-node-gm.terrabiodao.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3278cac67526220f4f1c0a171e1bb018","time":{"start":1670443540812,"stop":1670443541344,"duration":532},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a1c706f1365358c3","name":"stdout","source":"a1c706f1365358c3.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az221-856"},{"name":"thread","value":"1691-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6323f7260e25741f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670443530167,"stop":1670443530698,"duration":531}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":313,"skipped":0,"passed":0,"unknown":0,"total":313},"items":[{"uid":"4eff99e43f76ec8","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/4eff99e43f76ec8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670429187723,"stop":1670429188139,"duration":416}},{"uid":"e3cf92e96acbdd38","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/e3cf92e96acbdd38","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670414845487,"stop":1670414845997,"duration":510}},{"uid":"c52ab27909f92034","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/c52ab27909f92034","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670400374890,"stop":1670400375201,"duration":311}},{"uid":"d08b20077ca4d539","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/d08b20077ca4d539","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670385953305,"stop":1670385953758,"duration":453}},{"uid":"b243f66e378adc0d","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/b243f66e378adc0d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670372143212,"stop":1670372143836,"duration":624}},{"uid":"d0fd09245109f66c","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/d0fd09245109f66c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670357154805,"stop":1670357155244,"duration":439}},{"uid":"250651ab9e70e6fe","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/250651ab9e70e6fe","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670342776459,"stop":1670342776914,"duration":455}},{"uid":"1c3b94eb10baef31","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/1c3b94eb10baef31","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670333498443,"stop":1670333498891,"duration":448}},{"uid":"ebfe19d5721a5180","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/ebfe19d5721a5180","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670242638739,"stop":1670242639307,"duration":568}},{"uid":"60a6d35f4068c67c","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/60a6d35f4068c67c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670228197966,"stop":1670228198581,"duration":615}},{"uid":"31c0fa5dc0db39a4","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/31c0fa5dc0db39a4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670213772709,"stop":1670213773032,"duration":323}},{"uid":"6b978bc305437e50","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/6b978bc305437e50","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670199988604,"stop":1670199989046,"duration":442}},{"uid":"67637d9d4b1f41a0","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/67637d9d4b1f41a0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670184990437,"stop":1670184990839,"duration":402}},{"uid":"a91cbc4823df42d","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/a91cbc4823df42d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670170571874,"stop":1670170572187,"duration":313}},{"uid":"a2dcb1ff264e6cb4","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/a2dcb1ff264e6cb4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670157478516,"stop":1670157478936,"duration":420}},{"uid":"1aa10e53e5c45a7a","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/1aa10e53e5c45a7a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670142561325,"stop":1670142561944,"duration":619}},{"uid":"62f6a4e8cda3f73b","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/62f6a4e8cda3f73b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670128112999,"stop":1670128113500,"duration":501}},{"uid":"abc520c2fdeefe9c","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/abc520c2fdeefe9c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670116874329,"stop":1670116874833,"duration":504}},{"uid":"c57a7f456c2caef8","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/c57a7f456c2caef8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670099133556,"stop":1670099133964,"duration":408}},{"uid":"1a442aa680fded71","reportUrl":"https://nova-wallet.github.io/test-runner/2016//#testresult/1a442aa680fded71","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1670084991680,"stop":1670084992132,"duration":452}}]},"tags":[]},"source":"faad6003731daae3.json","parameterValues":["{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"]}