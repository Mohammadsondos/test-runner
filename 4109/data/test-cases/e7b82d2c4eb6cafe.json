{"uid":"e7b82d2c4eb6cafe","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1699588903961,"stop":1699588905045,"duration":1084},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 10 Nov 2023 04:01:44 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 10 Nov 2023 04:01:44 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 10 Nov 2023 04:01:44 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 10 Nov 2023 04:01:44 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3bbc335c466f66b2","name":"stdout","source":"3bbc335c466f66b2.txt","type":"text/plain","size":2889}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az529-666"},{"name":"thread","value":"2207-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"82229027782a46b1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 10 Nov 2023 04:01:28 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1699588888189,"stop":1699588888890,"duration":701}},{"uid":"daaa59378ba9c69d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 10 Nov 2023 04:01:12 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1699588872361,"stop":1699588873060,"duration":699}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":50,"skipped":0,"passed":419,"unknown":0,"total":469},"items":[{"uid":"87ae5d7c6bce41cd","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/87ae5d7c6bce41cd","status":"passed","time":{"start":1699574527800,"stop":1699574529264,"duration":1464}},{"uid":"9f349e52a8fa55d","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/9f349e52a8fa55d","status":"passed","time":{"start":1699560108207,"stop":1699560109425,"duration":1218}},{"uid":"b8b9d217fca2aab4","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/b8b9d217fca2aab4","status":"passed","time":{"start":1699545710631,"stop":1699545712051,"duration":1420}},{"uid":"d45ad43dd77dde9b","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/d45ad43dd77dde9b","status":"passed","time":{"start":1699531304122,"stop":1699531305422,"duration":1300}},{"uid":"dc6a10c9d8b1a996","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/dc6a10c9d8b1a996","status":"passed","time":{"start":1699516897372,"stop":1699516898837,"duration":1465}},{"uid":"9f9a1378f767843a","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/9f9a1378f767843a","status":"passed","time":{"start":1699502477928,"stop":1699502479421,"duration":1493}},{"uid":"a36341499e644f5e","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/a36341499e644f5e","status":"passed","time":{"start":1699488136659,"stop":1699488137938,"duration":1279}},{"uid":"68c7a476df3a7c23","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/68c7a476df3a7c23","status":"passed","time":{"start":1699473673286,"stop":1699473674540,"duration":1254}},{"uid":"a12affe6aa2db3ee","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/a12affe6aa2db3ee","status":"passed","time":{"start":1699459279754,"stop":1699459281059,"duration":1305}},{"uid":"8d80f45c8d77d3e1","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/8d80f45c8d77d3e1","status":"passed","time":{"start":1699444881298,"stop":1699444882685,"duration":1387}},{"uid":"b2a25803531ff494","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/b2a25803531ff494","status":"passed","time":{"start":1699430486808,"stop":1699430488054,"duration":1246}},{"uid":"2263bceb9d92d5eb","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/2263bceb9d92d5eb","status":"passed","time":{"start":1699416101849,"stop":1699416102961,"duration":1112}},{"uid":"dbc6a6ef861809ac","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/dbc6a6ef861809ac","status":"passed","time":{"start":1699401722526,"stop":1699401723842,"duration":1316}},{"uid":"7955b31cb8c846be","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/7955b31cb8c846be","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 07 Nov 2023 20:01:47 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1699387306648,"stop":1699387307351,"duration":703}},{"uid":"8c1893096843a0bd","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/8c1893096843a0bd","status":"passed","time":{"start":1699372876533,"stop":1699372878054,"duration":1521}},{"uid":"b855948fe71820a7","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/b855948fe71820a7","status":"passed","time":{"start":1699358488574,"stop":1699358489901,"duration":1327}},{"uid":"5380ddf966363ff7","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/5380ddf966363ff7","status":"passed","time":{"start":1699344078274,"stop":1699344079374,"duration":1100}},{"uid":"a8fd6c7b37dc2cf8","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/a8fd6c7b37dc2cf8","status":"passed","time":{"start":1699329685544,"stop":1699329686820,"duration":1276}},{"uid":"de30ca071091d44f","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/de30ca071091d44f","status":"passed","time":{"start":1699315337046,"stop":1699315338504,"duration":1458}},{"uid":"796adb0634d35461","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/796adb0634d35461","status":"passed","time":{"start":1699300890370,"stop":1699300891658,"duration":1288}}]},"tags":[]},"source":"e7b82d2c4eb6cafe.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}