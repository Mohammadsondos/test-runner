{"uid":"a4773c8dcbc26226","name":"test_can_create_connection[Test for Phala, url: wss://api.phala.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"db9f156d5a7a09a53633b370d0c7986e","time":{"start":1679645740129,"stop":1679645740289,"duration":160},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","statusTrace":"data = {'name': 'Phala', 'url': 'wss://api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","statusTrace":"data = {'name': 'Phala', 'url': 'wss://api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9f44ec0db8a4eafc","name":"stdout","source":"9f44ec0db8a4eafc.txt","type":"text/plain","size":220}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az283-848"},{"name":"thread","value":"1843-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://api.phala.network/ws', 'name': 'Phala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b986aef6c9679893","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","time":{"start":1679645729832,"stop":1679645730030,"duration":198}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":57,"skipped":0,"passed":822,"unknown":0,"total":879},"items":[{"uid":"945f573691211a17","reportUrl":"https://nova-wallet.github.io/test-runner/2693//#testresult/945f573691211a17","status":"passed","time":{"start":1679631356273,"stop":1679631356662,"duration":389}},{"uid":"c76186ba2b9ac584","reportUrl":"https://nova-wallet.github.io/test-runner/2692//#testresult/c76186ba2b9ac584","status":"passed","time":{"start":1679619880472,"stop":1679619881015,"duration":543}},{"uid":"4ea12cf27fa564d3","reportUrl":"https://nova-wallet.github.io/test-runner/2691//#testresult/4ea12cf27fa564d3","status":"passed","time":{"start":1679602445544,"stop":1679602446118,"duration":574}},{"uid":"ad477ace071d5ae3","reportUrl":"https://nova-wallet.github.io/test-runner/2690//#testresult/ad477ace071d5ae3","status":"passed","time":{"start":1679588298255,"stop":1679588298636,"duration":381}},{"uid":"7f27d8f7993129df","reportUrl":"https://nova-wallet.github.io/test-runner/2689//#testresult/7f27d8f7993129df","status":"passed","time":{"start":1679587048354,"stop":1679587048896,"duration":542}},{"uid":"c93c6192d25e5fbb","reportUrl":"https://nova-wallet.github.io/test-runner/2679//#testresult/c93c6192d25e5fbb","status":"passed","time":{"start":1679458529667,"stop":1679458530040,"duration":373}},{"uid":"cf41efba2b11e34c","reportUrl":"https://nova-wallet.github.io/test-runner/2678//#testresult/cf41efba2b11e34c","status":"passed","time":{"start":1679447138006,"stop":1679447138662,"duration":656}},{"uid":"4565eaa55aee9124","reportUrl":"https://nova-wallet.github.io/test-runner/2677//#testresult/4565eaa55aee9124","status":"passed","time":{"start":1679429628176,"stop":1679429628753,"duration":577}},{"uid":"8e970a289c3077cf","reportUrl":"https://nova-wallet.github.io/test-runner/2676//#testresult/8e970a289c3077cf","status":"passed","time":{"start":1679415282352,"stop":1679415283004,"duration":652}},{"uid":"903ad753b8c33ad1","reportUrl":"https://nova-wallet.github.io/test-runner/2675//#testresult/903ad753b8c33ad1","status":"passed","time":{"start":1679401467992,"stop":1679401468572,"duration":580}},{"uid":"97e6f5612f6c6752","reportUrl":"https://nova-wallet.github.io/test-runner/2633//#testresult/97e6f5612f6c6752","status":"passed","time":{"start":1678795564852,"stop":1678795565223,"duration":371}},{"uid":"f9499a35345a4554","reportUrl":"https://nova-wallet.github.io/test-runner/2632//#testresult/f9499a35345a4554","status":"passed","time":{"start":1678781108370,"stop":1678781108749,"duration":379}},{"uid":"9fc7ff08f7e62724","reportUrl":"https://nova-wallet.github.io/test-runner/2631//#testresult/9fc7ff08f7e62724","status":"passed","time":{"start":1678766672286,"stop":1678766672941,"duration":655}},{"uid":"497a1c3c8275836f","reportUrl":"https://nova-wallet.github.io/test-runner/2630//#testresult/497a1c3c8275836f","status":"passed","time":{"start":1678752811647,"stop":1678752812226,"duration":579}},{"uid":"343db9b94e2d3819","reportUrl":"https://nova-wallet.github.io/test-runner/2629//#testresult/343db9b94e2d3819","status":"passed","time":{"start":1678737879617,"stop":1678737880260,"duration":643}},{"uid":"7d753a62226d4c04","reportUrl":"https://nova-wallet.github.io/test-runner/2628//#testresult/7d753a62226d4c04","status":"passed","time":{"start":1678723465637,"stop":1678723466065,"duration":428}},{"uid":"295bd9cd5b67b43","reportUrl":"https://nova-wallet.github.io/test-runner/2627//#testresult/295bd9cd5b67b43","status":"passed","time":{"start":1678709150452,"stop":1678709150849,"duration":397}},{"uid":"a56e33bd57e44252","reportUrl":"https://nova-wallet.github.io/test-runner/2626//#testresult/a56e33bd57e44252","status":"passed","time":{"start":1678694711498,"stop":1678694712174,"duration":676}},{"uid":"916aef49c937deca","reportUrl":"https://nova-wallet.github.io/test-runner/2625//#testresult/916aef49c937deca","status":"passed","time":{"start":1678680279097,"stop":1678680279783,"duration":686}},{"uid":"b3cdc2e853df691c","reportUrl":"https://nova-wallet.github.io/test-runner/2624//#testresult/b3cdc2e853df691c","status":"passed","time":{"start":1678666455119,"stop":1678666455757,"duration":638}}]},"tags":[]},"source":"a4773c8dcbc26226.json","parameterValues":["{'url': 'wss://api.phala.network/ws', 'name': 'Phala'}"]}