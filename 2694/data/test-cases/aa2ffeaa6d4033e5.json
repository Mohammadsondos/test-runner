{"uid":"aa2ffeaa6d4033e5","name":"test_can_create_connection[Test for Khala, url: wss://khala-api.phala.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b9ef5d231f3ccda572f27ab1ee01534b","time":{"start":1679645719104,"stop":1679645719268,"duration":164},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","statusTrace":"data = {'name': 'Khala', 'url': 'wss://khala-api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","statusTrace":"data = {'name': 'Khala', 'url': 'wss://khala-api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3b853704464fe76d","name":"stdout","source":"3b853704464fe76d.txt","type":"text/plain","size":232}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az283-848"},{"name":"thread","value":"1843-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://khala-api.phala.network/ws', 'name': 'Khala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"80ec08fb4b76c667","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","time":{"start":1679645708808,"stop":1679645709002,"duration":194}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":60,"skipped":0,"passed":819,"unknown":0,"total":879},"items":[{"uid":"42b0097759e1e706","reportUrl":"https://nova-wallet.github.io/test-runner/2693//#testresult/42b0097759e1e706","status":"passed","time":{"start":1679631345437,"stop":1679631345817,"duration":380}},{"uid":"ef22f64f48417f7a","reportUrl":"https://nova-wallet.github.io/test-runner/2692//#testresult/ef22f64f48417f7a","status":"passed","time":{"start":1679619869189,"stop":1679619869574,"duration":385}},{"uid":"d25934795a4d09ed","reportUrl":"https://nova-wallet.github.io/test-runner/2691//#testresult/d25934795a4d09ed","status":"passed","time":{"start":1679602447627,"stop":1679602448186,"duration":559}},{"uid":"2c5579093d3ec29a","reportUrl":"https://nova-wallet.github.io/test-runner/2690//#testresult/2c5579093d3ec29a","status":"passed","time":{"start":1679588287926,"stop":1679588288406,"duration":480}},{"uid":"3d0cdd737eae2f85","reportUrl":"https://nova-wallet.github.io/test-runner/2689//#testresult/3d0cdd737eae2f85","status":"passed","time":{"start":1679587036860,"stop":1679587037649,"duration":789}},{"uid":"7431312c9b9d1e7b","reportUrl":"https://nova-wallet.github.io/test-runner/2679//#testresult/7431312c9b9d1e7b","status":"passed","time":{"start":1679458518336,"stop":1679458518695,"duration":359}},{"uid":"ee76c4063f50f1d8","reportUrl":"https://nova-wallet.github.io/test-runner/2678//#testresult/ee76c4063f50f1d8","status":"passed","time":{"start":1679447124516,"stop":1679447125164,"duration":648}},{"uid":"d2656027abf7b415","reportUrl":"https://nova-wallet.github.io/test-runner/2677//#testresult/d2656027abf7b415","status":"passed","time":{"start":1679429616508,"stop":1679429617083,"duration":575}},{"uid":"3e52622e35e97972","reportUrl":"https://nova-wallet.github.io/test-runner/2676//#testresult/3e52622e35e97972","status":"passed","time":{"start":1679415269683,"stop":1679415270364,"duration":681}},{"uid":"a398e42bef8678d3","reportUrl":"https://nova-wallet.github.io/test-runner/2675//#testresult/a398e42bef8678d3","status":"passed","time":{"start":1679401455031,"stop":1679401455611,"duration":580}},{"uid":"cb2995d98ad35e0e","reportUrl":"https://nova-wallet.github.io/test-runner/2633//#testresult/cb2995d98ad35e0e","status":"passed","time":{"start":1678795550062,"stop":1678795550614,"duration":552}},{"uid":"c8b97967e6de21c3","reportUrl":"https://nova-wallet.github.io/test-runner/2632//#testresult/c8b97967e6de21c3","status":"passed","time":{"start":1678781096446,"stop":1678781096828,"duration":382}},{"uid":"8a28c34bdeffee10","reportUrl":"https://nova-wallet.github.io/test-runner/2631//#testresult/8a28c34bdeffee10","status":"passed","time":{"start":1678766649332,"stop":1678766650002,"duration":670}},{"uid":"35554ec3128ac0e1","reportUrl":"https://nova-wallet.github.io/test-runner/2630//#testresult/35554ec3128ac0e1","status":"passed","time":{"start":1678752789742,"stop":1678752790328,"duration":586}},{"uid":"719706bedd52e327","reportUrl":"https://nova-wallet.github.io/test-runner/2629//#testresult/719706bedd52e327","status":"passed","time":{"start":1678737855477,"stop":1678737856124,"duration":647}},{"uid":"9fe25032186a2f4","reportUrl":"https://nova-wallet.github.io/test-runner/2628//#testresult/9fe25032186a2f4","status":"passed","time":{"start":1678723453559,"stop":1678723453927,"duration":368}},{"uid":"aefdd96924e800a8","reportUrl":"https://nova-wallet.github.io/test-runner/2627//#testresult/aefdd96924e800a8","status":"passed","time":{"start":1678709131152,"stop":1678709131543,"duration":391}},{"uid":"e2e334dc939f9fd7","reportUrl":"https://nova-wallet.github.io/test-runner/2626//#testresult/e2e334dc939f9fd7","status":"passed","time":{"start":1678694691594,"stop":1678694692171,"duration":577}},{"uid":"714e3838c045061b","reportUrl":"https://nova-wallet.github.io/test-runner/2625//#testresult/714e3838c045061b","status":"passed","time":{"start":1678680257466,"stop":1678680258150,"duration":684}},{"uid":"937d2654f7af1c4","reportUrl":"https://nova-wallet.github.io/test-runner/2624//#testresult/937d2654f7af1c4","status":"passed","time":{"start":1678666442324,"stop":1678666442990,"duration":666}}]},"tags":[]},"source":"aa2ffeaa6d4033e5.json","parameterValues":["{'url': 'wss://khala-api.phala.network/ws', 'name': 'Khala'}"]}