{"uid":"3b2480042b1bdd4f","name":"test_has_new_assets[Test for OriginTrail Parachain]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"8d447059892acc9e121bd8a98e0ce45f","time":{"start":1691525141456,"stop":1691525142111,"duration":655},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f35b8d4ac20>\nchain = <scripts.utils.chain_model.Chain object at 0x7f35b8fb3ca0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f35b8d4ac20>\nchain = <scripts.utils.chain_model.Chain object at 0x7f35b8fb3ca0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"3bb985e0e9c58b4","name":"stdout","source":"3bb985e0e9c58b4.txt","type":"text/plain","size":1296}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az842-791"},{"name":"thread","value":"2031-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f35b8fb3ca0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6d1f85f8c7c1be6e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691525125149,"stop":1691525126421,"duration":1272}},{"uid":"f5428fb3d164d325","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691525108703,"stop":1691525110115,"duration":1412}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":541,"unknown":0,"total":542},"items":[{"uid":"4774e078b0d8ac6e","reportUrl":"https://novasamatech.github.io/test-runner/3537//#testresult/4774e078b0d8ac6e","status":"passed","time":{"start":1691510698290,"stop":1691510705308,"duration":7018}},{"uid":"f5bd17b7473bd879","reportUrl":"https://novasamatech.github.io/test-runner/3536//#testresult/f5bd17b7473bd879","status":"passed","time":{"start":1691496355226,"stop":1691496358981,"duration":3755}},{"uid":"229a04a7cdee94ea","reportUrl":"https://novasamatech.github.io/test-runner/3535//#testresult/229a04a7cdee94ea","status":"passed","time":{"start":1691481915152,"stop":1691481924054,"duration":8902}},{"uid":"263fe9fefad8d778","reportUrl":"https://novasamatech.github.io/test-runner/3534//#testresult/263fe9fefad8d778","status":"passed","time":{"start":1691467478220,"stop":1691467486709,"duration":8489}},{"uid":"f14a0b3842a0d53f","reportUrl":"https://novasamatech.github.io/test-runner/3533//#testresult/f14a0b3842a0d53f","status":"passed","time":{"start":1691453684640,"stop":1691453690029,"duration":5389}},{"uid":"f024c6f547c48b1b","reportUrl":"https://novasamatech.github.io/test-runner/3532//#testresult/f024c6f547c48b1b","status":"passed","time":{"start":1691438690544,"stop":1691438699041,"duration":8497}},{"uid":"9137330897bc6b4b","reportUrl":"https://novasamatech.github.io/test-runner/3531//#testresult/9137330897bc6b4b","status":"passed","time":{"start":1691424304872,"stop":1691424311149,"duration":6277}},{"uid":"a3359f750a6a7ff8","reportUrl":"https://novasamatech.github.io/test-runner/3530//#testresult/a3359f750a6a7ff8","status":"passed","time":{"start":1691409931492,"stop":1691409941106,"duration":9614}},{"uid":"2337572c3cf5c731","reportUrl":"https://novasamatech.github.io/test-runner/3529//#testresult/2337572c3cf5c731","status":"passed","time":{"start":1691395507584,"stop":1691395512630,"duration":5046}},{"uid":"c9dfb5d292a3e0c1","reportUrl":"https://novasamatech.github.io/test-runner/3528//#testresult/c9dfb5d292a3e0c1","status":"passed","time":{"start":1691381073704,"stop":1691381078536,"duration":4832}},{"uid":"a7a7142fd6ef6674","reportUrl":"https://novasamatech.github.io/test-runner/3527//#testresult/a7a7142fd6ef6674","status":"passed","time":{"start":1691367295525,"stop":1691367304062,"duration":8537}},{"uid":"fd69cfc418f67c80","reportUrl":"https://novasamatech.github.io/test-runner/3526//#testresult/fd69cfc418f67c80","status":"passed","time":{"start":1691352302442,"stop":1691352309053,"duration":6611}},{"uid":"1dbd1f93195ca0a6","reportUrl":"https://novasamatech.github.io/test-runner/3525//#testresult/1dbd1f93195ca0a6","status":"passed","time":{"start":1691337911833,"stop":1691337917342,"duration":5509}},{"uid":"44f817a44cce61d8","reportUrl":"https://novasamatech.github.io/test-runner/3524//#testresult/44f817a44cce61d8","status":"passed","time":{"start":1691323482650,"stop":1691323489546,"duration":6896}},{"uid":"504b4a254d42455c","reportUrl":"https://novasamatech.github.io/test-runner/3523//#testresult/504b4a254d42455c","status":"passed","time":{"start":1691309054609,"stop":1691309062205,"duration":7596}},{"uid":"82af50db63dd38d","reportUrl":"https://novasamatech.github.io/test-runner/3522//#testresult/82af50db63dd38d","status":"passed","time":{"start":1691294682062,"stop":1691294690336,"duration":8274}},{"uid":"e522f1273a7fac98","reportUrl":"https://novasamatech.github.io/test-runner/3521//#testresult/e522f1273a7fac98","status":"passed","time":{"start":1691280839824,"stop":1691280847818,"duration":7994}},{"uid":"bd404ef830a2c7d7","reportUrl":"https://novasamatech.github.io/test-runner/3520//#testresult/bd404ef830a2c7d7","status":"passed","time":{"start":1691265876849,"stop":1691265885606,"duration":8757}},{"uid":"b974ea50960609de","reportUrl":"https://novasamatech.github.io/test-runner/3519//#testresult/b974ea50960609de","status":"passed","time":{"start":1691251486425,"stop":1691251493503,"duration":7078}},{"uid":"13232aced48c0748","reportUrl":"https://novasamatech.github.io/test-runner/3518//#testresult/13232aced48c0748","status":"passed","time":{"start":1691237088104,"stop":1691237093636,"duration":5532}}]},"tags":[]},"source":"3b2480042b1bdd4f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f35b8fb3ca0>"]}