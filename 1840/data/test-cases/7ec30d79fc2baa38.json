{"uid":"7ec30d79fc2baa38","name":"test_xcm_parameters[Check XCM data for Moonriver]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"d5af9aec8219c0401b7835a48ee7a77d","time":{"start":1667607441421,"stop":1667607441567,"duration":146},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7fa2e3034910>\nchain = <tests.utils.chain_model.Chain object at 0x7fa2e8104dc0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az208-383"},{"name":"thread","value":"1657-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fa2e8104dc0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eb2f86e8b3dd0e24","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667607428570,"stop":1667607431412,"duration":2842}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":135,"unknown":0,"total":144},"items":[{"uid":"7dafa82dab877f41","reportUrl":"https://nova-wallet.github.io/test-runner/1839//#testresult/7dafa82dab877f41","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667592274154,"stop":1667592274520,"duration":366}},{"uid":"ed2199ef53170de9","reportUrl":"https://nova-wallet.github.io/test-runner/1838//#testresult/ed2199ef53170de9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667577902704,"stop":1667577902932,"duration":228}},{"uid":"a3ec45b039e9ba4c","reportUrl":"https://nova-wallet.github.io/test-runner/1837//#testresult/a3ec45b039e9ba4c","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667563557209,"stop":1667563557651,"duration":442}},{"uid":"78a5298679327d12","reportUrl":"https://nova-wallet.github.io/test-runner/1836//#testresult/78a5298679327d12","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667549133565,"stop":1667549133917,"duration":352}},{"uid":"59852b84d6e4dcba","reportUrl":"https://nova-wallet.github.io/test-runner/1835//#testresult/59852b84d6e4dcba","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667535579613,"stop":1667535579801,"duration":188}},{"uid":"cc85bdd882e6822e","reportUrl":"https://nova-wallet.github.io/test-runner/1834//#testresult/cc85bdd882e6822e","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667521076103,"stop":1667521076230,"duration":127}},{"uid":"581f0d898510dd3c","reportUrl":"https://nova-wallet.github.io/test-runner/1833//#testresult/581f0d898510dd3c","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667505862834,"stop":1667505862964,"duration":130}},{"uid":"ea47d198f9cee9","reportUrl":"https://nova-wallet.github.io/test-runner/1832//#testresult/ea47d198f9cee9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1667491633098,"stop":1667491633474,"duration":376}},{"uid":"3c1d6fb665d918ec","reportUrl":"https://nova-wallet.github.io/test-runner/1831//#testresult/3c1d6fb665d918ec","status":"passed","time":{"start":1667477145754,"stop":1667477147814,"duration":2060}},{"uid":"97487646d80f4cd5","reportUrl":"https://nova-wallet.github.io/test-runner/1830//#testresult/97487646d80f4cd5","status":"passed","time":{"start":1667462705148,"stop":1667462708240,"duration":3092}},{"uid":"827a1c5ec9e4d788","reportUrl":"https://nova-wallet.github.io/test-runner/1829//#testresult/827a1c5ec9e4d788","status":"passed","time":{"start":1667461904204,"stop":1667461906931,"duration":2727}},{"uid":"c4c87d5f7bcd3807","reportUrl":"https://nova-wallet.github.io/test-runner/1810//#testresult/c4c87d5f7bcd3807","status":"passed","time":{"start":1667191786809,"stop":1667191789415,"duration":2606}},{"uid":"949c89ddd5d1e624","reportUrl":"https://nova-wallet.github.io/test-runner/1809//#testresult/949c89ddd5d1e624","status":"passed","time":{"start":1667181038851,"stop":1667181041382,"duration":2531}},{"uid":"247c6f8cc3d0f1ab","reportUrl":"https://nova-wallet.github.io/test-runner/1808//#testresult/247c6f8cc3d0f1ab","status":"passed","time":{"start":1667161054380,"stop":1667161057640,"duration":3260}},{"uid":"4939f6ee2b9f9c1f","reportUrl":"https://nova-wallet.github.io/test-runner/1807//#testresult/4939f6ee2b9f9c1f","status":"passed","time":{"start":1667146935634,"stop":1667146938267,"duration":2633}},{"uid":"4bd6922bd1ee23a2","reportUrl":"https://nova-wallet.github.io/test-runner/1806//#testresult/4bd6922bd1ee23a2","status":"passed","time":{"start":1667133139841,"stop":1667133144163,"duration":4322}},{"uid":"b250a71101350b2b","reportUrl":"https://nova-wallet.github.io/test-runner/1805//#testresult/b250a71101350b2b","status":"passed","time":{"start":1667118029785,"stop":1667118033111,"duration":3326}},{"uid":"ad5b01f5caa72c16","reportUrl":"https://nova-wallet.github.io/test-runner/1804//#testresult/ad5b01f5caa72c16","status":"passed","time":{"start":1667105127697,"stop":1667105131197,"duration":3500}},{"uid":"d49e3feb94427354","reportUrl":"https://nova-wallet.github.io/test-runner/1803//#testresult/d49e3feb94427354","status":"passed","time":{"start":1667094493858,"stop":1667094498210,"duration":4352}},{"uid":"86cafea28d1769e3","reportUrl":"https://nova-wallet.github.io/test-runner/1802//#testresult/86cafea28d1769e3","status":"passed","time":{"start":1667074636939,"stop":1667074639642,"duration":2703}}]},"tags":[]},"source":"7ec30d79fc2baa38.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fa2e8104dc0>"]}