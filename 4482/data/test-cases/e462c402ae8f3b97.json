{"uid":"e462c402ae8f3b97","name":"test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f40d393a2004b4ab9fba62244d213349","time":{"start":1704816433690,"stop":1704816433690,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1704816402507,"stop":1704816403029,"duration":522},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1704816418099,"stop":1704816418608,"duration":509},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1704816433691,"stop":1704816434216,"duration":525},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d9e2c28f3fa4a0ea","name":"stdout","source":"d9e2c28f3fa4a0ea.txt","type":"text/plain","size":726}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az659-507"},{"name":"thread","value":"2092-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"be1b95bc6ba778b5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1704816418099,"stop":1704816418099,"duration":0}},{"uid":"debc0be441e8f5ff","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1704816402506,"stop":1704816402506,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":684,"unknown":0,"total":696},"items":[{"uid":"4c631ce2163515eb","reportUrl":"https://novasamatech.github.io/test-runner/4481//#testresult/4c631ce2163515eb","status":"passed","time":{"start":1704802026321,"stop":1704802026321,"duration":0}},{"uid":"ea703ddad6d48072","reportUrl":"https://novasamatech.github.io/test-runner/4406//#testresult/ea703ddad6d48072","status":"passed","time":{"start":1703750770494,"stop":1703750770494,"duration":0}},{"uid":"4c4b39f3878996c7","reportUrl":"https://novasamatech.github.io/test-runner/4405//#testresult/4c4b39f3878996c7","status":"passed","time":{"start":1703736364965,"stop":1703736364965,"duration":0}},{"uid":"79fdae9406c267ec","reportUrl":"https://novasamatech.github.io/test-runner/4404//#testresult/79fdae9406c267ec","status":"passed","time":{"start":1703721990144,"stop":1703721990144,"duration":0}},{"uid":"a3142f192db033cb","reportUrl":"https://novasamatech.github.io/test-runner/4403//#testresult/a3142f192db033cb","status":"passed","time":{"start":1703707602374,"stop":1703707602374,"duration":0}},{"uid":"3d0645a37abdbb84","reportUrl":"https://novasamatech.github.io/test-runner/4402//#testresult/3d0645a37abdbb84","status":"passed","time":{"start":1703693223790,"stop":1703693223790,"duration":0}},{"uid":"f761de726e9fd6e2","reportUrl":"https://novasamatech.github.io/test-runner/4401//#testresult/f761de726e9fd6e2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703678860560,"stop":1703678860560,"duration":0}},{"uid":"90d73b11a92d2ed","reportUrl":"https://novasamatech.github.io/test-runner/4400//#testresult/90d73b11a92d2ed","status":"passed","time":{"start":1703664318919,"stop":1703664318919,"duration":0}},{"uid":"19c6530e882c3904","reportUrl":"https://novasamatech.github.io/test-runner/4399//#testresult/19c6530e882c3904","status":"passed","time":{"start":1703650003583,"stop":1703650003583,"duration":0}},{"uid":"25f79d67ecc4c921","reportUrl":"https://novasamatech.github.io/test-runner/4398//#testresult/25f79d67ecc4c921","status":"passed","time":{"start":1703635606935,"stop":1703635606935,"duration":0}},{"uid":"49c8d6a3ae2224c1","reportUrl":"https://novasamatech.github.io/test-runner/4397//#testresult/49c8d6a3ae2224c1","status":"passed","time":{"start":1703621212981,"stop":1703621212981,"duration":0}},{"uid":"55e1e9a521713bb0","reportUrl":"https://novasamatech.github.io/test-runner/4396//#testresult/55e1e9a521713bb0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703606833681,"stop":1703606833681,"duration":0}},{"uid":"f1b02b665f9fac60","reportUrl":"https://novasamatech.github.io/test-runner/4395//#testresult/f1b02b665f9fac60","status":"passed","time":{"start":1703592366209,"stop":1703592366210,"duration":1}},{"uid":"85ff42b8f82813fc","reportUrl":"https://novasamatech.github.io/test-runner/4394//#testresult/85ff42b8f82813fc","status":"passed","time":{"start":1703578029320,"stop":1703578029320,"duration":0}},{"uid":"15d2f657dc5e3140","reportUrl":"https://novasamatech.github.io/test-runner/4393//#testresult/15d2f657dc5e3140","status":"passed","time":{"start":1703563574816,"stop":1703563574817,"duration":1}},{"uid":"54581c7f067e29d0","reportUrl":"https://novasamatech.github.io/test-runner/4392//#testresult/54581c7f067e29d0","status":"passed","time":{"start":1703549222278,"stop":1703549222279,"duration":1}},{"uid":"4fd2fa4c1f40da0d","reportUrl":"https://novasamatech.github.io/test-runner/4391//#testresult/4fd2fa4c1f40da0d","status":"passed","time":{"start":1703534819749,"stop":1703534819749,"duration":0}},{"uid":"22310ce1b22fbbf3","reportUrl":"https://novasamatech.github.io/test-runner/4390//#testresult/22310ce1b22fbbf3","status":"passed","time":{"start":1703520435035,"stop":1703520435035,"duration":0}},{"uid":"f072509a597ff105","reportUrl":"https://novasamatech.github.io/test-runner/4389//#testresult/f072509a597ff105","status":"passed","time":{"start":1703505995544,"stop":1703505995544,"duration":0}},{"uid":"58058f8aae76c380","reportUrl":"https://novasamatech.github.io/test-runner/4388//#testresult/58058f8aae76c380","status":"passed","time":{"start":1703491595564,"stop":1703491595564,"duration":0}}]},"tags":[]},"source":"e462c402ae8f3b97.json","parameterValues":["{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"]}