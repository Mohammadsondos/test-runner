{"uid":"f134aed8c06b977a","name":"test_can_create_connection[Test for Polkadex, url: wss://mainnet.polkadex.trade]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2a5bd149bcde3907cf110ee466ecf630","time":{"start":1699877105684,"stop":1699877105684,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1699877068984,"stop":1699877069975,"duration":991},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 13 Nov 2023 12:04:29 GMT'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"connection_by_url","time":{"start":1699877085150,"stop":1699877086172,"duration":1022},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 13 Nov 2023 12:04:45 GMT'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"connection_by_url","time":{"start":1699877101350,"stop":1699877105683,"duration":4333},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"c933a58ba20cc41c","name":"stdout","source":"c933a58ba20cc41c.txt","type":"text/plain","size":550}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az452-277"},{"name":"thread","value":"2095-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://mainnet.polkadex.trade', 'name': 'Polkadex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b452663c3998ba1c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 13 Nov 2023 12:04:45 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699877085150,"stop":1699877085150,"duration":0}},{"uid":"1d770f7a892d8467","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 13 Nov 2023 12:04:29 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699877068981,"stop":1699877068981,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":463,"unknown":0,"total":484},"items":[{"uid":"29cfe066242c60e7","reportUrl":"https://novasamatech.github.io/test-runner/4128//#testresult/29cfe066242c60e7","status":"passed","time":{"start":1699862492832,"stop":1699862493761,"duration":929}},{"uid":"97ebe11c4be8ebe9","reportUrl":"https://novasamatech.github.io/test-runner/4127//#testresult/97ebe11c4be8ebe9","status":"passed","time":{"start":1699848104724,"stop":1699848105852,"duration":1128}},{"uid":"3c4581cc3cd77c2b","reportUrl":"https://novasamatech.github.io/test-runner/4126//#testresult/3c4581cc3cd77c2b","status":"passed","time":{"start":1699833772108,"stop":1699833772856,"duration":748}},{"uid":"36018b0fa39054a0","reportUrl":"https://novasamatech.github.io/test-runner/4125//#testresult/36018b0fa39054a0","status":"passed","time":{"start":1699819303545,"stop":1699819304110,"duration":565}},{"uid":"91d585a2a7649bde","reportUrl":"https://novasamatech.github.io/test-runner/4124//#testresult/91d585a2a7649bde","status":"passed","time":{"start":1699804889925,"stop":1699804890623,"duration":698}},{"uid":"e6e63326f55048a2","reportUrl":"https://novasamatech.github.io/test-runner/4123//#testresult/e6e63326f55048a2","status":"passed","time":{"start":1699790492384,"stop":1699790493029,"duration":645}},{"uid":"77d24f9c419cd135","reportUrl":"https://novasamatech.github.io/test-runner/4122//#testresult/77d24f9c419cd135","status":"passed","time":{"start":1699776144172,"stop":1699776144987,"duration":815}},{"uid":"f679228d3a96bfce","reportUrl":"https://novasamatech.github.io/test-runner/4121//#testresult/f679228d3a96bfce","status":"passed","time":{"start":1699761702660,"stop":1699761703470,"duration":810}},{"uid":"2eebddce7a783892","reportUrl":"https://novasamatech.github.io/test-runner/4120//#testresult/2eebddce7a783892","status":"passed","time":{"start":1699747354653,"stop":1699747355485,"duration":832}},{"uid":"3b41b70f2d51bc74","reportUrl":"https://novasamatech.github.io/test-runner/4119//#testresult/3b41b70f2d51bc74","status":"passed","time":{"start":1699732907549,"stop":1699732908332,"duration":783}},{"uid":"c7fb81f738d495f2","reportUrl":"https://novasamatech.github.io/test-runner/4118//#testresult/c7fb81f738d495f2","status":"passed","time":{"start":1699718525896,"stop":1699718526393,"duration":497}},{"uid":"a917cf1e84b0e4e0","reportUrl":"https://novasamatech.github.io/test-runner/4117//#testresult/a917cf1e84b0e4e0","status":"passed","time":{"start":1699704090144,"stop":1699704091214,"duration":1070}},{"uid":"72e33606efd8f9fc","reportUrl":"https://novasamatech.github.io/test-runner/4116//#testresult/72e33606efd8f9fc","status":"passed","time":{"start":1699689698016,"stop":1699689698674,"duration":658}},{"uid":"6c7f214d9728bede","reportUrl":"https://novasamatech.github.io/test-runner/4115//#testresult/6c7f214d9728bede","status":"passed","time":{"start":1699675280026,"stop":1699675280982,"duration":956}},{"uid":"c2ea986cf3c3fbfd","reportUrl":"https://novasamatech.github.io/test-runner/4114//#testresult/c2ea986cf3c3fbfd","status":"passed","time":{"start":1699660942637,"stop":1699660943679,"duration":1042}},{"uid":"2fde9020c9677ad0","reportUrl":"https://novasamatech.github.io/test-runner/4113//#testresult/2fde9020c9677ad0","status":"passed","time":{"start":1699646520244,"stop":1699646520903,"duration":659}},{"uid":"ed093c044f887c99","reportUrl":"https://novasamatech.github.io/test-runner/4112//#testresult/ed093c044f887c99","status":"passed","time":{"start":1699632110901,"stop":1699632111795,"duration":894}},{"uid":"34e1e01016bd9cee","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/34e1e01016bd9cee","status":"passed","time":{"start":1699617716632,"stop":1699617717346,"duration":714}},{"uid":"7030eb99e0743be9","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/7030eb99e0743be9","status":"passed","time":{"start":1699603343624,"stop":1699603344456,"duration":832}},{"uid":"29c97cc5416a8c85","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/29c97cc5416a8c85","status":"passed","time":{"start":1699588956011,"stop":1699588956738,"duration":727}}]},"tags":[]},"source":"f134aed8c06b977a.json","parameterValues":["{'url': 'wss://mainnet.polkadex.trade', 'name': 'Polkadex'}"]}