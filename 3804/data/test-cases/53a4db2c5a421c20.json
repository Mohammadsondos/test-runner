{"uid":"53a4db2c5a421c20","name":"test_has_new_assets[Test for Efinity]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"d3b82156e67e0ae25497e2fe84c6c461","time":{"start":1695225779714,"stop":1695225796132,"duration":16418},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f50afa9dde0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f50b4093370>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f50afa9dde0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f50b4093370>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"6d5b81ec50a6c426","name":"stdout","source":"6d5b81ec50a6c426.txt","type":"text/plain","size":2595}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az395-871"},{"name":"thread","value":"2057-Dummy-1"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f50b4093370>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b567b8ab36fad95","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695225748317,"stop":1695225764686,"duration":16369}},{"uid":"a46105a0640ac858","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695225715900,"stop":1695225733283,"duration":17383}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":163,"unknown":0,"total":164},"items":[{"uid":"e1ca7a5e0d53b57b","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/e1ca7a5e0d53b57b","status":"passed","time":{"start":1695211319192,"stop":1695211321927,"duration":2735}},{"uid":"3328de9b83e9d88a","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/3328de9b83e9d88a","status":"passed","time":{"start":1695196920615,"stop":1695196923854,"duration":3239}},{"uid":"9d5c16750c5772b","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/9d5c16750c5772b","status":"passed","time":{"start":1695182527071,"stop":1695182530869,"duration":3798}},{"uid":"653d3eb1647523ba","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/653d3eb1647523ba","status":"passed","time":{"start":1695168178926,"stop":1695168184022,"duration":5096}},{"uid":"87980e70fd8a0399","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/87980e70fd8a0399","status":"passed","time":{"start":1695153732702,"stop":1695153737431,"duration":4729}},{"uid":"ab366a682912ea3e","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/ab366a682912ea3e","status":"passed","time":{"start":1695139329777,"stop":1695139333489,"duration":3712}},{"uid":"4b1580aecc4d8ee","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/4b1580aecc4d8ee","status":"passed","time":{"start":1695124924240,"stop":1695124928361,"duration":4121}},{"uid":"f5885efc510ff20a","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/f5885efc510ff20a","status":"passed","time":{"start":1695110521304,"stop":1695110524458,"duration":3154}},{"uid":"224995e0a780e74a","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/224995e0a780e74a","status":"passed","time":{"start":1695096121699,"stop":1695096124748,"duration":3049}},{"uid":"406e257cce5d4525","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/406e257cce5d4525","status":"passed","time":{"start":1695081777212,"stop":1695081781064,"duration":3852}},{"uid":"fc6a3b05ba9cf43","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/fc6a3b05ba9cf43","status":"passed","time":{"start":1695052918335,"stop":1695052921023,"duration":2688}},{"uid":"ce9af1c4a8c027e8","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/ce9af1c4a8c027e8","status":"passed","time":{"start":1695067328067,"stop":1695067331663,"duration":3596}},{"uid":"b9acc9fc6ac55ab9","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/b9acc9fc6ac55ab9","status":"passed","time":{"start":1695038525659,"stop":1695038527973,"duration":2314}},{"uid":"4f528fd088c0a0b3","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/4f528fd088c0a0b3","status":"passed","time":{"start":1695024134816,"stop":1695024138211,"duration":3395}},{"uid":"bd854e7284fe0603","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/bd854e7284fe0603","status":"passed","time":{"start":1695009727052,"stop":1695009730209,"duration":3157}},{"uid":"c981b7cf9cf475fb","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/c981b7cf9cf475fb","status":"passed","time":{"start":1694995387807,"stop":1694995393501,"duration":5694}},{"uid":"cb8bccbd70a6f067","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/cb8bccbd70a6f067","status":"passed","time":{"start":1694980921502,"stop":1694980928482,"duration":6980}},{"uid":"e55d5372d027f3e8","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/e55d5372d027f3e8","status":"passed","time":{"start":1694966511694,"stop":1694966513982,"duration":2288}},{"uid":"280749c046162682","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/280749c046162682","status":"passed","time":{"start":1694952148903,"stop":1694952153641,"duration":4738}},{"uid":"4cb1d6964e0494b9","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/4cb1d6964e0494b9","status":"passed","time":{"start":1694937713673,"stop":1694937716521,"duration":2848}}]},"tags":[]},"source":"53a4db2c5a421c20.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f50b4093370>"]}