{"uid":"f893613de44edb59","name":"test_can_create_connection[Test for Efinity, url: wss://rpc.efinity.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d58f635eee82df512b24fbce219b01da","time":{"start":1695225771361,"stop":1695225771382,"duration":21},"status":"broken","statusMessage":"ConnectionRefusedError: [Errno 111] Connection refused","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://rpc.efinity.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:204: in _open_socket\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('0.0.0.0', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   ConnectionRefusedError: [Errno 111] Connection refused\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: ConnectionRefusedError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ConnectionRefusedError: [Errno 111] Connection refused","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://rpc.efinity.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:204: in _open_socket\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('0.0.0.0', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   ConnectionRefusedError: [Errno 111] Connection refused\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: ConnectionRefusedError","steps":[],"attachments":[{"uid":"97bd6465fbf46625","name":"stdout","source":"97bd6465fbf46625.txt","type":"text/plain","size":306}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az482-594"},{"name":"thread","value":"2072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.efinity.io', 'name': 'Efinity'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6b0ab59fc66e9b1e","status":"broken","statusDetails":"ConnectionRefusedError: [Errno 111] Connection refused","time":{"start":1695225756214,"stop":1695225756269,"duration":55}},{"uid":"4d56a3615cc454ee","status":"broken","statusDetails":"ConnectionRefusedError: [Errno 111] Connection refused","time":{"start":1695225741063,"stop":1695225741117,"duration":54}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":164,"unknown":0,"total":165},"items":[{"uid":"8f76b855142b0ddc","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/8f76b855142b0ddc","status":"passed","time":{"start":1695211336932,"stop":1695211337294,"duration":362}},{"uid":"3fff4d9f7e3d405e","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/3fff4d9f7e3d405e","status":"passed","time":{"start":1695196929457,"stop":1695196929768,"duration":311}},{"uid":"cb36b22306f1afd3","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/cb36b22306f1afd3","status":"passed","time":{"start":1695182511165,"stop":1695182511538,"duration":373}},{"uid":"e178de425e28931d","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/e178de425e28931d","status":"passed","time":{"start":1695168152125,"stop":1695168152566,"duration":441}},{"uid":"2dc76f2f7758fd7d","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/2dc76f2f7758fd7d","status":"passed","time":{"start":1695153705648,"stop":1695153706000,"duration":352}},{"uid":"db7c6052615b6b8b","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/db7c6052615b6b8b","status":"passed","time":{"start":1695139314209,"stop":1695139314560,"duration":351}},{"uid":"8b47e02fe687ef12","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/8b47e02fe687ef12","status":"passed","time":{"start":1695124916703,"stop":1695124917019,"duration":316}},{"uid":"2e548f5859ecb4c6","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/2e548f5859ecb4c6","status":"passed","time":{"start":1695110532000,"stop":1695110532384,"duration":384}},{"uid":"e9f96e1e090e8c0c","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/e9f96e1e090e8c0c","status":"passed","time":{"start":1695096129518,"stop":1695096129827,"duration":309}},{"uid":"4eeb58a3b5eb8d9a","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/4eeb58a3b5eb8d9a","status":"passed","time":{"start":1695081771933,"stop":1695081772232,"duration":299}},{"uid":"aea3c3abb8057a48","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/aea3c3abb8057a48","status":"passed","time":{"start":1695052906835,"stop":1695052906952,"duration":117}},{"uid":"247bab511b6d5eba","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/247bab511b6d5eba","status":"passed","time":{"start":1695067308590,"stop":1695067308930,"duration":340}},{"uid":"915f9b31784338d2","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/915f9b31784338d2","status":"passed","time":{"start":1695038525781,"stop":1695038526040,"duration":259}},{"uid":"132dd8d2598a4442","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/132dd8d2598a4442","status":"passed","time":{"start":1695024124981,"stop":1695024125269,"duration":288}},{"uid":"d68c9a5ceed25457","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/d68c9a5ceed25457","status":"passed","time":{"start":1695009708387,"stop":1695009708734,"duration":347}},{"uid":"c05b5a33794cb1a6","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/c05b5a33794cb1a6","status":"passed","time":{"start":1694995357626,"stop":1694995358135,"duration":509}},{"uid":"fb347107cf82aeef","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/fb347107cf82aeef","status":"passed","time":{"start":1694980895066,"stop":1694980895329,"duration":263}},{"uid":"c7ccaf108b7b80e5","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/c7ccaf108b7b80e5","status":"passed","time":{"start":1694966486786,"stop":1694966486969,"duration":183}},{"uid":"3be59124c5679610","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/3be59124c5679610","status":"passed","time":{"start":1694952097119,"stop":1694952097353,"duration":234}},{"uid":"ca40d293ae9b0f60","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/ca40d293ae9b0f60","status":"passed","time":{"start":1694937698336,"stop":1694937698687,"duration":351}}]},"tags":[]},"source":"f893613de44edb59.json","parameterValues":["{'url': 'wss://rpc.efinity.io', 'name': 'Efinity'}"]}