{"uid":"142f6eb47489adf0","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1673035442987,"stop":1673035443475,"duration":488},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","steps":[],"attachments":[{"uid":"892fc6c18942a728","name":"stdout","source":"892fc6c18942a728.txt","type":"text/plain","size":348}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az402-229"},{"name":"thread","value":"1700-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9870f732feb833a","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1673035432327,"stop":1673035432813,"duration":486}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":92,"skipped":0,"passed":401,"unknown":0,"total":493},"items":[{"uid":"e8765fcb2864316","reportUrl":"https://nova-wallet.github.io/test-runner/2224//#testresult/e8765fcb2864316","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1673021058939,"stop":1673021059271,"duration":332}},{"uid":"7ea1c2c5c462835b","reportUrl":"https://nova-wallet.github.io/test-runner/2223//#testresult/7ea1c2c5c462835b","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:997)","time":{"start":1673006697406,"stop":1673006697840,"duration":434}},{"uid":"3f7fa7ef3fa2260d","reportUrl":"https://nova-wallet.github.io/test-runner/2222//#testresult/3f7fa7ef3fa2260d","status":"passed","time":{"start":1672992248693,"stop":1672992250075,"duration":1382}},{"uid":"205aceb5670027cf","reportUrl":"https://nova-wallet.github.io/test-runner/2221//#testresult/205aceb5670027cf","status":"passed","time":{"start":1672977850150,"stop":1672977851165,"duration":1015}},{"uid":"1ccad3912d71539a","reportUrl":"https://nova-wallet.github.io/test-runner/2220//#testresult/1ccad3912d71539a","status":"passed","time":{"start":1672963994860,"stop":1672963996156,"duration":1296}},{"uid":"27b00b4bb3546194","reportUrl":"https://nova-wallet.github.io/test-runner/2219//#testresult/27b00b4bb3546194","status":"passed","time":{"start":1672949021584,"stop":1672949022444,"duration":860}},{"uid":"a376c5448b822a14","reportUrl":"https://nova-wallet.github.io/test-runner/2218//#testresult/a376c5448b822a14","status":"passed","time":{"start":1672934658860,"stop":1672934660148,"duration":1288}},{"uid":"8c1d0868bb6fdd9e","reportUrl":"https://nova-wallet.github.io/test-runner/2217//#testresult/8c1d0868bb6fdd9e","status":"passed","time":{"start":1672920298703,"stop":1672920299927,"duration":1224}},{"uid":"b13f69ade829dd2c","reportUrl":"https://nova-wallet.github.io/test-runner/2216//#testresult/b13f69ade829dd2c","status":"passed","time":{"start":1672905865815,"stop":1672905866675,"duration":860}},{"uid":"b9e9851a9aa69c1d","reportUrl":"https://nova-wallet.github.io/test-runner/2215//#testresult/b9e9851a9aa69c1d","status":"passed","time":{"start":1672891425188,"stop":1672891426036,"duration":848}},{"uid":"ec7c91786c612f7a","reportUrl":"https://nova-wallet.github.io/test-runner/2214//#testresult/ec7c91786c612f7a","status":"passed","time":{"start":1672877611154,"stop":1672877611790,"duration":636}},{"uid":"ac8e1013b0dc6492","reportUrl":"https://nova-wallet.github.io/test-runner/2213//#testresult/ac8e1013b0dc6492","status":"passed","time":{"start":1672862622545,"stop":1672862623413,"duration":868}},{"uid":"6f28cd4fbd476907","reportUrl":"https://nova-wallet.github.io/test-runner/2212//#testresult/6f28cd4fbd476907","status":"passed","time":{"start":1672848283427,"stop":1672848284534,"duration":1107}},{"uid":"9f229147c95f9e71","reportUrl":"https://nova-wallet.github.io/test-runner/2211//#testresult/9f229147c95f9e71","status":"passed","time":{"start":1672833897228,"stop":1672833898367,"duration":1139}},{"uid":"456b030fb3c4e4a4","reportUrl":"https://nova-wallet.github.io/test-runner/2210//#testresult/456b030fb3c4e4a4","status":"passed","time":{"start":1672819470969,"stop":1672819471893,"duration":924}},{"uid":"60d2618006dbf2d9","reportUrl":"https://nova-wallet.github.io/test-runner/2209//#testresult/60d2618006dbf2d9","status":"passed","time":{"start":1672805182054,"stop":1672805182904,"duration":850}},{"uid":"dbc1c2fcec59393c","reportUrl":"https://nova-wallet.github.io/test-runner/2208//#testresult/dbc1c2fcec59393c","status":"passed","time":{"start":1672791193768,"stop":1672791194599,"duration":831}},{"uid":"5182ad33e9c9d6cb","reportUrl":"https://nova-wallet.github.io/test-runner/2207//#testresult/5182ad33e9c9d6cb","status":"passed","time":{"start":1672776221576,"stop":1672776222409,"duration":833}},{"uid":"357de7b510eb9852","reportUrl":"https://nova-wallet.github.io/test-runner/2206//#testresult/357de7b510eb9852","status":"passed","time":{"start":1672761830394,"stop":1672761831411,"duration":1017}},{"uid":"eb9365cff51afb86","reportUrl":"https://nova-wallet.github.io/test-runner/2205//#testresult/eb9365cff51afb86","status":"passed","time":{"start":1672747497613,"stop":1672747498788,"duration":1175}}]},"tags":[]},"source":"142f6eb47489adf0.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}