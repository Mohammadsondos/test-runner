{"uid":"62a6f2af9709726a","name":"test_can_create_connection[Test for Pichiu, url: wss://pichiu.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5d38ef88a22293e2d22b76dd74c65b9f","time":{"start":1673035541319,"stop":1673035600872,"duration":59553},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"783bd8e6035a91f0","name":"stdout","source":"783bd8e6035a91f0.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az402-229"},{"name":"thread","value":"1697-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"625e895b3895cd99","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1673035471584,"stop":1673035531237,"duration":59653}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":61,"skipped":0,"passed":432,"unknown":0,"total":493},"items":[{"uid":"a4acdb6dd4b5807b","reportUrl":"https://nova-wallet.github.io/test-runner/2224//#testresult/a4acdb6dd4b5807b","status":"passed","time":{"start":1673021080567,"stop":1673021080824,"duration":257}},{"uid":"fbc0a0eb83bb8f6","reportUrl":"https://nova-wallet.github.io/test-runner/2223//#testresult/fbc0a0eb83bb8f6","status":"passed","time":{"start":1673006711720,"stop":1673006757431,"duration":45711}},{"uid":"d714dc0ba6d2b30e","reportUrl":"https://nova-wallet.github.io/test-runner/2222//#testresult/d714dc0ba6d2b30e","status":"passed","time":{"start":1672992267328,"stop":1672992267403,"duration":75}},{"uid":"b6d4ef6c227163fc","reportUrl":"https://nova-wallet.github.io/test-runner/2221//#testresult/b6d4ef6c227163fc","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1672977919991,"stop":1672977979231,"duration":59240}},{"uid":"344132a678cee22f","reportUrl":"https://nova-wallet.github.io/test-runner/2220//#testresult/344132a678cee22f","status":"passed","time":{"start":1672964018840,"stop":1672964019057,"duration":217}},{"uid":"6cf5bb31ac3c5451","reportUrl":"https://nova-wallet.github.io/test-runner/2219//#testresult/6cf5bb31ac3c5451","status":"passed","time":{"start":1672949042753,"stop":1672949042833,"duration":80}},{"uid":"e5e8668543c18fcd","reportUrl":"https://nova-wallet.github.io/test-runner/2218//#testresult/e5e8668543c18fcd","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1672934750342,"stop":1672934810234,"duration":59892}},{"uid":"e217e3d95733f50a","reportUrl":"https://nova-wallet.github.io/test-runner/2217//#testresult/e217e3d95733f50a","status":"passed","time":{"start":1672920325881,"stop":1672920326066,"duration":185}},{"uid":"2487df43d7e2c811","reportUrl":"https://nova-wallet.github.io/test-runner/2216//#testresult/2487df43d7e2c811","status":"passed","time":{"start":1672905885733,"stop":1672905885817,"duration":84}},{"uid":"28a98eab415418ca","reportUrl":"https://nova-wallet.github.io/test-runner/2215//#testresult/28a98eab415418ca","status":"passed","time":{"start":1672891444565,"stop":1672891444623,"duration":58}},{"uid":"f6a5b82197026221","reportUrl":"https://nova-wallet.github.io/test-runner/2214//#testresult/f6a5b82197026221","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1672877678666,"stop":1672877709055,"duration":30389}},{"uid":"994ef4b48ffdcbdc","reportUrl":"https://nova-wallet.github.io/test-runner/2213//#testresult/994ef4b48ffdcbdc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1672862685471,"stop":1672862715670,"duration":30199}},{"uid":"960748732ebcaed0","reportUrl":"https://nova-wallet.github.io/test-runner/2212//#testresult/960748732ebcaed0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1672848352297,"stop":1672848405247,"duration":52950}},{"uid":"12a60ac9c02390b9","reportUrl":"https://nova-wallet.github.io/test-runner/2211//#testresult/12a60ac9c02390b9","status":"passed","time":{"start":1672833929412,"stop":1672833929729,"duration":317}},{"uid":"54d76c11ceca453","reportUrl":"https://nova-wallet.github.io/test-runner/2210//#testresult/54d76c11ceca453","status":"passed","time":{"start":1672819490254,"stop":1672819490413,"duration":159}},{"uid":"42c0bb0e8d28a2d","reportUrl":"https://nova-wallet.github.io/test-runner/2209//#testresult/42c0bb0e8d28a2d","status":"passed","time":{"start":1672805202970,"stop":1672805203042,"duration":72}},{"uid":"76104d3517177282","reportUrl":"https://nova-wallet.github.io/test-runner/2208//#testresult/76104d3517177282","status":"passed","time":{"start":1672791220409,"stop":1672791220738,"duration":329}},{"uid":"c8dfce001ce8268f","reportUrl":"https://nova-wallet.github.io/test-runner/2207//#testresult/c8dfce001ce8268f","status":"passed","time":{"start":1672776240784,"stop":1672776240881,"duration":97}},{"uid":"ec320d6feb1f0e03","reportUrl":"https://nova-wallet.github.io/test-runner/2206//#testresult/ec320d6feb1f0e03","status":"passed","time":{"start":1672761850444,"stop":1672761850514,"duration":70}},{"uid":"539485cc21beeed4","reportUrl":"https://nova-wallet.github.io/test-runner/2205//#testresult/539485cc21beeed4","status":"passed","time":{"start":1672747524147,"stop":1672747524461,"duration":314}}]},"tags":[]},"source":"62a6f2af9709726a.json","parameterValues":["{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"]}