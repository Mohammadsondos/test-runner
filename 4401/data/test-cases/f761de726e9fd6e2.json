{"uid":"f761de726e9fd6e2","name":"test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f40d393a2004b4ab9fba62244d213349","time":{"start":1703678860560,"stop":1703678860560,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1703678829597,"stop":1703678830032,"duration":435},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703678845094,"stop":1703678845496,"duration":402},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703678860560,"stop":1703678861033,"duration":473},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d55ca52609a72dbf","name":"stdout","source":"d55ca52609a72dbf.txt","type":"text/plain","size":726}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az736-601"},{"name":"thread","value":"2081-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6e9869b556f33859","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703678845094,"stop":1703678845094,"duration":0}},{"uid":"a93d3a83a121e388","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703678829596,"stop":1703678829596,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":678,"unknown":0,"total":689},"items":[{"uid":"90d73b11a92d2ed","reportUrl":"https://novasamatech.github.io/test-runner/4400//#testresult/90d73b11a92d2ed","status":"passed","time":{"start":1703664318919,"stop":1703664318919,"duration":0}},{"uid":"19c6530e882c3904","reportUrl":"https://novasamatech.github.io/test-runner/4399//#testresult/19c6530e882c3904","status":"passed","time":{"start":1703650003583,"stop":1703650003583,"duration":0}},{"uid":"25f79d67ecc4c921","reportUrl":"https://novasamatech.github.io/test-runner/4398//#testresult/25f79d67ecc4c921","status":"passed","time":{"start":1703635606935,"stop":1703635606935,"duration":0}},{"uid":"49c8d6a3ae2224c1","reportUrl":"https://novasamatech.github.io/test-runner/4397//#testresult/49c8d6a3ae2224c1","status":"passed","time":{"start":1703621212981,"stop":1703621212981,"duration":0}},{"uid":"55e1e9a521713bb0","reportUrl":"https://novasamatech.github.io/test-runner/4396//#testresult/55e1e9a521713bb0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703606833681,"stop":1703606833681,"duration":0}},{"uid":"f1b02b665f9fac60","reportUrl":"https://novasamatech.github.io/test-runner/4395//#testresult/f1b02b665f9fac60","status":"passed","time":{"start":1703592366209,"stop":1703592366210,"duration":1}},{"uid":"85ff42b8f82813fc","reportUrl":"https://novasamatech.github.io/test-runner/4394//#testresult/85ff42b8f82813fc","status":"passed","time":{"start":1703578029320,"stop":1703578029320,"duration":0}},{"uid":"15d2f657dc5e3140","reportUrl":"https://novasamatech.github.io/test-runner/4393//#testresult/15d2f657dc5e3140","status":"passed","time":{"start":1703563574816,"stop":1703563574817,"duration":1}},{"uid":"54581c7f067e29d0","reportUrl":"https://novasamatech.github.io/test-runner/4392//#testresult/54581c7f067e29d0","status":"passed","time":{"start":1703549222278,"stop":1703549222279,"duration":1}},{"uid":"4fd2fa4c1f40da0d","reportUrl":"https://novasamatech.github.io/test-runner/4391//#testresult/4fd2fa4c1f40da0d","status":"passed","time":{"start":1703534819749,"stop":1703534819749,"duration":0}},{"uid":"22310ce1b22fbbf3","reportUrl":"https://novasamatech.github.io/test-runner/4390//#testresult/22310ce1b22fbbf3","status":"passed","time":{"start":1703520435035,"stop":1703520435035,"duration":0}},{"uid":"f072509a597ff105","reportUrl":"https://novasamatech.github.io/test-runner/4389//#testresult/f072509a597ff105","status":"passed","time":{"start":1703505995544,"stop":1703505995544,"duration":0}},{"uid":"58058f8aae76c380","reportUrl":"https://novasamatech.github.io/test-runner/4388//#testresult/58058f8aae76c380","status":"passed","time":{"start":1703491595564,"stop":1703491595564,"duration":0}},{"uid":"258a461c48979c22","reportUrl":"https://novasamatech.github.io/test-runner/4387//#testresult/258a461c48979c22","status":"passed","time":{"start":1703477196360,"stop":1703477196360,"duration":0}},{"uid":"c2995f00d1727ec","reportUrl":"https://novasamatech.github.io/test-runner/4386//#testresult/c2995f00d1727ec","status":"passed","time":{"start":1703462821619,"stop":1703462821619,"duration":0}},{"uid":"bcdf70ea92be9770","reportUrl":"https://novasamatech.github.io/test-runner/4385//#testresult/bcdf70ea92be9770","status":"passed","time":{"start":1703448403856,"stop":1703448403856,"duration":0}},{"uid":"4131a1a99f0a8657","reportUrl":"https://novasamatech.github.io/test-runner/4384//#testresult/4131a1a99f0a8657","status":"passed","time":{"start":1703434035783,"stop":1703434035783,"duration":0}},{"uid":"e09ae6cb2a744d6","reportUrl":"https://novasamatech.github.io/test-runner/4383//#testresult/e09ae6cb2a744d6","status":"passed","time":{"start":1703419645547,"stop":1703419645547,"duration":0}},{"uid":"ede3bf256b3b8f3c","reportUrl":"https://novasamatech.github.io/test-runner/4382//#testresult/ede3bf256b3b8f3c","status":"passed","time":{"start":1703405198759,"stop":1703405198759,"duration":0}},{"uid":"87b140ff0865cf4c","reportUrl":"https://novasamatech.github.io/test-runner/4381//#testresult/87b140ff0865cf4c","status":"passed","time":{"start":1703390788958,"stop":1703390788959,"duration":1}}]},"tags":[]},"source":"f761de726e9fd6e2.json","parameterValues":["{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"]}