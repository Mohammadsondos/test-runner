{"uid":"2b00a0f772c42834","name":"test_precision[Test for Bittensor]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"3c12ea931b4fcd65868d09c1ec1e610d","time":{"start":1711324971021,"stop":1711324971021,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1711324963409,"stop":1711324964584,"duration":1175},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1711324969813,"stop":1711324971020,"duration":1207},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az575-801"},{"name":"thread","value":"2165-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7fc8c8372e00>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c860e8d636baf883","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1711324963408,"stop":1711324963408,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":1045,"unknown":0,"total":1050},"items":[{"uid":"fa8c79c9e99dff09","reportUrl":"https://novasamatech.github.io/test-runner/4938//#testresult/fa8c79c9e99dff09","status":"passed","time":{"start":1711310517163,"stop":1711310517163,"duration":0}},{"uid":"e63f2e36663fe134","reportUrl":"https://novasamatech.github.io/test-runner/4937//#testresult/e63f2e36663fe134","status":"passed","time":{"start":1711296119983,"stop":1711296119983,"duration":0}},{"uid":"a3826989e3a754c1","reportUrl":"https://novasamatech.github.io/test-runner/4936//#testresult/a3826989e3a754c1","status":"passed","time":{"start":1711281731750,"stop":1711281731750,"duration":0}},{"uid":"db3797e781e00cde","reportUrl":"https://novasamatech.github.io/test-runner/4935//#testresult/db3797e781e00cde","status":"passed","time":{"start":1711267326411,"stop":1711267326411,"duration":0}},{"uid":"f850fbfb5526d0e4","reportUrl":"https://novasamatech.github.io/test-runner/4934//#testresult/f850fbfb5526d0e4","status":"passed","time":{"start":1711252923457,"stop":1711252923458,"duration":1}},{"uid":"9fce9e1e2c546581","reportUrl":"https://novasamatech.github.io/test-runner/4933//#testresult/9fce9e1e2c546581","status":"passed","time":{"start":1711238558969,"stop":1711238558969,"duration":0}},{"uid":"e3a46ffe24ffb85f","reportUrl":"https://novasamatech.github.io/test-runner/4932//#testresult/e3a46ffe24ffb85f","status":"passed","time":{"start":1711224125557,"stop":1711224125557,"duration":0}},{"uid":"f162f9cb30df1606","reportUrl":"https://novasamatech.github.io/test-runner/4931//#testresult/f162f9cb30df1606","status":"passed","time":{"start":1711209718222,"stop":1711209718223,"duration":1}},{"uid":"8ea256513142ebde","reportUrl":"https://novasamatech.github.io/test-runner/4930//#testresult/8ea256513142ebde","status":"passed","time":{"start":1711195362639,"stop":1711195362640,"duration":1}},{"uid":"7b92f415dcdc589","reportUrl":"https://novasamatech.github.io/test-runner/4929//#testresult/7b92f415dcdc589","status":"passed","time":{"start":1711180914229,"stop":1711180914229,"duration":0}},{"uid":"6190f6d1695ec3e5","reportUrl":"https://novasamatech.github.io/test-runner/4928//#testresult/6190f6d1695ec3e5","status":"passed","time":{"start":1711166538893,"stop":1711166538893,"duration":0}},{"uid":"8f9195b297e4e3d6","reportUrl":"https://novasamatech.github.io/test-runner/4927//#testresult/8f9195b297e4e3d6","status":"passed","time":{"start":1711152148923,"stop":1711152148923,"duration":0}},{"uid":"7dfbe0f9b6516f5a","reportUrl":"https://novasamatech.github.io/test-runner/4926//#testresult/7dfbe0f9b6516f5a","status":"passed","time":{"start":1711137737637,"stop":1711137737637,"duration":0}},{"uid":"e00551c5e92bba83","reportUrl":"https://novasamatech.github.io/test-runner/4925//#testresult/e00551c5e92bba83","status":"passed","time":{"start":1711123325614,"stop":1711123325614,"duration":0}},{"uid":"b91f822573300824","reportUrl":"https://novasamatech.github.io/test-runner/4924//#testresult/b91f822573300824","status":"passed","time":{"start":1711108925304,"stop":1711108925304,"duration":0}},{"uid":"61e04a47a95536c2","reportUrl":"https://novasamatech.github.io/test-runner/4923//#testresult/61e04a47a95536c2","status":"passed","time":{"start":1711096547558,"stop":1711096547558,"duration":0}},{"uid":"28452564b48b32d0","reportUrl":"https://novasamatech.github.io/test-runner/4922//#testresult/28452564b48b32d0","status":"passed","time":{"start":1711094525153,"stop":1711094525153,"duration":0}},{"uid":"9f529753b490bf48","reportUrl":"https://novasamatech.github.io/test-runner/4921//#testresult/9f529753b490bf48","status":"passed","time":{"start":1711080119597,"stop":1711080119597,"duration":0}},{"uid":"d1d96b3b04905bdb","reportUrl":"https://novasamatech.github.io/test-runner/4920//#testresult/d1d96b3b04905bdb","status":"passed","time":{"start":1711065765114,"stop":1711065765114,"duration":0}},{"uid":"b23187c52baa1d27","reportUrl":"https://novasamatech.github.io/test-runner/4919//#testresult/b23187c52baa1d27","status":"passed","time":{"start":1711051325172,"stop":1711051325172,"duration":0}}]},"tags":[]},"source":"2b00a0f772c42834.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fc8c8372e00>"]}