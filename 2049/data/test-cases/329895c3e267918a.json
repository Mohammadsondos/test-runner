{"uid":"329895c3e267918a","name":"test_can_create_connection[Test for Parallel Heiko, url: wss://parallel-heiko.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e63bcdc37ef540889e40b7a474f60dd7","time":{"start":1670529911593,"stop":1670529927151,"duration":15558},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://parallel-heiko.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://parallel-heiko.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"750ee326370f99ce","name":"stdout","source":"750ee326370f99ce.txt","type":"text/plain","size":276}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az507-602"},{"name":"thread","value":"1664-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://parallel-heiko.api.onfinality.io/public-ws', 'name': 'Parallel Heiko'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fc7649930d29988b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670529885897,"stop":1670529901490,"duration":15593}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":88,"skipped":0,"passed":231,"unknown":0,"total":319},"items":[{"uid":"fc6a20f2a9417ee7","reportUrl":"https://nova-wallet.github.io/test-runner/2048//#testresult/fc6a20f2a9417ee7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670515502349,"stop":1670515518059,"duration":15710}},{"uid":"95694d5d343e1ee5","reportUrl":"https://nova-wallet.github.io/test-runner/2047//#testresult/95694d5d343e1ee5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670501170176,"stop":1670501185886,"duration":15710}},{"uid":"7083a262aa37fdb1","reportUrl":"https://nova-wallet.github.io/test-runner/2046//#testresult/7083a262aa37fdb1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670486707136,"stop":1670486722851,"duration":15715}},{"uid":"c0918eb099b1c632","reportUrl":"https://nova-wallet.github.io/test-runner/2045//#testresult/c0918eb099b1c632","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670472330197,"stop":1670472345895,"duration":15698}},{"uid":"fe3588b4aff9db00","reportUrl":"https://nova-wallet.github.io/test-runner/2044//#testresult/fe3588b4aff9db00","status":"passed","time":{"start":1670458438841,"stop":1670458440724,"duration":1883}},{"uid":"ec400a896fe1b519","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/ec400a896fe1b519","status":"passed","time":{"start":1670443473812,"stop":1670443477664,"duration":3852}},{"uid":"e0085732b4c0afba","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/e0085732b4c0afba","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670429120962,"stop":1670429136600,"duration":15638}},{"uid":"4272191d840c9e53","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/4272191d840c9e53","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670414775455,"stop":1670414790996,"duration":15541}},{"uid":"a47712f6270af4d5","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/a47712f6270af4d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670400313326,"stop":1670400329051,"duration":15725}},{"uid":"4aaca87f2a241a17","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/4aaca87f2a241a17","status":"passed","time":{"start":1670385878519,"stop":1670385879438,"duration":919}},{"uid":"8b207931e51a5c55","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/8b207931e51a5c55","status":"passed","time":{"start":1670372081115,"stop":1670372082061,"duration":946}},{"uid":"24548308af847b17","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/24548308af847b17","status":"passed","time":{"start":1670357079251,"stop":1670357080090,"duration":839}},{"uid":"e25e073e245cf328","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/e25e073e245cf328","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670342708564,"stop":1670342724196,"duration":15632}},{"uid":"bf5620abd708857e","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/bf5620abd708857e","status":"passed","time":{"start":1670333429564,"stop":1670333433414,"duration":3850}},{"uid":"2e3d21f68070be5d","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/2e3d21f68070be5d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670242184207,"stop":1670242184829,"duration":622}},{"uid":"b167754efd5a012","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/b167754efd5a012","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670227748499,"stop":1670227749120,"duration":621}},{"uid":"e66e8aa51c745863","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/e66e8aa51c745863","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670213323510,"stop":1670213324196,"duration":686}},{"uid":"4541d3d829ad402d","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/4541d3d829ad402d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670199540130,"stop":1670199555801,"duration":15671}},{"uid":"c09173b2272670d2","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/c09173b2272670d2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670184555829,"stop":1670184571553,"duration":15724}},{"uid":"42ed6b4766d744aa","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/42ed6b4766d744aa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670170127942,"stop":1670170143653,"duration":15711}}]},"tags":[]},"source":"329895c3e267918a.json","parameterValues":["{'url': 'wss://parallel-heiko.api.onfinality.io/public-ws', 'name': 'Parallel Heiko'}"]}