{"uid":"83a21314c4a69ca2","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1694937774291,"stop":1694937775068,"duration":777},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f88e73d6680>\nchain = <scripts.utils.chain_model.Chain object at 0x7f88e794f2b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f88e73d6680>\nchain = <scripts.utils.chain_model.Chain object at 0x7f88e794f2b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"72cadb61df9a4a9d","name":"stdout","source":"72cadb61df9a4a9d.txt","type":"text/plain","size":1361}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az339-164"},{"name":"thread","value":"2041-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f88e794f2b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5d7e50b39c0c360c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694937758450,"stop":1694937759263,"duration":813}},{"uid":"6bb23ebd085af507","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694937741959,"stop":1694937743413,"duration":1454}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":132,"unknown":0,"total":144},"items":[{"uid":"a92106b8a9ca6c43","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/a92106b8a9ca6c43","status":"passed","time":{"start":1694923384446,"stop":1694923391715,"duration":7269}},{"uid":"f66afbafc23db5e2","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/f66afbafc23db5e2","status":"passed","time":{"start":1694909031398,"stop":1694909037018,"duration":5620}},{"uid":"9953532b9d411d85","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/9953532b9d411d85","status":"passed","time":{"start":1694894551836,"stop":1694894556859,"duration":5023}},{"uid":"2c9ac487630a3e54","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/2c9ac487630a3e54","status":"passed","time":{"start":1694880144361,"stop":1694880147755,"duration":3394}},{"uid":"e9fedb8a5e9cc734","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/e9fedb8a5e9cc734","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694865772369,"stop":1694865772993,"duration":624}},{"uid":"72db249e361fa446","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/72db249e361fa446","status":"passed","time":{"start":1694851392376,"stop":1694851397270,"duration":4894}},{"uid":"2d1a91d1d4543ae","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/2d1a91d1d4543ae","status":"passed","time":{"start":1694836963695,"stop":1694836969280,"duration":5585}},{"uid":"4dcc6aa86f957f3e","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/4dcc6aa86f957f3e","status":"passed","time":{"start":1694822591878,"stop":1694822596619,"duration":4741}},{"uid":"4defa700eb8a06d7","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/4defa700eb8a06d7","status":"passed","time":{"start":1694808162950,"stop":1694808166094,"duration":3144}},{"uid":"7a1b9dab26b32e96","reportUrl":"https://novasamatech.github.io/test-runner/3774//#testresult/7a1b9dab26b32e96","status":"passed","time":{"start":1694793786237,"stop":1694793789930,"duration":3693}},{"uid":"b832a0447dc4a94e","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/b832a0447dc4a94e","status":"passed","time":{"start":1694779385367,"stop":1694779392615,"duration":7248}},{"uid":"74db3101e579b143","reportUrl":"https://novasamatech.github.io/test-runner/3772//#testresult/74db3101e579b143","status":"passed","time":{"start":1694764968641,"stop":1694764971807,"duration":3166}},{"uid":"7f66791704c65eac","reportUrl":"https://novasamatech.github.io/test-runner/3771//#testresult/7f66791704c65eac","status":"passed","time":{"start":1694750599265,"stop":1694750605461,"duration":6196}},{"uid":"8b21234dd5977079","reportUrl":"https://novasamatech.github.io/test-runner/3770//#testresult/8b21234dd5977079","status":"passed","time":{"start":1694736207813,"stop":1694736214790,"duration":6977}},{"uid":"fb34760712f97067","reportUrl":"https://novasamatech.github.io/test-runner/3769//#testresult/fb34760712f97067","status":"passed","time":{"start":1694721777655,"stop":1694721780927,"duration":3272}},{"uid":"1d88cf435bbfc53f","reportUrl":"https://novasamatech.github.io/test-runner/3768//#testresult/1d88cf435bbfc53f","status":"passed","time":{"start":1694707368412,"stop":1694707373761,"duration":5349}},{"uid":"a643afecb312e771","reportUrl":"https://novasamatech.github.io/test-runner/3767//#testresult/a643afecb312e771","status":"passed","time":{"start":1694692969871,"stop":1694692974287,"duration":4416}},{"uid":"6c5fccdf48721238","reportUrl":"https://novasamatech.github.io/test-runner/3766//#testresult/6c5fccdf48721238","status":"passed","time":{"start":1694678582064,"stop":1694678586964,"duration":4900}},{"uid":"ab7998031c8b6d54","reportUrl":"https://novasamatech.github.io/test-runner/3765//#testresult/ab7998031c8b6d54","status":"passed","time":{"start":1694664148258,"stop":1694664151930,"duration":3672}},{"uid":"c42cc1e3b03a74c9","reportUrl":"https://novasamatech.github.io/test-runner/3764//#testresult/c42cc1e3b03a74c9","status":"passed","time":{"start":1694649800458,"stop":1694649804132,"duration":3674}}]},"tags":[]},"source":"83a21314c4a69ca2.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f88e794f2b0>"]}