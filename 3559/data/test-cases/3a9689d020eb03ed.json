{"uid":"3a9689d020eb03ed","name":"test_can_create_connection[Test for krest, url: wss://wss-krest.peaq.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"bbac28ac5bc0cf35cd76b95eee77383a","time":{"start":1691784272423,"stop":1691784272841,"duration":418},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:32 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","statusTrace":"data = {'name': 'krest', 'url': 'wss://wss-krest.peaq.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:32 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:32 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","statusTrace":"data = {'name': 'krest', 'url': 'wss://wss-krest.peaq.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:32 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"7bd3dfa7ffc3cbad","name":"stdout","source":"7bd3dfa7ffc3cbad.txt","type":"text/plain","size":816}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az306-670"},{"name":"thread","value":"1976-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://wss-krest.peaq.network', 'name': 'krest'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8d07c264b08c70aa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:17 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691784256921,"stop":1691784257337,"duration":416}},{"uid":"f771f8f62b0041d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:01 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691784241376,"stop":1691784241791,"duration":415}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":15,"unknown":0,"total":23},"items":[{"uid":"2e6c950fca370730","reportUrl":"https://novasamatech.github.io/test-runner/3558//#testresult/2e6c950fca370730","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 16:04:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691769892001,"stop":1691769892520,"duration":519}},{"uid":"9060bafc532c927f","reportUrl":"https://novasamatech.github.io/test-runner/3557//#testresult/9060bafc532c927f","status":"passed","time":{"start":1691755491362,"stop":1691755492031,"duration":669}},{"uid":"524930919fd4b5cf","reportUrl":"https://novasamatech.github.io/test-runner/3556//#testresult/524930919fd4b5cf","status":"passed","time":{"start":1691741062692,"stop":1691741063379,"duration":687}},{"uid":"54ed775ce4cd132f","reportUrl":"https://novasamatech.github.io/test-runner/3555//#testresult/54ed775ce4cd132f","status":"passed","time":{"start":1691734834622,"stop":1691734835133,"duration":511}},{"uid":"a4e2ac34b1c3d6fb","reportUrl":"https://novasamatech.github.io/test-runner/3553//#testresult/a4e2ac34b1c3d6fb","status":"passed","time":{"start":1691734588538,"stop":1691734589049,"duration":511}},{"uid":"d1ace1cfa687f0d8","reportUrl":"https://novasamatech.github.io/test-runner/3554//#testresult/d1ace1cfa687f0d8","status":"passed","time":{"start":1691734715733,"stop":1691734716759,"duration":1026}},{"uid":"383c92075dd7a392","reportUrl":"https://novasamatech.github.io/test-runner/3552//#testresult/383c92075dd7a392","status":"passed","time":{"start":1691726666944,"stop":1691726667765,"duration":821}},{"uid":"db4faa23de16adf4","reportUrl":"https://novasamatech.github.io/test-runner/3551//#testresult/db4faa23de16adf4","status":"passed","time":{"start":1691712717964,"stop":1691712718444,"duration":480}},{"uid":"36d940055d6476e6","reportUrl":"https://novasamatech.github.io/test-runner/3550//#testresult/36d940055d6476e6","status":"passed","time":{"start":1691697864552,"stop":1691697865028,"duration":476}},{"uid":"8d5fde61efac3a47","reportUrl":"https://novasamatech.github.io/test-runner/3549//#testresult/8d5fde61efac3a47","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 10 Aug 2023 16:05:00 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691683500239,"stop":1691683500754,"duration":515}},{"uid":"23c45ac8463f11a0","reportUrl":"https://novasamatech.github.io/test-runner/3548//#testresult/23c45ac8463f11a0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 10 Aug 2023 12:05:41 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691669141545,"stop":1691669141952,"duration":407}},{"uid":"3ca1927902f440fc","reportUrl":"https://novasamatech.github.io/test-runner/3547//#testresult/3ca1927902f440fc","status":"passed","time":{"start":1691654694450,"stop":1691654695118,"duration":668}},{"uid":"2ee7bfa5576b7747","reportUrl":"https://novasamatech.github.io/test-runner/3546//#testresult/2ee7bfa5576b7747","status":"passed","time":{"start":1691640267993,"stop":1691640268516,"duration":523}},{"uid":"51b84788b760722e","reportUrl":"https://novasamatech.github.io/test-runner/3545//#testresult/51b84788b760722e","status":"passed","time":{"start":1691626477659,"stop":1691626478340,"duration":681}},{"uid":"610691a939dd5877","reportUrl":"https://novasamatech.github.io/test-runner/3544//#testresult/610691a939dd5877","status":"passed","time":{"start":1691611464343,"stop":1691611464838,"duration":495}},{"uid":"c4afde9098f74201","reportUrl":"https://novasamatech.github.io/test-runner/3543//#testresult/c4afde9098f74201","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 09 Aug 2023 16:05:20 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691597120121,"stop":1691597120655,"duration":534}},{"uid":"dc0dcbc060baeb3e","reportUrl":"https://novasamatech.github.io/test-runner/3542//#testresult/dc0dcbc060baeb3e","status":"passed","time":{"start":1691582702586,"stop":1691582703360,"duration":774}},{"uid":"15fd16e12598cdd8","reportUrl":"https://novasamatech.github.io/test-runner/3541//#testresult/15fd16e12598cdd8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 09 Aug 2023 08:05:39 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691568339136,"stop":1691568339525,"duration":389}},{"uid":"8a9dd9523edd3756","reportUrl":"https://novasamatech.github.io/test-runner/3540//#testresult/8a9dd9523edd3756","status":"passed","time":{"start":1691553856874,"stop":1691553857346,"duration":472}},{"uid":"4a546c469270ee52","reportUrl":"https://novasamatech.github.io/test-runner/3539//#testresult/4a546c469270ee52","status":"passed","time":{"start":1691540072385,"stop":1691540073347,"duration":962}}]},"tags":[]},"source":"3a9689d020eb03ed.json","parameterValues":["{'url': 'wss://wss-krest.peaq.network', 'name': 'krest'}"]}