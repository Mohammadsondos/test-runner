{"uid":"9ae670374bfbee18","name":"test_can_create_connection[Test for Zeitgeist, url: wss://zeitgeist-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"1911313e5366bd74b4f9ce70704534b6","time":{"start":1696550559664,"stop":1696550560024,"duration":360},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 06 Oct 2023 00:02:39 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 06 Oct 2023 00:02:39 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 06 Oct 2023 00:02:39 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 06 Oct 2023 00:02:39 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c5cf284d61abce7c","name":"stdout","source":"c5cf284d61abce7c.txt","type":"text/plain","size":1068}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az189-319"},{"name":"thread","value":"2218-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://zeitgeist-rpc.dwellir.com', 'name': 'Zeitgeist'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c16bd34c18021506","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 06 Oct 2023 00:02:24 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696550544231,"stop":1696550544574,"duration":343}},{"uid":"23d4e690d4f69d57","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 06 Oct 2023 00:02:08 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696550528705,"stop":1696550529083,"duration":378}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":251,"unknown":0,"total":257},"items":[{"uid":"63b366b0398d76a7","reportUrl":"https://novasamatech.github.io/test-runner/3896//#testresult/63b366b0398d76a7","status":"passed","time":{"start":1696536087898,"stop":1696536088562,"duration":664}},{"uid":"ad3d6489fe8615c2","reportUrl":"https://novasamatech.github.io/test-runner/3895//#testresult/ad3d6489fe8615c2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 05 Oct 2023 16:02:01 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696521721113,"stop":1696521721441,"duration":328}},{"uid":"8800bfff2c29363b","reportUrl":"https://novasamatech.github.io/test-runner/3894//#testresult/8800bfff2c29363b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 05 Oct 2023 12:02:08 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696507328461,"stop":1696507329043,"duration":582}},{"uid":"30801d4c17eb3044","reportUrl":"https://novasamatech.github.io/test-runner/3893//#testresult/30801d4c17eb3044","status":"passed","time":{"start":1696496638738,"stop":1696496639232,"duration":494}},{"uid":"c2db268f1e0ab6e","reportUrl":"https://novasamatech.github.io/test-runner/3892//#testresult/c2db268f1e0ab6e","status":"passed","time":{"start":1696492903011,"stop":1696492903484,"duration":473}},{"uid":"aed5dfcbebdd23f","reportUrl":"https://novasamatech.github.io/test-runner/3891//#testresult/aed5dfcbebdd23f","status":"passed","time":{"start":1696478516946,"stop":1696478517428,"duration":482}},{"uid":"43be3d31d2c863c5","reportUrl":"https://novasamatech.github.io/test-runner/3890//#testresult/43be3d31d2c863c5","status":"passed","time":{"start":1696464139980,"stop":1696464140457,"duration":477}},{"uid":"9ff3d3e31d4811d3","reportUrl":"https://novasamatech.github.io/test-runner/3889//#testresult/9ff3d3e31d4811d3","status":"passed","time":{"start":1696449724835,"stop":1696449725280,"duration":445}},{"uid":"f2968712448afa0d","reportUrl":"https://novasamatech.github.io/test-runner/3888//#testresult/f2968712448afa0d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 04 Oct 2023 16:02:15 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696435335298,"stop":1696435335660,"duration":362}},{"uid":"91b0e01efdd6c461","reportUrl":"https://novasamatech.github.io/test-runner/3887//#testresult/91b0e01efdd6c461","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 04 Oct 2023 12:02:09 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696420929341,"stop":1696420929941,"duration":600}},{"uid":"650a352882b6a098","reportUrl":"https://novasamatech.github.io/test-runner/3886//#testresult/650a352882b6a098","status":"passed","time":{"start":1696406497561,"stop":1696406498347,"duration":786}},{"uid":"de391a2bbe479089","reportUrl":"https://novasamatech.github.io/test-runner/3885//#testresult/de391a2bbe479089","status":"passed","time":{"start":1696392087599,"stop":1696392088073,"duration":474}},{"uid":"e404980e7f750a9b","reportUrl":"https://novasamatech.github.io/test-runner/3884//#testresult/e404980e7f750a9b","status":"passed","time":{"start":1696377730473,"stop":1696377730935,"duration":462}},{"uid":"1a891607d85b5954","reportUrl":"https://novasamatech.github.io/test-runner/3883//#testresult/1a891607d85b5954","status":"passed","time":{"start":1696363289453,"stop":1696363290057,"duration":604}},{"uid":"c3926e826538dbf4","reportUrl":"https://novasamatech.github.io/test-runner/3882//#testresult/c3926e826538dbf4","status":"passed","time":{"start":1696348888900,"stop":1696348889335,"duration":435}},{"uid":"398ccc6b08dac67f","reportUrl":"https://novasamatech.github.io/test-runner/3881//#testresult/398ccc6b08dac67f","status":"passed","time":{"start":1696334510019,"stop":1696334510784,"duration":765}},{"uid":"807b94cd881441d2","reportUrl":"https://novasamatech.github.io/test-runner/3880//#testresult/807b94cd881441d2","status":"passed","time":{"start":1696320099551,"stop":1696320100050,"duration":499}},{"uid":"c9c8b8fdb0ac0b0d","reportUrl":"https://novasamatech.github.io/test-runner/3879//#testresult/c9c8b8fdb0ac0b0d","status":"passed","time":{"start":1696305717937,"stop":1696305718686,"duration":749}},{"uid":"ab5bd2f16094de46","reportUrl":"https://novasamatech.github.io/test-runner/3878//#testresult/ab5bd2f16094de46","status":"passed","time":{"start":1696291340174,"stop":1696291340758,"duration":584}},{"uid":"891fa1b706b91b51","reportUrl":"https://novasamatech.github.io/test-runner/3877//#testresult/891fa1b706b91b51","status":"passed","time":{"start":1696276930704,"stop":1696276931382,"duration":678}}]},"tags":[]},"source":"9ae670374bfbee18.json","parameterValues":["{'url': 'wss://zeitgeist-rpc.dwellir.com', 'name': 'Zeitgeist'}"]}