{"uid":"3eaf0d20831cde24","name":"test_can_create_connection[Test for Imbue, url: wss://imbue-kusama.imbue.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"37f966fb65a76fdaf4ab1b4f770dedaf","time":{"start":1686384272453,"stop":1686384272535,"duration":82},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {} -+-+- None","statusTrace":"data = {'name': 'Imbue', 'url': 'wss://imbue-kusama.imbue.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {} -+-+- None","statusTrace":"data = {'name': 'Imbue', 'url': 'wss://imbue-kusama.imbue.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"90513aae17faece9","name":"stdout","source":"90513aae17faece9.txt","type":"text/plain","size":700}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az812-746"},{"name":"thread","value":"1938-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c4916eb99dce43c5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 10 Jun 2023 08:04:17 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686384257235,"stop":1686384257366,"duration":131}},{"uid":"8ea5620859a7cc9c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 10 Jun 2023 08:04:01 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686384241958,"stop":1686384242095,"duration":137}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":58,"skipped":0,"passed":164,"unknown":0,"total":222},"items":[{"uid":"5fa404c2e60c16ce","reportUrl":"https://novasamatech.github.io/test-runner/3180//#testresult/5fa404c2e60c16ce","status":"passed","time":{"start":1686369867263,"stop":1686369867372,"duration":109}},{"uid":"1073fe16dc4cc2e0","reportUrl":"https://novasamatech.github.io/test-runner/3179//#testresult/1073fe16dc4cc2e0","status":"passed","time":{"start":1686356006793,"stop":1686356006876,"duration":83}},{"uid":"5db6aef249536a01","reportUrl":"https://novasamatech.github.io/test-runner/3178//#testresult/5db6aef249536a01","status":"passed","time":{"start":1686341070183,"stop":1686341070495,"duration":312}},{"uid":"67ff4739571af59a","reportUrl":"https://novasamatech.github.io/test-runner/3177//#testresult/67ff4739571af59a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 09 Jun 2023 16:04:35 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686326675118,"stop":1686326675251,"duration":133}},{"uid":"1d9a9df4a7731bad","reportUrl":"https://novasamatech.github.io/test-runner/3176//#testresult/1d9a9df4a7731bad","status":"passed","time":{"start":1686312319736,"stop":1686312320050,"duration":314}},{"uid":"294ee997ea44709b","reportUrl":"https://novasamatech.github.io/test-runner/3175//#testresult/294ee997ea44709b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 09 Jun 2023 08:04:33 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686297873422,"stop":1686297873532,"duration":110}},{"uid":"2315a4bc51edafa","reportUrl":"https://novasamatech.github.io/test-runner/3174//#testresult/2315a4bc51edafa","status":"passed","time":{"start":1686283466813,"stop":1686283467045,"duration":232}},{"uid":"a47f3fbc51f26f7","reportUrl":"https://novasamatech.github.io/test-runner/3173//#testresult/a47f3fbc51f26f7","status":"passed","time":{"start":1686269707024,"stop":1686269707184,"duration":160}},{"uid":"64ceebdcc87b58b0","reportUrl":"https://novasamatech.github.io/test-runner/3172//#testresult/64ceebdcc87b58b0","status":"passed","time":{"start":1686254644851,"stop":1686254645041,"duration":190}},{"uid":"55b5bebf940669b3","reportUrl":"https://novasamatech.github.io/test-runner/3171//#testresult/55b5bebf940669b3","status":"broken","statusDetails":"KeyError: 'content-length'","time":{"start":1686240282662,"stop":1686240282923,"duration":261}},{"uid":"b6483885af159ab7","reportUrl":"https://novasamatech.github.io/test-runner/3170//#testresult/b6483885af159ab7","status":"passed","time":{"start":1686225905318,"stop":1686225905541,"duration":223}},{"uid":"f1e22b2d159ecaf2","reportUrl":"https://novasamatech.github.io/test-runner/3169//#testresult/f1e22b2d159ecaf2","status":"passed","time":{"start":1686211453693,"stop":1686211453803,"duration":110}},{"uid":"6e8c89ed54916df3","reportUrl":"https://novasamatech.github.io/test-runner/3168//#testresult/6e8c89ed54916df3","status":"passed","time":{"start":1686197074396,"stop":1686197074503,"duration":107}},{"uid":"1044cc12a7e5d04","reportUrl":"https://novasamatech.github.io/test-runner/3167//#testresult/1044cc12a7e5d04","status":"passed","time":{"start":1686183258332,"stop":1686183258781,"duration":449}},{"uid":"7d79c76ccb7a5fef","reportUrl":"https://novasamatech.github.io/test-runner/3166//#testresult/7d79c76ccb7a5fef","status":"broken","statusDetails":"KeyError: 'content-length'","time":{"start":1686168281533,"stop":1686168281766,"duration":233}},{"uid":"54da8d9a0ff94c91","reportUrl":"https://novasamatech.github.io/test-runner/3165//#testresult/54da8d9a0ff94c91","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 07 Jun 2023 16:04:56 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686153895895,"stop":1686153896246,"duration":351}},{"uid":"c8a1cc317ace5715","reportUrl":"https://novasamatech.github.io/test-runner/3164//#testresult/c8a1cc317ace5715","status":"passed","time":{"start":1686139505991,"stop":1686139506061,"duration":70}},{"uid":"84693ba758b4e347","reportUrl":"https://novasamatech.github.io/test-runner/3163//#testresult/84693ba758b4e347","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 07 Jun 2023 08:04:51 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686125091483,"stop":1686125091780,"duration":297}},{"uid":"ed20f87d389ace13","reportUrl":"https://novasamatech.github.io/test-runner/3162//#testresult/ed20f87d389ace13","status":"passed","time":{"start":1686110684882,"stop":1686110684959,"duration":77}},{"uid":"255ad974d4457cf1","reportUrl":"https://novasamatech.github.io/test-runner/3161//#testresult/255ad974d4457cf1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 07 Jun 2023 00:14:38 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686096878387,"stop":1686096878667,"duration":280}}]},"tags":[]},"source":"3eaf0d20831cde24.json","parameterValues":["{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"]}