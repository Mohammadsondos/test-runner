{"uid":"ee8382196f43ddb4","name":"test_can_create_connection[Test for Polkadot, url: wss://polkadot-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"315be884cdb6488ec3793a9c58c6e516","time":{"start":1694217753353,"stop":1694217753729,"duration":376},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 09 Sep 2023 00:02:33 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Polkadot', 'url': 'wss://polkadot-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 09 Sep 2023 00:02:33 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 09 Sep 2023 00:02:33 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Polkadot', 'url': 'wss://polkadot-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 09 Sep 2023 00:02:33 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"1ec94d4e5dae37ee","name":"stdout","source":"1ec94d4e5dae37ee.txt","type":"text/plain","size":1065}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az439-350"},{"name":"thread","value":"2443-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot-rpc.dwellir.com', 'name': 'Polkadot'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5b979aa8649aa50","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 09 Sep 2023 00:02:17 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1694217737906,"stop":1694217738261,"duration":355}},{"uid":"963091ad4794acfa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 09 Sep 2023 00:02:02 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1694217722279,"stop":1694217722711,"duration":432}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":92,"unknown":0,"total":94},"items":[{"uid":"9da2cccf91707d44","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/9da2cccf91707d44","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Fri, 08 Sep 2023 20:01:55 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1694203315116,"stop":1694203315570,"duration":454}},{"uid":"5950055dd53efc93","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/5950055dd53efc93","status":"passed","time":{"start":1694188889436,"stop":1694188890220,"duration":784}},{"uid":"b539440dbdfec4e8","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/b539440dbdfec4e8","status":"passed","time":{"start":1694174479796,"stop":1694174480298,"duration":502}},{"uid":"c9b1ec9fb876d667","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/c9b1ec9fb876d667","status":"passed","time":{"start":1694160080829,"stop":1694160081300,"duration":471}},{"uid":"5a83e39cd14ba9c","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/5a83e39cd14ba9c","status":"passed","time":{"start":1694145676188,"stop":1694145676682,"duration":494}},{"uid":"408a435f42b69d2a","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/408a435f42b69d2a","status":"passed","time":{"start":1694131323216,"stop":1694131323702,"duration":486}},{"uid":"e317833dc6715fd3","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/e317833dc6715fd3","status":"passed","time":{"start":1694116876447,"stop":1694116876935,"duration":488}},{"uid":"749de28df6dbded2","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/749de28df6dbded2","status":"passed","time":{"start":1694102488582,"stop":1694102489084,"duration":502}},{"uid":"a2753ac494eb6233","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/a2753ac494eb6233","status":"passed","time":{"start":1694088098298,"stop":1694088098923,"duration":625}},{"uid":"a225721ffdfd74df","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/a225721ffdfd74df","status":"passed","time":{"start":1694073690004,"stop":1694073690607,"duration":603}},{"uid":"990f3264836f972d","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/990f3264836f972d","status":"passed","time":{"start":1694059290779,"stop":1694059291387,"duration":608}},{"uid":"b32218e9331864cb","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/b32218e9331864cb","status":"passed","time":{"start":1694044919300,"stop":1694044919803,"duration":503}},{"uid":"8e25883a9e7c23c0","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/8e25883a9e7c23c0","status":"passed","time":{"start":1694030472851,"stop":1694030473391,"duration":540}},{"uid":"bb46aafcdf30d99e","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/bb46aafcdf30d99e","status":"passed","time":{"start":1694016081628,"stop":1694016082225,"duration":597}},{"uid":"f70c7b15ec2cc8ff","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/f70c7b15ec2cc8ff","status":"passed","time":{"start":1694001692027,"stop":1694001692679,"duration":652}},{"uid":"5a76f816015b1ab8","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/5a76f816015b1ab8","status":"passed","time":{"start":1693987283191,"stop":1693987283812,"duration":621}},{"uid":"86cbd55e5786a863","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/86cbd55e5786a863","status":"passed","time":{"start":1693972876319,"stop":1693972876850,"duration":531}},{"uid":"1ee45b6c7e4b7ae9","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/1ee45b6c7e4b7ae9","status":"passed","time":{"start":1693958534873,"stop":1693958535359,"duration":486}},{"uid":"3795d23559171b12","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/3795d23559171b12","status":"passed","time":{"start":1693944083928,"stop":1693944084455,"duration":527}},{"uid":"c19aa8dc315322ee","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/c19aa8dc315322ee","status":"passed","time":{"start":1693929677888,"stop":1693929678378,"duration":490}}]},"tags":[]},"source":"ee8382196f43ddb4.json","parameterValues":["{'url': 'wss://polkadot-rpc.dwellir.com', 'name': 'Polkadot'}"]}