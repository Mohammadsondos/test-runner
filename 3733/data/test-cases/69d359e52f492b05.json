{"uid":"69d359e52f492b05","name":"test_has_new_assets[Test for Kapex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"14aa47a7dfaa750107240c7e3d1beaa1","time":{"start":1694217839942,"stop":1694217841214,"duration":1272},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f151e9432b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f151e9a2740>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f151e9432b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f151e9a2740>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"76e0e358e9b5a6f0","name":"stdout","source":"76e0e358e9b5a6f0.txt","type":"text/plain","size":1602}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az210-96"},{"name":"thread","value":"2427-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f151e9a2740>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"473f4a675331d176","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694217823444,"stop":1694217824901,"duration":1457}},{"uid":"16c00e9ecd8447b3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694217807436,"stop":1694217808397,"duration":961}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":92,"unknown":0,"total":93},"items":[{"uid":"2f8eabd76639de6d","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/2f8eabd76639de6d","status":"passed","time":{"start":1694203345603,"stop":1694203348665,"duration":3062}},{"uid":"790611b75fb69ab4","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/790611b75fb69ab4","status":"passed","time":{"start":1694188960808,"stop":1694188964760,"duration":3952}},{"uid":"67008926e3daf16c","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/67008926e3daf16c","status":"passed","time":{"start":1694174596666,"stop":1694174600580,"duration":3914}},{"uid":"2a89cd6ea94a2de1","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/2a89cd6ea94a2de1","status":"passed","time":{"start":1694160145310,"stop":1694160150648,"duration":5338}},{"uid":"ab035df712f7966b","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/ab035df712f7966b","status":"passed","time":{"start":1694145740636,"stop":1694145744631,"duration":3995}},{"uid":"2d088371979a416","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/2d088371979a416","status":"passed","time":{"start":1694131422707,"stop":1694131427314,"duration":4607}},{"uid":"f6a021b5d82f498c","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/f6a021b5d82f498c","status":"passed","time":{"start":1694116977180,"stop":1694116983340,"duration":6160}},{"uid":"9ee593c35df941d2","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/9ee593c35df941d2","status":"passed","time":{"start":1694102584133,"stop":1694102590380,"duration":6247}},{"uid":"90379b92eb93d5fe","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/90379b92eb93d5fe","status":"passed","time":{"start":1694088156553,"stop":1694088162919,"duration":6366}},{"uid":"ed674f27f8fb230f","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/ed674f27f8fb230f","status":"passed","time":{"start":1694073749493,"stop":1694073752912,"duration":3419}},{"uid":"aa00240a68f62c03","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/aa00240a68f62c03","status":"passed","time":{"start":1694059380219,"stop":1694059386850,"duration":6631}},{"uid":"9450878ffd58c19d","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/9450878ffd58c19d","status":"passed","time":{"start":1694045023973,"stop":1694045029594,"duration":5621}},{"uid":"44e17b78080f08f6","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/44e17b78080f08f6","status":"passed","time":{"start":1694030576580,"stop":1694030581993,"duration":5413}},{"uid":"7537223da4f506a8","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/7537223da4f506a8","status":"passed","time":{"start":1694016182119,"stop":1694016187619,"duration":5500}},{"uid":"1828d0249b62d59e","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/1828d0249b62d59e","status":"passed","time":{"start":1694001782468,"stop":1694001785341,"duration":2873}},{"uid":"b6d56d04ba7d3c1a","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/b6d56d04ba7d3c1a","status":"passed","time":{"start":1693987364865,"stop":1693987368360,"duration":3495}},{"uid":"9049ba792d59bb4","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/9049ba792d59bb4","status":"passed","time":{"start":1693972949160,"stop":1693972952301,"duration":3141}},{"uid":"d114c1b32bd427f0","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/d114c1b32bd427f0","status":"passed","time":{"start":1693958605351,"stop":1693958609788,"duration":4437}},{"uid":"2898e36f585009a","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/2898e36f585009a","status":"passed","time":{"start":1693944151583,"stop":1693944155129,"duration":3546}},{"uid":"32b325ef1f888d84","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/32b325ef1f888d84","status":"passed","time":{"start":1693929761639,"stop":1693929765414,"duration":3775}}]},"tags":[]},"source":"69d359e52f492b05.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f151e9a2740>"]}