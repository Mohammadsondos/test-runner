{"uid":"7cd2bf039f063cc8","name":"test_can_create_connection[Test for krest, url: wss://wss-krest.peaq.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"bbac28ac5bc0cf35cd76b95eee77383a","time":{"start":1692043491770,"stop":1692043492161,"duration":391},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 20:04:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","statusTrace":"data = {'name': 'krest', 'url': 'wss://wss-krest.peaq.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 20:04:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 20:04:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","statusTrace":"data = {'name': 'krest', 'url': 'wss://wss-krest.peaq.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 20:04:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"fb67cc9ca452f87b","name":"stdout","source":"fb67cc9ca452f87b.txt","type":"text/plain","size":816}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1256-456"},{"name":"thread","value":"1972-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://wss-krest.peaq.network', 'name': 'krest'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"200e658b43d1ff69","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 20:04:36 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1692043476267,"stop":1692043476678,"duration":411}},{"uid":"648560ce2758a6d8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 20:04:21 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1692043460612,"stop":1692043461129,"duration":517}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":30,"unknown":0,"total":41},"items":[{"uid":"2cfe4486fe9350d3","reportUrl":"https://novasamatech.github.io/test-runner/3576//#testresult/2cfe4486fe9350d3","status":"passed","time":{"start":1692029087558,"stop":1692029088277,"duration":719}},{"uid":"9d0a29330c3e41c6","reportUrl":"https://novasamatech.github.io/test-runner/3575//#testresult/9d0a29330c3e41c6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 14 Aug 2023 12:06:09 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1692014769063,"stop":1692014769469,"duration":406}},{"uid":"665e361c4fe86bbd","reportUrl":"https://novasamatech.github.io/test-runner/3574//#testresult/665e361c4fe86bbd","status":"passed","time":{"start":1692000268996,"stop":1692000269493,"duration":497}},{"uid":"8ff494486b387f0f","reportUrl":"https://novasamatech.github.io/test-runner/3573//#testresult/8ff494486b387f0f","status":"passed","time":{"start":1691985862129,"stop":1691985863010,"duration":881}},{"uid":"504e60467c67a6e4","reportUrl":"https://novasamatech.github.io/test-runner/3572//#testresult/504e60467c67a6e4","status":"passed","time":{"start":1691971947056,"stop":1691971947685,"duration":629}},{"uid":"f96eb3e8b6e00832","reportUrl":"https://novasamatech.github.io/test-runner/3571//#testresult/f96eb3e8b6e00832","status":"passed","time":{"start":1691957081562,"stop":1691957082173,"duration":611}},{"uid":"c4b06251cb29b40a","reportUrl":"https://novasamatech.github.io/test-runner/3570//#testresult/c4b06251cb29b40a","status":"passed","time":{"start":1691942652133,"stop":1691942652818,"duration":685}},{"uid":"4fb5a59ff298c9f5","reportUrl":"https://novasamatech.github.io/test-runner/3569//#testresult/4fb5a59ff298c9f5","status":"passed","time":{"start":1691928264894,"stop":1691928265402,"duration":508}},{"uid":"2e5bd27bd751c3f2","reportUrl":"https://novasamatech.github.io/test-runner/3568//#testresult/2e5bd27bd751c3f2","status":"passed","time":{"start":1691913852981,"stop":1691913853664,"duration":683}},{"uid":"307edcb63c791b13","reportUrl":"https://novasamatech.github.io/test-runner/3567//#testresult/307edcb63c791b13","status":"passed","time":{"start":1691899444961,"stop":1691899445446,"duration":485}},{"uid":"2912bda7d7dc5082","reportUrl":"https://novasamatech.github.io/test-runner/3566//#testresult/2912bda7d7dc5082","status":"passed","time":{"start":1691885568122,"stop":1691885568636,"duration":514}},{"uid":"896ba601f797b24c","reportUrl":"https://novasamatech.github.io/test-runner/3565//#testresult/896ba601f797b24c","status":"passed","time":{"start":1691870634247,"stop":1691870634926,"duration":679}},{"uid":"df9146c552fe0a92","reportUrl":"https://novasamatech.github.io/test-runner/3564//#testresult/df9146c552fe0a92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 12 Aug 2023 16:04:41 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691856280781,"stop":1691856281187,"duration":406}},{"uid":"8470ad741275bf33","reportUrl":"https://novasamatech.github.io/test-runner/3562//#testresult/8470ad741275bf33","status":"passed","time":{"start":1691827458283,"stop":1691827458906,"duration":623}},{"uid":"1752c740ef745557","reportUrl":"https://novasamatech.github.io/test-runner/3563//#testresult/1752c740ef745557","status":"passed","time":{"start":1691841867048,"stop":1691841867704,"duration":656}},{"uid":"8d3a5cdce1109857","reportUrl":"https://novasamatech.github.io/test-runner/3561//#testresult/8d3a5cdce1109857","status":"passed","time":{"start":1691813052395,"stop":1691813053227,"duration":832}},{"uid":"763b95d0a2830ff3","reportUrl":"https://novasamatech.github.io/test-runner/3560//#testresult/763b95d0a2830ff3","status":"passed","time":{"start":1691799094194,"stop":1691799094693,"duration":499}},{"uid":"3a9689d020eb03ed","reportUrl":"https://novasamatech.github.io/test-runner/3559//#testresult/3a9689d020eb03ed","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 20:04:32 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691784272423,"stop":1691784272841,"duration":418}},{"uid":"2e6c950fca370730","reportUrl":"https://novasamatech.github.io/test-runner/3558//#testresult/2e6c950fca370730","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 11 Aug 2023 16:04:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive'} -+-+- None","time":{"start":1691769892001,"stop":1691769892520,"duration":519}},{"uid":"9060bafc532c927f","reportUrl":"https://novasamatech.github.io/test-runner/3557//#testresult/9060bafc532c927f","status":"passed","time":{"start":1691755491362,"stop":1691755492031,"duration":669}}]},"tags":[]},"source":"7cd2bf039f063cc8.json","parameterValues":["{'url': 'wss://wss-krest.peaq.network', 'name': 'krest'}"]}