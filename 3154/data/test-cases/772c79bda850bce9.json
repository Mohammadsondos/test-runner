{"uid":"772c79bda850bce9","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1685995508086,"stop":1685995508741,"duration":655},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7faab79004c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7faab7b84e20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7faab79004c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7faab7b84e20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"81e61db45c98ba5","name":"stdout","source":"81e61db45c98ba5.txt","type":"text/plain","size":1353}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az988-386"},{"name":"thread","value":"1890-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7faab7b84e20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f80fd9a33bdf6508","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1685995492526,"stop":1685995493071,"duration":545}},{"uid":"b7ed0f4ea94092b4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1685995476631,"stop":1685995477481,"duration":850}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":192,"unknown":0,"total":194},"items":[{"uid":"b7081155878058d","reportUrl":"https://novasamatech.github.io/test-runner/3153//#testresult/b7081155878058d","status":"passed","time":{"start":1685981082627,"stop":1685981089179,"duration":6552}},{"uid":"4719cb33d456b7d1","reportUrl":"https://novasamatech.github.io/test-runner/3152//#testresult/4719cb33d456b7d1","status":"passed","time":{"start":1685966770172,"stop":1685966777168,"duration":6996}},{"uid":"dbbad37a196b15fe","reportUrl":"https://novasamatech.github.io/test-runner/3151//#testresult/dbbad37a196b15fe","status":"passed","time":{"start":1685952333294,"stop":1685952337568,"duration":4274}},{"uid":"39e635447ea1f765","reportUrl":"https://novasamatech.github.io/test-runner/3150//#testresult/39e635447ea1f765","status":"passed","time":{"start":1685937914397,"stop":1685937924861,"duration":10464}},{"uid":"14afd8c06aab8489","reportUrl":"https://novasamatech.github.io/test-runner/3149//#testresult/14afd8c06aab8489","status":"passed","time":{"start":1685924106993,"stop":1685924114386,"duration":7393}},{"uid":"4bf50e060a3ffc47","reportUrl":"https://novasamatech.github.io/test-runner/3148//#testresult/4bf50e060a3ffc47","status":"passed","time":{"start":1685909085541,"stop":1685909089111,"duration":3570}},{"uid":"7c133486c6b878a9","reportUrl":"https://novasamatech.github.io/test-runner/3147//#testresult/7c133486c6b878a9","status":"passed","time":{"start":1685894695373,"stop":1685894699638,"duration":4265}},{"uid":"343c5293ccea383e","reportUrl":"https://novasamatech.github.io/test-runner/3146//#testresult/343c5293ccea383e","status":"passed","time":{"start":1685880324572,"stop":1685880330621,"duration":6049}},{"uid":"12dd81f8efb8315b","reportUrl":"https://novasamatech.github.io/test-runner/3145//#testresult/12dd81f8efb8315b","status":"passed","time":{"start":1685865870945,"stop":1685865875681,"duration":4736}},{"uid":"822154b331ccfde8","reportUrl":"https://novasamatech.github.io/test-runner/3144//#testresult/822154b331ccfde8","status":"passed","time":{"start":1685851477877,"stop":1685851486307,"duration":8430}},{"uid":"93ffd5225f5869f7","reportUrl":"https://novasamatech.github.io/test-runner/3143//#testresult/93ffd5225f5869f7","status":"passed","time":{"start":1685837828449,"stop":1685837835474,"duration":7025}},{"uid":"70dab28e78610a0d","reportUrl":"https://novasamatech.github.io/test-runner/3142//#testresult/70dab28e78610a0d","status":"passed","time":{"start":1685822713577,"stop":1685822721001,"duration":7424}},{"uid":"4c73d936185d8623","reportUrl":"https://novasamatech.github.io/test-runner/3141//#testresult/4c73d936185d8623","status":"passed","time":{"start":1685808331329,"stop":1685808342881,"duration":11552}},{"uid":"e4438a0449741bcf","reportUrl":"https://novasamatech.github.io/test-runner/3140//#testresult/e4438a0449741bcf","status":"passed","time":{"start":1685793932849,"stop":1685793935749,"duration":2900}},{"uid":"e2108c5d520f3d0b","reportUrl":"https://novasamatech.github.io/test-runner/3139//#testresult/e2108c5d520f3d0b","status":"passed","time":{"start":1685779486035,"stop":1685779492760,"duration":6725}},{"uid":"d6a1791387a0f611","reportUrl":"https://novasamatech.github.io/test-runner/3138//#testresult/d6a1791387a0f611","status":"passed","time":{"start":1685765140893,"stop":1685765144698,"duration":3805}},{"uid":"78f0cd3a2b757de8","reportUrl":"https://novasamatech.github.io/test-runner/3137//#testresult/78f0cd3a2b757de8","status":"passed","time":{"start":1685751277677,"stop":1685751283140,"duration":5463}},{"uid":"8499f4f7b654c51d","reportUrl":"https://novasamatech.github.io/test-runner/3136//#testresult/8499f4f7b654c51d","status":"passed","time":{"start":1685736265172,"stop":1685736276618,"duration":11446}},{"uid":"2d023326835ada27","reportUrl":"https://novasamatech.github.io/test-runner/3135//#testresult/2d023326835ada27","status":"passed","time":{"start":1685721896645,"stop":1685721907179,"duration":10534}},{"uid":"aff8dd088e5821e4","reportUrl":"https://novasamatech.github.io/test-runner/3134//#testresult/aff8dd088e5821e4","status":"passed","time":{"start":1685707554755,"stop":1685707567992,"duration":13237}}]},"tags":[]},"source":"772c79bda850bce9.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7faab7b84e20>"]}