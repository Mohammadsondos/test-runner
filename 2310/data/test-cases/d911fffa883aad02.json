{"uid":"d911fffa883aad02","name":"test_can_create_connection[Test for Subsocial, url: wss://para.f3joule.space]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"708fef24ef6e8bbe59707ee70782ff2a","time":{"start":1674230668722,"stop":1674230669181,"duration":459},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Subsocial', 'url': 'wss://para.f3joule.space'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Subsocial', 'url': 'wss://para.f3joule.space'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4d485212ca694076","name":"stdout","source":"4d485212ca694076.txt","type":"text/plain","size":216}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az565-548"},{"name":"thread","value":"1700-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://para.f3joule.space', 'name': 'Subsocial'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"df33ab4a36006d04","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1674230658058,"stop":1674230658587,"duration":529}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":293,"unknown":0,"total":349},"items":[{"uid":"d7cca32d36cf002a","reportUrl":"https://nova-wallet.github.io/test-runner/2309//#testresult/d7cca32d36cf002a","status":"passed","time":{"start":1674216329598,"stop":1674216330330,"duration":732}},{"uid":"149a19387049741f","reportUrl":"https://nova-wallet.github.io/test-runner/2308//#testresult/149a19387049741f","status":"passed","time":{"start":1674210311717,"stop":1674210312123,"duration":406}},{"uid":"f49884b7c41982c4","reportUrl":"https://nova-wallet.github.io/test-runner/2307//#testresult/f49884b7c41982c4","status":"passed","time":{"start":1674201858298,"stop":1674201859122,"duration":824}},{"uid":"b0cea1cbd70bd418","reportUrl":"https://nova-wallet.github.io/test-runner/2306//#testresult/b0cea1cbd70bd418","status":"passed","time":{"start":1674187470836,"stop":1674187471262,"duration":426}},{"uid":"a9992a7b8b8fff3e","reportUrl":"https://nova-wallet.github.io/test-runner/2305//#testresult/a9992a7b8b8fff3e","status":"passed","time":{"start":1674173664294,"stop":1674173665149,"duration":855}},{"uid":"a3907da378f37dd0","reportUrl":"https://nova-wallet.github.io/test-runner/2302//#testresult/a3907da378f37dd0","status":"passed","time":{"start":1674129918673,"stop":1674129919122,"duration":449}},{"uid":"36a10e4d1db97347","reportUrl":"https://nova-wallet.github.io/test-runner/2301//#testresult/36a10e4d1db97347","status":"passed","time":{"start":1674115493951,"stop":1674115494587,"duration":636}},{"uid":"b68cc77598c8b535","reportUrl":"https://nova-wallet.github.io/test-runner/2300//#testresult/b68cc77598c8b535","status":"passed","time":{"start":1674101055997,"stop":1674101056464,"duration":467}},{"uid":"49a6663f24a0ed11","reportUrl":"https://nova-wallet.github.io/test-runner/2299//#testresult/49a6663f24a0ed11","status":"passed","time":{"start":1674087224548,"stop":1674087225021,"duration":473}},{"uid":"848c6abdb32bd1ea","reportUrl":"https://nova-wallet.github.io/test-runner/2298//#testresult/848c6abdb32bd1ea","status":"passed","time":{"start":1674072249565,"stop":1674072253223,"duration":3658}},{"uid":"a61a5a7047d15fb3","reportUrl":"https://nova-wallet.github.io/test-runner/2297//#testresult/a61a5a7047d15fb3","status":"passed","time":{"start":1674057854865,"stop":1674057855342,"duration":477}},{"uid":"123380c9f6e34feb","reportUrl":"https://nova-wallet.github.io/test-runner/2296//#testresult/123380c9f6e34feb","status":"passed","time":{"start":1674043513217,"stop":1674043514027,"duration":810}},{"uid":"77f07317a212c739","reportUrl":"https://nova-wallet.github.io/test-runner/2295//#testresult/77f07317a212c739","status":"passed","time":{"start":1674029060504,"stop":1674029061167,"duration":663}},{"uid":"c99ac8004512ab4e","reportUrl":"https://nova-wallet.github.io/test-runner/2294//#testresult/c99ac8004512ab4e","status":"passed","time":{"start":1674014668142,"stop":1674014668879,"duration":737}},{"uid":"e92696d2a3b1691f","reportUrl":"https://nova-wallet.github.io/test-runner/2293//#testresult/e92696d2a3b1691f","status":"passed","time":{"start":1674000844479,"stop":1674000845407,"duration":928}},{"uid":"e70bd48c22ed358","reportUrl":"https://nova-wallet.github.io/test-runner/2292//#testresult/e70bd48c22ed358","status":"passed","time":{"start":1673985843193,"stop":1673985843918,"duration":725}},{"uid":"953d08874c7e0341","reportUrl":"https://nova-wallet.github.io/test-runner/2291//#testresult/953d08874c7e0341","status":"passed","time":{"start":1673971457616,"stop":1673971458097,"duration":481}},{"uid":"cdfaa62216afdd94","reportUrl":"https://nova-wallet.github.io/test-runner/2290//#testresult/cdfaa62216afdd94","status":"passed","time":{"start":1673957088489,"stop":1673957089997,"duration":1508}},{"uid":"fd09f20fa39d6080","reportUrl":"https://nova-wallet.github.io/test-runner/2289//#testresult/fd09f20fa39d6080","status":"passed","time":{"start":1673942685612,"stop":1673942686522,"duration":910}},{"uid":"57017e29acc0b84c","reportUrl":"https://nova-wallet.github.io/test-runner/2288//#testresult/57017e29acc0b84c","status":"passed","time":{"start":1673928261326,"stop":1673928262174,"duration":848}}]},"tags":[]},"source":"d911fffa883aad02.json","parameterValues":["{'url': 'wss://para.f3joule.space', 'name': 'Subsocial'}"]}