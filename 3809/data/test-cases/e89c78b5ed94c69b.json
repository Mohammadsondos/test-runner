{"uid":"e89c78b5ed94c69b","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1695297777542,"stop":1695297778605,"duration":1063},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f647213faf0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6472149600>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f647213faf0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6472149600>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"1e3dfc17ecfea417","name":"stdout","source":"1e3dfc17ecfea417.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az577-687"},{"name":"thread","value":"2063-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f6472149600>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f0efbb1c7222215e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695297761358,"stop":1695297762509,"duration":1151}},{"uid":"e473636c04289604","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695297744950,"stop":1695297746325,"duration":1375}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":15,"skipped":0,"passed":154,"unknown":0,"total":169},"items":[{"uid":"ad7f95c4f9f93936","reportUrl":"https://novasamatech.github.io/test-runner/3808//#testresult/ad7f95c4f9f93936","status":"passed","time":{"start":1695283341458,"stop":1695283346963,"duration":5505}},{"uid":"45b1c5cc322d02c3","reportUrl":"https://novasamatech.github.io/test-runner/3807//#testresult/45b1c5cc322d02c3","status":"passed","time":{"start":1695269004885,"stop":1695269009543,"duration":4658}},{"uid":"f0a3287caeaf91dc","reportUrl":"https://novasamatech.github.io/test-runner/3806//#testresult/f0a3287caeaf91dc","status":"passed","time":{"start":1695254613207,"stop":1695254619979,"duration":6772}},{"uid":"90f15dc291b75ac2","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/90f15dc291b75ac2","status":"passed","time":{"start":1695240137124,"stop":1695240142479,"duration":5355}},{"uid":"f82c3f89383e3760","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/f82c3f89383e3760","status":"passed","time":{"start":1695225729175,"stop":1695225734456,"duration":5281}},{"uid":"22ef373e7fde53fb","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/22ef373e7fde53fb","status":"passed","time":{"start":1695211330337,"stop":1695211333853,"duration":3516}},{"uid":"7d6ea04d0fdd851","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/7d6ea04d0fdd851","status":"passed","time":{"start":1695196936638,"stop":1695196942046,"duration":5408}},{"uid":"c21318e7b4968cd2","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/c21318e7b4968cd2","status":"passed","time":{"start":1695182538990,"stop":1695182542940,"duration":3950}},{"uid":"548a018bae5e5015","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/548a018bae5e5015","status":"passed","time":{"start":1695168203517,"stop":1695168211625,"duration":8108}},{"uid":"e565e268c11646ad","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/e565e268c11646ad","status":"passed","time":{"start":1695153750955,"stop":1695153760165,"duration":9210}},{"uid":"387e2f96761016e5","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/387e2f96761016e5","status":"passed","time":{"start":1695139347053,"stop":1695139352605,"duration":5552}},{"uid":"b90d92b7816f815d","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/b90d92b7816f815d","status":"passed","time":{"start":1695124929020,"stop":1695124932792,"duration":3772}},{"uid":"68475afdc749b45e","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/68475afdc749b45e","status":"passed","time":{"start":1695110532913,"stop":1695110536180,"duration":3267}},{"uid":"caf354dc041c70","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/caf354dc041c70","status":"passed","time":{"start":1695096128142,"stop":1695096133772,"duration":5630}},{"uid":"feea97345509527b","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/feea97345509527b","status":"passed","time":{"start":1695081796599,"stop":1695081801115,"duration":4516}},{"uid":"94655a4d8d7d1415","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/94655a4d8d7d1415","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695052954507,"stop":1695052955213,"duration":706}},{"uid":"8ea1b2e9a39b423b","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/8ea1b2e9a39b423b","status":"passed","time":{"start":1695067346555,"stop":1695067353356,"duration":6801}},{"uid":"f5b09130cb79443d","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/f5b09130cb79443d","status":"passed","time":{"start":1695038556761,"stop":1695038560684,"duration":3923}},{"uid":"7ecac553a765288f","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/7ecac553a765288f","status":"passed","time":{"start":1695024134571,"stop":1695024138894,"duration":4323}},{"uid":"5aaeafeedab3a463","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/5aaeafeedab3a463","status":"passed","time":{"start":1695009742830,"stop":1695009749624,"duration":6794}}]},"tags":[]},"source":"e89c78b5ed94c69b.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f6472149600>"]}