{"uid":"62441c288d56bcb7","name":"test_can_create_connection[Test for Ajuna, url: wss://rpc-parachain.ajuna.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"9e45091b8d9f46b64ef77b6ae354ace8","time":{"start":1695297803816,"stop":1695297804271,"duration":455},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Sep 2023 12:03:24 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Ajuna', 'url': 'wss://rpc-parachain.ajuna.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Sep 2023 12:03:24 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Sep 2023 12:03:24 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Ajuna', 'url': 'wss://rpc-parachain.ajuna.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Sep 2023 12:03:24 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2db47e5a697a31","name":"stdout","source":"2db47e5a697a31.txt","type":"text/plain","size":1166}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az255-111"},{"name":"thread","value":"2061-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc-parachain.ajuna.network', 'name': 'Ajuna'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"521e8312f80d6ae5","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1695297788378,"stop":1695297788673,"duration":295}},{"uid":"118a010a49d91fe","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Sep 2023 12:02:53 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1695297772672,"stop":1695297773216,"duration":544}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":161,"unknown":0,"total":170},"items":[{"uid":"6e43199f35974d00","reportUrl":"https://novasamatech.github.io/test-runner/3808//#testresult/6e43199f35974d00","status":"passed","time":{"start":1695283331724,"stop":1695283332089,"duration":365}},{"uid":"24d93d060c6f1662","reportUrl":"https://novasamatech.github.io/test-runner/3807//#testresult/24d93d060c6f1662","status":"passed","time":{"start":1695268942580,"stop":1695268943217,"duration":637}},{"uid":"869b0419f8415f39","reportUrl":"https://novasamatech.github.io/test-runner/3806//#testresult/869b0419f8415f39","status":"passed","time":{"start":1695254579126,"stop":1695254579654,"duration":528}},{"uid":"68d0b25cdbf1446","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/68d0b25cdbf1446","status":"passed","time":{"start":1695240134137,"stop":1695240134498,"duration":361}},{"uid":"df4803617d94588","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/df4803617d94588","status":"passed","time":{"start":1695225806317,"stop":1695225806975,"duration":658}},{"uid":"a624fda8e1d11ac3","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/a624fda8e1d11ac3","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1695211426276,"stop":1695211426571,"duration":295}},{"uid":"2005b38266696d9e","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/2005b38266696d9e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 20 Sep 2023 08:02:56 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1695196976630,"stop":1695196976887,"duration":257}},{"uid":"f4647b1d7bb89fd9","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/f4647b1d7bb89fd9","status":"passed","time":{"start":1695182536084,"stop":1695182536615,"duration":531}},{"uid":"9e9962347c419f2d","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/9e9962347c419f2d","status":"passed","time":{"start":1695168194939,"stop":1695168195548,"duration":609}},{"uid":"cc9a18abbd451b4","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/cc9a18abbd451b4","status":"passed","time":{"start":1695153765462,"stop":1695153766064,"duration":602}},{"uid":"135725640d6325a","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/135725640d6325a","status":"passed","time":{"start":1695139361563,"stop":1695139362159,"duration":596}},{"uid":"36cc7e7dc623f123","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/36cc7e7dc623f123","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 19 Sep 2023 12:03:39 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1695125019684,"stop":1695125020030,"duration":346}},{"uid":"94fd80a700a21f87","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/94fd80a700a21f87","status":"passed","time":{"start":1695110573284,"stop":1695110573821,"duration":537}},{"uid":"3439785c6ef08e3f","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/3439785c6ef08e3f","status":"passed","time":{"start":1695096145506,"stop":1695096145971,"duration":465}},{"uid":"6e196df659946a11","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/6e196df659946a11","status":"passed","time":{"start":1695081780139,"stop":1695081780532,"duration":393}},{"uid":"7d4357132e9cc554","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/7d4357132e9cc554","status":"passed","time":{"start":1695052965547,"stop":1695052965869,"duration":322}},{"uid":"e709f29561a8e60c","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/e709f29561a8e60c","status":"passed","time":{"start":1695067352311,"stop":1695067353000,"duration":689}},{"uid":"6f44451a4ea411ee","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/6f44451a4ea411ee","status":"passed","time":{"start":1695038577562,"stop":1695038578099,"duration":537}},{"uid":"d4ba17dc3f1ed02b","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/d4ba17dc3f1ed02b","status":"passed","time":{"start":1695024192625,"stop":1695024192964,"duration":339}},{"uid":"f3465d57d3c092fc","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/f3465d57d3c092fc","status":"passed","time":{"start":1695009753635,"stop":1695009754269,"duration":634}}]},"tags":[]},"source":"62441c288d56bcb7.json","parameterValues":["{'url': 'wss://rpc-parachain.ajuna.network', 'name': 'Ajuna'}"]}