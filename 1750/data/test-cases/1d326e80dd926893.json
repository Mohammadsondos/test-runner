{"uid":"1d326e80dd926893","name":"test_xcm_parameters[Check XCM data for Polkadot]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"ef3622b89ef3366b11fda76d9391fcfc","time":{"start":1666326457773,"stop":1666326467906,"duration":10133},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7f968bb42340>\nchain = <tests.utils.chain_model.Chain object at 0x7f9690de26a0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7f968bb42340>\nchain = <tests.utils.chain_model.Chain object at 0x7f9690de26a0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})\n\ntests/test_xcm_data.py:30: AssertionError","steps":[],"attachments":[{"uid":"f9f371c80de5dcb4","name":"stdout","source":"f9f371c80de5dcb4.txt","type":"text/plain","size":27}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az196-676"},{"name":"thread","value":"1617-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f9690de26a0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4c97832318c8588f","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666326443509,"stop":1666326447729,"duration":4220}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":71,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":72},"items":[{"uid":"ab29c84d10d7e244","reportUrl":"https://nova-wallet.github.io/test-runner/1749//#testresult/ab29c84d10d7e244","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666311605118,"stop":1666311606160,"duration":1042}},{"uid":"19d3c9af9518cf5f","reportUrl":"https://nova-wallet.github.io/test-runner/1748//#testresult/19d3c9af9518cf5f","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666296264151,"stop":1666296288101,"duration":23950}},{"uid":"8aa4011685488764","reportUrl":"https://nova-wallet.github.io/test-runner/1747//#testresult/8aa4011685488764","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666282035188,"stop":1666282035789,"duration":601}},{"uid":"d09fbe97d9e2113","reportUrl":"https://nova-wallet.github.io/test-runner/1746//#testresult/d09fbe97d9e2113","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666267583555,"stop":1666267584490,"duration":935}},{"uid":"325fcf50e83fb1ff","reportUrl":"https://nova-wallet.github.io/test-runner/1745//#testresult/325fcf50e83fb1ff","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666253126351,"stop":1666253126915,"duration":564}},{"uid":"6b055a009b67e9dc","reportUrl":"https://nova-wallet.github.io/test-runner/1744//#testresult/6b055a009b67e9dc","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666240192439,"stop":1666240193090,"duration":651}},{"uid":"1163eddb2ca88721","reportUrl":"https://nova-wallet.github.io/test-runner/1743//#testresult/1163eddb2ca88721","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666225335424,"stop":1666225336416,"duration":992}},{"uid":"2577be09013d5ea4","reportUrl":"https://nova-wallet.github.io/test-runner/1742//#testresult/2577be09013d5ea4","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666209866068,"stop":1666209866731,"duration":663}},{"uid":"c6eac3422849b95a","reportUrl":"https://nova-wallet.github.io/test-runner/1741//#testresult/c6eac3422849b95a","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666195678720,"stop":1666195686969,"duration":8249}},{"uid":"b4802084461d32f9","reportUrl":"https://nova-wallet.github.io/test-runner/1740//#testresult/b4802084461d32f9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666181168721,"stop":1666181169299,"duration":578}},{"uid":"4e5030d1c62f3e9d","reportUrl":"https://nova-wallet.github.io/test-runner/1739//#testresult/4e5030d1c62f3e9d","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666167044221,"stop":1666167044814,"duration":593}},{"uid":"ca5f4a8adedc5a19","reportUrl":"https://nova-wallet.github.io/test-runner/1738//#testresult/ca5f4a8adedc5a19","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666154365785,"stop":1666154366664,"duration":879}},{"uid":"bbe8ad6e17b7d4a2","reportUrl":"https://nova-wallet.github.io/test-runner/1737//#testresult/bbe8ad6e17b7d4a2","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666138889962,"stop":1666138890845,"duration":883}},{"uid":"5686521cfa54433f","reportUrl":"https://nova-wallet.github.io/test-runner/1736//#testresult/5686521cfa54433f","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666123475216,"stop":1666123476311,"duration":1095}},{"uid":"bc508408b54ac075","reportUrl":"https://nova-wallet.github.io/test-runner/1735//#testresult/bc508408b54ac075","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666109276431,"stop":1666109277347,"duration":916}},{"uid":"ec838ee8ac076185","reportUrl":"https://nova-wallet.github.io/test-runner/1734//#testresult/ec838ee8ac076185","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666094780135,"stop":1666094781311,"duration":1176}},{"uid":"76441049b716d724","reportUrl":"https://nova-wallet.github.io/test-runner/1733//#testresult/76441049b716d724","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666080475712,"stop":1666080476266,"duration":554}},{"uid":"acd5d06b971da7b9","reportUrl":"https://nova-wallet.github.io/test-runner/1732//#testresult/acd5d06b971da7b9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666067892869,"stop":1666067893794,"duration":925}},{"uid":"71ba5636c66607e6","reportUrl":"https://nova-wallet.github.io/test-runner/1731//#testresult/71ba5636c66607e6","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666052523965,"stop":1666052525327,"duration":1362}},{"uid":"be7bd517d9f91aa8","reportUrl":"https://nova-wallet.github.io/test-runner/1730//#testresult/be7bd517d9f91aa8","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666037062013,"stop":1666037062907,"duration":894}}]},"tags":[]},"source":"1d326e80dd926893.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f9690de26a0>"]}