{"uid":"c2cb336ac4955ae2","name":"test_can_create_connection[Test for Hashed Network, url: wss://c2.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c89828a53a64d5be0404b3846fb6bd54","time":{"start":1686615293231,"stop":1686615293421,"duration":190},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 13 Jun 2023 00:14:53 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 13 Jun 2023 00:14:53 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 13 Jun 2023 00:14:53 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 13 Jun 2023 00:14:53 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"be11eea90f2b4c84","name":"stdout","source":"be11eea90f2b4c84.txt","type":"text/plain","size":1098}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az567-696"},{"name":"thread","value":"1902-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c44d3e28ed7d292b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 13 Jun 2023 00:14:38 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686615277958,"stop":1686615278145,"duration":187}},{"uid":"6483a1360fdceb1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 13 Jun 2023 00:14:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686615262626,"stop":1686615262823,"duration":197}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":61,"skipped":0,"passed":177,"unknown":0,"total":238},"items":[{"uid":"b8a81d3df33d0f46","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/b8a81d3df33d0f46","status":"passed","time":{"start":1686600275443,"stop":1686600275664,"duration":221}},{"uid":"5d3925f8fccf2a10","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/5d3925f8fccf2a10","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 16:04:21 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686585861328,"stop":1686585861373,"duration":45}},{"uid":"fe1db793ea0a28f","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/fe1db793ea0a28f","status":"passed","time":{"start":1686571503789,"stop":1686571503937,"duration":148}},{"uid":"90462d19433e4378","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/90462d19433e4378","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 08:04:57 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686557097841,"stop":1686557097871,"duration":30}},{"uid":"c9c4f3a037b423a9","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/c9c4f3a037b423a9","status":"passed","time":{"start":1686542644598,"stop":1686542644654,"duration":56}},{"uid":"f92a3dcf3370ad6b","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/f92a3dcf3370ad6b","status":"passed","time":{"start":1686528891768,"stop":1686528891803,"duration":35}},{"uid":"ddf55cefc584cca9","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/ddf55cefc584cca9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 11 Jun 2023 20:04:10 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686513850836,"stop":1686513850866,"duration":30}},{"uid":"131b49d6b507eb5","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/131b49d6b507eb5","status":"passed","time":{"start":1686499448717,"stop":1686499448968,"duration":251}},{"uid":"59741c395b2e671e","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/59741c395b2e671e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 11 Jun 2023 12:05:27 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686485127576,"stop":1686485127808,"duration":232}},{"uid":"639e3dd9c43df177","reportUrl":"https://novasamatech.github.io/test-runner/3187//#testresult/639e3dd9c43df177","status":"passed","time":{"start":1686470643876,"stop":1686470643933,"duration":57}},{"uid":"b8c77f03c7850ef5","reportUrl":"https://novasamatech.github.io/test-runner/3186//#testresult/b8c77f03c7850ef5","status":"passed","time":{"start":1686456241782,"stop":1686456241843,"duration":61}},{"uid":"fcaccd36cf44fee0","reportUrl":"https://novasamatech.github.io/test-runner/3185//#testresult/fcaccd36cf44fee0","status":"passed","time":{"start":1686442522936,"stop":1686442523352,"duration":416}},{"uid":"eca5a3d54f6d9504","reportUrl":"https://novasamatech.github.io/test-runner/3184//#testresult/eca5a3d54f6d9504","status":"passed","time":{"start":1686427473864,"stop":1686427474192,"duration":328}},{"uid":"969102eaa67f0659","reportUrl":"https://novasamatech.github.io/test-runner/3183//#testresult/969102eaa67f0659","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:05:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686413101759,"stop":1686413101992,"duration":233}},{"uid":"a3675cbc9919abb3","reportUrl":"https://novasamatech.github.io/test-runner/3182//#testresult/a3675cbc9919abb3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 12:05:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686398737388,"stop":1686398737609,"duration":221}},{"uid":"c0c4a3f5c569e54","reportUrl":"https://novasamatech.github.io/test-runner/3181//#testresult/c0c4a3f5c569e54","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 08:04:32 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686384272761,"stop":1686384272809,"duration":48}},{"uid":"471f8aae75be40de","reportUrl":"https://novasamatech.github.io/test-runner/3180//#testresult/471f8aae75be40de","status":"passed","time":{"start":1686369852232,"stop":1686369852318,"duration":86}},{"uid":"5ba9a6b019d3f4b2","reportUrl":"https://novasamatech.github.io/test-runner/3179//#testresult/5ba9a6b019d3f4b2","status":"passed","time":{"start":1686355992331,"stop":1686355992391,"duration":60}},{"uid":"5c4cf827095643a5","reportUrl":"https://novasamatech.github.io/test-runner/3178//#testresult/5c4cf827095643a5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 09 Jun 2023 20:04:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686341071050,"stop":1686341071276,"duration":226}},{"uid":"51baf439691d0139","reportUrl":"https://novasamatech.github.io/test-runner/3177//#testresult/51baf439691d0139","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 09 Jun 2023 16:04:35 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686326675062,"stop":1686326675108,"duration":46}}]},"tags":[]},"source":"c2cb336ac4955ae2.json","parameterValues":["{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"]}