{"uid":"8f64ff12c8ced10f","name":"test_can_create_connection[Test for Hashed Network, url: wss://c1.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82d36aa15e8a5bcf4ff7d8702aa21bfe","time":{"start":1683461150661,"stop":1683461150877,"duration":216},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"32707f44c40398b3","name":"stdout","source":"32707f44c40398b3.txt","type":"text/plain","size":226}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az470-184"},{"name":"thread","value":"1869-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c684f652a8970216","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683461140342,"stop":1683461140568,"duration":226}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":53,"unknown":0,"total":74},"items":[{"uid":"328b3afe97239379","reportUrl":"https://nova-wallet.github.io/test-runner/2964//#testresult/328b3afe97239379","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683446717343,"stop":1683446717580,"duration":237}},{"uid":"b1e6c10f96c165aa","reportUrl":"https://nova-wallet.github.io/test-runner/2963//#testresult/b1e6c10f96c165aa","status":"passed","time":{"start":1683432283028,"stop":1683432283246,"duration":218}},{"uid":"a10c1a2662b53f63","reportUrl":"https://nova-wallet.github.io/test-runner/2962//#testresult/a10c1a2662b53f63","status":"passed","time":{"start":1683418446516,"stop":1683418446596,"duration":80}},{"uid":"375b551fb06fdf9","reportUrl":"https://nova-wallet.github.io/test-runner/2961//#testresult/375b551fb06fdf9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683403502296,"stop":1683403502521,"duration":225}},{"uid":"43973b44aca80224","reportUrl":"https://nova-wallet.github.io/test-runner/2960//#testresult/43973b44aca80224","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683389089301,"stop":1683389089345,"duration":44}},{"uid":"19ba0f87e29f8401","reportUrl":"https://nova-wallet.github.io/test-runner/2959//#testresult/19ba0f87e29f8401","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683374721846,"stop":1683374721898,"duration":52}},{"uid":"a0320c11ff9aa8b4","reportUrl":"https://nova-wallet.github.io/test-runner/2958//#testresult/a0320c11ff9aa8b4","status":"passed","time":{"start":1683360297539,"stop":1683360297568,"duration":29}},{"uid":"f1cf047b761b6016","reportUrl":"https://nova-wallet.github.io/test-runner/2956//#testresult/f1cf047b761b6016","status":"passed","time":{"start":1683331987604,"stop":1683331987900,"duration":296}},{"uid":"9e04afb6b2db0925","reportUrl":"https://nova-wallet.github.io/test-runner/2955//#testresult/9e04afb6b2db0925","status":"passed","time":{"start":1683317615867,"stop":1683317616100,"duration":233}},{"uid":"97b0cab07ff7b798","reportUrl":"https://nova-wallet.github.io/test-runner/2954//#testresult/97b0cab07ff7b798","status":"passed","time":{"start":1683303391330,"stop":1683303391365,"duration":35}},{"uid":"9ecd37f41b522df1","reportUrl":"https://nova-wallet.github.io/test-runner/2952//#testresult/9ecd37f41b522df1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683292513284,"stop":1683292513307,"duration":23}},{"uid":"7a9546fa12c72d1b","reportUrl":"https://nova-wallet.github.io/test-runner/2935//#testresult/7a9546fa12c72d1b","status":"passed","time":{"start":1683087327243,"stop":1683087327327,"duration":84}},{"uid":"39e5a8c439192bae","reportUrl":"https://nova-wallet.github.io/test-runner/2934//#testresult/39e5a8c439192bae","status":"passed","time":{"start":1683075855393,"stop":1683075855631,"duration":238}},{"uid":"96758a667bcad76f","reportUrl":"https://nova-wallet.github.io/test-runner/2932//#testresult/96758a667bcad76f","status":"passed","time":{"start":1683044219475,"stop":1683044219768,"duration":293}},{"uid":"8be04a273a113ece","reportUrl":"https://nova-wallet.github.io/test-runner/2931//#testresult/8be04a273a113ece","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683030380763,"stop":1683030380789,"duration":26}},{"uid":"3b2a64ff52c7de65","reportUrl":"https://nova-wallet.github.io/test-runner/2928//#testresult/3b2a64ff52c7de65","status":"passed","time":{"start":1682989506274,"stop":1682989506357,"duration":83}},{"uid":"602c08cd41e1ab8e","reportUrl":"https://nova-wallet.github.io/test-runner/2924//#testresult/602c08cd41e1ab8e","status":"passed","time":{"start":1682928996317,"stop":1682928996561,"duration":244}},{"uid":"bbddd6ec427fdac5","reportUrl":"https://nova-wallet.github.io/test-runner/2922//#testresult/bbddd6ec427fdac5","status":"passed","time":{"start":1682903264920,"stop":1682903265159,"duration":239}},{"uid":"a5315dcf733ebbf5","reportUrl":"https://nova-wallet.github.io/test-runner/2920//#testresult/a5315dcf733ebbf5","status":"passed","time":{"start":1682871349726,"stop":1682871349928,"duration":202}},{"uid":"bf1fccbefec3ae45","reportUrl":"https://nova-wallet.github.io/test-runner/2918//#testresult/bf1fccbefec3ae45","status":"passed","time":{"start":1682842497493,"stop":1682842497796,"duration":303}}]},"tags":[]},"source":"8f64ff12c8ced10f.json","parameterValues":["{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"]}