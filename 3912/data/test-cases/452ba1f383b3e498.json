{"uid":"452ba1f383b3e498","name":"test_can_create_connection[Test for Calamari, url: wss://calamari.systems]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"1f97e1b2aa75f736283999eef96b536b","time":{"start":1696766514030,"stop":1696766514253,"duration":223},"status":"broken","statusMessage":"ConnectionRefusedError: [Errno 111] Connection refused","statusTrace":"data = {'name': 'Calamari', 'url': 'wss://calamari.systems'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:204: in _open_socket\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('35.207.252.32', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   ConnectionRefusedError: [Errno 111] Connection refused\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: ConnectionRefusedError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ConnectionRefusedError: [Errno 111] Connection refused","statusTrace":"data = {'name': 'Calamari', 'url': 'wss://calamari.systems'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:204: in _open_socket\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('35.207.252.32', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   ConnectionRefusedError: [Errno 111] Connection refused\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: ConnectionRefusedError","steps":[],"attachments":[{"uid":"826c66fca388a30f","name":"stdout","source":"826c66fca388a30f.txt","type":"text/plain","size":312}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az559-343"},{"name":"thread","value":"2099-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://calamari.systems', 'name': 'Calamari'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"57d2683529667468","status":"broken","statusDetails":"ConnectionRefusedError: [Errno 111] Connection refused","time":{"start":1696766498709,"stop":1696766498933,"duration":224}},{"uid":"7d6e7b47510cbd9a","status":"broken","statusDetails":"ConnectionRefusedError: [Errno 111] Connection refused","time":{"start":1696766483319,"stop":1696766483548,"duration":229}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":271,"unknown":0,"total":272},"items":[{"uid":"efcb48f0dae92a70","reportUrl":"https://novasamatech.github.io/test-runner/3911//#testresult/efcb48f0dae92a70","status":"passed","time":{"start":1696752106549,"stop":1696752107110,"duration":561}},{"uid":"e8d63effa6223ead","reportUrl":"https://novasamatech.github.io/test-runner/3910//#testresult/e8d63effa6223ead","status":"passed","time":{"start":1696737681936,"stop":1696737682470,"duration":534}},{"uid":"f5f511fd96a22a64","reportUrl":"https://novasamatech.github.io/test-runner/3909//#testresult/f5f511fd96a22a64","status":"passed","time":{"start":1696723343997,"stop":1696723344497,"duration":500}},{"uid":"58d3b7d6d42e219","reportUrl":"https://novasamatech.github.io/test-runner/3908//#testresult/58d3b7d6d42e219","status":"passed","time":{"start":1696708880948,"stop":1696708881930,"duration":982}},{"uid":"e5a8a0907e398022","reportUrl":"https://novasamatech.github.io/test-runner/3907//#testresult/e5a8a0907e398022","status":"passed","time":{"start":1696694486795,"stop":1696694487328,"duration":533}},{"uid":"1eeed6cb87ed053","reportUrl":"https://novasamatech.github.io/test-runner/3906//#testresult/1eeed6cb87ed053","status":"passed","time":{"start":1696680091165,"stop":1696680091858,"duration":693}},{"uid":"5c2db8d916e9d950","reportUrl":"https://novasamatech.github.io/test-runner/3905//#testresult/5c2db8d916e9d950","status":"passed","time":{"start":1696665691675,"stop":1696665692443,"duration":768}},{"uid":"4934f6b819d9247c","reportUrl":"https://novasamatech.github.io/test-runner/3904//#testresult/4934f6b819d9247c","status":"passed","time":{"start":1696651286490,"stop":1696651287464,"duration":974}},{"uid":"6a29bad7dec77439","reportUrl":"https://novasamatech.github.io/test-runner/3903//#testresult/6a29bad7dec77439","status":"passed","time":{"start":1696636933299,"stop":1696636933863,"duration":564}},{"uid":"6a6653d60f94e228","reportUrl":"https://novasamatech.github.io/test-runner/3902//#testresult/6a6653d60f94e228","status":"passed","time":{"start":1696622479806,"stop":1696622480309,"duration":503}},{"uid":"902a3e87ad8c1c9","reportUrl":"https://novasamatech.github.io/test-runner/3901//#testresult/902a3e87ad8c1c9","status":"passed","time":{"start":1696608083515,"stop":1696608084030,"duration":515}},{"uid":"108bd37c1ad894f7","reportUrl":"https://novasamatech.github.io/test-runner/3900//#testresult/108bd37c1ad894f7","status":"passed","time":{"start":1696593699704,"stop":1696593700316,"duration":612}},{"uid":"8e570bfedcfbbca9","reportUrl":"https://novasamatech.github.io/test-runner/3899//#testresult/8e570bfedcfbbca9","status":"passed","time":{"start":1696579294342,"stop":1696579294968,"duration":626}},{"uid":"67cd355bf5af5ef0","reportUrl":"https://novasamatech.github.io/test-runner/3898//#testresult/67cd355bf5af5ef0","status":"passed","time":{"start":1696564879720,"stop":1696564880524,"duration":804}},{"uid":"dc2fd4f601409c20","reportUrl":"https://novasamatech.github.io/test-runner/3897//#testresult/dc2fd4f601409c20","status":"passed","time":{"start":1696550532324,"stop":1696550533216,"duration":892}},{"uid":"6d5583dc8ecd9eaa","reportUrl":"https://novasamatech.github.io/test-runner/3896//#testresult/6d5583dc8ecd9eaa","status":"passed","time":{"start":1696536091832,"stop":1696536092170,"duration":338}},{"uid":"f90ca30266927ffd","reportUrl":"https://novasamatech.github.io/test-runner/3895//#testresult/f90ca30266927ffd","status":"passed","time":{"start":1696521684218,"stop":1696521684559,"duration":341}},{"uid":"d0355c887ff5d8d3","reportUrl":"https://novasamatech.github.io/test-runner/3894//#testresult/d0355c887ff5d8d3","status":"passed","time":{"start":1696507302198,"stop":1696507303094,"duration":896}},{"uid":"9e36b24285b1f33f","reportUrl":"https://novasamatech.github.io/test-runner/3893//#testresult/9e36b24285b1f33f","status":"passed","time":{"start":1696496635458,"stop":1696496636414,"duration":956}},{"uid":"8d39b68106830c92","reportUrl":"https://novasamatech.github.io/test-runner/3892//#testresult/8d39b68106830c92","status":"passed","time":{"start":1696492933918,"stop":1696492934342,"duration":424}}]},"tags":[]},"source":"452ba1f383b3e498.json","parameterValues":["{'url': 'wss://calamari.systems', 'name': 'Calamari'}"]}