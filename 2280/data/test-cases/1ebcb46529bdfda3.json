{"uid":"1ebcb46529bdfda3","name":"test_chainId[Test for Amplitude]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"b6fb68db7ac371084e54542bba6989bd","time":{"start":1673828479856,"stop":1673828542279,"duration":62423},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f264e04f6a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f264e026020>\n\n    def test_chainId(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:2516: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:2490: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:1136: in init_runtime\n    runtime_info = self.get_block_runtime_version(block_hash=runtime_block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:1003: in get_block_runtime_version\n    response = self.rpc_request(\"chain_getRuntimeVersion\", [block_hash])\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az573-111"},{"name":"thread","value":"1723-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f264e026020>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cc99ee6b4fda8bb5","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1673828367307,"stop":1673828469650,"duration":102343}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":67,"skipped":0,"passed":477,"unknown":0,"total":544},"items":[{"uid":"3fe7049d70a168ec","reportUrl":"https://nova-wallet.github.io/test-runner/2279//#testresult/3fe7049d70a168ec","status":"passed","time":{"start":1673813398315,"stop":1673813401317,"duration":3002}},{"uid":"457ed2054031f738","reportUrl":"https://nova-wallet.github.io/test-runner/2278//#testresult/457ed2054031f738","status":"passed","time":{"start":1673798904286,"stop":1673798908418,"duration":4132}},{"uid":"6a9221d2019e9ac","reportUrl":"https://nova-wallet.github.io/test-runner/2277//#testresult/6a9221d2019e9ac","status":"passed","time":{"start":1673784601529,"stop":1673784621809,"duration":20280}},{"uid":"c2bde26cf42c1ddd","reportUrl":"https://nova-wallet.github.io/test-runner/2276//#testresult/c2bde26cf42c1ddd","status":"passed","time":{"start":1673770247701,"stop":1673770253660,"duration":5959}},{"uid":"ad67f76ed36b0254","reportUrl":"https://nova-wallet.github.io/test-runner/2275//#testresult/ad67f76ed36b0254","status":"passed","time":{"start":1673755767289,"stop":1673755771311,"duration":4022}},{"uid":"5d0eedcde03a8fee","reportUrl":"https://nova-wallet.github.io/test-runner/2274//#testresult/5d0eedcde03a8fee","status":"passed","time":{"start":1673741998141,"stop":1673742002115,"duration":3974}},{"uid":"fc69dbbdf4e5d272","reportUrl":"https://nova-wallet.github.io/test-runner/2273//#testresult/fc69dbbdf4e5d272","status":"passed","time":{"start":1673726954753,"stop":1673726958438,"duration":3685}},{"uid":"ef0f204418e658c7","reportUrl":"https://nova-wallet.github.io/test-runner/2272//#testresult/ef0f204418e658c7","status":"passed","time":{"start":1673712620121,"stop":1673712624656,"duration":4535}},{"uid":"92df10c4429fd4cd","reportUrl":"https://nova-wallet.github.io/test-runner/2271//#testresult/92df10c4429fd4cd","status":"passed","time":{"start":1673698224442,"stop":1673698228764,"duration":4322}},{"uid":"80ad74dbfda871a","reportUrl":"https://nova-wallet.github.io/test-runner/2270//#testresult/80ad74dbfda871a","status":"passed","time":{"start":1673683815408,"stop":1673683819472,"duration":4064}},{"uid":"f89d037b714a6145","reportUrl":"https://nova-wallet.github.io/test-runner/2269//#testresult/f89d037b714a6145","status":"passed","time":{"start":1673669395101,"stop":1673669399942,"duration":4841}},{"uid":"deec6850894e475f","reportUrl":"https://nova-wallet.github.io/test-runner/2268//#testresult/deec6850894e475f","status":"passed","time":{"start":1673655580670,"stop":1673655585513,"duration":4843}},{"uid":"25653826995f3292","reportUrl":"https://nova-wallet.github.io/test-runner/2267//#testresult/25653826995f3292","status":"passed","time":{"start":1673640594591,"stop":1673640599083,"duration":4492}},{"uid":"f14437cc142a4351","reportUrl":"https://nova-wallet.github.io/test-runner/2266//#testresult/f14437cc142a4351","status":"passed","time":{"start":1673626273068,"stop":1673626279346,"duration":6278}},{"uid":"e12fb84d45560d59","reportUrl":"https://nova-wallet.github.io/test-runner/2265//#testresult/e12fb84d45560d59","status":"passed","time":{"start":1673611869215,"stop":1673611873892,"duration":4677}},{"uid":"762ed51292fa5795","reportUrl":"https://nova-wallet.github.io/test-runner/2264//#testresult/762ed51292fa5795","status":"passed","time":{"start":1673597324169,"stop":1673597327791,"duration":3622}},{"uid":"e7430d22b323f92b","reportUrl":"https://nova-wallet.github.io/test-runner/2263//#testresult/e7430d22b323f92b","status":"passed","time":{"start":1673582968338,"stop":1673582973643,"duration":5305}},{"uid":"86251ef544860ec2","reportUrl":"https://nova-wallet.github.io/test-runner/2262//#testresult/86251ef544860ec2","status":"passed","time":{"start":1673569093377,"stop":1673569096920,"duration":3543}},{"uid":"5715717eb1294d51","reportUrl":"https://nova-wallet.github.io/test-runner/2261//#testresult/5715717eb1294d51","status":"passed","time":{"start":1673554036845,"stop":1673554038532,"duration":1687}},{"uid":"e008c2244ca87515","reportUrl":"https://nova-wallet.github.io/test-runner/2259//#testresult/e008c2244ca87515","status":"passed","time":{"start":1673525427269,"stop":1673525431639,"duration":4370}}]},"tags":[]},"source":"1ebcb46529bdfda3.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f264e026020>"]}