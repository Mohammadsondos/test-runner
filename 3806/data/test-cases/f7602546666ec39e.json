{"uid":"f7602546666ec39e","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1695254952766,"stop":1695255083141,"duration":130375},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f4d98997d30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4d98943400>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f4d98997d30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4d98943400>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"9e4d4f9d51598c0","name":"stdout","source":"9e4d4f9d51598c0.txt","type":"text/plain","size":531}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1100-666"},{"name":"thread","value":"21180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f4d98943400>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8b97704315cce4d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695254807362,"stop":1695254937733,"duration":130371}},{"uid":"b049e8af6a35c006","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695254660470,"stop":1695254792325,"duration":131855}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":162,"unknown":0,"total":166},"items":[{"uid":"1d1496d9d69a8fef","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/1d1496d9d69a8fef","status":"passed","time":{"start":1695240174358,"stop":1695240178888,"duration":4530}},{"uid":"837cfd79990194ad","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/837cfd79990194ad","status":"passed","time":{"start":1695225769230,"stop":1695225773079,"duration":3849}},{"uid":"91218d9d524623ed","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/91218d9d524623ed","status":"passed","time":{"start":1695211359249,"stop":1695211364996,"duration":5747}},{"uid":"ff98b19256307d4c","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/ff98b19256307d4c","status":"passed","time":{"start":1695196976681,"stop":1695196980157,"duration":3476}},{"uid":"ea7082ecb7811ce1","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/ea7082ecb7811ce1","status":"passed","time":{"start":1695182566681,"stop":1695182572404,"duration":5723}},{"uid":"7d7cd7bf0223d44c","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/7d7cd7bf0223d44c","status":"passed","time":{"start":1695168240808,"stop":1695168247578,"duration":6770}},{"uid":"c91eaa9d43a824ec","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/c91eaa9d43a824ec","status":"passed","time":{"start":1695154211335,"stop":1695154219001,"duration":7666}},{"uid":"4f1138eba8f0d99b","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/4f1138eba8f0d99b","status":"passed","time":{"start":1695139377607,"stop":1695139382734,"duration":5127}},{"uid":"274372e1d4ec726a","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/274372e1d4ec726a","status":"passed","time":{"start":1695124968698,"stop":1695124972246,"duration":3548}},{"uid":"d9efa14bb55ef8a8","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/d9efa14bb55ef8a8","status":"passed","time":{"start":1695110565550,"stop":1695110569179,"duration":3629}},{"uid":"2b5a2f8a53ec696","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/2b5a2f8a53ec696","status":"passed","time":{"start":1695096157691,"stop":1695096164281,"duration":6590}},{"uid":"6342e21e81e4f234","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/6342e21e81e4f234","status":"passed","time":{"start":1695081826515,"stop":1695081832116,"duration":5601}},{"uid":"c4df2aa5828c82bd","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/c4df2aa5828c82bd","status":"passed","time":{"start":1695052964376,"stop":1695052968109,"duration":3733}},{"uid":"ab4bccefb205223f","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/ab4bccefb205223f","status":"passed","time":{"start":1695067384825,"stop":1695067391806,"duration":6981}},{"uid":"d13a04c9ceb627e1","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/d13a04c9ceb627e1","status":"passed","time":{"start":1695038583617,"stop":1695038587937,"duration":4320}},{"uid":"64d43496a0f5bb3d","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/64d43496a0f5bb3d","status":"passed","time":{"start":1695024172981,"stop":1695024176471,"duration":3490}},{"uid":"9be255dfe239fd66","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/9be255dfe239fd66","status":"passed","time":{"start":1695009794391,"stop":1695009801588,"duration":7197}},{"uid":"bc0da7d959444421","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/bc0da7d959444421","status":"passed","time":{"start":1694995450551,"stop":1694995458218,"duration":7667}},{"uid":"ebdb07bb3ae5f4f5","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/ebdb07bb3ae5f4f5","status":"passed","time":{"start":1694980985456,"stop":1694980990375,"duration":4919}},{"uid":"32a643ab56acc866","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/32a643ab56acc866","status":"passed","time":{"start":1694966551993,"stop":1694966558076,"duration":6083}}]},"tags":[]},"source":"f7602546666ec39e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f4d98943400>"]}