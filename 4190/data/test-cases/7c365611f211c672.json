{"uid":"7c365611f211c672","name":"test_precision[Test for DAO IPCI]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"33810a4242d025509f0e78a3e06893b8","time":{"start":1700755365928,"stop":1700755365928,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_precision[Test for DAO IPCI]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1700755334241,"stop":1700755335116,"duration":875},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"chain_model","time":{"start":1700755350198,"stop":1700755350901,"duration":703},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"chain_model","time":{"start":1700755365928,"stop":1700755366649,"duration":721},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_precision[Test for DAO IPCI]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"84919fae3ee1b012","name":"stdout","source":"84919fae3ee1b012.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az883-349"},{"name":"thread","value":"2285-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f2d39de6710>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ee7bbc6a82f94b2d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1700755350197,"stop":1700755350197,"duration":0}},{"uid":"3ff3a806fb8a5faf","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1700755334240,"stop":1700755334240,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":67,"skipped":0,"passed":472,"unknown":0,"total":539},"items":[{"uid":"289442cd8047bdb8","reportUrl":"https://novasamatech.github.io/test-runner/4188//#testresult/289442cd8047bdb8","status":"passed","time":{"start":1700726778304,"stop":1700726778305,"duration":1}},{"uid":"e9891c58b372fd2a","reportUrl":"https://novasamatech.github.io/test-runner/4187//#testresult/e9891c58b372fd2a","status":"passed","time":{"start":1700712337247,"stop":1700712337247,"duration":0}},{"uid":"7b21ad33b7b9559d","reportUrl":"https://novasamatech.github.io/test-runner/4186//#testresult/7b21ad33b7b9559d","status":"passed","time":{"start":1700697790665,"stop":1700697790665,"duration":0}},{"uid":"e37275885bf25b13","reportUrl":"https://novasamatech.github.io/test-runner/4185//#testresult/e37275885bf25b13","status":"passed","time":{"start":1700683336907,"stop":1700683336908,"duration":1}},{"uid":"4591f042b975fc","reportUrl":"https://novasamatech.github.io/test-runner/4184//#testresult/4591f042b975fc","status":"passed","time":{"start":1700668932885,"stop":1700668932885,"duration":0}},{"uid":"717217114f65ae4d","reportUrl":"https://novasamatech.github.io/test-runner/4183//#testresult/717217114f65ae4d","status":"passed","time":{"start":1700654533775,"stop":1700654533775,"duration":0}},{"uid":"57c4c2e97c916eb9","reportUrl":"https://novasamatech.github.io/test-runner/4182//#testresult/57c4c2e97c916eb9","status":"passed","time":{"start":1700640133895,"stop":1700640133896,"duration":1}},{"uid":"67e5e287553cb601","reportUrl":"https://novasamatech.github.io/test-runner/4181//#testresult/67e5e287553cb601","status":"passed","time":{"start":1700625734867,"stop":1700625734868,"duration":1}},{"uid":"72dbac9c62aa48b0","reportUrl":"https://novasamatech.github.io/test-runner/4180//#testresult/72dbac9c62aa48b0","status":"passed","time":{"start":1700611402069,"stop":1700611402070,"duration":1}},{"uid":"bc0fb204226e9d7b","reportUrl":"https://novasamatech.github.io/test-runner/4179//#testresult/bc0fb204226e9d7b","status":"passed","time":{"start":1700596922153,"stop":1700596922153,"duration":0}},{"uid":"1ada55bb3f4ba381","reportUrl":"https://novasamatech.github.io/test-runner/4178//#testresult/1ada55bb3f4ba381","status":"passed","time":{"start":1700582526439,"stop":1700582526439,"duration":0}},{"uid":"4c60a96ff41080d2","reportUrl":"https://novasamatech.github.io/test-runner/4177//#testresult/4c60a96ff41080d2","status":"passed","time":{"start":1700568139508,"stop":1700568139508,"duration":0}},{"uid":"97b697d8a803a946","reportUrl":"https://novasamatech.github.io/test-runner/4176//#testresult/97b697d8a803a946","status":"passed","time":{"start":1700553721242,"stop":1700553721242,"duration":0}},{"uid":"e465008486062098","reportUrl":"https://novasamatech.github.io/test-runner/4175//#testresult/e465008486062098","status":"passed","time":{"start":1700539324528,"stop":1700539324528,"duration":0}},{"uid":"8d7c7926b32a459f","reportUrl":"https://novasamatech.github.io/test-runner/4174//#testresult/8d7c7926b32a459f","status":"passed","time":{"start":1700524985623,"stop":1700524985623,"duration":0}},{"uid":"e4257ffe088cc94","reportUrl":"https://novasamatech.github.io/test-runner/4173//#testresult/e4257ffe088cc94","status":"passed","time":{"start":1700510544178,"stop":1700510544178,"duration":0}},{"uid":"bb27316e0a49ff22","reportUrl":"https://novasamatech.github.io/test-runner/4172//#testresult/bb27316e0a49ff22","status":"passed","time":{"start":1700496124405,"stop":1700496124406,"duration":1}},{"uid":"6cdc2124103afccb","reportUrl":"https://novasamatech.github.io/test-runner/4171//#testresult/6cdc2124103afccb","status":"passed","time":{"start":1700481769346,"stop":1700481769346,"duration":0}},{"uid":"b514e23cc8eba43c","reportUrl":"https://novasamatech.github.io/test-runner/4170//#testresult/b514e23cc8eba43c","status":"passed","time":{"start":1700467375390,"stop":1700467375390,"duration":0}},{"uid":"4ff406852dac4b88","reportUrl":"https://novasamatech.github.io/test-runner/4169//#testresult/4ff406852dac4b88","status":"passed","time":{"start":1700452931613,"stop":1700452931613,"duration":0}}]},"tags":[]},"source":"7c365611f211c672.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f2d39de6710>"]}