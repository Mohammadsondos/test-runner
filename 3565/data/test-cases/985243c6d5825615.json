{"uid":"985243c6d5825615","name":"test_has_new_assets[Test for krest]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"3d67617994964329092e8a296bddf514","time":{"start":1691870724148,"stop":1691870724815,"duration":667},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f943398a470>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9433b62a10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f943398a470>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9433b62a10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"b8eb8115ccf9290c","name":"stdout","source":"b8eb8115ccf9290c.txt","type":"text/plain","size":1029}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az341-895"},{"name":"thread","value":"1942-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9433b62a10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c114afc9c289ceab","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691870708442,"stop":1691870709129,"duration":687}},{"uid":"2cfae17aa42f011c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691870692273,"stop":1691870693408,"duration":1135}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":20,"unknown":0,"total":29},"items":[{"uid":"4bb3a2848991bb7","reportUrl":"https://novasamatech.github.io/test-runner/3564//#testresult/4bb3a2848991bb7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691856335029,"stop":1691856335613,"duration":584}},{"uid":"b7a50ef762011e58","reportUrl":"https://novasamatech.github.io/test-runner/3562//#testresult/b7a50ef762011e58","status":"passed","time":{"start":1691827532952,"stop":1691827537143,"duration":4191}},{"uid":"8156735977eafc54","reportUrl":"https://novasamatech.github.io/test-runner/3563//#testresult/8156735977eafc54","status":"passed","time":{"start":1691841985514,"stop":1691841991108,"duration":5594}},{"uid":"682c5d05f1865f8","reportUrl":"https://novasamatech.github.io/test-runner/3561//#testresult/682c5d05f1865f8","status":"passed","time":{"start":1691813111426,"stop":1691813115048,"duration":3622}},{"uid":"7fb17d427f22b025","reportUrl":"https://novasamatech.github.io/test-runner/3560//#testresult/7fb17d427f22b025","status":"passed","time":{"start":1691799144677,"stop":1691799151934,"duration":7257}},{"uid":"cc471ce97e2be882","reportUrl":"https://novasamatech.github.io/test-runner/3559//#testresult/cc471ce97e2be882","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691784354371,"stop":1691784355277,"duration":906}},{"uid":"ecb3d57d0822c1a0","reportUrl":"https://novasamatech.github.io/test-runner/3558//#testresult/ecb3d57d0822c1a0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691769983178,"stop":1691769983980,"duration":802}},{"uid":"9a559296c94f99d0","reportUrl":"https://novasamatech.github.io/test-runner/3557//#testresult/9a559296c94f99d0","status":"passed","time":{"start":1691755545922,"stop":1691755550419,"duration":4497}},{"uid":"b12e6968b451e987","reportUrl":"https://novasamatech.github.io/test-runner/3556//#testresult/b12e6968b451e987","status":"passed","time":{"start":1691741107663,"stop":1691741113019,"duration":5356}},{"uid":"321ffce519d09efa","reportUrl":"https://novasamatech.github.io/test-runner/3555//#testresult/321ffce519d09efa","status":"passed","time":{"start":1691734923044,"stop":1691734926777,"duration":3733}},{"uid":"6e035d15494e9fd1","reportUrl":"https://novasamatech.github.io/test-runner/3553//#testresult/6e035d15494e9fd1","status":"passed","time":{"start":1691734631010,"stop":1691734638511,"duration":7501}},{"uid":"354d45cd5e44c5ae","reportUrl":"https://novasamatech.github.io/test-runner/3554//#testresult/354d45cd5e44c5ae","status":"passed","time":{"start":1691734781271,"stop":1691734788144,"duration":6873}},{"uid":"43f322f25370fd66","reportUrl":"https://novasamatech.github.io/test-runner/3552//#testresult/43f322f25370fd66","status":"passed","time":{"start":1691726711234,"stop":1691726715101,"duration":3867}},{"uid":"ad98ea2ec948c2eb","reportUrl":"https://novasamatech.github.io/test-runner/3551//#testresult/ad98ea2ec948c2eb","status":"passed","time":{"start":1691712774347,"stop":1691712784747,"duration":10400}},{"uid":"105589f457a5a9e5","reportUrl":"https://novasamatech.github.io/test-runner/3550//#testresult/105589f457a5a9e5","status":"passed","time":{"start":1691697913740,"stop":1691697917710,"duration":3970}},{"uid":"22e2f081a23d0828","reportUrl":"https://novasamatech.github.io/test-runner/3549//#testresult/22e2f081a23d0828","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691683546219,"stop":1691683550506,"duration":4287}},{"uid":"ed7bf95eee84a0b1","reportUrl":"https://novasamatech.github.io/test-runner/3548//#testresult/ed7bf95eee84a0b1","status":"passed","time":{"start":1691669155038,"stop":1691669162215,"duration":7177}},{"uid":"a209fb6596ebf46d","reportUrl":"https://novasamatech.github.io/test-runner/3547//#testresult/a209fb6596ebf46d","status":"passed","time":{"start":1691654752438,"stop":1691654757900,"duration":5462}},{"uid":"af2cdf1c0ed0a55f","reportUrl":"https://novasamatech.github.io/test-runner/3546//#testresult/af2cdf1c0ed0a55f","status":"passed","time":{"start":1691640313990,"stop":1691640319870,"duration":5880}},{"uid":"5a95f0b95421b0c2","reportUrl":"https://novasamatech.github.io/test-runner/3545//#testresult/5a95f0b95421b0c2","status":"passed","time":{"start":1691626542370,"stop":1691626547452,"duration":5082}}]},"tags":[]},"source":"985243c6d5825615.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9433b62a10>"]}