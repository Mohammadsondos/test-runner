{"uid":"f76c4b2082278b84","name":"test_can_create_connection[Test for Zeitgeist, url: wss://zeitgeist-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"1911313e5366bd74b4f9ce70704534b6","time":{"start":1673813104237,"stop":1673813154608,"duration":50371},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"dcb4371df0d76f6c","name":"stdout","source":"dcb4371df0d76f6c.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az309-11"},{"name":"thread","value":"1682-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://zeitgeist-rpc.dwellir.com', 'name': 'Zeitgeist'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ab29df7fb6c85f69","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","time":{"start":1673813043711,"stop":1673813094080,"duration":50369}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":489,"unknown":0,"total":545},"items":[{"uid":"f2850ee0b0ab3d68","reportUrl":"https://nova-wallet.github.io/test-runner/2278//#testresult/f2850ee0b0ab3d68","status":"passed","time":{"start":1673798645914,"stop":1673798646367,"duration":453}},{"uid":"4be44189a9db295f","reportUrl":"https://nova-wallet.github.io/test-runner/2277//#testresult/4be44189a9db295f","status":"passed","time":{"start":1673784267102,"stop":1673784267700,"duration":598}},{"uid":"61a0bcbd3383e5aa","reportUrl":"https://nova-wallet.github.io/test-runner/2276//#testresult/61a0bcbd3383e5aa","status":"passed","time":{"start":1673769853936,"stop":1673769854620,"duration":684}},{"uid":"7412084dd1df6cd1","reportUrl":"https://nova-wallet.github.io/test-runner/2275//#testresult/7412084dd1df6cd1","status":"passed","time":{"start":1673755454474,"stop":1673755455126,"duration":652}},{"uid":"2f67e7f8f4d98537","reportUrl":"https://nova-wallet.github.io/test-runner/2274//#testresult/2f67e7f8f4d98537","status":"passed","time":{"start":1673741679892,"stop":1673741680500,"duration":608}},{"uid":"288e4e6e6a87bff6","reportUrl":"https://nova-wallet.github.io/test-runner/2273//#testresult/288e4e6e6a87bff6","status":"passed","time":{"start":1673726642011,"stop":1673726642698,"duration":687}},{"uid":"dd4eeb312f472e46","reportUrl":"https://nova-wallet.github.io/test-runner/2272//#testresult/dd4eeb312f472e46","status":"passed","time":{"start":1673712309963,"stop":1673712310732,"duration":769}},{"uid":"2c58d250c4b587bf","reportUrl":"https://nova-wallet.github.io/test-runner/2271//#testresult/2c58d250c4b587bf","status":"passed","time":{"start":1673697890869,"stop":1673697891566,"duration":697}},{"uid":"a6362b8cbed89825","reportUrl":"https://nova-wallet.github.io/test-runner/2270//#testresult/a6362b8cbed89825","status":"passed","time":{"start":1673683466716,"stop":1673683467341,"duration":625}},{"uid":"a2721970439786ee","reportUrl":"https://nova-wallet.github.io/test-runner/2269//#testresult/a2721970439786ee","status":"passed","time":{"start":1673669040740,"stop":1673669041463,"duration":723}},{"uid":"fa502d64431e85af","reportUrl":"https://nova-wallet.github.io/test-runner/2268//#testresult/fa502d64431e85af","status":"passed","time":{"start":1673655206533,"stop":1673655207191,"duration":658}},{"uid":"ca007550b293b8c2","reportUrl":"https://nova-wallet.github.io/test-runner/2267//#testresult/ca007550b293b8c2","status":"passed","time":{"start":1673640245466,"stop":1673640246239,"duration":773}},{"uid":"17e816018f33257c","reportUrl":"https://nova-wallet.github.io/test-runner/2266//#testresult/17e816018f33257c","status":"passed","time":{"start":1673625869788,"stop":1673625870580,"duration":792}},{"uid":"ccfd24f0a33bd7c9","reportUrl":"https://nova-wallet.github.io/test-runner/2265//#testresult/ccfd24f0a33bd7c9","status":"passed","time":{"start":1673611500525,"stop":1673611501712,"duration":1187}},{"uid":"9f5ff9ec5eaa7f30","reportUrl":"https://nova-wallet.github.io/test-runner/2264//#testresult/9f5ff9ec5eaa7f30","status":"passed","time":{"start":1673597105692,"stop":1673597106166,"duration":474}},{"uid":"e4a182f5efdcd8f1","reportUrl":"https://nova-wallet.github.io/test-runner/2263//#testresult/e4a182f5efdcd8f1","status":"passed","time":{"start":1673582669439,"stop":1673582670062,"duration":623}},{"uid":"e3a5f7ea414ee070","reportUrl":"https://nova-wallet.github.io/test-runner/2262//#testresult/e3a5f7ea414ee070","status":"passed","time":{"start":1673568844719,"stop":1673568845320,"duration":601}},{"uid":"68b4a4ea64b4e308","reportUrl":"https://nova-wallet.github.io/test-runner/2261//#testresult/68b4a4ea64b4e308","status":"passed","time":{"start":1673553835551,"stop":1673553836037,"duration":486}},{"uid":"3a5e338714fcf068","reportUrl":"https://nova-wallet.github.io/test-runner/2259//#testresult/3a5e338714fcf068","status":"passed","time":{"start":1673525139753,"stop":1673525140505,"duration":752}},{"uid":"6eab88d30370d671","reportUrl":"https://nova-wallet.github.io/test-runner/2258//#testresult/6eab88d30370d671","status":"passed","time":{"start":1673510677700,"stop":1673510678270,"duration":570}}]},"tags":[]},"source":"f76c4b2082278b84.json","parameterValues":["{'url': 'wss://zeitgeist-rpc.dwellir.com', 'name': 'Zeitgeist'}"]}