{"uid":"f26343280d77a854","name":"test_can_create_connection[Test for Zeitgeist, url: wss://zeitgeist.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"4e4bafe18ecd3560f8865fceae8e0c9e","time":{"start":1668413161669,"stop":1668413221984,"duration":60315},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az747-138"},{"name":"thread","value":"1684-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://zeitgeist.api.onfinality.io/public-ws', 'name': 'Zeitgeist'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b5db8e7015731d99","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1668413091748,"stop":1668413151529,"duration":59781}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":199,"unknown":0,"total":201},"items":[{"uid":"7b5cdfe0b1df55b9","reportUrl":"https://nova-wallet.github.io/test-runner/1896//#testresult/7b5cdfe0b1df55b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1668399439065,"stop":1668399499533,"duration":60468}},{"uid":"8779419a0d17cf68","reportUrl":"https://nova-wallet.github.io/test-runner/1895//#testresult/8779419a0d17cf68","status":"passed","time":{"start":1668384947268,"stop":1668384947980,"duration":712}},{"uid":"7738bcf13068885d","reportUrl":"https://nova-wallet.github.io/test-runner/1894//#testresult/7738bcf13068885d","status":"passed","time":{"start":1668369851806,"stop":1668369852474,"duration":668}},{"uid":"c875c3c890ffea33","reportUrl":"https://nova-wallet.github.io/test-runner/1893//#testresult/c875c3c890ffea33","status":"passed","time":{"start":1668355453465,"stop":1668355454096,"duration":631}},{"uid":"6d039cc45ad315f7","reportUrl":"https://nova-wallet.github.io/test-runner/1892//#testresult/6d039cc45ad315f7","status":"passed","time":{"start":1668341140617,"stop":1668341141301,"duration":684}},{"uid":"2bd04c6da5e486d4","reportUrl":"https://nova-wallet.github.io/test-runner/1891//#testresult/2bd04c6da5e486d4","status":"passed","time":{"start":1668326700761,"stop":1668326701251,"duration":490}},{"uid":"c0126f736c9c9c9e","reportUrl":"https://nova-wallet.github.io/test-runner/1890//#testresult/c0126f736c9c9c9e","status":"passed","time":{"start":1668312780897,"stop":1668312781575,"duration":678}},{"uid":"54f7931b4bcadb61","reportUrl":"https://nova-wallet.github.io/test-runner/1889//#testresult/54f7931b4bcadb61","status":"passed","time":{"start":1668298550868,"stop":1668298551344,"duration":476}},{"uid":"7d618b4a07e32132","reportUrl":"https://nova-wallet.github.io/test-runner/1888//#testresult/7d618b4a07e32132","status":"passed","time":{"start":1668283461865,"stop":1668283462332,"duration":467}},{"uid":"76e80141463a94ad","reportUrl":"https://nova-wallet.github.io/test-runner/1887//#testresult/76e80141463a94ad","status":"passed","time":{"start":1668269074571,"stop":1668269075049,"duration":478}},{"uid":"908c88cfa6c9abfb","reportUrl":"https://nova-wallet.github.io/test-runner/1886//#testresult/908c88cfa6c9abfb","status":"passed","time":{"start":1668254709763,"stop":1668254710376,"duration":613}},{"uid":"77dfd64e0b1aba50","reportUrl":"https://nova-wallet.github.io/test-runner/1885//#testresult/77dfd64e0b1aba50","status":"passed","time":{"start":1668240299741,"stop":1668240300296,"duration":555}},{"uid":"60f4046dcb747f8b","reportUrl":"https://nova-wallet.github.io/test-runner/1884//#testresult/60f4046dcb747f8b","status":"passed","time":{"start":1668226269619,"stop":1668226270334,"duration":715}},{"uid":"35c3df1e51254953","reportUrl":"https://nova-wallet.github.io/test-runner/1883//#testresult/35c3df1e51254953","status":"passed","time":{"start":1668212229863,"stop":1668212230453,"duration":590}},{"uid":"2b43e2befe8b0232","reportUrl":"https://nova-wallet.github.io/test-runner/1882//#testresult/2b43e2befe8b0232","status":"passed","time":{"start":1668197054417,"stop":1668197055081,"duration":664}},{"uid":"185bf9cd7eb54e6b","reportUrl":"https://nova-wallet.github.io/test-runner/1881//#testresult/185bf9cd7eb54e6b","status":"passed","time":{"start":1668182657092,"stop":1668182657803,"duration":711}},{"uid":"11f46149477c6b4e","reportUrl":"https://nova-wallet.github.io/test-runner/1880//#testresult/11f46149477c6b4e","status":"passed","time":{"start":1668168342566,"stop":1668168343161,"duration":595}},{"uid":"725ea728c62bf749","reportUrl":"https://nova-wallet.github.io/test-runner/1879//#testresult/725ea728c62bf749","status":"passed","time":{"start":1668156939962,"stop":1668156940625,"duration":663}},{"uid":"46901c45c1d83007","reportUrl":"https://nova-wallet.github.io/test-runner/1878//#testresult/46901c45c1d83007","status":"passed","time":{"start":1668153917214,"stop":1668153917883,"duration":669}},{"uid":"a06045a3a543710a","reportUrl":"https://nova-wallet.github.io/test-runner/1877//#testresult/a06045a3a543710a","status":"passed","time":{"start":1668140023042,"stop":1668140023607,"duration":565}}]},"tags":[]},"source":"f26343280d77a854.json","parameterValues":["{'url': 'wss://zeitgeist.api.onfinality.io/public-ws', 'name': 'Zeitgeist'}"]}