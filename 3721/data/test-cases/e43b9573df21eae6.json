{"uid":"e43b9573df21eae6","name":"test_has_new_assets[Test for Calamari]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"8edafafb0910af574e27cf9f6c595286","time":{"start":1694044967710,"stop":1694044967962,"duration":252},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f3a835b5030>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3a835b7be0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f3a835b5030>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3a835b7be0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"ac58a68440847d35","name":"stdout","source":"ac58a68440847d35.txt","type":"text/plain","size":534}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az257-218"},{"name":"thread","value":"2146-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f3a835b7be0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5f6e6343190c147c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694044952509,"stop":1694044952678,"duration":169}},{"uid":"ecdc1fe7403abd80","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694044937106,"stop":1694044937472,"duration":366}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":79,"unknown":0,"total":81},"items":[{"uid":"b1a63c92fc50835c","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/b1a63c92fc50835c","status":"passed","time":{"start":1694030490085,"stop":1694030495703,"duration":5618}},{"uid":"b0b5f57f7d1c6bc7","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/b0b5f57f7d1c6bc7","status":"passed","time":{"start":1694016102799,"stop":1694016107658,"duration":4859}},{"uid":"3e9c79ea88bf0a15","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/3e9c79ea88bf0a15","status":"passed","time":{"start":1694001689681,"stop":1694001692206,"duration":2525}},{"uid":"a5e46713a6614032","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/a5e46713a6614032","status":"passed","time":{"start":1693987289715,"stop":1693987293496,"duration":3781}},{"uid":"ba8940e61c215389","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/ba8940e61c215389","status":"passed","time":{"start":1693972883299,"stop":1693972886837,"duration":3538}},{"uid":"f26127dec6e55aa1","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/f26127dec6e55aa1","status":"passed","time":{"start":1693958535967,"stop":1693958539838,"duration":3871}},{"uid":"93ac859ffa21b342","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/93ac859ffa21b342","status":"passed","time":{"start":1693944085673,"stop":1693944089613,"duration":3940}},{"uid":"cc24e5fbd8964971","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/cc24e5fbd8964971","status":"passed","time":{"start":1693929689041,"stop":1693929693289,"duration":4248}},{"uid":"757333f1d5a57355","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/757333f1d5a57355","status":"passed","time":{"start":1693915300312,"stop":1693915305729,"duration":5417}},{"uid":"ae8f34c2d9abc665","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/ae8f34c2d9abc665","status":"passed","time":{"start":1693872153822,"stop":1693872160127,"duration":6305}},{"uid":"8e405af56c16d70","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/8e405af56c16d70","status":"passed","time":{"start":1693857692956,"stop":1693857697050,"duration":4094}},{"uid":"6e46fda1ad6265b2","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/6e46fda1ad6265b2","status":"passed","time":{"start":1693843281826,"stop":1693843285607,"duration":3781}},{"uid":"f6242febdc555007","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/f6242febdc555007","status":"passed","time":{"start":1693828885334,"stop":1693828887174,"duration":1840}},{"uid":"17a65cc5cc81be7e","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/17a65cc5cc81be7e","status":"passed","time":{"start":1693814502368,"stop":1693814507401,"duration":5033}},{"uid":"b6cce8f53c6d7bf0","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/b6cce8f53c6d7bf0","status":"passed","time":{"start":1693800079783,"stop":1693800082732,"duration":2949}},{"uid":"c1f23f669c7462b1","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/c1f23f669c7462b1","status":"passed","time":{"start":1693785741164,"stop":1693785747077,"duration":5913}},{"uid":"39503a4f2062e0da","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/39503a4f2062e0da","status":"passed","time":{"start":1693771314372,"stop":1693771318008,"duration":3636}},{"uid":"a204c5c5b138ff18","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/a204c5c5b138ff18","status":"passed","time":{"start":1693756892166,"stop":1693756896752,"duration":4586}},{"uid":"68f8324ea7c5763c","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/68f8324ea7c5763c","status":"passed","time":{"start":1693742486496,"stop":1693742491198,"duration":4702}},{"uid":"66154cb24f7cfb20","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/66154cb24f7cfb20","status":"passed","time":{"start":1693728095452,"stop":1693728101160,"duration":5708}}]},"tags":[]},"source":"e43b9573df21eae6.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f3a835b7be0>"]}