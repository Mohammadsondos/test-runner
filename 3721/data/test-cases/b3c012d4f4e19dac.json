{"uid":"b3c012d4f4e19dac","name":"test_has_new_assets[Test for Dora Factory (PAUSED)]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2618293375d61e703515aac3ceeb0de7","time":{"start":1694045030435,"stop":1694045031656,"duration":1221},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f3a835600d0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3a835b6920>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f3a835600d0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3a835b6920>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"8c76ffdbd9775c7a","name":"stdout","source":"8c76ffdbd9775c7a.txt","type":"text/plain","size":3228}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az257-218"},{"name":"thread","value":"2146-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f3a835b6920>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"53f6a57bb2ae9236","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694045013935,"stop":1694045015382,"duration":1447}},{"uid":"639bcdaaa866b265","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694044997714,"stop":1694044998895,"duration":1181}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":60,"unknown":0,"total":81},"items":[{"uid":"52bd6a996bdad7f","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/52bd6a996bdad7f","status":"passed","time":{"start":1694030566794,"stop":1694030572591,"duration":5797}},{"uid":"99e35221c832a4e6","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/99e35221c832a4e6","status":"passed","time":{"start":1694016225000,"stop":1694016231186,"duration":6186}},{"uid":"6807e7485551dee0","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/6807e7485551dee0","status":"passed","time":{"start":1694001731435,"stop":1694001736452,"duration":5017}},{"uid":"e48b67cde65552c1","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/e48b67cde65552c1","status":"passed","time":{"start":1693987368476,"stop":1693987374870,"duration":6394}},{"uid":"893f1df9cfe52a07","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/893f1df9cfe52a07","status":"passed","time":{"start":1693972932651,"stop":1693972940355,"duration":7704}},{"uid":"223fb2032dd51b64","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/223fb2032dd51b64","status":"passed","time":{"start":1693958597339,"stop":1693958604373,"duration":7034}},{"uid":"2ba42748af996b8e","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/2ba42748af996b8e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693944165206,"stop":1693944166784,"duration":1578}},{"uid":"66a0079a817b76e9","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/66a0079a817b76e9","status":"passed","time":{"start":1693929757807,"stop":1693929764052,"duration":6245}},{"uid":"8310e4ee121db601","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/8310e4ee121db601","status":"passed","time":{"start":1693915357204,"stop":1693915364902,"duration":7698}},{"uid":"ca90697b3affff","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/ca90697b3affff","status":"passed","time":{"start":1693872234826,"stop":1693872240396,"duration":5570}},{"uid":"84bd036402ac065c","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/84bd036402ac065c","status":"passed","time":{"start":1693857767730,"stop":1693857775650,"duration":7920}},{"uid":"f72aa16062540b7a","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/f72aa16062540b7a","status":"passed","time":{"start":1693843338934,"stop":1693843343311,"duration":4377}},{"uid":"724ab2862d874ebe","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/724ab2862d874ebe","status":"passed","time":{"start":1693828942807,"stop":1693828948210,"duration":5403}},{"uid":"8bc1f9b956d3eaa7","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/8bc1f9b956d3eaa7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693814583944,"stop":1693814585221,"duration":1277}},{"uid":"c3fd6f44de1380af","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/c3fd6f44de1380af","status":"passed","time":{"start":1693800119250,"stop":1693800124121,"duration":4871}},{"uid":"63b2fb2a22219699","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/63b2fb2a22219699","status":"passed","time":{"start":1693785784493,"stop":1693785791679,"duration":7186}},{"uid":"71c0cfa64f956142","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/71c0cfa64f956142","status":"passed","time":{"start":1693771325370,"stop":1693771329539,"duration":4169}},{"uid":"aac5fee14888b00c","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/aac5fee14888b00c","status":"passed","time":{"start":1693756937691,"stop":1693756944024,"duration":6333}},{"uid":"21029ac51ea37651","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/21029ac51ea37651","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693742557958,"stop":1693742559440,"duration":1482}},{"uid":"c44efa6bd727f329","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/c44efa6bd727f329","status":"passed","time":{"start":1693728145358,"stop":1693728151775,"duration":6417}}]},"tags":[]},"source":"b3c012d4f4e19dac.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f3a835b6920>"]}