{"uid":"b4b87a99920c07e2","name":"test_can_create_connection[Test for Composable Finance, url: wss://rpc.composable.finance]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e1c6edf5649802bd02e402a73e097467","time":{"start":1684512291831,"stop":1684512322626,"duration":30795},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 Origin Connection Time-out","statusTrace":"data = {'name': 'Composable Finance', 'url': 'wss://rpc.composable.finance'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 522 Origin Connection Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 Origin Connection Time-out","statusTrace":"data = {'name': 'Composable Finance', 'url': 'wss://rpc.composable.finance'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 522 Origin Connection Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"f6dfe2e77cdbe6c7","name":"stdout","source":"f6dfe2e77cdbe6c7.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1255-650"},{"name":"thread","value":"1894-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.composable.finance', 'name': 'Composable Finance'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5116c8a672c7eaf1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 Origin Connection Time-out","time":{"start":1684512251024,"stop":1684512281703,"duration":30679}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":124,"unknown":0,"total":125},"items":[{"uid":"2e836bd4dc89d9ab","reportUrl":"https://nova-wallet.github.io/test-runner/3037//#testresult/2e836bd4dc89d9ab","status":"passed","time":{"start":1684497898052,"stop":1684497898557,"duration":505}},{"uid":"1e8a1691738f41bc","reportUrl":"https://nova-wallet.github.io/test-runner/3034//#testresult/1e8a1691738f41bc","status":"passed","time":{"start":1684455196834,"stop":1684455197489,"duration":655}},{"uid":"69317a313ccca7eb","reportUrl":"https://nova-wallet.github.io/test-runner/3033//#testresult/69317a313ccca7eb","status":"passed","time":{"start":1684440253611,"stop":1684440254162,"duration":551}},{"uid":"b2f9a7d416fb226f","reportUrl":"https://nova-wallet.github.io/test-runner/3031//#testresult/b2f9a7d416fb226f","status":"passed","time":{"start":1684411491200,"stop":1684411494462,"duration":3262}},{"uid":"d50a219f71b74a05","reportUrl":"https://nova-wallet.github.io/test-runner/3027//#testresult/d50a219f71b74a05","status":"passed","time":{"start":1684353862450,"stop":1684353863240,"duration":790}},{"uid":"f56378ec9d9cffe6","reportUrl":"https://nova-wallet.github.io/test-runner/3026//#testresult/f56378ec9d9cffe6","status":"passed","time":{"start":1684339465059,"stop":1684339465736,"duration":677}},{"uid":"f566e12bab0dda71","reportUrl":"https://nova-wallet.github.io/test-runner/3024//#testresult/f566e12bab0dda71","status":"passed","time":{"start":1684310683683,"stop":1684310684084,"duration":401}},{"uid":"727c83812cd11df5","reportUrl":"https://nova-wallet.github.io/test-runner/3023//#testresult/727c83812cd11df5","status":"passed","time":{"start":1684296270947,"stop":1684296271772,"duration":825}},{"uid":"bbed93ac32634ca1","reportUrl":"https://nova-wallet.github.io/test-runner/3022//#testresult/bbed93ac32634ca1","status":"passed","time":{"start":1684282485299,"stop":1684282486073,"duration":774}},{"uid":"50d7adf4e1f68108","reportUrl":"https://nova-wallet.github.io/test-runner/3020//#testresult/50d7adf4e1f68108","status":"passed","time":{"start":1684253250118,"stop":1684253250803,"duration":685}},{"uid":"9185885d118ece6d","reportUrl":"https://nova-wallet.github.io/test-runner/3019//#testresult/9185885d118ece6d","status":"passed","time":{"start":1684238729781,"stop":1684238730455,"duration":674}},{"uid":"1f7af734c9847507","reportUrl":"https://nova-wallet.github.io/test-runner/3017//#testresult/1f7af734c9847507","status":"passed","time":{"start":1684209938668,"stop":1684209939436,"duration":768}},{"uid":"9a811714663128f2","reportUrl":"https://nova-wallet.github.io/test-runner/3016//#testresult/9a811714663128f2","status":"passed","time":{"start":1684196017666,"stop":1684196018287,"duration":621}},{"uid":"d4bcb0f8ebb2d1fb","reportUrl":"https://nova-wallet.github.io/test-runner/3015//#testresult/d4bcb0f8ebb2d1fb","status":"passed","time":{"start":1684181058376,"stop":1684181058892,"duration":516}},{"uid":"109134bbb4f971fc","reportUrl":"https://nova-wallet.github.io/test-runner/3013//#testresult/109134bbb4f971fc","status":"passed","time":{"start":1684152315521,"stop":1684152316179,"duration":658}},{"uid":"15c39149da42b872","reportUrl":"https://nova-wallet.github.io/test-runner/3012//#testresult/15c39149da42b872","status":"passed","time":{"start":1684137874476,"stop":1684137875158,"duration":682}},{"uid":"c4c3c15338f36257","reportUrl":"https://nova-wallet.github.io/test-runner/3011//#testresult/c4c3c15338f36257","status":"passed","time":{"start":1684123457681,"stop":1684123458096,"duration":415}},{"uid":"d7f6870d47ac927d","reportUrl":"https://nova-wallet.github.io/test-runner/3010//#testresult/d7f6870d47ac927d","status":"passed","time":{"start":1684109628365,"stop":1684109628995,"duration":630}},{"uid":"f9dfe1588efa20bc","reportUrl":"https://nova-wallet.github.io/test-runner/3009//#testresult/f9dfe1588efa20bc","status":"passed","time":{"start":1684094725332,"stop":1684094725952,"duration":620}},{"uid":"16f97ffa91321c10","reportUrl":"https://nova-wallet.github.io/test-runner/3008//#testresult/16f97ffa91321c10","status":"passed","time":{"start":1684080288733,"stop":1684080289484,"duration":751}}]},"tags":[]},"source":"b4b87a99920c07e2.json","parameterValues":["{'url': 'wss://rpc.composable.finance', 'name': 'Composable Finance'}"]}