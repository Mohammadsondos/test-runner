{"uid":"c742cf3a2f481d5b","name":"test_address_prefix[Test for QUARTZ]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"e5e6eb07555f878836239eb85b504828","time":{"start":1669003803743,"stop":1669003863989,"duration":60246},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f90d5298910>\nchain = <tests.utils.chain_model.Chain object at 0x7f90d57385b0>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/chain_model.py:35: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/create_type_file.py:52: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2374: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2348: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:1100: in init_runtime\n    block_header = self.rpc_request('chain_getHeader', [self.block_hash])\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:655: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az121-727"},{"name":"thread","value":"1635-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f90d57385b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e5764409786c0096","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1669003733374,"stop":1669003793569,"duration":60195}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":239,"unknown":0,"total":240},"items":[{"uid":"eaea99efccf0190c","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/eaea99efccf0190c","status":"passed","time":{"start":1668989752898,"stop":1668989757526,"duration":4628}},{"uid":"9ee57ba452a747d3","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/9ee57ba452a747d3","status":"passed","time":{"start":1668974643841,"stop":1668974648142,"duration":4301}},{"uid":"7bd342eb3c5abd","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/7bd342eb3c5abd","status":"passed","time":{"start":1668960242699,"stop":1668960246871,"duration":4172}},{"uid":"44e013284335cf69","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/44e013284335cf69","status":"passed","time":{"start":1668945891022,"stop":1668945895469,"duration":4447}},{"uid":"bb849abeb4b0baf5","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/bb849abeb4b0baf5","status":"passed","time":{"start":1668931478941,"stop":1668931482853,"duration":3912}},{"uid":"22050dae1c34e0eb","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/22050dae1c34e0eb","status":"passed","time":{"start":1668917216503,"stop":1668917220750,"duration":4247}},{"uid":"3da7144d689352ca","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/3da7144d689352ca","status":"passed","time":{"start":1668903353454,"stop":1668903357798,"duration":4344}},{"uid":"d9aee85f07366a8f","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/d9aee85f07366a8f","status":"passed","time":{"start":1668888239707,"stop":1668888243305,"duration":3598}},{"uid":"fbfed4a2c0f7bdee","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/fbfed4a2c0f7bdee","status":"passed","time":{"start":1668873846280,"stop":1668873850320,"duration":4040}},{"uid":"7eab7fd76705a432","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/7eab7fd76705a432","status":"passed","time":{"start":1668859489253,"stop":1668859493370,"duration":4117}},{"uid":"f02dfcc54e71b03a","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/f02dfcc54e71b03a","status":"passed","time":{"start":1668845071570,"stop":1668845076146,"duration":4576}},{"uid":"d53b290fed9ac0e6","reportUrl":"https://nova-wallet.github.io/test-runner/1926//#testresult/d53b290fed9ac0e6","status":"passed","time":{"start":1668830662669,"stop":1668830666416,"duration":3747}},{"uid":"a3f1a2f3f10d1756","reportUrl":"https://nova-wallet.github.io/test-runner/1925//#testresult/a3f1a2f3f10d1756","status":"passed","time":{"start":1668816954419,"stop":1668816958233,"duration":3814}},{"uid":"f9c3147074b997fc","reportUrl":"https://nova-wallet.github.io/test-runner/1924//#testresult/f9c3147074b997fc","status":"passed","time":{"start":1668801851823,"stop":1668801855781,"duration":3958}},{"uid":"955f135b84e0f9e9","reportUrl":"https://nova-wallet.github.io/test-runner/1923//#testresult/955f135b84e0f9e9","status":"passed","time":{"start":1668787466827,"stop":1668787470585,"duration":3758}},{"uid":"fd29564747913275","reportUrl":"https://nova-wallet.github.io/test-runner/1922//#testresult/fd29564747913275","status":"passed","time":{"start":1668773112116,"stop":1668773115754,"duration":3638}},{"uid":"b33499a2f1dca18e","reportUrl":"https://nova-wallet.github.io/test-runner/1921//#testresult/b33499a2f1dca18e","status":"passed","time":{"start":1668758679993,"stop":1668758684467,"duration":4474}},{"uid":"dacfb8adc1deae8","reportUrl":"https://nova-wallet.github.io/test-runner/1920//#testresult/dacfb8adc1deae8","status":"passed","time":{"start":1668744339956,"stop":1668744343590,"duration":3634}},{"uid":"b2d4bd231c54aca9","reportUrl":"https://nova-wallet.github.io/test-runner/1919//#testresult/b2d4bd231c54aca9","status":"passed","time":{"start":1668730621849,"stop":1668730625510,"duration":3661}},{"uid":"91891f673964b606","reportUrl":"https://nova-wallet.github.io/test-runner/1918//#testresult/91891f673964b606","status":"passed","time":{"start":1668715456566,"stop":1668715460590,"duration":4024}}]},"tags":[]},"source":"c742cf3a2f481d5b.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f90d57385b0>"]}