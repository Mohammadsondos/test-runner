{"uid":"f90ca21ab5794ab9","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1688918720346,"stop":1688918720694,"duration":348},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff85fbeead0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff85fbfb640>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff85fbeead0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff85fbfb640>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"b584b1725326c4eb","name":"stdout","source":"b584b1725326c4eb.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az465-894"},{"name":"thread","value":"1929-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff85fbfb640>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ba2fe79c05d3a7ac","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688918704992,"stop":1688918705319,"duration":327}},{"uid":"2247dbd47f2c9f51","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688918688966,"stop":1688918689961,"duration":995}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":86,"skipped":0,"passed":275,"unknown":0,"total":361},"items":[{"uid":"3bf36473110a325","reportUrl":"https://novasamatech.github.io/test-runner/3355//#testresult/3bf36473110a325","status":"passed","time":{"start":1688889959214,"stop":1688889961140,"duration":1926}},{"uid":"cd7507a307ad469a","reportUrl":"https://novasamatech.github.io/test-runner/3356//#testresult/cd7507a307ad469a","status":"passed","time":{"start":1688904363608,"stop":1688904365644,"duration":2036}},{"uid":"4d7c37e778e41f10","reportUrl":"https://novasamatech.github.io/test-runner/3354//#testresult/4d7c37e778e41f10","status":"passed","time":{"start":1688875491482,"stop":1688875500265,"duration":8783}},{"uid":"6c39126dfaa85037","reportUrl":"https://novasamatech.github.io/test-runner/3353//#testresult/6c39126dfaa85037","status":"passed","time":{"start":1688861912533,"stop":1688861917440,"duration":4907}},{"uid":"bb03638d44e8e6dd","reportUrl":"https://novasamatech.github.io/test-runner/3352//#testresult/bb03638d44e8e6dd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688846715544,"stop":1688846715889,"duration":345}},{"uid":"3b9be32bb7e839dc","reportUrl":"https://novasamatech.github.io/test-runner/3351//#testresult/3b9be32bb7e839dc","status":"passed","time":{"start":1688832292054,"stop":1688832300136,"duration":8082}},{"uid":"47bc7d8c9729cfdb","reportUrl":"https://novasamatech.github.io/test-runner/3349//#testresult/47bc7d8c9729cfdb","status":"passed","time":{"start":1688803500341,"stop":1688803509037,"duration":8696}},{"uid":"b313bc1519aac59b","reportUrl":"https://novasamatech.github.io/test-runner/3350//#testresult/b313bc1519aac59b","status":"passed","time":{"start":1688817950413,"stop":1688817959337,"duration":8924}},{"uid":"241291ed7adfd603","reportUrl":"https://novasamatech.github.io/test-runner/3348//#testresult/241291ed7adfd603","status":"passed","time":{"start":1688789095885,"stop":1688789104448,"duration":8563}},{"uid":"a426c365d2d745ad","reportUrl":"https://novasamatech.github.io/test-runner/3347//#testresult/a426c365d2d745ad","status":"passed","time":{"start":1688775372863,"stop":1688775385754,"duration":12891}},{"uid":"6095e96b9ddb7abc","reportUrl":"https://novasamatech.github.io/test-runner/3346//#testresult/6095e96b9ddb7abc","status":"passed","time":{"start":1688760309174,"stop":1688760322976,"duration":13802}},{"uid":"2abd064bb921f5d5","reportUrl":"https://novasamatech.github.io/test-runner/3345//#testresult/2abd064bb921f5d5","status":"passed","time":{"start":1688745931473,"stop":1688745935816,"duration":4343}},{"uid":"979d375bc9237903","reportUrl":"https://novasamatech.github.io/test-runner/3344//#testresult/979d375bc9237903","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688731604794,"stop":1688731605092,"duration":298}},{"uid":"237c4b1629f64011","reportUrl":"https://novasamatech.github.io/test-runner/3343//#testresult/237c4b1629f64011","status":"passed","time":{"start":1688717127335,"stop":1688717134267,"duration":6932}},{"uid":"749b335db31ff3a2","reportUrl":"https://novasamatech.github.io/test-runner/3342//#testresult/749b335db31ff3a2","status":"passed","time":{"start":1688702702629,"stop":1688702712917,"duration":10288}},{"uid":"9a2f534559da5a2","reportUrl":"https://novasamatech.github.io/test-runner/3341//#testresult/9a2f534559da5a2","status":"passed","time":{"start":1688689007359,"stop":1688689016020,"duration":8661}},{"uid":"5429651028cc2d3e","reportUrl":"https://novasamatech.github.io/test-runner/3340//#testresult/5429651028cc2d3e","status":"passed","time":{"start":1688673902631,"stop":1688673914727,"duration":12096}},{"uid":"6641bb1dc3007cd","reportUrl":"https://novasamatech.github.io/test-runner/3339//#testresult/6641bb1dc3007cd","status":"passed","time":{"start":1688659578935,"stop":1688659582172,"duration":3237}},{"uid":"320ec3d774f455fe","reportUrl":"https://novasamatech.github.io/test-runner/3338//#testresult/320ec3d774f455fe","status":"passed","time":{"start":1688645180837,"stop":1688645190499,"duration":9662}},{"uid":"78873c9651112cc9","reportUrl":"https://novasamatech.github.io/test-runner/3337//#testresult/78873c9651112cc9","status":"passed","time":{"start":1688630740120,"stop":1688630742722,"duration":2602}}]},"tags":[]},"source":"f90ca21ab5794ab9.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff85fbfb640>"]}