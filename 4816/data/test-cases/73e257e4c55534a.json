{"uid":"73e257e4c55534a","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://1rpc.io/eth]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"9e0c16e1a7876bd51b49d655a0298c26","time":{"start":1709568082764,"stop":1709568093104,"duration":10340},"status":"failed","statusMessage":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7feb81e80880>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7feb81e80880>> = <web3.main.Web3 object at 0x7feb81e80880>.is_connected","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7feb81e83790>\ndata = {'name': 'Ethereum', 'url': 'https://1rpc.io/eth'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n>       assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\nE       AssertionError: Failed to connect to Ethereum RPC node\nE       assert False\nE        +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7feb81e80880>>()\nE        +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7feb81e80880>> = <web3.main.Web3 object at 0x7feb81e80880>.is_connected\n\ntests/test_eth_nodes_availability.py:37: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1200-26"},{"name":"thread","value":"2075-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3c855279e941a7f2","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709568077557,"stop":1709568077729,"duration":172}},{"uid":"9c9db2e4f76e8751","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709568072324,"stop":1709568072521,"duration":197}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":19,"skipped":0,"passed":905,"unknown":0,"total":927},"items":[{"uid":"cd78f2fb79191c81","reportUrl":"https://novasamatech.github.io/test-runner/4815//#testresult/cd78f2fb79191c81","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709553991136,"stop":1709553991509,"duration":373}},{"uid":"b982f199b8469eb4","reportUrl":"https://novasamatech.github.io/test-runner/4814//#testresult/b982f199b8469eb4","status":"passed","time":{"start":1709539721275,"stop":1709539722396,"duration":1121}},{"uid":"6ae5a7926a0d87f2","reportUrl":"https://novasamatech.github.io/test-runner/4813//#testresult/6ae5a7926a0d87f2","status":"passed","time":{"start":1709525140593,"stop":1709525141506,"duration":913}},{"uid":"aeec12864129b38d","reportUrl":"https://novasamatech.github.io/test-runner/4812//#testresult/aeec12864129b38d","status":"passed","time":{"start":1709510512084,"stop":1709510513428,"duration":1344}},{"uid":"fac9eb1fc9a87f7f","reportUrl":"https://novasamatech.github.io/test-runner/4811//#testresult/fac9eb1fc9a87f7f","status":"passed","time":{"start":1709496074191,"stop":1709496076236,"duration":2045}},{"uid":"841658cd02ffc5fb","reportUrl":"https://novasamatech.github.io/test-runner/4810//#testresult/841658cd02ffc5fb","status":"passed","time":{"start":1709481660120,"stop":1709481661419,"duration":1299}},{"uid":"9dc1799fc751dc2a","reportUrl":"https://novasamatech.github.io/test-runner/4809//#testresult/9dc1799fc751dc2a","status":"passed","time":{"start":1709467284136,"stop":1709467285240,"duration":1104}},{"uid":"4648743caca6244f","reportUrl":"https://novasamatech.github.io/test-runner/4808//#testresult/4648743caca6244f","status":"passed","time":{"start":1709452855608,"stop":1709452856880,"duration":1272}},{"uid":"7f206659c33157a6","reportUrl":"https://novasamatech.github.io/test-runner/4807//#testresult/7f206659c33157a6","status":"passed","time":{"start":1709438468521,"stop":1709438470290,"duration":1769}},{"uid":"1ed322949bfbcba1","reportUrl":"https://novasamatech.github.io/test-runner/4806//#testresult/1ed322949bfbcba1","status":"passed","time":{"start":1709424107043,"stop":1709424108090,"duration":1047}},{"uid":"d1eadefb1c6eae6b","reportUrl":"https://novasamatech.github.io/test-runner/4805//#testresult/d1eadefb1c6eae6b","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709409680288,"stop":1709409680591,"duration":303}},{"uid":"bf539f913debdccb","reportUrl":"https://novasamatech.github.io/test-runner/4804//#testresult/bf539f913debdccb","status":"passed","time":{"start":1709395273493,"stop":1709395274837,"duration":1344}},{"uid":"9696a0fe20fe513f","reportUrl":"https://novasamatech.github.io/test-runner/4803//#testresult/9696a0fe20fe513f","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709380876411,"stop":1709380876568,"duration":157}},{"uid":"e833e4e8f2a9a0bf","reportUrl":"https://novasamatech.github.io/test-runner/4802//#testresult/e833e4e8f2a9a0bf","status":"passed","time":{"start":1709366467819,"stop":1709366469063,"duration":1244}},{"uid":"d0b01c0cf605a4f7","reportUrl":"https://novasamatech.github.io/test-runner/4801//#testresult/d0b01c0cf605a4f7","status":"passed","time":{"start":1709352070489,"stop":1709352071038,"duration":549}},{"uid":"8982688be8602615","reportUrl":"https://novasamatech.github.io/test-runner/4800//#testresult/8982688be8602615","status":"passed","time":{"start":1709337708372,"stop":1709337710089,"duration":1717}},{"uid":"54b2ac10104aa96","reportUrl":"https://novasamatech.github.io/test-runner/4799//#testresult/54b2ac10104aa96","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709323276018,"stop":1709323276107,"duration":89}},{"uid":"29e5f4d2d0ff6c42","reportUrl":"https://novasamatech.github.io/test-runner/4798//#testresult/29e5f4d2d0ff6c42","status":"passed","time":{"start":1709308864873,"stop":1709308866275,"duration":1402}},{"uid":"d9a8b3a7e790caf7","reportUrl":"https://novasamatech.github.io/test-runner/4796//#testresult/d9a8b3a7e790caf7","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1709289992374,"stop":1709289992533,"duration":159}},{"uid":"9a332e9433ad3c38","reportUrl":"https://novasamatech.github.io/test-runner/4789//#testresult/9a332e9433ad3c38","status":"passed","time":{"start":1709193661412,"stop":1709193662638,"duration":1226}}]},"tags":[]},"source":"73e257e4c55534a.json","parameterValues":["{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"]}