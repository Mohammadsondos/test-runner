{"uid":"7d8aea2318a5bc16","name":"test_can_create_connection[Test for Polkadex, url: wss://mainnet.polkadex.trade]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2a5bd149bcde3907cf110ee466ecf630","time":{"start":1696176142856,"stop":1696176143999,"duration":1143},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 01 Oct 2023 16:02:23 GMT'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Polkadex', 'url': 'wss://mainnet.polkadex.trade'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 01 Oct 2023 16:02:23 GMT'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 01 Oct 2023 16:02:23 GMT'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Polkadex', 'url': 'wss://mainnet.polkadex.trade'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 01 Oct 2023 16:02:23 GMT'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"fe7f3191ea69d310","name":"stdout","source":"fe7f3191ea69d310.txt","type":"text/plain","size":825}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az951-93"},{"name":"thread","value":"2056-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://mainnet.polkadex.trade', 'name': 'Polkadex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f6937f8f2b372518","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 01 Oct 2023 16:02:06 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696176127023,"stop":1696176127694,"duration":671}},{"uid":"45ea7eddd143ca0e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 01 Oct 2023 16:01:51 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1696176110905,"stop":1696176111835,"duration":930}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":217,"unknown":0,"total":230},"items":[{"uid":"1db0c9a7780c11e","reportUrl":"https://novasamatech.github.io/test-runner/3869//#testresult/1db0c9a7780c11e","status":"passed","time":{"start":1696161706409,"stop":1696161707105,"duration":696}},{"uid":"3a60c58bc1e3c8f6","reportUrl":"https://novasamatech.github.io/test-runner/3868//#testresult/3a60c58bc1e3c8f6","status":"passed","time":{"start":1696147313025,"stop":1696147314249,"duration":1224}},{"uid":"8a46a4db808cd0c0","reportUrl":"https://novasamatech.github.io/test-runner/3867//#testresult/8a46a4db808cd0c0","status":"passed","time":{"start":1696132901517,"stop":1696132902016,"duration":499}},{"uid":"24c75160865b3e36","reportUrl":"https://novasamatech.github.io/test-runner/3866//#testresult/24c75160865b3e36","status":"passed","time":{"start":1696118570545,"stop":1696118571430,"duration":885}},{"uid":"cc1b9ee2bb4872ae","reportUrl":"https://novasamatech.github.io/test-runner/3865//#testresult/cc1b9ee2bb4872ae","status":"passed","time":{"start":1696104117246,"stop":1696104118122,"duration":876}},{"uid":"77b35b292cc94ac","reportUrl":"https://novasamatech.github.io/test-runner/3864//#testresult/77b35b292cc94ac","status":"passed","time":{"start":1696089766901,"stop":1696089767604,"duration":703}},{"uid":"6751b17a87724452","reportUrl":"https://novasamatech.github.io/test-runner/3863//#testresult/6751b17a87724452","status":"passed","time":{"start":1696075319554,"stop":1696075320644,"duration":1090}},{"uid":"4b024cbaacbe3f8","reportUrl":"https://novasamatech.github.io/test-runner/3862//#testresult/4b024cbaacbe3f8","status":"passed","time":{"start":1696060909090,"stop":1696060910005,"duration":915}},{"uid":"e068cc27be49ef1e","reportUrl":"https://novasamatech.github.io/test-runner/3861//#testresult/e068cc27be49ef1e","status":"passed","time":{"start":1696046535578,"stop":1696046536418,"duration":840}},{"uid":"158feeaa92d28ed9","reportUrl":"https://novasamatech.github.io/test-runner/3860//#testresult/158feeaa92d28ed9","status":"passed","time":{"start":1696032192642,"stop":1696032193694,"duration":1052}},{"uid":"12b96ba228e8ce8d","reportUrl":"https://novasamatech.github.io/test-runner/3859//#testresult/12b96ba228e8ce8d","status":"passed","time":{"start":1696017783901,"stop":1696017784746,"duration":845}},{"uid":"971ee64a4c4383e0","reportUrl":"https://novasamatech.github.io/test-runner/3858//#testresult/971ee64a4c4383e0","status":"passed","time":{"start":1696003341758,"stop":1696003342336,"duration":578}},{"uid":"c95e8cdd50b58f4","reportUrl":"https://novasamatech.github.io/test-runner/3857//#testresult/c95e8cdd50b58f4","status":"passed","time":{"start":1695988903219,"stop":1695988904101,"duration":882}},{"uid":"6fd726afb51396e3","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/6fd726afb51396e3","status":"passed","time":{"start":1695974560296,"stop":1695974561112,"duration":816}},{"uid":"d1dabd7f95f18dd4","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/d1dabd7f95f18dd4","status":"passed","time":{"start":1695960115307,"stop":1695960116091,"duration":784}},{"uid":"746a17f8fe049a4","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/746a17f8fe049a4","status":"passed","time":{"start":1695945771206,"stop":1695945772299,"duration":1093}},{"uid":"c3ad46e86dd681e1","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/c3ad46e86dd681e1","status":"passed","time":{"start":1695931335664,"stop":1695931336727,"duration":1063}},{"uid":"b62ac30bec6ec1b5","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/b62ac30bec6ec1b5","status":"passed","time":{"start":1695916934302,"stop":1695916935426,"duration":1124}},{"uid":"231522b6216d1bec","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/231522b6216d1bec","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 28 Sep 2023 12:02:43 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1695902563545,"stop":1695902564152,"duration":607}},{"uid":"e731e3b6f5aeb371","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/e731e3b6f5aeb371","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 28 Sep 2023 08:02:24 GMT'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1695888144147,"stop":1695888144780,"duration":633}}]},"tags":[]},"source":"7d8aea2318a5bc16.json","parameterValues":["{'url': 'wss://mainnet.polkadex.trade', 'name': 'Polkadex'}"]}