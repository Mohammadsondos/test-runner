{"uid":"c7dd398dc70d263c","name":"test_can_create_connection[Test for Tanganika, url: wss://tanganika.datahighway.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82948670f054b2cd664c9319f41b4e5e","time":{"start":1681416270822,"stop":1681416271374,"duration":552},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3204c277cce29f03","name":"stdout","source":"3204c277cce29f03.txt","type":"text/plain","size":242}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az573-426"},{"name":"thread","value":"1771-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9bcf89c5166c883c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681416260167,"stop":1681416260688,"duration":521}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":404,"skipped":0,"passed":591,"unknown":0,"total":995},"items":[{"uid":"3964b1e275f9d66c","reportUrl":"https://nova-wallet.github.io/test-runner/2816//#testresult/3964b1e275f9d66c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681401883047,"stop":1681401883507,"duration":460}},{"uid":"becde62630006266","reportUrl":"https://nova-wallet.github.io/test-runner/2815//#testresult/becde62630006266","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681387573232,"stop":1681387573750,"duration":518}},{"uid":"614262e556563937","reportUrl":"https://nova-wallet.github.io/test-runner/2814//#testresult/614262e556563937","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681373115565,"stop":1681373115917,"duration":352}},{"uid":"487203c96d6198f1","reportUrl":"https://nova-wallet.github.io/test-runner/2813//#testresult/487203c96d6198f1","status":"passed","time":{"start":1681358672173,"stop":1681358672759,"duration":586}},{"uid":"5b24c2ee57f6dfb","reportUrl":"https://nova-wallet.github.io/test-runner/2812//#testresult/5b24c2ee57f6dfb","status":"passed","time":{"start":1681344753283,"stop":1681344753731,"duration":448}},{"uid":"f4ce7385d44a585a","reportUrl":"https://nova-wallet.github.io/test-runner/2811//#testresult/f4ce7385d44a585a","status":"passed","time":{"start":1681329876974,"stop":1681329877716,"duration":742}},{"uid":"d7e28eece2b86f60","reportUrl":"https://nova-wallet.github.io/test-runner/2810//#testresult/d7e28eece2b86f60","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681315469173,"stop":1681315469628,"duration":455}},{"uid":"54b255f4a91d5845","reportUrl":"https://nova-wallet.github.io/test-runner/2809//#testresult/54b255f4a91d5845","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681301128035,"stop":1681301128522,"duration":487}},{"uid":"1ca9e34c88f1d6ef","reportUrl":"https://nova-wallet.github.io/test-runner/2808//#testresult/1ca9e34c88f1d6ef","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681286714727,"stop":1681286715234,"duration":507}},{"uid":"87607156eae6257f","reportUrl":"https://nova-wallet.github.io/test-runner/2807//#testresult/87607156eae6257f","status":"passed","time":{"start":1681272260972,"stop":1681272261385,"duration":413}},{"uid":"c47b23073877a560","reportUrl":"https://nova-wallet.github.io/test-runner/2806//#testresult/c47b23073877a560","status":"passed","time":{"start":1681258400132,"stop":1681258400841,"duration":709}},{"uid":"2fa6c8c17f4a4020","reportUrl":"https://nova-wallet.github.io/test-runner/2805//#testresult/2fa6c8c17f4a4020","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681243480944,"stop":1681243481380,"duration":436}},{"uid":"af725825c7063cf6","reportUrl":"https://nova-wallet.github.io/test-runner/2803//#testresult/af725825c7063cf6","status":"passed","time":{"start":1681214741878,"stop":1681214742616,"duration":738}},{"uid":"40063db946e802f3","reportUrl":"https://nova-wallet.github.io/test-runner/2802//#testresult/40063db946e802f3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681200291425,"stop":1681200291763,"duration":338}},{"uid":"d1d70d5200b74baa","reportUrl":"https://nova-wallet.github.io/test-runner/2801//#testresult/d1d70d5200b74baa","status":"passed","time":{"start":1681185888411,"stop":1681185889107,"duration":696}},{"uid":"82fcbf2574c01032","reportUrl":"https://nova-wallet.github.io/test-runner/2800//#testresult/82fcbf2574c01032","status":"passed","time":{"start":1681172018515,"stop":1681172019177,"duration":662}},{"uid":"bd5c967be7a7a27b","reportUrl":"https://nova-wallet.github.io/test-runner/2799//#testresult/bd5c967be7a7a27b","status":"passed","time":{"start":1681157097076,"stop":1681157097743,"duration":667}},{"uid":"d3c3fdadb8674167","reportUrl":"https://nova-wallet.github.io/test-runner/2798//#testresult/d3c3fdadb8674167","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681142680932,"stop":1681142681391,"duration":459}},{"uid":"96cd2bba77eca5e2","reportUrl":"https://nova-wallet.github.io/test-runner/2797//#testresult/96cd2bba77eca5e2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681128331070,"stop":1681128331403,"duration":333}},{"uid":"eb94fd8b5fea48bc","reportUrl":"https://nova-wallet.github.io/test-runner/2796//#testresult/eb94fd8b5fea48bc","status":"passed","time":{"start":1681113866851,"stop":1681113867336,"duration":485}}]},"tags":[]},"source":"c7dd398dc70d263c.json","parameterValues":["{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"]}