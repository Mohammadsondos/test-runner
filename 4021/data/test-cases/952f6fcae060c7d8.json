{"uid":"952f6fcae060c7d8","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1698321718310,"stop":1698321718744,"duration":434},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 26 Oct 2023 12:01:58 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=qlKYx3nqtZEyNK41y%2B4IdNfZ0sGKaOOj9KuBMB3INpIFyGeizbmvlmHe5TFgSR35ndzZdXGisESdj7fUkgLu6TSsN2s7ARl05Bcm6fP%2FuNlZoyeePvEXwxsQWHDNr7U4KUZ7tg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkWTzbPNWhMBGx; SameSite=None; Secure; path=/; expires=Fri, 27-Oct-23 11:01:58 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '81c28c33ba7faa70-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 26 Oct 2023 12:01:58 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=qlKYx3nqtZEyNK41y%2B4IdNfZ0sGKaOOj9KuBMB3INpIFyGeizbmvlmHe5TFgSR35ndzZdXGisESdj7fUkgLu6TSsN2s7ARl05Bcm6fP%2FuNlZoyeePvEXwxsQWHDNr7U4KUZ7tg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkWTzbPNWhMBGx; SameSite=None; Secure; path=/; expires=Fri, 27-Oct-23 11:01:58 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '81c28c33ba7faa70-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 26 Oct 2023 12:01:58 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=qlKYx3nqtZEyNK41y%2B4IdNfZ0sGKaOOj9KuBMB3INpIFyGeizbmvlmHe5TFgSR35ndzZdXGisESdj7fUkgLu6TSsN2s7ARl05Bcm6fP%2FuNlZoyeePvEXwxsQWHDNr7U4KUZ7tg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkWTzbPNWhMBGx; SameSite=None; Secure; path=/; expires=Fri, 27-Oct-23 11:01:58 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '81c28c33ba7faa70-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 26 Oct 2023 12:01:58 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=qlKYx3nqtZEyNK41y%2B4IdNfZ0sGKaOOj9KuBMB3INpIFyGeizbmvlmHe5TFgSR35ndzZdXGisESdj7fUkgLu6TSsN2s7ARl05Bcm6fP%2FuNlZoyeePvEXwxsQWHDNr7U4KUZ7tg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkWTzbPNWhMBGx; SameSite=None; Secure; path=/; expires=Fri, 27-Oct-23 11:01:58 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '81c28c33ba7faa70-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c058f307e522bf1","name":"stdout","source":"c058f307e522bf1.txt","type":"text/plain","size":2534}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az398-748"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"259e8bb8ea497205","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 26 Oct 2023 12:01:43 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=nfCMV6ROgmtAgzADU7TN9w0Yg417RE4WKErAKVc6mgiKTDphy7Pp7hWSnmsBNQEJLczRrWvMA4BzQXkk%2BvB1tmkkMcqhlr33YWKUDjuZX5QhKsT62%2BJeLWnI28XynClpGaIPKQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkJetGCN8h2ZSL; SameSite=None; Secure; path=/; expires=Fri, 27-Oct-23 11:01:43 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '81c28bd2fb1fe5f2-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1698321702820,"stop":1698321703214,"duration":394}},{"uid":"f73604410b9ddfc2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 26 Oct 2023 12:01:27 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=OjX9WfczpCXHG20PzYMtS%2FBYT7yxbI6hAXEVqGLsiz0QiWLK%2BBcElkXd3gaW7%2FZDAu8VG7vuH2amlqivP7LpLDItJrKxSmcWAo8iwHy3v2Ru5GIVQ3OSkgZntMOfpDzz8jtI5A%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3Tp16rbD28CfXS; SameSite=None; Secure; path=/; expires=Fri, 27-Oct-23 11:01:27 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '81c28b71787aaa70-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1698321687185,"stop":1698321687663,"duration":478}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":49,"skipped":0,"passed":332,"unknown":0,"total":381},"items":[{"uid":"ec1c1971579b4377","reportUrl":"https://novasamatech.github.io/test-runner/4020//#testresult/ec1c1971579b4377","status":"passed","time":{"start":1698307285773,"stop":1698307286437,"duration":664}},{"uid":"2254ea9f40bcd372","reportUrl":"https://novasamatech.github.io/test-runner/4019//#testresult/2254ea9f40bcd372","status":"passed","time":{"start":1698292892809,"stop":1698292893295,"duration":486}},{"uid":"9e070161e5b0a600","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/9e070161e5b0a600","status":"passed","time":{"start":1698278518185,"stop":1698278518726,"duration":541}},{"uid":"593e4d415c3257c4","reportUrl":"https://novasamatech.github.io/test-runner/4017//#testresult/593e4d415c3257c4","status":"passed","time":{"start":1698264084664,"stop":1698264085123,"duration":459}},{"uid":"b4590503ef664d21","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/b4590503ef664d21","status":"passed","time":{"start":1698249688244,"stop":1698249688690,"duration":446}},{"uid":"40418ef09d88b0c7","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/40418ef09d88b0c7","status":"passed","time":{"start":1698235287806,"stop":1698235288193,"duration":387}},{"uid":"a988838d16db8d72","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/a988838d16db8d72","status":"passed","time":{"start":1698220893606,"stop":1698220894267,"duration":661}},{"uid":"237872603105de7e","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/237872603105de7e","status":"passed","time":{"start":1698206550041,"stop":1698206550479,"duration":438}},{"uid":"8f375907a3325f1e","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/8f375907a3325f1e","status":"passed","time":{"start":1698192138523,"stop":1698192139111,"duration":588}},{"uid":"7daec5e0e8ece8","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/7daec5e0e8ece8","status":"passed","time":{"start":1698177677685,"stop":1698177678359,"duration":674}},{"uid":"7332b6b5ca503c0a","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/7332b6b5ca503c0a","status":"passed","time":{"start":1698163292275,"stop":1698163292687,"duration":412}},{"uid":"71917a9582298586","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/71917a9582298586","status":"passed","time":{"start":1698149064461,"stop":1698149064811,"duration":350}},{"uid":"527d0bde9d1a3490","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/527d0bde9d1a3490","status":"passed","time":{"start":1698120116048,"stop":1698120116537,"duration":489}},{"uid":"34805f81ea6ab6a4","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/34805f81ea6ab6a4","status":"passed","time":{"start":1698134497427,"stop":1698134497765,"duration":338}},{"uid":"b96b8647aeecb163","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/b96b8647aeecb163","status":"passed","time":{"start":1698105738311,"stop":1698105739046,"duration":735}},{"uid":"74bb3a2024eb5fbd","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/74bb3a2024eb5fbd","status":"passed","time":{"start":1698091282362,"stop":1698091283121,"duration":759}},{"uid":"96a111853999eba6","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/96a111853999eba6","status":"passed","time":{"start":1698076880487,"stop":1698076880964,"duration":477}},{"uid":"28cd464d675c6d14","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/28cd464d675c6d14","status":"passed","time":{"start":1698062493125,"stop":1698062493515,"duration":390}},{"uid":"239b4fe0bb97b47c","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/239b4fe0bb97b47c","status":"passed","time":{"start":1698048098428,"stop":1698048098844,"duration":416}},{"uid":"909575639583859a","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/909575639583859a","status":"passed","time":{"start":1698033681152,"stop":1698033681723,"duration":571}}]},"tags":[]},"source":"952f6fcae060c7d8.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}