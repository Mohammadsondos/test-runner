{"uid":"f91774137609a898","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1669435640236,"stop":1669435640631,"duration":395},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az335-773"},{"name":"thread","value":"1671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7f60e7e95669be66","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669435629704,"stop":1669435630168,"duration":464}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":17,"skipped":0,"passed":239,"unknown":0,"total":256},"items":[{"uid":"9fb0009147d3cd1e","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/9fb0009147d3cd1e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421784857,"stop":1669421785182,"duration":325}},{"uid":"75a92237e5485a2c","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/75a92237e5485a2c","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406837727,"stop":1669406838221,"duration":494}},{"uid":"f3dd82e3fb58dec5","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/f3dd82e3fb58dec5","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392436263,"stop":1669392436718,"duration":455}},{"uid":"35cfe51e03153a69","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/35cfe51e03153a69","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378088274,"stop":1669378088640,"duration":366}},{"uid":"ffa1be3226f2c83b","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/ffa1be3226f2c83b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370843365,"stop":1669370843811,"duration":446}},{"uid":"6d94c01be545f136","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/6d94c01be545f136","status":"passed","time":{"start":1669118702394,"stop":1669118702889,"duration":495}},{"uid":"8a25cc2192467800","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/8a25cc2192467800","status":"passed","time":{"start":1669104280025,"stop":1669104280594,"duration":569}},{"uid":"808c32eb303b5434","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/808c32eb303b5434","status":"passed","time":{"start":1669089842884,"stop":1669089843476,"duration":592}},{"uid":"59f5e95e31a4a794","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/59f5e95e31a4a794","status":"passed","time":{"start":1669076126740,"stop":1669076127139,"duration":399}},{"uid":"d64830ecd579a84d","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/d64830ecd579a84d","status":"passed","time":{"start":1669061039666,"stop":1669061040320,"duration":654}},{"uid":"de14a62f6bfda121","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/de14a62f6bfda121","status":"passed","time":{"start":1669046671134,"stop":1669046671706,"duration":572}},{"uid":"7a97ce14259e9fd9","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/7a97ce14259e9fd9","status":"passed","time":{"start":1669032321206,"stop":1669032321563,"duration":357}},{"uid":"c458c18f2388e21c","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/c458c18f2388e21c","status":"passed","time":{"start":1669017875169,"stop":1669017875785,"duration":616}},{"uid":"496eb3bd09226469","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/496eb3bd09226469","status":"passed","time":{"start":1669003717751,"stop":1669003718154,"duration":403}},{"uid":"cef3ee5c4931c5da","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/cef3ee5c4931c5da","status":"passed","time":{"start":1668989728066,"stop":1668989728471,"duration":405}},{"uid":"3a96e3f4205e3472","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/3a96e3f4205e3472","status":"passed","time":{"start":1668974624354,"stop":1668974624891,"duration":537}},{"uid":"756385d23ed679d1","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/756385d23ed679d1","status":"passed","time":{"start":1668960229634,"stop":1668960230243,"duration":609}},{"uid":"2f67c621093d73d8","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/2f67c621093d73d8","status":"passed","time":{"start":1668945882616,"stop":1668945883376,"duration":760}},{"uid":"ed7ff9fb894407e3","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/ed7ff9fb894407e3","status":"passed","time":{"start":1668931447592,"stop":1668931448023,"duration":431}},{"uid":"395716c443d01b11","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/395716c443d01b11","status":"passed","time":{"start":1668917202906,"stop":1668917203632,"duration":726}}]},"tags":[]},"source":"f91774137609a898.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}