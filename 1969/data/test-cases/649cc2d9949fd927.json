{"uid":"649cc2d9949fd927","name":"test_can_create_connection[Test for Calamari, url: wss://ws.calamari.systems/]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"313295000e78b74b8dc0b5885f9dc006","time":{"start":1669435796840,"stop":1669435797212,"duration":372},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Calamari', 'url': 'wss://ws.calamari.systems/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az335-773"},{"name":"thread","value":"1671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws.calamari.systems/', 'name': 'Calamari'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ae5700a5c319bde5","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669435786397,"stop":1669435786773,"duration":376}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":250,"unknown":0,"total":256},"items":[{"uid":"89f1ee6bca054e3b","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/89f1ee6bca054e3b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421940794,"stop":1669421941497,"duration":703}},{"uid":"9d068550a17fd149","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/9d068550a17fd149","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406998692,"stop":1669406998850,"duration":158}},{"uid":"25910ecfd9b217ac","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/25910ecfd9b217ac","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392596394,"stop":1669392596831,"duration":437}},{"uid":"358d2f4e7615f9f6","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/358d2f4e7615f9f6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378246531,"stop":1669378246819,"duration":288}},{"uid":"4023ff1f6b1723c4","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/4023ff1f6b1723c4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371003378,"stop":1669371003753,"duration":375}},{"uid":"23995b739858695d","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/23995b739858695d","status":"passed","time":{"start":1669118743434,"stop":1669118744419,"duration":985}},{"uid":"c7949d1b496fbe33","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/c7949d1b496fbe33","status":"passed","time":{"start":1669104319429,"stop":1669104320303,"duration":874}},{"uid":"5932e1b2a34536a0","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/5932e1b2a34536a0","status":"passed","time":{"start":1669089887362,"stop":1669089887556,"duration":194}},{"uid":"d167c0e9bee3692e","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/d167c0e9bee3692e","status":"passed","time":{"start":1669076167212,"stop":1669076167995,"duration":783}},{"uid":"c6f3ac26761cc275","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c6f3ac26761cc275","status":"passed","time":{"start":1669061080553,"stop":1669061081302,"duration":749}},{"uid":"e656d05e620d03e4","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/e656d05e620d03e4","status":"passed","time":{"start":1669046712497,"stop":1669046713209,"duration":712}},{"uid":"5d66b217242e80b9","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/5d66b217242e80b9","status":"passed","time":{"start":1669032360890,"stop":1669032361192,"duration":302}},{"uid":"607556e22d61e8f4","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/607556e22d61e8f4","status":"passed","time":{"start":1669017915882,"stop":1669017916574,"duration":692}},{"uid":"9a8c625a29e91b5b","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/9a8c625a29e91b5b","status":"passed","time":{"start":1669003756063,"stop":1669003757032,"duration":969}},{"uid":"4d047e37619b2d37","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/4d047e37619b2d37","status":"passed","time":{"start":1668989768524,"stop":1668989768889,"duration":365}},{"uid":"2c812eb06beac312","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/2c812eb06beac312","status":"passed","time":{"start":1668974665130,"stop":1668974665875,"duration":745}},{"uid":"da1e45fe888063c0","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/da1e45fe888063c0","status":"passed","time":{"start":1668960269690,"stop":1668960270334,"duration":644}},{"uid":"873f48c89d1a5a97","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/873f48c89d1a5a97","status":"passed","time":{"start":1668945934214,"stop":1668945934713,"duration":499}},{"uid":"12398ea090bfbc85","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/12398ea090bfbc85","status":"passed","time":{"start":1668931488153,"stop":1668931488923,"duration":770}},{"uid":"28c83ce28f034c39","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/28c83ce28f034c39","status":"passed","time":{"start":1668917243815,"stop":1668917244412,"duration":597}}]},"tags":[]},"source":"649cc2d9949fd927.json","parameterValues":["{'url': 'wss://ws.calamari.systems/', 'name': 'Calamari'}"]}