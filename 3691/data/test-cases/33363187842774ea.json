{"uid":"33363187842774ea","name":"test_can_create_connection[Test for Parallel Heiko, url: wss://heiko-rpc.parallel.fi]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d94cffbdb5d3130f13b583ffb63297c6","time":{"start":1693612961690,"stop":1693612962090,"duration":400},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Sat, 02 Sep 2023 00:02:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=hLRvveD6.v8qZLGvqaAekQ_QHOzdlbYkhHuoipBXx2o-1693612962-0-AYvM1gwpJLi0N+udlUQ35dDo3LQIBb7DbduxCsnYOu8W0mQ7ZUJ4VRrD0lyBWp2cW0bVAjRVLeo0BsnJTxoxgv8=; path=/; expires=Sat, 02-Sep-23 00:32:42 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80017c52b9673af3-IAD'} -+-+- None","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://heiko-rpc.parallel.fi'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Sat, 02 Sep 2023 00:02:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=hLRvveD6.v8qZLGvqaAekQ_QHOzdlbYkhHuoipBXx2o-1693612962-0-AYvM1gwpJLi0N+udlUQ35dDo3LQIBb7DbduxCsnYOu8W0mQ7ZUJ4VRrD0lyBWp2cW0bVAjRVLeo0BsnJTxoxgv8=; path=/; expires=Sat, 02-Sep-23 00:32:42 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80017c52b9673af3-IAD'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Sat, 02 Sep 2023 00:02:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=hLRvveD6.v8qZLGvqaAekQ_QHOzdlbYkhHuoipBXx2o-1693612962-0-AYvM1gwpJLi0N+udlUQ35dDo3LQIBb7DbduxCsnYOu8W0mQ7ZUJ4VRrD0lyBWp2cW0bVAjRVLeo0BsnJTxoxgv8=; path=/; expires=Sat, 02-Sep-23 00:32:42 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80017c52b9673af3-IAD'} -+-+- None","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://heiko-rpc.parallel.fi'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Sat, 02 Sep 2023 00:02:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=hLRvveD6.v8qZLGvqaAekQ_QHOzdlbYkhHuoipBXx2o-1693612962-0-AYvM1gwpJLi0N+udlUQ35dDo3LQIBb7DbduxCsnYOu8W0mQ7ZUJ4VRrD0lyBWp2cW0bVAjRVLeo0BsnJTxoxgv8=; path=/; expires=Sat, 02-Sep-23 00:32:42 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80017c52b9673af3-IAD'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2cd70886a3f5a04c","name":"stdout","source":"2cd70886a3f5a04c.txt","type":"text/plain","size":1806}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az305-745"},{"name":"thread","value":"2133-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://heiko-rpc.parallel.fi', 'name': 'Parallel Heiko'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"54495ed765e1d6c5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Sat, 02 Sep 2023 00:02:26 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=y9iPVpsiwDPSyRFoyDCI47x0RLE7.4GipOZuavmY99I-1693612946-0-AXi0EIAYYafcg98fXEmjJEM2FxaBBEGSAcaKaXydZ1JPGIm9IWEarcvPSiD0GaH15wzv9RToBbzeZda9Uiylk70=; path=/; expires=Sat, 02-Sep-23 00:32:26 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80017bf1f8673af3-IAD'} -+-+- None","time":{"start":1693612946212,"stop":1693612946604,"duration":392}},{"uid":"499de5a529570629","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Sat, 02 Sep 2023 00:02:11 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=MhiJ4ipsj44ZWVGN73r6v6LKW9SrNmWV8OIW635dvis-1693612931-0-AW70o9R5iL4CIBYJ5wV40KYIPO4AGhraSGLKTazcHgK4JrGuS4DqFt0AH1O5EfYxrBbuuEKnHNWNJ9t5oYLjvps=; path=/; expires=Sat, 02-Sep-23 00:32:11 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80017b90ea673af3-IAD'} -+-+- None","time":{"start":1693612930644,"stop":1693612931072,"duration":428}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":48,"unknown":0,"total":53},"items":[{"uid":"6abf980a02cb3545","reportUrl":"https://novasamatech.github.io/test-runner/3690//#testresult/6abf980a02cb3545","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 01 Sep 2023 20:02:07 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=s0liQWqgniNn0z1snL4iRZVbx2jG_9MKfXHwPzjO7xA-1693598527-0-AfG2MNjDkNzNvNi5z1TMgzX33uAalotCdF1djpoO/VBXLYve3hQTtbZ1OsnIQYmy3vQ3pkyR6ye/RbJVMP4pfvM=; path=/; expires=Fri, 01-Sep-23 20:32:07 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '80001bebcddc469e-DFW'} -+-+- None","time":{"start":1693598527274,"stop":1693598527855,"duration":581}},{"uid":"e1f3f8d2519e557e","reportUrl":"https://novasamatech.github.io/test-runner/3689//#testresult/e1f3f8d2519e557e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 01 Sep 2023 16:02:42 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=xy5TR_cKgjNI1BZnZyMmZLnlIfPY0rbFsq4KM6QZBMA-1693584162-0-AaPrfB6CckvWyeJ1vrWUmSbNxHTyOmHXeVHwhy8EgLeYhTPu3N+P67cm2Udy9QIw2tvRqAlefWrW167K95PRaSo=; path=/; expires=Fri, 01-Sep-23 16:32:42 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '7ffebd31ee132832-DFW'} -+-+- None","time":{"start":1693584161540,"stop":1693584162767,"duration":1227}},{"uid":"a6375bc9a591f537","reportUrl":"https://novasamatech.github.io/test-runner/3688//#testresult/a6375bc9a591f537","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 01 Sep 2023 12:02:19 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=n59YTPF1kB48JPfw172HHJxXB2sB2.c_YNNdktiBmBY-1693569739-0-AYx6rAerocobTfc0nWfEKpIrsDnjPtjw5/o5vc/i+SvlUgdHSjLpoA369tdjSwgZLFLU6dknUVrFxHVYLBPwlJI=; path=/; expires=Fri, 01-Sep-23 12:32:19 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '7ffd5d14aaed4871-DFW'} -+-+- None","time":{"start":1693569738957,"stop":1693569739525,"duration":568}},{"uid":"5de3091d9beb28f2","reportUrl":"https://novasamatech.github.io/test-runner/3687//#testresult/5de3091d9beb28f2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 01 Sep 2023 08:15:43 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Hliy4Jfds6dMC9HVPPa_DxCs.OnV0zgYoS_CieKMl4g-1693556143-0-AQEpJzEblIjbxYMW8UuJYf/muWqtYBuEVCQo439TxDk29PptlH2tOc4ubAciXY4oDySuFtZecnEUe/HDfGJY1wM=; path=/; expires=Fri, 01-Sep-23 08:45:43 GMT; domain=.parallel.fi; HttpOnly; Secure', 'server': 'cloudflare', 'cf-ray': '7ffc11285c8e464e-DFW'} -+-+- None","time":{"start":1693556143381,"stop":1693556143920,"duration":539}},{"uid":"b61dd7688d37c8ed","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/b61dd7688d37c8ed","status":"passed","time":{"start":1693540895754,"stop":1693540896587,"duration":833}},{"uid":"ee532fae67251882","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/ee532fae67251882","status":"passed","time":{"start":1693526577322,"stop":1693526578067,"duration":745}},{"uid":"4e57759d8a63388e","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/4e57759d8a63388e","status":"passed","time":{"start":1693512159381,"stop":1693512160373,"duration":992}},{"uid":"64187aa1c8a9164d","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/64187aa1c8a9164d","status":"passed","time":{"start":1693497733294,"stop":1693497733815,"duration":521}},{"uid":"82435fb23833d62e","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/82435fb23833d62e","status":"passed","time":{"start":1693483311198,"stop":1693483312187,"duration":989}},{"uid":"1d658d275d0188fd","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/1d658d275d0188fd","status":"passed","time":{"start":1693468903231,"stop":1693468903776,"duration":545}},{"uid":"93b87b5b819512b3","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/93b87b5b819512b3","status":"passed","time":{"start":1693454512441,"stop":1693454513240,"duration":799}},{"uid":"5b25d71ea22cff23","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/5b25d71ea22cff23","status":"passed","time":{"start":1693440141722,"stop":1693440144019,"duration":2297}},{"uid":"482d584884bcdd20","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/482d584884bcdd20","status":"passed","time":{"start":1693425686306,"stop":1693425686855,"duration":549}},{"uid":"a598b0dbd038ba40","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/a598b0dbd038ba40","status":"passed","time":{"start":1693411322148,"stop":1693411323188,"duration":1040}},{"uid":"f1071ee517da8076","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/f1071ee517da8076","status":"passed","time":{"start":1693396910537,"stop":1693396911351,"duration":814}},{"uid":"c03a2c025cbac250","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/c03a2c025cbac250","status":"passed","time":{"start":1693382516986,"stop":1693382517573,"duration":587}},{"uid":"81d4e994ee73cd69","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/81d4e994ee73cd69","status":"passed","time":{"start":1693368084666,"stop":1693368085186,"duration":520}},{"uid":"b51703ea83de90ab","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/b51703ea83de90ab","status":"passed","time":{"start":1693353735212,"stop":1693353735960,"duration":748}},{"uid":"b6ea2051aa581afb","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/b6ea2051aa581afb","status":"passed","time":{"start":1693339286139,"stop":1693339286767,"duration":628}},{"uid":"eb974d1459f277fa","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/eb974d1459f277fa","status":"passed","time":{"start":1693324927745,"stop":1693324928264,"duration":519}}]},"tags":[]},"source":"33363187842774ea.json","parameterValues":["{'url': 'wss://heiko-rpc.parallel.fi', 'name': 'Parallel Heiko'}"]}