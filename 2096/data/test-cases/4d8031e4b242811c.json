{"uid":"4d8031e4b242811c","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1671206709552,"stop":1671206722303,"duration":12751},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2b50d52b8174f73d","name":"stdout","source":"2b50d52b8174f73d.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az452-862"},{"name":"thread","value":"1783-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"27d87fd92ba562b1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671206686723,"stop":1671206699459,"duration":12736}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":158,"skipped":0,"passed":207,"unknown":0,"total":365},"items":[{"uid":"40e0d4f6df13ae8b","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/40e0d4f6df13ae8b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671192339627,"stop":1671192352593,"duration":12966}},{"uid":"9a1bd50f185c79c7","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/9a1bd50f185c79c7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671177923219,"stop":1671177935852,"duration":12633}},{"uid":"3c3276bfbfba8f6e","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/3c3276bfbfba8f6e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671163525744,"stop":1671163537172,"duration":11428}},{"uid":"8cbaf8152defe716","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/8cbaf8152defe716","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671149664554,"stop":1671149677329,"duration":12775}},{"uid":"889f4c8ce9928a4c","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/889f4c8ce9928a4c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671134708041,"stop":1671134720807,"duration":12766}},{"uid":"118f66326865a362","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/118f66326865a362","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671120324189,"stop":1671120335613,"duration":11424}},{"uid":"48b4510c4b98b39d","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/48b4510c4b98b39d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671105980835,"stop":1671105993456,"duration":12621}},{"uid":"2ac9338e825008ab","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/2ac9338e825008ab","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671091550924,"stop":1671091563668,"duration":12744}},{"uid":"3c93019ba377dd1","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/3c93019ba377dd1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671077131204,"stop":1671077143904,"duration":12700}},{"uid":"5fb79fa6140b45be","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/5fb79fa6140b45be","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671063290140,"stop":1671063302850,"duration":12710}},{"uid":"e54b6bd924efddaf","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/e54b6bd924efddaf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671048318220,"stop":1671048331597,"duration":13377}},{"uid":"8e0015f0625b3f0a","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/8e0015f0625b3f0a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671034064595,"stop":1671034077315,"duration":12720}},{"uid":"293c74d78fccb398","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/293c74d78fccb398","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671019556698,"stop":1671019569352,"duration":12654}},{"uid":"8ffe31e03c24845a","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/8ffe31e03c24845a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671005134107,"stop":1671005147003,"duration":12896}},{"uid":"2c57093636fd5f09","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/2c57093636fd5f09","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670990724342,"stop":1670990737304,"duration":12962}},{"uid":"3ecb748826fbbfe5","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/3ecb748826fbbfe5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670976929710,"stop":1670976942414,"duration":12704}},{"uid":"dc3cba2815d7ecb0","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/dc3cba2815d7ecb0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670961907462,"stop":1670961920228,"duration":12766}},{"uid":"7c990ace8b234c75","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/7c990ace8b234c75","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670947516617,"stop":1670947528048,"duration":11431}},{"uid":"859da0e01177ab72","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/859da0e01177ab72","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670933184600,"stop":1670933197342,"duration":12742}},{"uid":"9c92d732b081037","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/9c92d732b081037","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670918742915,"stop":1670918755654,"duration":12739}}]},"tags":[]},"source":"4d8031e4b242811c.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}