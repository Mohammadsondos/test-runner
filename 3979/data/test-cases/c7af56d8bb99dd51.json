{"uid":"c7af56d8bb99dd51","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1697731404937,"stop":1697731405876,"duration":939},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff856a9d7b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff856981a80>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff856a9d7b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff856981a80>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a98eb57e7c307ec9","name":"stdout","source":"a98eb57e7c307ec9.txt","type":"text/plain","size":1011}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az357-176"},{"name":"thread","value":"2112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff856981a80>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6f2bb0648654df6e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697731388723,"stop":1697731389904,"duration":1181}},{"uid":"ef00bfcc94e0e655","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697731372545,"stop":1697731373686,"duration":1141}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":319,"unknown":0,"total":338},"items":[{"uid":"6925c23e18fe0235","reportUrl":"https://novasamatech.github.io/test-runner/3978//#testresult/6925c23e18fe0235","status":"passed","time":{"start":1697717002632,"stop":1697717006594,"duration":3962}},{"uid":"825d901193c2a2b3","reportUrl":"https://novasamatech.github.io/test-runner/3977//#testresult/825d901193c2a2b3","status":"passed","time":{"start":1697702573792,"stop":1697702579270,"duration":5478}},{"uid":"12496c6f62cb249f","reportUrl":"https://novasamatech.github.io/test-runner/3976//#testresult/12496c6f62cb249f","status":"passed","time":{"start":1697688169624,"stop":1697688175899,"duration":6275}},{"uid":"5b738682146f745e","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/5b738682146f745e","status":"passed","time":{"start":1697673803669,"stop":1697673809510,"duration":5841}},{"uid":"72b4e241b71b94f6","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/72b4e241b71b94f6","status":"passed","time":{"start":1697659352970,"stop":1697659357868,"duration":4898}},{"uid":"978b0911ae57916d","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/978b0911ae57916d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697645000282,"stop":1697645001194,"duration":912}},{"uid":"d3928e86ac93f284","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/d3928e86ac93f284","status":"passed","time":{"start":1697630574624,"stop":1697630579940,"duration":5316}},{"uid":"766445def0a7f954","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/766445def0a7f954","status":"passed","time":{"start":1697616166374,"stop":1697616170594,"duration":4220}},{"uid":"f1ae13429110704","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/f1ae13429110704","status":"passed","time":{"start":1697601782086,"stop":1697601793020,"duration":10934}},{"uid":"848e8f73c5552f54","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/848e8f73c5552f54","status":"passed","time":{"start":1697587433583,"stop":1697587439723,"duration":6140}},{"uid":"b426cff66c1a3384","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/b426cff66c1a3384","status":"passed","time":{"start":1697572986090,"stop":1697572996866,"duration":10776}},{"uid":"ea535c8cea4fd4c2","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/ea535c8cea4fd4c2","status":"passed","time":{"start":1697558573314,"stop":1697558578512,"duration":5198}},{"uid":"82c40ef11e7dd637","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/82c40ef11e7dd637","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697544222621,"stop":1697544223570,"duration":949}},{"uid":"7b5972f7123f849e","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/7b5972f7123f849e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697529826712,"stop":1697529827966,"duration":1254}},{"uid":"ae595115bd0d4834","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/ae595115bd0d4834","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697515404836,"stop":1697515405718,"duration":882}},{"uid":"928c50cd821740da","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/928c50cd821740da","status":"passed","time":{"start":1697501009619,"stop":1697501014130,"duration":4511}},{"uid":"209c8efdff7e6802","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/209c8efdff7e6802","status":"passed","time":{"start":1697486561810,"stop":1697486568339,"duration":6529}},{"uid":"3374863afbf5e2a7","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/3374863afbf5e2a7","status":"passed","time":{"start":1697472187172,"stop":1697472191666,"duration":4494}},{"uid":"bc1bb7f022ac2fa1","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/bc1bb7f022ac2fa1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697457860695,"stop":1697457861990,"duration":1295}},{"uid":"75322eb1785bd353","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/75322eb1785bd353","status":"passed","time":{"start":1697443371383,"stop":1697443375259,"duration":3876}}]},"tags":[]},"source":"c7af56d8bb99dd51.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff856981a80>"]}