{"uid":"799588fc03e7e92","name":"test_precision[Test for Aventus]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"2d9489df664c27ee626d51296433783b","time":{"start":1697731402796,"stop":1697731403539,"duration":743},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fa5243b8160>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa5243b87c0>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fa5243b8160>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa5243b87c0>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a77e1f0e2df3d418","name":"stdout","source":"a77e1f0e2df3d418.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az797-587"},{"name":"thread","value":"2104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa5243b87c0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"42702db5931a11ff","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697731386711,"stop":1697731387758,"duration":1047}},{"uid":"d70c72caec8d4853","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697731370793,"stop":1697731371617,"duration":824}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":332,"unknown":0,"total":339},"items":[{"uid":"20f273c3ce0ccd16","reportUrl":"https://novasamatech.github.io/test-runner/3978//#testresult/20f273c3ce0ccd16","status":"passed","time":{"start":1697716958182,"stop":1697716964306,"duration":6124}},{"uid":"1687e13ee2bddd64","reportUrl":"https://novasamatech.github.io/test-runner/3977//#testresult/1687e13ee2bddd64","status":"passed","time":{"start":1697702587137,"stop":1697702592549,"duration":5412}},{"uid":"9f40766e97f51d9d","reportUrl":"https://novasamatech.github.io/test-runner/3976//#testresult/9f40766e97f51d9d","status":"passed","time":{"start":1697688138939,"stop":1697688145640,"duration":6701}},{"uid":"fee92a085003637f","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/fee92a085003637f","status":"passed","time":{"start":1697673807089,"stop":1697673812855,"duration":5766}},{"uid":"13133e5d47118005","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/13133e5d47118005","status":"passed","time":{"start":1697659352786,"stop":1697659357517,"duration":4731}},{"uid":"178ed3061e5847fb","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/178ed3061e5847fb","status":"passed","time":{"start":1697644956818,"stop":1697644961200,"duration":4382}},{"uid":"d4f288501ae6c219","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/d4f288501ae6c219","status":"passed","time":{"start":1697630544877,"stop":1697630550146,"duration":5269}},{"uid":"f7d5c25478223f34","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/f7d5c25478223f34","status":"passed","time":{"start":1697616185002,"stop":1697616190666,"duration":5664}},{"uid":"daa3efb8b1dbb1a7","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/daa3efb8b1dbb1a7","status":"passed","time":{"start":1697601776866,"stop":1697601783109,"duration":6243}},{"uid":"16da59d7a8d5f9b3","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/16da59d7a8d5f9b3","status":"passed","time":{"start":1697587400276,"stop":1697587405800,"duration":5524}},{"uid":"51a86801552ede1e","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/51a86801552ede1e","status":"passed","time":{"start":1697572973740,"stop":1697572978936,"duration":5196}},{"uid":"94364be09773f903","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/94364be09773f903","status":"passed","time":{"start":1697558576062,"stop":1697558579590,"duration":3528}},{"uid":"607b51592f0766c8","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/607b51592f0766c8","status":"passed","time":{"start":1697544146720,"stop":1697544151283,"duration":4563}},{"uid":"e7ad8fe49b4aa4c6","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/e7ad8fe49b4aa4c6","status":"passed","time":{"start":1697529766107,"stop":1697529770220,"duration":4113}},{"uid":"df8dc134df52606e","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/df8dc134df52606e","status":"passed","time":{"start":1697515362964,"stop":1697515366451,"duration":3487}},{"uid":"4d22f29a19a6448b","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/4d22f29a19a6448b","status":"passed","time":{"start":1697501003412,"stop":1697501007041,"duration":3629}},{"uid":"d17b4b975a1d63ef","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/d17b4b975a1d63ef","status":"passed","time":{"start":1697486574988,"stop":1697486578423,"duration":3435}},{"uid":"e6da4605f6e1cff3","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/e6da4605f6e1cff3","status":"passed","time":{"start":1697472159947,"stop":1697472166194,"duration":6247}},{"uid":"acaa6a674f849edc","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/acaa6a674f849edc","status":"passed","time":{"start":1697457790910,"stop":1697457795071,"duration":4161}},{"uid":"dcb8df51553b0368","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/dcb8df51553b0368","status":"passed","time":{"start":1697443356682,"stop":1697443359688,"duration":3006}}]},"tags":[]},"source":"799588fc03e7e92.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa5243b87c0>"]}