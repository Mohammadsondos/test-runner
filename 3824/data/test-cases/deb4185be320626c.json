{"uid":"deb4185be320626c","name":"test_has_new_assets[Test for Imbue]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"623993caf3ded4639f69d853d4c0fd12","time":{"start":1695513811429,"stop":1695513816892,"duration":5463},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9c8dd36f80>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9c8dd41600>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9c8dd36f80>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9c8dd41600>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"7c0f38f9f51a4b9c","name":"stdout","source":"7c0f38f9f51a4b9c.txt","type":"text/plain","size":570}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az404-260"},{"name":"thread","value":"2163-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9c8dd41600>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8038ac94d3ae2e77","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695513791040,"stop":1695513796392,"duration":5352}},{"uid":"c7224a6273ada400","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695513770661,"stop":1695513776019,"duration":5358}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":179,"unknown":0,"total":183},"items":[{"uid":"85a812f2a295e5e9","reportUrl":"https://novasamatech.github.io/test-runner/3823//#testresult/85a812f2a295e5e9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695499377591,"stop":1695499383269,"duration":5678}},{"uid":"70d6946738d0e352","reportUrl":"https://novasamatech.github.io/test-runner/3822//#testresult/70d6946738d0e352","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695484968858,"stop":1695484974324,"duration":5466}},{"uid":"60df5be088f13417","reportUrl":"https://novasamatech.github.io/test-runner/3821//#testresult/60df5be088f13417","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695470564829,"stop":1695470570269,"duration":5440}},{"uid":"46f7cb7e06f3e7c8","reportUrl":"https://novasamatech.github.io/test-runner/3820//#testresult/46f7cb7e06f3e7c8","status":"passed","time":{"start":1695456130052,"stop":1695456134392,"duration":4340}},{"uid":"ce2008498b549205","reportUrl":"https://novasamatech.github.io/test-runner/3819//#testresult/ce2008498b549205","status":"passed","time":{"start":1695441717259,"stop":1695441719491,"duration":2232}},{"uid":"8072a5f8f48b0018","reportUrl":"https://novasamatech.github.io/test-runner/3818//#testresult/8072a5f8f48b0018","status":"passed","time":{"start":1695427393869,"stop":1695427397682,"duration":3813}},{"uid":"603c2041e87735dd","reportUrl":"https://novasamatech.github.io/test-runner/3817//#testresult/603c2041e87735dd","status":"passed","time":{"start":1695412921318,"stop":1695412925274,"duration":3956}},{"uid":"25a83e160f1231d3","reportUrl":"https://novasamatech.github.io/test-runner/3816//#testresult/25a83e160f1231d3","status":"passed","time":{"start":1695398560265,"stop":1695398563500,"duration":3235}},{"uid":"d0fd9a0bd6589174","reportUrl":"https://novasamatech.github.io/test-runner/3815//#testresult/d0fd9a0bd6589174","status":"passed","time":{"start":1695384144397,"stop":1695384147491,"duration":3094}},{"uid":"67835abeebb32e61","reportUrl":"https://novasamatech.github.io/test-runner/3814//#testresult/67835abeebb32e61","status":"passed","time":{"start":1695369767435,"stop":1695369773907,"duration":6472}},{"uid":"6cc001a8d5bff184","reportUrl":"https://novasamatech.github.io/test-runner/3813//#testresult/6cc001a8d5bff184","status":"passed","time":{"start":1695355344183,"stop":1695355347252,"duration":3069}},{"uid":"d7fcdb524b5cf45","reportUrl":"https://novasamatech.github.io/test-runner/3812//#testresult/d7fcdb524b5cf45","status":"passed","time":{"start":1695341009741,"stop":1695341013254,"duration":3513}},{"uid":"e5b18c2911a5a8d7","reportUrl":"https://novasamatech.github.io/test-runner/3810//#testresult/e5b18c2911a5a8d7","status":"passed","time":{"start":1695312166788,"stop":1695312169662,"duration":2874}},{"uid":"dc1494486e7a23a8","reportUrl":"https://novasamatech.github.io/test-runner/3809//#testresult/dc1494486e7a23a8","status":"passed","time":{"start":1695297750840,"stop":1695297753872,"duration":3032}},{"uid":"604e608c19421b42","reportUrl":"https://novasamatech.github.io/test-runner/3808//#testresult/604e608c19421b42","status":"passed","time":{"start":1695283340399,"stop":1695283343942,"duration":3543}},{"uid":"74e3b81a7f2ae610","reportUrl":"https://novasamatech.github.io/test-runner/3807//#testresult/74e3b81a7f2ae610","status":"passed","time":{"start":1695268938325,"stop":1695268941490,"duration":3165}},{"uid":"25cd7365fc289e05","reportUrl":"https://novasamatech.github.io/test-runner/3806//#testresult/25cd7365fc289e05","status":"passed","time":{"start":1695254619984,"stop":1695254623228,"duration":3244}},{"uid":"1e96cf1175f70bdb","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/1e96cf1175f70bdb","status":"passed","time":{"start":1695240142482,"stop":1695240145081,"duration":2599}},{"uid":"69b2a1114bb4e436","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/69b2a1114bb4e436","status":"passed","time":{"start":1695225734461,"stop":1695225736653,"duration":2192}},{"uid":"2baf5927340d5128","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/2baf5927340d5128","status":"passed","time":{"start":1695211328825,"stop":1695211330526,"duration":1701}}]},"tags":[]},"source":"deb4185be320626c.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9c8dd41600>"]}