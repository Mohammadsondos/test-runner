{"uid":"c127ca4949b2b9ae","name":"test_can_create_connection[Test for Polkadot Collectives, url: wss://collectives.public.curie.radiumblock.co/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"039531a53cc602de1124c839af845418","time":{"start":1700208499120,"stop":1700208499120,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Polkadot Collectives, url: wss://collectives.public.curie.radiumblock.co/ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n        connection = create_connection_by_url(data[\"url\"])\n>       get_properties(connection)\n\ntests/conftest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2133: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2107: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:648: in init_runtime\n    block_hash = self.get_chain_head()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:435: in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:323: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:364: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:387: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:408: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:447: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:340: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:296: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:375: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:531: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:124: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1700208347047,"stop":1700208408032,"duration":60985},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 24, in connection_by_url\n    get_properties(connection)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 648, in init_runtime\n    block_hash = self.get_chain_head()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 435, in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 323, in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 364, in recv\n    opcode, data = self.recv_data()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 387, in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 408, in recv_data_frame\n    frame = self.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 447, in recv_frame\n    return self.frame_buffer.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 340, in recv_frame\n    self.recv_header()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 296, in recv_header\n    header = self.recv_strict(2)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 375, in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 531, in _recv\n    return recv(self.sock, bufsize)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 124, in recv\n    raise WebSocketConnectionClosedException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"connection_by_url","time":{"start":1700208423149,"stop":1700208484006,"duration":60857},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 24, in connection_by_url\n    get_properties(connection)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 648, in init_runtime\n    block_hash = self.get_chain_head()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 435, in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 323, in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 364, in recv\n    opcode, data = self.recv_data()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 387, in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 408, in recv_data_frame\n    frame = self.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 447, in recv_frame\n    return self.frame_buffer.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 340, in recv_frame\n    self.recv_header()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 296, in recv_header\n    header = self.recv_strict(2)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 375, in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 531, in _recv\n    return recv(self.sock, bufsize)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 124, in recv\n    raise WebSocketConnectionClosedException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"connection_by_url","time":{"start":1700208499120,"stop":1700208560315,"duration":61195},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 24, in connection_by_url\n    get_properties(connection)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 648, in init_runtime\n    block_hash = self.get_chain_head()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 435, in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 323, in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 364, in recv\n    opcode, data = self.recv_data()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 387, in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 408, in recv_data_frame\n    frame = self.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 447, in recv_frame\n    return self.frame_buffer.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 340, in recv_frame\n    self.recv_header()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 296, in recv_header\n    header = self.recv_strict(2)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 375, in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 531, in _recv\n    return recv(self.sock, bufsize)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 124, in recv\n    raise WebSocketConnectionClosedException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az768-743"},{"name":"thread","value":"2155-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://collectives.public.curie.radiumblock.co/ws', 'name': 'Polkadot Collectives'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e8bdc114a802238e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700208423148,"stop":1700208423148,"duration":0}},{"uid":"11cb4d785e5f8aaa","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700208347046,"stop":1700208347046,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":486,"unknown":0,"total":502},"items":[{"uid":"9d9ab73ee00e088e","reportUrl":"https://novasamatech.github.io/test-runner/4151//#testresult/9d9ab73ee00e088e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700194040685,"stop":1700194040685,"duration":0}},{"uid":"8854bede53139333","reportUrl":"https://novasamatech.github.io/test-runner/4150//#testresult/8854bede53139333","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700179711911,"stop":1700179711911,"duration":0}},{"uid":"386c34c8e638d0bd","reportUrl":"https://novasamatech.github.io/test-runner/4149//#testresult/386c34c8e638d0bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700165279435,"stop":1700165279435,"duration":0}},{"uid":"7f84d02c672cd004","reportUrl":"https://novasamatech.github.io/test-runner/4148//#testresult/7f84d02c672cd004","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700150930371,"stop":1700150930371,"duration":0}},{"uid":"3a913119d1c4e36","reportUrl":"https://novasamatech.github.io/test-runner/4147//#testresult/3a913119d1c4e36","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700136532888,"stop":1700136532888,"duration":0}},{"uid":"439000edec15b46f","reportUrl":"https://novasamatech.github.io/test-runner/4146//#testresult/439000edec15b46f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700122172970,"stop":1700122172970,"duration":0}},{"uid":"72291ffbbc255940","reportUrl":"https://novasamatech.github.io/test-runner/4145//#testresult/72291ffbbc255940","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700107734610,"stop":1700107734610,"duration":0}},{"uid":"205a98b2a59e1825","reportUrl":"https://novasamatech.github.io/test-runner/4144//#testresult/205a98b2a59e1825","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700093363688,"stop":1700093363688,"duration":0}},{"uid":"e4f5aa6c88b3a5e8","reportUrl":"https://novasamatech.github.io/test-runner/4143//#testresult/e4f5aa6c88b3a5e8","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700078871133,"stop":1700078871133,"duration":0}},{"uid":"91f7835bcdc5d50f","reportUrl":"https://novasamatech.github.io/test-runner/4142//#testresult/91f7835bcdc5d50f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700064555086,"stop":1700064555086,"duration":0}},{"uid":"7bec825bb9f71274","reportUrl":"https://novasamatech.github.io/test-runner/4141//#testresult/7bec825bb9f71274","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1700050130088,"stop":1700050130088,"duration":0}},{"uid":"789b57e470bb366","reportUrl":"https://novasamatech.github.io/test-runner/4130//#testresult/789b57e470bb366","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1699891717649,"stop":1699891717649,"duration":0}},{"uid":"720d5ceabe1d28c3","reportUrl":"https://novasamatech.github.io/test-runner/4129//#testresult/720d5ceabe1d28c3","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1699877364802,"stop":1699877364802,"duration":0}},{"uid":"b542e21030a30988","reportUrl":"https://novasamatech.github.io/test-runner/4128//#testresult/b542e21030a30988","status":"passed","time":{"start":1699862525563,"stop":1699862526158,"duration":595}},{"uid":"bf4259f2f8cc6e86","reportUrl":"https://novasamatech.github.io/test-runner/4127//#testresult/bf4259f2f8cc6e86","status":"passed","time":{"start":1699848174205,"stop":1699848174734,"duration":529}},{"uid":"f30ad2abe1400d7d","reportUrl":"https://novasamatech.github.io/test-runner/4126//#testresult/f30ad2abe1400d7d","status":"passed","time":{"start":1699833821564,"stop":1699833821934,"duration":370}},{"uid":"764fd7f1ea49c8b3","reportUrl":"https://novasamatech.github.io/test-runner/4125//#testresult/764fd7f1ea49c8b3","status":"passed","time":{"start":1699819353219,"stop":1699819353630,"duration":411}},{"uid":"11efa3a150d38f88","reportUrl":"https://novasamatech.github.io/test-runner/4124//#testresult/11efa3a150d38f88","status":"passed","time":{"start":1699804952236,"stop":1699804952629,"duration":393}},{"uid":"909818110ef511c9","reportUrl":"https://novasamatech.github.io/test-runner/4123//#testresult/909818110ef511c9","status":"passed","time":{"start":1699790528729,"stop":1699790529039,"duration":310}},{"uid":"514c01e06d4c7675","reportUrl":"https://novasamatech.github.io/test-runner/4122//#testresult/514c01e06d4c7675","status":"passed","time":{"start":1699776220018,"stop":1699776220545,"duration":527}}]},"tags":[]},"source":"c127ca4949b2b9ae.json","parameterValues":["{'url': 'wss://collectives.public.curie.radiumblock.co/ws', 'name': 'Polkadot Collectives'}"]}