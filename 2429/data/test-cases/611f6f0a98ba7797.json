{"uid":"611f6f0a98ba7797","name":"test_can_create_connection[Test for Imbue, url: wss://imbue-kusama.imbue.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"37f966fb65a76fdaf4ab1b4f770dedaf","time":{"start":1675945745078,"stop":1675945745357,"duration":279},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Imbue', 'url': 'wss://imbue-kusama.imbue.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Imbue', 'url': 'wss://imbue-kusama.imbue.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"7348e30053f04fee","name":"stdout","source":"7348e30053f04fee.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az571-89"},{"name":"thread","value":"1642-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3db34cd40eadcb12","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675945734657,"stop":1675945734947,"duration":290}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":95,"skipped":0,"passed":587,"unknown":0,"total":682},"items":[{"uid":"86cf06026231116f","reportUrl":"https://nova-wallet.github.io/test-runner/2428//#testresult/86cf06026231116f","status":"passed","time":{"start":1675930698460,"stop":1675930698744,"duration":284}},{"uid":"990de213d4f9d731","reportUrl":"https://nova-wallet.github.io/test-runner/2426//#testresult/990de213d4f9d731","status":"passed","time":{"start":1675904975883,"stop":1675904976142,"duration":259}},{"uid":"724a20f204272cd3","reportUrl":"https://nova-wallet.github.io/test-runner/2425//#testresult/724a20f204272cd3","status":"passed","time":{"start":1675887302155,"stop":1675887302378,"duration":223}},{"uid":"53ff7f4a39c0c13c","reportUrl":"https://nova-wallet.github.io/test-runner/2424//#testresult/53ff7f4a39c0c13c","status":"passed","time":{"start":1675873184862,"stop":1675873185179,"duration":317}},{"uid":"355b091506a0b923","reportUrl":"https://nova-wallet.github.io/test-runner/2423//#testresult/355b091506a0b923","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675859214489,"stop":1675859214753,"duration":264}},{"uid":"28cc2168534638a","reportUrl":"https://nova-wallet.github.io/test-runner/2422//#testresult/28cc2168534638a","status":"passed","time":{"start":1675844303460,"stop":1675844303544,"duration":84}},{"uid":"5b37882ebbb45996","reportUrl":"https://nova-wallet.github.io/test-runner/2421//#testresult/5b37882ebbb45996","status":"passed","time":{"start":1675829844123,"stop":1675829844200,"duration":77}},{"uid":"e1eda0fdb021d2fd","reportUrl":"https://nova-wallet.github.io/test-runner/2420//#testresult/e1eda0fdb021d2fd","status":"passed","time":{"start":1675818556368,"stop":1675818556476,"duration":108}},{"uid":"a3c10d38113d0b0","reportUrl":"https://nova-wallet.github.io/test-runner/2419//#testresult/a3c10d38113d0b0","status":"passed","time":{"start":1675800887291,"stop":1675800887592,"duration":301}},{"uid":"95a95415214829fa","reportUrl":"https://nova-wallet.github.io/test-runner/2417//#testresult/95a95415214829fa","status":"passed","time":{"start":1675772853723,"stop":1675772854034,"duration":311}},{"uid":"3e485530501df53a","reportUrl":"https://nova-wallet.github.io/test-runner/2416//#testresult/3e485530501df53a","status":"passed","time":{"start":1675757888607,"stop":1675757888713,"duration":106}},{"uid":"2df34d1d4e15e868","reportUrl":"https://nova-wallet.github.io/test-runner/2415//#testresult/2df34d1d4e15e868","status":"passed","time":{"start":1675743388942,"stop":1675743389047,"duration":105}},{"uid":"10e1f603d3a5e70f","reportUrl":"https://nova-wallet.github.io/test-runner/2414//#testresult/10e1f603d3a5e70f","status":"passed","time":{"start":1675732074644,"stop":1675732074958,"duration":314}},{"uid":"f3aea3c80348f5f","reportUrl":"https://nova-wallet.github.io/test-runner/2413//#testresult/f3aea3c80348f5f","status":"passed","time":{"start":1675714514260,"stop":1675714514603,"duration":343}},{"uid":"5495e232e85b56ba","reportUrl":"https://nova-wallet.github.io/test-runner/2412//#testresult/5495e232e85b56ba","status":"passed","time":{"start":1675700356272,"stop":1675700356587,"duration":315}},{"uid":"17c45c8e00036dd9","reportUrl":"https://nova-wallet.github.io/test-runner/2410//#testresult/17c45c8e00036dd9","status":"passed","time":{"start":1675671514880,"stop":1675671515234,"duration":354}},{"uid":"e3f692ecc0cc1729","reportUrl":"https://nova-wallet.github.io/test-runner/2409//#testresult/e3f692ecc0cc1729","status":"passed","time":{"start":1675657014973,"stop":1675657015279,"duration":306}},{"uid":"8d49c0b21ce7729f","reportUrl":"https://nova-wallet.github.io/test-runner/2408//#testresult/8d49c0b21ce7729f","status":"passed","time":{"start":1675645568717,"stop":1675645568956,"duration":239}},{"uid":"6682113b1e31eef2","reportUrl":"https://nova-wallet.github.io/test-runner/2407//#testresult/6682113b1e31eef2","status":"passed","time":{"start":1675627997282,"stop":1675627997389,"duration":107}},{"uid":"6ed2d2f4380d3450","reportUrl":"https://nova-wallet.github.io/test-runner/2406//#testresult/6ed2d2f4380d3450","status":"passed","time":{"start":1675613829967,"stop":1675613830072,"duration":105}}]},"tags":[]},"source":"611f6f0a98ba7797.json","parameterValues":["{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"]}