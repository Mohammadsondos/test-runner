{"uid":"a007da7becb08468","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1693080112478,"stop":1693080112787,"duration":309},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 26 Aug 2023 20:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=iCp2Fi05s7eQAPQuA4Joc3g0VdNSXgsObkoXirMe31Xh%2FZsJe%2FSYs8oy49oMujyDJ14P087iyf%2BBg7cJL6MpjuFNlNi0%2BaDWDPSJNvVmPJ%2FhUh2xoO8hUu5Vc6wrGTbQ5t9K6Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3U8VDTcfqtrhaL; SameSite=None; Secure; path=/; expires=Sun, 27-Aug-23 19:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7fceab4f29ae3998-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 26 Aug 2023 20:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=iCp2Fi05s7eQAPQuA4Joc3g0VdNSXgsObkoXirMe31Xh%2FZsJe%2FSYs8oy49oMujyDJ14P087iyf%2BBg7cJL6MpjuFNlNi0%2BaDWDPSJNvVmPJ%2FhUh2xoO8hUu5Vc6wrGTbQ5t9K6Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3U8VDTcfqtrhaL; SameSite=None; Secure; path=/; expires=Sun, 27-Aug-23 19:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7fceab4f29ae3998-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 26 Aug 2023 20:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=iCp2Fi05s7eQAPQuA4Joc3g0VdNSXgsObkoXirMe31Xh%2FZsJe%2FSYs8oy49oMujyDJ14P087iyf%2BBg7cJL6MpjuFNlNi0%2BaDWDPSJNvVmPJ%2FhUh2xoO8hUu5Vc6wrGTbQ5t9K6Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3U8VDTcfqtrhaL; SameSite=None; Secure; path=/; expires=Sun, 27-Aug-23 19:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7fceab4f29ae3998-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 26 Aug 2023 20:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=iCp2Fi05s7eQAPQuA4Joc3g0VdNSXgsObkoXirMe31Xh%2FZsJe%2FSYs8oy49oMujyDJ14P087iyf%2BBg7cJL6MpjuFNlNi0%2BaDWDPSJNvVmPJ%2FhUh2xoO8hUu5Vc6wrGTbQ5t9K6Q%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3U8VDTcfqtrhaL; SameSite=None; Secure; path=/; expires=Sun, 27-Aug-23 19:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7fceab4f29ae3998-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"6e563b17af57aa9c","name":"stdout","source":"6e563b17af57aa9c.txt","type":"text/plain","size":2548}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az887-500"},{"name":"thread","value":"2010-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"21adfb8f65c266f4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 26 Aug 2023 20:01:37 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=YIbuY3g%2F7eFqm11y6YcHJR%2BORF3AauHhlh5fpvdlFHOOPTm2LBq8gAAacuNiQNG5Bqe0wKGiga%2BVM6PtqOqqN%2FAiAQRyf%2BYbdy0aipA6KWu6bZ%2F3YQhUtmQq%2Bhax4aeLXL16CQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3TwQvedE7WokE8; SameSite=None; Secure; path=/; expires=Sun, 27-Aug-23 19:01:37 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7fceaaeeecb97fe1-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1693080097097,"stop":1693080097386,"duration":289}},{"uid":"892b241f3ea1a6bf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 26 Aug 2023 20:01:21 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=w8g9oHMha9CTzekPg5SDRDHJxseZBmqWZI2bnc0UE9XWLwlp8TsQwYFKwKoXqXJ5acA3UgtiZmEEh7eufRkT0vKK1BEtLah38x3ukbGwySy7xLz1o%2F%2FxLlq0levJGeH8cXem5g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3TjbpKSDjWV8PW; SameSite=None; Secure; path=/; expires=Sun, 27-Aug-23 19:01:21 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7fceaa8e5fbd7fe1-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1693080081577,"stop":1693080081942,"duration":365}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":15,"unknown":0,"total":16},"items":[{"uid":"22070961d1bed749","reportUrl":"https://novasamatech.github.io/test-runner/3653//#testresult/22070961d1bed749","status":"passed","time":{"start":1693065687676,"stop":1693065688379,"duration":703}},{"uid":"825670dfe27d3974","reportUrl":"https://novasamatech.github.io/test-runner/3652//#testresult/825670dfe27d3974","status":"passed","time":{"start":1693051284144,"stop":1693051284746,"duration":602}},{"uid":"624b6dc8e28009f6","reportUrl":"https://novasamatech.github.io/test-runner/3651//#testresult/624b6dc8e28009f6","status":"passed","time":{"start":1693036884502,"stop":1693036885229,"duration":727}},{"uid":"b9601d86636357cf","reportUrl":"https://novasamatech.github.io/test-runner/3650//#testresult/b9601d86636357cf","status":"passed","time":{"start":1693022477935,"stop":1693022478646,"duration":711}},{"uid":"7896652fdd24f02f","reportUrl":"https://novasamatech.github.io/test-runner/3649//#testresult/7896652fdd24f02f","status":"passed","time":{"start":1693008138617,"stop":1693008139263,"duration":646}},{"uid":"2c240131de0ac999","reportUrl":"https://novasamatech.github.io/test-runner/3648//#testresult/2c240131de0ac999","status":"passed","time":{"start":1692993680859,"stop":1692993681414,"duration":555}},{"uid":"f8c95f69bff1c4ad","reportUrl":"https://novasamatech.github.io/test-runner/3647//#testresult/f8c95f69bff1c4ad","status":"passed","time":{"start":1692979305864,"stop":1692979306280,"duration":416}},{"uid":"137576e81d8b71ab","reportUrl":"https://novasamatech.github.io/test-runner/3646//#testresult/137576e81d8b71ab","status":"passed","time":{"start":1692964930741,"stop":1692964931381,"duration":640}},{"uid":"5613006bdb10c111","reportUrl":"https://novasamatech.github.io/test-runner/3645//#testresult/5613006bdb10c111","status":"passed","time":{"start":1692950486443,"stop":1692950486986,"duration":543}},{"uid":"bfc8d850a7c81451","reportUrl":"https://novasamatech.github.io/test-runner/3644//#testresult/bfc8d850a7c81451","status":"passed","time":{"start":1692936089366,"stop":1692936090057,"duration":691}},{"uid":"49ee63757c468f85","reportUrl":"https://novasamatech.github.io/test-runner/3643//#testresult/49ee63757c468f85","status":"passed","time":{"start":1692921732050,"stop":1692921732778,"duration":728}},{"uid":"f6de4e2b690fa44f","reportUrl":"https://novasamatech.github.io/test-runner/3642//#testresult/f6de4e2b690fa44f","status":"passed","time":{"start":1692907285969,"stop":1692907286378,"duration":409}},{"uid":"fbd1e718b09bbf67","reportUrl":"https://novasamatech.github.io/test-runner/3641//#testresult/fbd1e718b09bbf67","status":"passed","time":{"start":1692892898491,"stop":1692892898908,"duration":417}},{"uid":"17e9c44cebd45fb1","reportUrl":"https://novasamatech.github.io/test-runner/3640//#testresult/17e9c44cebd45fb1","status":"passed","time":{"start":1692878525651,"stop":1692878526318,"duration":667}},{"uid":"c57bb072cd0f6508","reportUrl":"https://novasamatech.github.io/test-runner/3639//#testresult/c57bb072cd0f6508","status":"passed","time":{"start":1692868113082,"stop":1692868113425,"duration":343}}]},"tags":[]},"source":"a007da7becb08468.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}