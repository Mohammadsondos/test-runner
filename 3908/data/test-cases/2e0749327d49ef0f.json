{"uid":"2e0749327d49ef0f","name":"test_address_prefix[Test for Composable Finance]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"9eb5311f9a3089d9a4d7a7f5fcd78c89","time":{"start":1696708971992,"stop":1696709033629,"duration":61637},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f325be074c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f325bd8a4d0>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2516: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2490: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:1160: in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:955: in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az341-459"},{"name":"thread","value":"2177-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f325bd8a4d0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"86935c3220544d48","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696708955036,"stop":1696708956815,"duration":1779}},{"uid":"caef7fc92e4512fe","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696708937830,"stop":1696708939812,"duration":1982}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":265,"unknown":0,"total":268},"items":[{"uid":"e0a93cf12f6f9278","reportUrl":"https://novasamatech.github.io/test-runner/3907//#testresult/e0a93cf12f6f9278","status":"passed","time":{"start":1696694533678,"stop":1696694540744,"duration":7066}},{"uid":"b47c0b2faab782f9","reportUrl":"https://novasamatech.github.io/test-runner/3906//#testresult/b47c0b2faab782f9","status":"passed","time":{"start":1696680133635,"stop":1696680143938,"duration":10303}},{"uid":"ad0d2c450af2cf6c","reportUrl":"https://novasamatech.github.io/test-runner/3905//#testresult/ad0d2c450af2cf6c","status":"passed","time":{"start":1696665709612,"stop":1696665716485,"duration":6873}},{"uid":"acc175cc741bb3c1","reportUrl":"https://novasamatech.github.io/test-runner/3904//#testresult/acc175cc741bb3c1","status":"passed","time":{"start":1696651312935,"stop":1696651321895,"duration":8960}},{"uid":"23a66cc4f64113bd","reportUrl":"https://novasamatech.github.io/test-runner/3903//#testresult/23a66cc4f64113bd","status":"passed","time":{"start":1696636950378,"stop":1696636955656,"duration":5278}},{"uid":"8111ff878d540f10","reportUrl":"https://novasamatech.github.io/test-runner/3902//#testresult/8111ff878d540f10","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1696622619679,"stop":1696622681335,"duration":61656}},{"uid":"2d2f4b6db61d241b","reportUrl":"https://novasamatech.github.io/test-runner/3901//#testresult/2d2f4b6db61d241b","status":"passed","time":{"start":1696608124012,"stop":1696608130569,"duration":6557}},{"uid":"39d8f1e75c56e3cb","reportUrl":"https://novasamatech.github.io/test-runner/3900//#testresult/39d8f1e75c56e3cb","status":"passed","time":{"start":1696593826264,"stop":1696593833073,"duration":6809}},{"uid":"cb8f36f3d5564463","reportUrl":"https://novasamatech.github.io/test-runner/3899//#testresult/cb8f36f3d5564463","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696579380721,"stop":1696579382524,"duration":1803}},{"uid":"17d07bc4ffc48f02","reportUrl":"https://novasamatech.github.io/test-runner/3898//#testresult/17d07bc4ffc48f02","status":"passed","time":{"start":1696564911025,"stop":1696564916505,"duration":5480}},{"uid":"3fb72b23fc989b72","reportUrl":"https://novasamatech.github.io/test-runner/3897//#testresult/3fb72b23fc989b72","status":"passed","time":{"start":1696550596019,"stop":1696550601694,"duration":5675}},{"uid":"9bc64b7e5998703","reportUrl":"https://novasamatech.github.io/test-runner/3896//#testresult/9bc64b7e5998703","status":"passed","time":{"start":1696536113505,"stop":1696536121478,"duration":7973}},{"uid":"62cae58ba4251350","reportUrl":"https://novasamatech.github.io/test-runner/3895//#testresult/62cae58ba4251350","status":"passed","time":{"start":1696521720439,"stop":1696521725113,"duration":4674}},{"uid":"2e5517b0372af49","reportUrl":"https://novasamatech.github.io/test-runner/3894//#testresult/2e5517b0372af49","status":"passed","time":{"start":1696507331501,"stop":1696507338910,"duration":7409}},{"uid":"89bcb99e3376f90b","reportUrl":"https://novasamatech.github.io/test-runner/3893//#testresult/89bcb99e3376f90b","status":"passed","time":{"start":1696496678413,"stop":1696496683125,"duration":4712}},{"uid":"3f5f13dc391dfb13","reportUrl":"https://novasamatech.github.io/test-runner/3892//#testresult/3f5f13dc391dfb13","status":"passed","time":{"start":1696492967133,"stop":1696492972548,"duration":5415}},{"uid":"2ea1aae9c433dfd1","reportUrl":"https://novasamatech.github.io/test-runner/3891//#testresult/2ea1aae9c433dfd1","status":"passed","time":{"start":1696478527009,"stop":1696478532403,"duration":5394}},{"uid":"1ddb1bd5fe077ad6","reportUrl":"https://novasamatech.github.io/test-runner/3890//#testresult/1ddb1bd5fe077ad6","status":"passed","time":{"start":1696464173654,"stop":1696464181130,"duration":7476}},{"uid":"d9ec5950242dee46","reportUrl":"https://novasamatech.github.io/test-runner/3889//#testresult/d9ec5950242dee46","status":"passed","time":{"start":1696449749794,"stop":1696449755717,"duration":5923}},{"uid":"e54f3a9d83febe92","reportUrl":"https://novasamatech.github.io/test-runner/3888//#testresult/e54f3a9d83febe92","status":"passed","time":{"start":1696435354535,"stop":1696435360913,"duration":6378}}]},"tags":[]},"source":"2e0749327d49ef0f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f325bd8a4d0>"]}