{"uid":"c2d174731d16858d","name":"test_can_create_connection[Test for Robonomics, url: wss://robonomics.leemo.me]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"60f696a8c9130865c0be5e1d2491af5d","time":{"start":1670372064971,"stop":1670372065610,"duration":639},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"f2636cb02bafeecb","name":"stdout","source":"f2636cb02bafeecb.txt","type":"text/plain","size":218}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az337-765"},{"name":"thread","value":"1679-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4591808eb4824d6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670372054215,"stop":1670372054860,"duration":645}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":58,"skipped":0,"passed":118,"unknown":0,"total":176},"items":[{"uid":"e5df44df0a749d92","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/e5df44df0a749d92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670357064616,"stop":1670357065264,"duration":648}},{"uid":"ebf749cabe5c2d9a","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/ebf749cabe5c2d9a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670342664642,"stop":1670342665156,"duration":514}},{"uid":"cbb4eee539ae5cdb","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/cbb4eee539ae5cdb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670333418961,"stop":1670333419653,"duration":692}},{"uid":"a95f15b5d90fe516","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/a95f15b5d90fe516","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670242218804,"stop":1670242219304,"duration":500}},{"uid":"13bf263621e31998","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/13bf263621e31998","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670227764605,"stop":1670227765191,"duration":586}},{"uid":"898c3285ba8b48ff","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/898c3285ba8b48ff","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670213342442,"stop":1670213342784,"duration":342}},{"uid":"f3cce79465b2f7c6","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/f3cce79465b2f7c6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670199537403,"stop":1670199537935,"duration":532}},{"uid":"5ff0666017bf38b4","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/5ff0666017bf38b4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670184540842,"stop":1670184541151,"duration":309}},{"uid":"77359d34a9fab3d1","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/77359d34a9fab3d1","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670170125959,"stop":1670170126308,"duration":349}},{"uid":"1c5f4fb12eb8bf87","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/1c5f4fb12eb8bf87","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670157059275,"stop":1670157059926,"duration":651}},{"uid":"e503529dc8f2f409","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/e503529dc8f2f409","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670142093991,"stop":1670142094649,"duration":658}},{"uid":"75e2c561d6e087fe","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/75e2c561d6e087fe","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670127674754,"stop":1670127675349,"duration":595}},{"uid":"560d2ddaae92f02a","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/560d2ddaae92f02a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670116432746,"stop":1670116433332,"duration":586}},{"uid":"a2d5faf96c4380ea","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/a2d5faf96c4380ea","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670098697186,"stop":1670098697519,"duration":333}},{"uid":"623afb69c7fcfff8","reportUrl":"https://nova-wallet.github.io/test-runner/2016//#testresult/623afb69c7fcfff8","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670084571711,"stop":1670084572210,"duration":499}},{"uid":"785cdeb5d01f8682","reportUrl":"https://nova-wallet.github.io/test-runner/2015//#testresult/785cdeb5d01f8682","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670070524419,"stop":1670070524736,"duration":317}},{"uid":"907c98234f0823ec","reportUrl":"https://nova-wallet.github.io/test-runner/2014//#testresult/907c98234f0823ec","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670055689653,"stop":1670055689989,"duration":336}},{"uid":"4f66e47bececab83","reportUrl":"https://nova-wallet.github.io/test-runner/2013//#testresult/4f66e47bececab83","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670041258034,"stop":1670041258379,"duration":345}},{"uid":"3832c53e67756b65","reportUrl":"https://nova-wallet.github.io/test-runner/2012//#testresult/3832c53e67756b65","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670029747862,"stop":1670029748393,"duration":531}},{"uid":"45c4f59e15f25248","reportUrl":"https://nova-wallet.github.io/test-runner/2011//#testresult/45c4f59e15f25248","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670012351864,"stop":1670012352512,"duration":648}}]},"tags":[]},"source":"c2d174731d16858d.json","parameterValues":["{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"]}