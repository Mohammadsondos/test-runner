{"uid":"8558baed4770a15f","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1690920593905,"stop":1690920724282,"duration":130377},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f81b64cb520>\nchain = <scripts.utils.chain_model.Chain object at 0x7f81b67cbc10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f81b64cb520>\nchain = <scripts.utils.chain_model.Chain object at 0x7f81b67cbc10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"78d6cf103280f18c","name":"stdout","source":"78d6cf103280f18c.txt","type":"text/plain","size":531}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1102-763"},{"name":"thread","value":"1947-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f81b67cbc10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eab04011e9383412","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690920448498,"stop":1690920578874,"duration":130376}},{"uid":"c296971e2473d093","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690920302914,"stop":1690920433466,"duration":130552}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":471,"unknown":0,"total":473},"items":[{"uid":"786ba392287125c6","reportUrl":"https://novasamatech.github.io/test-runner/3495//#testresult/786ba392287125c6","status":"passed","time":{"start":1690905912416,"stop":1690905923804,"duration":11388}},{"uid":"de4f5ab27347589a","reportUrl":"https://novasamatech.github.io/test-runner/3494//#testresult/de4f5ab27347589a","status":"passed","time":{"start":1690891567175,"stop":1690891576089,"duration":8914}},{"uid":"d199352ccc159fc6","reportUrl":"https://novasamatech.github.io/test-runner/3493//#testresult/d199352ccc159fc6","status":"passed","time":{"start":1690877115570,"stop":1690877120730,"duration":5160}},{"uid":"bd9d8bb7c9ab58b3","reportUrl":"https://novasamatech.github.io/test-runner/3492//#testresult/bd9d8bb7c9ab58b3","status":"passed","time":{"start":1690862692807,"stop":1690862698669,"duration":5862}},{"uid":"f02d80ede2dde1a8","reportUrl":"https://novasamatech.github.io/test-runner/3491//#testresult/f02d80ede2dde1a8","status":"passed","time":{"start":1690849015591,"stop":1690849022014,"duration":6423}},{"uid":"d3bd3244eea727b1","reportUrl":"https://novasamatech.github.io/test-runner/3490//#testresult/d3bd3244eea727b1","status":"passed","time":{"start":1690833907112,"stop":1690833921615,"duration":14503}},{"uid":"27fd76b0590e00af","reportUrl":"https://novasamatech.github.io/test-runner/3489//#testresult/27fd76b0590e00af","status":"passed","time":{"start":1690819514836,"stop":1690819519552,"duration":4716}},{"uid":"c1158e9cab2ed0a9","reportUrl":"https://novasamatech.github.io/test-runner/3488//#testresult/c1158e9cab2ed0a9","status":"passed","time":{"start":1690805147641,"stop":1690805156502,"duration":8861}},{"uid":"16c469ef0e6b072d","reportUrl":"https://novasamatech.github.io/test-runner/3487//#testresult/16c469ef0e6b072d","status":"passed","time":{"start":1690790729722,"stop":1690790738196,"duration":8474}},{"uid":"116662dc3a82bc48","reportUrl":"https://novasamatech.github.io/test-runner/3486//#testresult/116662dc3a82bc48","status":"passed","time":{"start":1690776311506,"stop":1690776317253,"duration":5747}},{"uid":"6b6e214ecdb62e22","reportUrl":"https://novasamatech.github.io/test-runner/3485//#testresult/6b6e214ecdb62e22","status":"passed","time":{"start":1690762507605,"stop":1690762516205,"duration":8600}},{"uid":"eba0a160afb52db8","reportUrl":"https://novasamatech.github.io/test-runner/3484//#testresult/eba0a160afb52db8","status":"passed","time":{"start":1690747483642,"stop":1690747492376,"duration":8734}},{"uid":"c454ca81095846f0","reportUrl":"https://novasamatech.github.io/test-runner/3483//#testresult/c454ca81095846f0","status":"passed","time":{"start":1690733105821,"stop":1690733115216,"duration":9395}},{"uid":"4a1fb5815f7f9962","reportUrl":"https://novasamatech.github.io/test-runner/3482//#testresult/4a1fb5815f7f9962","status":"passed","time":{"start":1690718739184,"stop":1690718746534,"duration":7350}},{"uid":"a8bb3553b71140ef","reportUrl":"https://novasamatech.github.io/test-runner/3481//#testresult/a8bb3553b71140ef","status":"passed","time":{"start":1690704341965,"stop":1690704349530,"duration":7565}},{"uid":"c025c3412e835874","reportUrl":"https://novasamatech.github.io/test-runner/3480//#testresult/c025c3412e835874","status":"passed","time":{"start":1690689926837,"stop":1690689934687,"duration":7850}},{"uid":"cc5ca3b31864cca0","reportUrl":"https://novasamatech.github.io/test-runner/3479//#testresult/cc5ca3b31864cca0","status":"passed","time":{"start":1690676150256,"stop":1690676155648,"duration":5392}},{"uid":"49f80ded72ed790e","reportUrl":"https://novasamatech.github.io/test-runner/3478//#testresult/49f80ded72ed790e","status":"passed","time":{"start":1690661100834,"stop":1690661107902,"duration":7068}},{"uid":"d2932d022cbdc81f","reportUrl":"https://novasamatech.github.io/test-runner/3477//#testresult/d2932d022cbdc81f","status":"passed","time":{"start":1690646720994,"stop":1690646732637,"duration":11643}},{"uid":"650b5c5485d78db8","reportUrl":"https://novasamatech.github.io/test-runner/3476//#testresult/650b5c5485d78db8","status":"passed","time":{"start":1690632362453,"stop":1690632372871,"duration":10418}}]},"tags":[]},"source":"8558baed4770a15f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f81b67cbc10>"]}