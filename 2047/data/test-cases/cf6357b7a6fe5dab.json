{"uid":"cf6357b7a6fe5dab","name":"test_can_create_connection[Test for Robonomics, url: wss://robonomics.leemo.me]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"60f696a8c9130865c0be5e1d2491af5d","time":{"start":1670501126557,"stop":1670501127092,"duration":535},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"908cf9b473b6d70b","name":"stdout","source":"908cf9b473b6d70b.txt","type":"text/plain","size":218}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az561-688"},{"name":"thread","value":"1654-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8150bf1dc175bfd7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670501116120,"stop":1670501116453,"duration":333}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":67,"skipped":0,"passed":118,"unknown":0,"total":185},"items":[{"uid":"1fedd61ec8899e4b","reportUrl":"https://nova-wallet.github.io/test-runner/2046//#testresult/1fedd61ec8899e4b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670486666054,"stop":1670486666375,"duration":321}},{"uid":"49b7badea526f3c6","reportUrl":"https://nova-wallet.github.io/test-runner/2045//#testresult/49b7badea526f3c6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670472268402,"stop":1670472268752,"duration":350}},{"uid":"4fa403bc2027de47","reportUrl":"https://nova-wallet.github.io/test-runner/2044//#testresult/4fa403bc2027de47","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670458423269,"stop":1670458423752,"duration":483}},{"uid":"ac6e8efee15bbea7","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/ac6e8efee15bbea7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670443458621,"stop":1670443459274,"duration":653}},{"uid":"4fcc138e6f9b549","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/4fcc138e6f9b549","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670429076637,"stop":1670429077282,"duration":645}},{"uid":"4ffb69790b8627ef","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/4ffb69790b8627ef","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670414730128,"stop":1670414730776,"duration":648}},{"uid":"39d974ff6a44f7c2","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/39d974ff6a44f7c2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670400290879,"stop":1670400291207,"duration":328}},{"uid":"afb27c659d01d7","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/afb27c659d01d7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670385878132,"stop":1670385878800,"duration":668}},{"uid":"c2d174731d16858d","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/c2d174731d16858d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670372064971,"stop":1670372065610,"duration":639}},{"uid":"e5df44df0a749d92","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/e5df44df0a749d92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670357064616,"stop":1670357065264,"duration":648}},{"uid":"ebf749cabe5c2d9a","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/ebf749cabe5c2d9a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670342664642,"stop":1670342665156,"duration":514}},{"uid":"cbb4eee539ae5cdb","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/cbb4eee539ae5cdb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670333418961,"stop":1670333419653,"duration":692}},{"uid":"a95f15b5d90fe516","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/a95f15b5d90fe516","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670242218804,"stop":1670242219304,"duration":500}},{"uid":"13bf263621e31998","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/13bf263621e31998","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670227764605,"stop":1670227765191,"duration":586}},{"uid":"898c3285ba8b48ff","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/898c3285ba8b48ff","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670213342442,"stop":1670213342784,"duration":342}},{"uid":"f3cce79465b2f7c6","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/f3cce79465b2f7c6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670199537403,"stop":1670199537935,"duration":532}},{"uid":"5ff0666017bf38b4","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/5ff0666017bf38b4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670184540842,"stop":1670184541151,"duration":309}},{"uid":"77359d34a9fab3d1","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/77359d34a9fab3d1","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670170125959,"stop":1670170126308,"duration":349}},{"uid":"1c5f4fb12eb8bf87","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/1c5f4fb12eb8bf87","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670157059275,"stop":1670157059926,"duration":651}},{"uid":"e503529dc8f2f409","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/e503529dc8f2f409","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670142093991,"stop":1670142094649,"duration":658}}]},"tags":[]},"source":"cf6357b7a6fe5dab.json","parameterValues":["{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"]}