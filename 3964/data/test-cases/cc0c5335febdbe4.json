{"uid":"cc0c5335febdbe4","name":"test_can_create_connection[Test for Tinkernet, url: wss://invarch-tinkernet.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa04c589555648ef054595cb3e43047c","time":{"start":1697515568268,"stop":1697515832781,"duration":264513},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Tue, 17 Oct 2023 04:10:32 GMT', 'x-kong-upstream-latency': '21100', 'x-kong-proxy-latency': '243105', 'via': 'kong/2.3.3'} -+-+- b''","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Tue, 17 Oct 2023 04:10:32 GMT', 'x-kong-upstream-latency': '21100', 'x-kong-proxy-latency': '243105', 'via': 'kong/2.3.3'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Tue, 17 Oct 2023 04:10:32 GMT', 'x-kong-upstream-latency': '21100', 'x-kong-proxy-latency': '243105', 'via': 'kong/2.3.3'} -+-+- b''","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Tue, 17 Oct 2023 04:10:32 GMT', 'x-kong-upstream-latency': '21100', 'x-kong-proxy-latency': '243105', 'via': 'kong/2.3.3'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4eb07a61c8108543","name":"stdout","source":"4eb07a61c8108543.txt","type":"text/plain","size":602}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az613-507"},{"name":"thread","value":"2240-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8f9a5bfe9bb8303d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697515429974,"stop":1697515553039,"duration":123065}},{"uid":"8e7fe259be61e0b5","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697515290861,"stop":1697515414746,"duration":123885}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":26,"skipped":0,"passed":298,"unknown":0,"total":324},"items":[{"uid":"e96e1141fda0e41f","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/e96e1141fda0e41f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697501394232,"stop":1697501454666,"duration":60434}},{"uid":"9fe8e7aa954ad7ef","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/9fe8e7aa954ad7ef","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697486952886,"stop":1697487133178,"duration":180292}},{"uid":"6c17e8bc28772073","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/6c17e8bc28772073","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697472560054,"stop":1697472681267,"duration":121213}},{"uid":"a1bc26cee0528c45","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/a1bc26cee0528c45","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697458473020,"stop":1697458533501,"duration":60481}},{"uid":"3f501a7676910fc0","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/3f501a7676910fc0","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697444055641,"stop":1697444115946,"duration":60305}},{"uid":"5a69f8d2d1c7765a","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/5a69f8d2d1c7765a","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697429393395,"stop":1697429513721,"duration":120326}},{"uid":"9c4e147f16dc625b","reportUrl":"https://novasamatech.github.io/test-runner/3957//#testresult/9c4e147f16dc625b","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697414818983,"stop":1697414999429,"duration":180446}},{"uid":"b1b831a85c84bb91","reportUrl":"https://novasamatech.github.io/test-runner/3956//#testresult/b1b831a85c84bb91","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697400316295,"stop":1697400556749,"duration":240454}},{"uid":"ebc4b4fdb0bd95e2","reportUrl":"https://novasamatech.github.io/test-runner/3955//#testresult/ebc4b4fdb0bd95e2","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697385976775,"stop":1697386157220,"duration":180445}},{"uid":"5102fc6d300d5285","reportUrl":"https://novasamatech.github.io/test-runner/3954//#testresult/5102fc6d300d5285","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'openresty', 'date': 'Sun, 15 Oct 2023 12:18:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300007', 'via': 'kong/2.3.3'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697371928112,"stop":1697372288461,"duration":360349}},{"uid":"dfabc3f6196c53c","reportUrl":"https://novasamatech.github.io/test-runner/3953//#testresult/dfabc3f6196c53c","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697357524033,"stop":1697357764386,"duration":240353}},{"uid":"d93253b9741f4bd1","reportUrl":"https://novasamatech.github.io/test-runner/3952//#testresult/d93253b9741f4bd1","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697342778159,"stop":1697342898650,"duration":120491}},{"uid":"2ca16b02f74afcd3","reportUrl":"https://novasamatech.github.io/test-runner/3951//#testresult/2ca16b02f74afcd3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'openresty', 'date': 'Sun, 15 Oct 2023 00:13:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300003', 'via': 'kong/2.3.3'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697328474743,"stop":1697328835075,"duration":360332}},{"uid":"409f0303721469cf","reportUrl":"https://novasamatech.github.io/test-runner/3950//#testresult/409f0303721469cf","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697313914051,"stop":1697314154357,"duration":240306}},{"uid":"1b587e8d0253f594","reportUrl":"https://novasamatech.github.io/test-runner/3949//#testresult/1b587e8d0253f594","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'openresty', 'date': 'Sat, 14 Oct 2023 16:10:26 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300000', 'via': 'kong/2.3.3'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1697299466446,"stop":1697299826859,"duration":360413}},{"uid":"6ceb680d0292b5e5","reportUrl":"https://novasamatech.github.io/test-runner/3948//#testresult/6ceb680d0292b5e5","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697285659866,"stop":1697285720165,"duration":60299}},{"uid":"386ef7c1ca925c20","reportUrl":"https://novasamatech.github.io/test-runner/3947//#testresult/386ef7c1ca925c20","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697270710212,"stop":1697270770681,"duration":60469}},{"uid":"be4de52a45299c5e","reportUrl":"https://novasamatech.github.io/test-runner/3946//#testresult/be4de52a45299c5e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697256437182,"stop":1697256497711,"duration":60529}},{"uid":"86db4f8211d8aa80","reportUrl":"https://novasamatech.github.io/test-runner/3945//#testresult/86db4f8211d8aa80","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697242200175,"stop":1697242440523,"duration":240348}},{"uid":"a9751a8e53bd58f0","reportUrl":"https://novasamatech.github.io/test-runner/3944//#testresult/a9751a8e53bd58f0","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1697227572709,"stop":1697227633135,"duration":60426}}]},"tags":[]},"source":"cc0c5335febdbe4.json","parameterValues":["{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"]}