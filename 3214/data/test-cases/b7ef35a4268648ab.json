{"uid":"b7ef35a4268648ab","name":"testBalancesLoading[Getting balance for Shiden network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Shiden network]","historyId":"84af82094a7c072cbe61019f6a955f2c","time":{"start":1686860853737,"stop":1686860967733,"duration":113996},"status":"broken","statusMessage":"Socket state: Connected(url=wss://rpc.shiden.astar.network, toResendOnReconnect=[Sendable(788210195)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=OZXMOgOnqUN3AmFI, initiatorId=788210195)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://rpc.shiden.astar.network, toResendOnReconnect=[Sendable(788210195)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=OZXMOgOnqUN3AmFI, initiatorId=788210195)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:32)\n\tat kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Shiden network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(173)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":241,"unknown":0,"total":245},"items":[{"uid":"48e904b1b555c38d","reportUrl":"https://novasamatech.github.io/test-runner/3212//#testresult/48e904b1b555c38d","status":"passed","time":{"start":1686831545356,"stop":1686831630206,"duration":84850}},{"uid":"11142bfa197f846e","reportUrl":"https://novasamatech.github.io/test-runner/3210//#testresult/11142bfa197f846e","status":"passed","time":{"start":1686802833896,"stop":1686802904131,"duration":70235}},{"uid":"e677f460c428dc5a","reportUrl":"https://novasamatech.github.io/test-runner/3209//#testresult/e677f460c428dc5a","status":"passed","time":{"start":1686788838240,"stop":1686788874358,"duration":36118}},{"uid":"33327144f2a892f3","reportUrl":"https://novasamatech.github.io/test-runner/3208//#testresult/33327144f2a892f3","status":"passed","time":{"start":1686773734749,"stop":1686773782522,"duration":47773}},{"uid":"18e04963feaa3031","reportUrl":"https://novasamatech.github.io/test-runner/3207//#testresult/18e04963feaa3031","status":"passed","time":{"start":1686759409425,"stop":1686759478143,"duration":68718}},{"uid":"f704089c4cb8844f","reportUrl":"https://novasamatech.github.io/test-runner/3206//#testresult/f704089c4cb8844f","status":"passed","time":{"start":1686745208005,"stop":1686745243089,"duration":35084}},{"uid":"fa9a32b97df0ebe6","reportUrl":"https://novasamatech.github.io/test-runner/3205//#testresult/fa9a32b97df0ebe6","status":"passed","time":{"start":1686730840429,"stop":1686730932787,"duration":92358}},{"uid":"cd0ba6dc1e39e0ae","reportUrl":"https://novasamatech.github.io/test-runner/3204//#testresult/cd0ba6dc1e39e0ae","status":"passed","time":{"start":1686716253512,"stop":1686716336054,"duration":82542}},{"uid":"4a3b6245610e39d6","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/4a3b6245610e39d6","status":"passed","time":{"start":1686702582319,"stop":1686702655152,"duration":72833}},{"uid":"54fc7a89460814fc","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/54fc7a89460814fc","status":"passed","time":{"start":1686687845215,"stop":1686687937900,"duration":92685}},{"uid":"a9580a6493cf7de8","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/a9580a6493cf7de8","status":"passed","time":{"start":1686673047724,"stop":1686673159620,"duration":111896}},{"uid":"558468d5db63f3d4","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/558468d5db63f3d4","status":"passed","time":{"start":1686658798245,"stop":1686658849645,"duration":51400}},{"uid":"59fd8fbf523d8497","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/59fd8fbf523d8497","status":"passed","time":{"start":1686644612837,"stop":1686644655171,"duration":42334}},{"uid":"f60ad362b465eaec","reportUrl":"https://novasamatech.github.io/test-runner/3198//#testresult/f60ad362b465eaec","status":"passed","time":{"start":1686630026754,"stop":1686630120121,"duration":93367}},{"uid":"185bf2fc7a03d070","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/185bf2fc7a03d070","status":"passed","time":{"start":1686601147242,"stop":1686601245918,"duration":98676}},{"uid":"1bed2ebf578345ea","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/1bed2ebf578345ea","status":"passed","time":{"start":1686586692501,"stop":1686586786767,"duration":94266}},{"uid":"bb1bdaef01f04d04","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/bb1bdaef01f04d04","status":"passed","time":{"start":1686572499530,"stop":1686572589325,"duration":89795}},{"uid":"5a34b74c8c240ae1","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/5a34b74c8c240ae1","status":"passed","time":{"start":1686557793668,"stop":1686557874231,"duration":80563}},{"uid":"aa8acfe62cbe4029","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/aa8acfe62cbe4029","status":"passed","time":{"start":1686543395523,"stop":1686543517620,"duration":122097}},{"uid":"b19a0871ea4cfae8","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/b19a0871ea4cfae8","status":"passed","time":{"start":1686529660597,"stop":1686529714179,"duration":53582}}]},"tags":[]},"source":"b7ef35a4268648ab.json","parameterValues":[]}