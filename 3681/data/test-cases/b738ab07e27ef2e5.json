{"uid":"b738ab07e27ef2e5","name":"test_precision[Test for Kylin]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"438becf598afc94e5c48c4175d4e81e8","time":{"start":1693468991475,"stop":1693468992616,"duration":1141},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f4598947e50>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4598944d30>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f4598947e50>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4598944d30>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"bf91974cf9088f80","name":"stdout","source":"bf91974cf9088f80.txt","type":"text/plain","size":1713}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az1025-742"},{"name":"thread","value":"2022-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f4598944d30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"76235da5a6dae709","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693468975335,"stop":1693468976437,"duration":1102}},{"uid":"b727b2f24f8d8023","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693468959288,"stop":1693468960142,"duration":854}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":42,"unknown":0,"total":43},"items":[{"uid":"f280edb4b2084d3c","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/f280edb4b2084d3c","status":"passed","time":{"start":1693454573080,"stop":1693454575656,"duration":2576}},{"uid":"6dec7e6b4b64560d","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/6dec7e6b4b64560d","status":"passed","time":{"start":1693440227237,"stop":1693440229188,"duration":1951}},{"uid":"6ec838d99063ae05","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/6ec838d99063ae05","status":"passed","time":{"start":1693425794503,"stop":1693425798804,"duration":4301}},{"uid":"1f02d00d876524c2","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/1f02d00d876524c2","status":"passed","time":{"start":1693411350829,"stop":1693411353344,"duration":2515}},{"uid":"d9908ec3473ce1ef","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/d9908ec3473ce1ef","status":"passed","time":{"start":1693396986494,"stop":1693396993710,"duration":7216}},{"uid":"f9558323558d9d73","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/f9558323558d9d73","status":"passed","time":{"start":1693382567241,"stop":1693382569907,"duration":2666}},{"uid":"a9e3c2646669c3ae","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/a9e3c2646669c3ae","status":"passed","time":{"start":1693368145955,"stop":1693368148423,"duration":2468}},{"uid":"eb8ee21cf33f8816","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/eb8ee21cf33f8816","status":"passed","time":{"start":1693353826015,"stop":1693353830574,"duration":4559}},{"uid":"af90b7af6ca637e1","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/af90b7af6ca637e1","status":"passed","time":{"start":1693339369693,"stop":1693339372703,"duration":3010}},{"uid":"2947935adbe3e550","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/2947935adbe3e550","status":"passed","time":{"start":1693324974387,"stop":1693324977106,"duration":2719}},{"uid":"8b0d0952dad146f5","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/8b0d0952dad146f5","status":"passed","time":{"start":1693310553987,"stop":1693310556338,"duration":2351}},{"uid":"2e01c9df209ab952","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/2e01c9df209ab952","status":"passed","time":{"start":1693296141170,"stop":1693296145006,"duration":3836}},{"uid":"919fcc64b50860ae","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/919fcc64b50860ae","status":"passed","time":{"start":1693281779381,"stop":1693281783322,"duration":3941}},{"uid":"7b0e66371c8272b1","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/7b0e66371c8272b1","status":"passed","time":{"start":1693267435328,"stop":1693267441947,"duration":6619}},{"uid":"9455baf7dfcaba99","reportUrl":"https://novasamatech.github.io/test-runner/3666//#testresult/9455baf7dfcaba99","status":"passed","time":{"start":1693252940970,"stop":1693252942713,"duration":1743}},{"uid":"ca0c95d1b2ad6678","reportUrl":"https://novasamatech.github.io/test-runner/3665//#testresult/ca0c95d1b2ad6678","status":"passed","time":{"start":1693238541682,"stop":1693238545600,"duration":3918}},{"uid":"4f42f0c40475b754","reportUrl":"https://novasamatech.github.io/test-runner/3664//#testresult/4f42f0c40475b754","status":"passed","time":{"start":1693224182928,"stop":1693224185743,"duration":2815}},{"uid":"b1edbba27c5b9029","reportUrl":"https://novasamatech.github.io/test-runner/3663//#testresult/b1edbba27c5b9029","status":"passed","time":{"start":1693209760162,"stop":1693209766213,"duration":6051}},{"uid":"b502dc7e1763f19e","reportUrl":"https://novasamatech.github.io/test-runner/3662//#testresult/b502dc7e1763f19e","status":"passed","time":{"start":1693195362478,"stop":1693195367325,"duration":4847}},{"uid":"4b7ef3001ba7ba48","reportUrl":"https://novasamatech.github.io/test-runner/3661//#testresult/4b7ef3001ba7ba48","status":"passed","time":{"start":1693181054559,"stop":1693181058273,"duration":3714}}]},"tags":[]},"source":"b738ab07e27ef2e5.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f4598944d30>"]}