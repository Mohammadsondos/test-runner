{"uid":"b09742421231388b","name":"test_can_create_connection[Test for Bifrost Kusama, url: wss://bifrost-parachain.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"da0d60f78cc9d831d0acf2220df35d10","time":{"start":1712563307510,"stop":1712563307510,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '21', 'x-kong-proxy-latency': '79', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Bifrost Kusama, url: wss://bifrost-parachain.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '21', 'x-kong-proxy-latency': '79', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1712563292635,"stop":1712563296063,"duration":3428},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 46, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 69, in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 353, in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 323, in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 388, in recv\n    opcode, data = self.recv_data()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 416, in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 437, in recv_data_frame\n    frame = self.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 478, in recv_frame\n    return self.frame_buffer.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 363, in recv_frame\n    self.recv_header()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 319, in recv_header\n    header = self.recv_strict(2)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 398, in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 563, in _recv\n    return recv(self.sock, bufsize)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 129, in recv\n    raise WebSocketConnectionClosedException(\"Connection to remote host was lost.\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1712563301206,"stop":1712563302447,"duration":1241},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:42 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '16', 'x-kong-proxy-latency': '1106', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1712563307510,"stop":1712563307793,"duration":283},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '21', 'x-kong-proxy-latency': '79', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '21', 'x-kong-proxy-latency': '79', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Bifrost Kusama, url: wss://bifrost-parachain.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '21', 'x-kong-proxy-latency': '79', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"91721c33b401f82f","name":"stdout","source":"91721c33b401f82f.txt","type":"text/plain","size":948}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az738-60"},{"name":"thread","value":"2072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://bifrost-parachain.api.onfinality.io/public-ws', 'name': 'Bifrost Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e7a4dd276e1b608e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:42 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '16', 'x-kong-proxy-latency': '1106', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","time":{"start":1712563301206,"stop":1712563301206,"duration":0}},{"uid":"11b1cdbfb9b2cd30","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1712563292634,"stop":1712563292634,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":1096,"unknown":0,"total":1101},"items":[{"uid":"edf3f727d7a3a24e","reportUrl":"https://novasamatech.github.io/test-runner/5025//#testresult/edf3f727d7a3a24e","status":"passed","time":{"start":1712548886068,"stop":1712548886069,"duration":1}},{"uid":"9fb9704ed00e6f8b","reportUrl":"https://novasamatech.github.io/test-runner/5024//#testresult/9fb9704ed00e6f8b","status":"passed","time":{"start":1712534540120,"stop":1712534540120,"duration":0}},{"uid":"5674430eacb6e88e","reportUrl":"https://novasamatech.github.io/test-runner/5023//#testresult/5674430eacb6e88e","status":"passed","time":{"start":1712520089559,"stop":1712520089559,"duration":0}},{"uid":"73095a8fc7c735e2","reportUrl":"https://novasamatech.github.io/test-runner/5022//#testresult/73095a8fc7c735e2","status":"passed","time":{"start":1712505690421,"stop":1712505690421,"duration":0}},{"uid":"54c89d56b92be4d6","reportUrl":"https://novasamatech.github.io/test-runner/5021//#testresult/54c89d56b92be4d6","status":"passed","time":{"start":1712491286418,"stop":1712491286418,"duration":0}},{"uid":"fbcdaa909b172499","reportUrl":"https://novasamatech.github.io/test-runner/5020//#testresult/fbcdaa909b172499","status":"passed","time":{"start":1712476890563,"stop":1712476890563,"duration":0}},{"uid":"b7cd6d954e8fa1a6","reportUrl":"https://novasamatech.github.io/test-runner/5019//#testresult/b7cd6d954e8fa1a6","status":"passed","time":{"start":1712462500135,"stop":1712462500135,"duration":0}},{"uid":"7d845fc12461f30b","reportUrl":"https://novasamatech.github.io/test-runner/5018//#testresult/7d845fc12461f30b","status":"passed","time":{"start":1712448134552,"stop":1712448134552,"duration":0}},{"uid":"1d61496b4e56a1ef","reportUrl":"https://novasamatech.github.io/test-runner/5017//#testresult/1d61496b4e56a1ef","status":"passed","time":{"start":1712433678997,"stop":1712433678997,"duration":0}},{"uid":"a4c1b9d23c53a339","reportUrl":"https://novasamatech.github.io/test-runner/5016//#testresult/a4c1b9d23c53a339","status":"passed","time":{"start":1712419292742,"stop":1712419292743,"duration":1}},{"uid":"41f0c4d0d98abbdc","reportUrl":"https://novasamatech.github.io/test-runner/5015//#testresult/41f0c4d0d98abbdc","status":"passed","time":{"start":1712404907135,"stop":1712404907135,"duration":0}},{"uid":"968ad8df8aa5a4fb","reportUrl":"https://novasamatech.github.io/test-runner/5014//#testresult/968ad8df8aa5a4fb","status":"passed","time":{"start":1712390501990,"stop":1712390501990,"duration":0}},{"uid":"2953dfc4ae321c62","reportUrl":"https://novasamatech.github.io/test-runner/5013//#testresult/2953dfc4ae321c62","status":"passed","time":{"start":1712376086042,"stop":1712376086042,"duration":0}},{"uid":"5363a6edf29f4da","reportUrl":"https://novasamatech.github.io/test-runner/5012//#testresult/5363a6edf29f4da","status":"passed","time":{"start":1712361741557,"stop":1712361741557,"duration":0}},{"uid":"be5ba0e7662296f3","reportUrl":"https://novasamatech.github.io/test-runner/5011//#testresult/be5ba0e7662296f3","status":"passed","time":{"start":1712347290962,"stop":1712347290962,"duration":0}},{"uid":"fabbb9860572e016","reportUrl":"https://novasamatech.github.io/test-runner/5010//#testresult/fabbb9860572e016","status":"passed","time":{"start":1712332890199,"stop":1712332890199,"duration":0}},{"uid":"24c1aed28aa1e3cd","reportUrl":"https://novasamatech.github.io/test-runner/5009//#testresult/24c1aed28aa1e3cd","status":"passed","time":{"start":1712318496032,"stop":1712318496032,"duration":0}},{"uid":"4d7c989af48ed200","reportUrl":"https://novasamatech.github.io/test-runner/5007//#testresult/4d7c989af48ed200","status":"passed","time":{"start":1712289691151,"stop":1712289691152,"duration":1}},{"uid":"cd853ba7534eec2e","reportUrl":"https://novasamatech.github.io/test-runner/5006//#testresult/cd853ba7534eec2e","status":"passed","time":{"start":1712275330782,"stop":1712275330783,"duration":1}},{"uid":"844a12a47c57af4f","reportUrl":"https://novasamatech.github.io/test-runner/5005//#testresult/844a12a47c57af4f","status":"passed","time":{"start":1712260885995,"stop":1712260885996,"duration":1}}]},"tags":[]},"source":"b09742421231388b.json","parameterValues":["{'url': 'wss://bifrost-parachain.api.onfinality.io/public-ws', 'name': 'Bifrost Kusama'}"]}