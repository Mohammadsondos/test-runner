{"uid":"6d062ba8d0af0307","name":"test_can_create_connection[Test for Acala, url: wss://acala-polkadot.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"bfaefea28dd6d03fd9cd4b554d20faef","time":{"start":1712563326588,"stop":1712563326588,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:06 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '13', 'x-kong-proxy-latency': '142', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Acala, url: wss://acala-polkadot.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:06 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '13', 'x-kong-proxy-latency': '142', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1712563315465,"stop":1712563315635,"duration":170},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '1', 'x-kong-proxy-latency': '7', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1712563320699,"stop":1712563321528,"duration":829},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:01 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '61', 'x-kong-proxy-latency': '179', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1712563326589,"stop":1712563326977,"duration":388},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:06 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '13', 'x-kong-proxy-latency': '142', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:06 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '13', 'x-kong-proxy-latency': '142', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Acala, url: wss://acala-polkadot.api.onfinality.io/public-ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:06 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '13', 'x-kong-proxy-latency': '142', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"376cbee51ea91af9","name":"stdout","source":"376cbee51ea91af9.txt","type":"text/plain","size":1410}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az738-60"},{"name":"thread","value":"2069-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://acala-polkadot.api.onfinality.io/public-ws', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"939714302d157955","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:02:01 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '61', 'x-kong-proxy-latency': '179', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","time":{"start":1712563320699,"stop":1712563320699,"duration":0}},{"uid":"4aedf2ac2ade85af","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 08 Apr 2024 08:01:55 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '58', 'x-continent': 'NA', 'x-cluster': 'dc', 'x-kong-upstream-latency': '1', 'x-kong-proxy-latency': '7', 'via': 'kong/2.5.2'} -+-+- b'An invalid response was received from the upstream server\\n'","time":{"start":1712563315464,"stop":1712563315464,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":458,"unknown":0,"total":460},"items":[{"uid":"993e764e7371061b","reportUrl":"https://novasamatech.github.io/test-runner/5025//#testresult/993e764e7371061b","status":"passed","time":{"start":1712548912546,"stop":1712548912546,"duration":0}},{"uid":"8121304e22d1ead8","reportUrl":"https://novasamatech.github.io/test-runner/5024//#testresult/8121304e22d1ead8","status":"passed","time":{"start":1712534562813,"stop":1712534562813,"duration":0}},{"uid":"ef0fe4d2391c59d7","reportUrl":"https://novasamatech.github.io/test-runner/5023//#testresult/ef0fe4d2391c59d7","status":"passed","time":{"start":1712520118741,"stop":1712520118741,"duration":0}},{"uid":"b0d917d5032164f3","reportUrl":"https://novasamatech.github.io/test-runner/5022//#testresult/b0d917d5032164f3","status":"passed","time":{"start":1712505715128,"stop":1712505715128,"duration":0}},{"uid":"c4015b989f2ceb71","reportUrl":"https://novasamatech.github.io/test-runner/5021//#testresult/c4015b989f2ceb71","status":"passed","time":{"start":1712491314809,"stop":1712491314809,"duration":0}},{"uid":"743da46609de9626","reportUrl":"https://novasamatech.github.io/test-runner/5020//#testresult/743da46609de9626","status":"passed","time":{"start":1712476908088,"stop":1712476908089,"duration":1}},{"uid":"9697960ccf48c717","reportUrl":"https://novasamatech.github.io/test-runner/5019//#testresult/9697960ccf48c717","status":"passed","time":{"start":1712462530350,"stop":1712462530350,"duration":0}},{"uid":"6ef230fad5477ab","reportUrl":"https://novasamatech.github.io/test-runner/5018//#testresult/6ef230fad5477ab","status":"passed","time":{"start":1712448157643,"stop":1712448157644,"duration":1}},{"uid":"e1d578ef039d4f0c","reportUrl":"https://novasamatech.github.io/test-runner/5017//#testresult/e1d578ef039d4f0c","status":"passed","time":{"start":1712433700430,"stop":1712433700430,"duration":0}},{"uid":"aecb53247497283a","reportUrl":"https://novasamatech.github.io/test-runner/5016//#testresult/aecb53247497283a","status":"passed","time":{"start":1712419317862,"stop":1712419317862,"duration":0}},{"uid":"743ed8097d3c3c46","reportUrl":"https://novasamatech.github.io/test-runner/5015//#testresult/743ed8097d3c3c46","status":"passed","time":{"start":1712404925359,"stop":1712404925359,"duration":0}},{"uid":"204b890a853d9cb1","reportUrl":"https://novasamatech.github.io/test-runner/5014//#testresult/204b890a853d9cb1","status":"passed","time":{"start":1712390522193,"stop":1712390522193,"duration":0}},{"uid":"f36d9fe52781d604","reportUrl":"https://novasamatech.github.io/test-runner/5013//#testresult/f36d9fe52781d604","status":"passed","time":{"start":1712376108181,"stop":1712376108181,"duration":0}},{"uid":"51c73a3e9fd549c4","reportUrl":"https://novasamatech.github.io/test-runner/5012//#testresult/51c73a3e9fd549c4","status":"passed","time":{"start":1712361765522,"stop":1712361765522,"duration":0}},{"uid":"4904a20995c6638b","reportUrl":"https://novasamatech.github.io/test-runner/5011//#testresult/4904a20995c6638b","status":"passed","time":{"start":1712347316227,"stop":1712347316228,"duration":1}},{"uid":"5d9a088c27e0c7f6","reportUrl":"https://novasamatech.github.io/test-runner/5010//#testresult/5d9a088c27e0c7f6","status":"passed","time":{"start":1712332913497,"stop":1712332913497,"duration":0}},{"uid":"85ca0418c8aa51f0","reportUrl":"https://novasamatech.github.io/test-runner/5009//#testresult/85ca0418c8aa51f0","status":"passed","time":{"start":1712318530755,"stop":1712318530756,"duration":1}},{"uid":"2ef04117a23f3287","reportUrl":"https://novasamatech.github.io/test-runner/5007//#testresult/2ef04117a23f3287","status":"passed","time":{"start":1712289713666,"stop":1712289713667,"duration":1}},{"uid":"c6c00243a9b49341","reportUrl":"https://novasamatech.github.io/test-runner/5006//#testresult/c6c00243a9b49341","status":"passed","time":{"start":1712275355875,"stop":1712275355875,"duration":0}},{"uid":"de37e6485caecf3d","reportUrl":"https://novasamatech.github.io/test-runner/5005//#testresult/de37e6485caecf3d","status":"passed","time":{"start":1712260910184,"stop":1712260910184,"duration":0}}]},"tags":[]},"source":"6d062ba8d0af0307.json","parameterValues":["{'url': 'wss://acala-polkadot.api.onfinality.io/public-ws', 'name': 'Acala'}"]}