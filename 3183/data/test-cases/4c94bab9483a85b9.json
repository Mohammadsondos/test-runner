{"uid":"4c94bab9483a85b9","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1686413101545,"stop":1686413102025,"duration":480},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:05:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:05:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:05:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:05:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"35a3bd047bef3efe","name":"stdout","source":"35a3bd047bef3efe.txt","type":"text/plain","size":1101}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az176-823"},{"name":"thread","value":"1906-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"97bc92022d3d854d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:04:46 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686413085973,"stop":1686413086455,"duration":482}},{"uid":"4fd5a145752bb114","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:04:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686413070075,"stop":1686413070816,"duration":741}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":213,"unknown":0,"total":224},"items":[{"uid":"60933e3cd8fb22c","reportUrl":"https://novasamatech.github.io/test-runner/3182//#testresult/60933e3cd8fb22c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 12:06:08 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686398767648,"stop":1686398768130,"duration":482}},{"uid":"c001f9b356a3f32c","reportUrl":"https://novasamatech.github.io/test-runner/3181//#testresult/c001f9b356a3f32c","status":"passed","time":{"start":1686384242313,"stop":1686384242916,"duration":603}},{"uid":"b28d336e538a62fe","reportUrl":"https://novasamatech.github.io/test-runner/3180//#testresult/b28d336e538a62fe","status":"passed","time":{"start":1686369851816,"stop":1686369852234,"duration":418}},{"uid":"14f11dcf40b0b674","reportUrl":"https://novasamatech.github.io/test-runner/3179//#testresult/14f11dcf40b0b674","status":"passed","time":{"start":1686355991879,"stop":1686355992327,"duration":448}},{"uid":"3ed6845063055ec4","reportUrl":"https://novasamatech.github.io/test-runner/3178//#testresult/3ed6845063055ec4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 09 Jun 2023 20:04:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686341071390,"stop":1686341071864,"duration":474}},{"uid":"748530ef13bbe1fb","reportUrl":"https://novasamatech.github.io/test-runner/3177//#testresult/748530ef13bbe1fb","status":"passed","time":{"start":1686326644101,"stop":1686326644660,"duration":559}},{"uid":"5a4743cce385a570","reportUrl":"https://novasamatech.github.io/test-runner/3176//#testresult/5a4743cce385a570","status":"passed","time":{"start":1686312305271,"stop":1686312306070,"duration":799}},{"uid":"fc0c34b4eda7bb16","reportUrl":"https://novasamatech.github.io/test-runner/3175//#testresult/fc0c34b4eda7bb16","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 09 Jun 2023 08:05:04 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686297904594,"stop":1686297904974,"duration":380}},{"uid":"3d286421cb5a3678","reportUrl":"https://novasamatech.github.io/test-runner/3174//#testresult/3d286421cb5a3678","status":"passed","time":{"start":1686283452411,"stop":1686283452898,"duration":487}},{"uid":"baa5d59c0911e149","reportUrl":"https://novasamatech.github.io/test-runner/3173//#testresult/baa5d59c0911e149","status":"passed","time":{"start":1686269707188,"stop":1686269707591,"duration":403}},{"uid":"9d233746689d122f","reportUrl":"https://novasamatech.github.io/test-runner/3172//#testresult/9d233746689d122f","status":"passed","time":{"start":1686254661008,"stop":1686254661517,"duration":509}},{"uid":"6d53f807bb492653","reportUrl":"https://novasamatech.github.io/test-runner/3171//#testresult/6d53f807bb492653","status":"passed","time":{"start":1686240268180,"stop":1686240268812,"duration":632}},{"uid":"aa211b737d33a66b","reportUrl":"https://novasamatech.github.io/test-runner/3170//#testresult/aa211b737d33a66b","status":"passed","time":{"start":1686225906456,"stop":1686225907130,"duration":674}},{"uid":"333997818713464d","reportUrl":"https://novasamatech.github.io/test-runner/3169//#testresult/333997818713464d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 08 Jun 2023 08:04:43 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686211483488,"stop":1686211483776,"duration":288}},{"uid":"e8dd174d0bc05abd","reportUrl":"https://novasamatech.github.io/test-runner/3168//#testresult/e8dd174d0bc05abd","status":"passed","time":{"start":1686197059700,"stop":1686197060229,"duration":529}},{"uid":"8dbbb2f19da9644","reportUrl":"https://novasamatech.github.io/test-runner/3167//#testresult/8dbbb2f19da9644","status":"passed","time":{"start":1686183258626,"stop":1686183259558,"duration":932}},{"uid":"597116de2e9163f8","reportUrl":"https://novasamatech.github.io/test-runner/3166//#testresult/597116de2e9163f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 07 Jun 2023 20:04:43 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686168282785,"stop":1686168283280,"duration":495}},{"uid":"38b20fc261278d86","reportUrl":"https://novasamatech.github.io/test-runner/3165//#testresult/38b20fc261278d86","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 07 Jun 2023 16:04:56 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686153896369,"stop":1686153896800,"duration":431}},{"uid":"f9318a1c9302dd30","reportUrl":"https://novasamatech.github.io/test-runner/3164//#testresult/f9318a1c9302dd30","status":"passed","time":{"start":1686139506064,"stop":1686139506584,"duration":520}},{"uid":"49b6ab34c1acb3e1","reportUrl":"https://novasamatech.github.io/test-runner/3163//#testresult/49b6ab34c1acb3e1","status":"passed","time":{"start":1686125076886,"stop":1686125077517,"duration":631}}]},"tags":[]},"source":"4c94bab9483a85b9.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}