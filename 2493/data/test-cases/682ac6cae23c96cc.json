{"uid":"682ac6cae23c96cc","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc-0.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3d8f2ce0558c9bfde019f2a96edd941d","time":{"start":1676865872800,"stop":1676865873336,"duration":536},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c8ba4140c628c84b","name":"stdout","source":"c8ba4140c628c84b.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az471-841"},{"name":"thread","value":"1686-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"455f05ac7d725b15","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1676865862062,"stop":1676865862619,"duration":557}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":66,"skipped":0,"passed":669,"unknown":0,"total":735},"items":[{"uid":"36dc41a4cdfe0d8e","reportUrl":"https://nova-wallet.github.io/test-runner/2492//#testresult/36dc41a4cdfe0d8e","status":"passed","time":{"start":1676852139466,"stop":1676852139954,"duration":488}},{"uid":"8b908f6f1988bbc7","reportUrl":"https://nova-wallet.github.io/test-runner/2491//#testresult/8b908f6f1988bbc7","status":"passed","time":{"start":1676837042251,"stop":1676837042986,"duration":735}},{"uid":"2450b92e28b0d5d7","reportUrl":"https://nova-wallet.github.io/test-runner/2490//#testresult/2450b92e28b0d5d7","status":"passed","time":{"start":1676822674660,"stop":1676822675378,"duration":718}},{"uid":"95bd3025705eb87c","reportUrl":"https://nova-wallet.github.io/test-runner/2489//#testresult/95bd3025705eb87c","status":"passed","time":{"start":1676808296518,"stop":1676808297209,"duration":691}},{"uid":"4257e0acc96299d1","reportUrl":"https://nova-wallet.github.io/test-runner/2488//#testresult/4257e0acc96299d1","status":"passed","time":{"start":1676793855946,"stop":1676793856701,"duration":755}},{"uid":"70e9bd8f81341d2b","reportUrl":"https://nova-wallet.github.io/test-runner/2487//#testresult/70e9bd8f81341d2b","status":"passed","time":{"start":1676779451613,"stop":1676779452348,"duration":735}},{"uid":"8ea873eda495d874","reportUrl":"https://nova-wallet.github.io/test-runner/2485//#testresult/8ea873eda495d874","status":"passed","time":{"start":1676750625786,"stop":1676750626305,"duration":519}},{"uid":"b9b5230a035f2878","reportUrl":"https://nova-wallet.github.io/test-runner/2484//#testresult/b9b5230a035f2878","status":"passed","time":{"start":1676736265913,"stop":1676736266625,"duration":712}},{"uid":"8526f67f17f44da0","reportUrl":"https://nova-wallet.github.io/test-runner/2483//#testresult/8526f67f17f44da0","status":"passed","time":{"start":1676721863036,"stop":1676721863523,"duration":487}},{"uid":"920659b1b1437951","reportUrl":"https://nova-wallet.github.io/test-runner/2482//#testresult/920659b1b1437951","status":"passed","time":{"start":1676707460204,"stop":1676707460824,"duration":620}},{"uid":"e2b444bcb1e51d8","reportUrl":"https://nova-wallet.github.io/test-runner/2480//#testresult/e2b444bcb1e51d8","status":"passed","time":{"start":1676679252418,"stop":1676679253167,"duration":749}},{"uid":"e306ebecea74be8e","reportUrl":"https://nova-wallet.github.io/test-runner/2479//#testresult/e306ebecea74be8e","status":"passed","time":{"start":1676664220576,"stop":1676664221083,"duration":507}},{"uid":"9dcd3e4686b2db9b","reportUrl":"https://nova-wallet.github.io/test-runner/2478//#testresult/9dcd3e4686b2db9b","status":"passed","time":{"start":1676649867289,"stop":1676649867996,"duration":707}},{"uid":"dc5cad69af42246c","reportUrl":"https://nova-wallet.github.io/test-runner/2477//#testresult/dc5cad69af42246c","status":"passed","time":{"start":1676635532777,"stop":1676635533424,"duration":647}},{"uid":"c339bf6c895bfbd2","reportUrl":"https://nova-wallet.github.io/test-runner/2476//#testresult/c339bf6c895bfbd2","status":"passed","time":{"start":1676621054296,"stop":1676621054795,"duration":499}},{"uid":"f672d4903470fcd9","reportUrl":"https://nova-wallet.github.io/test-runner/2475//#testresult/f672d4903470fcd9","status":"passed","time":{"start":1676606642580,"stop":1676606643064,"duration":484}},{"uid":"8c5248a6de5f412a","reportUrl":"https://nova-wallet.github.io/test-runner/2474//#testresult/8c5248a6de5f412a","status":"passed","time":{"start":1676592916533,"stop":1676592917041,"duration":508}},{"uid":"6f6595caf2752db1","reportUrl":"https://nova-wallet.github.io/test-runner/2473//#testresult/6f6595caf2752db1","status":"passed","time":{"start":1676577820488,"stop":1676577820970,"duration":482}},{"uid":"8ecec7bc35137796","reportUrl":"https://nova-wallet.github.io/test-runner/2472//#testresult/8ecec7bc35137796","status":"passed","time":{"start":1676563437638,"stop":1676563438151,"duration":513}},{"uid":"5f73668cdd186ad1","reportUrl":"https://nova-wallet.github.io/test-runner/2471//#testresult/5f73668cdd186ad1","status":"passed","time":{"start":1676549122475,"stop":1676549123185,"duration":710}}]},"tags":[]},"source":"682ac6cae23c96cc.json","parameterValues":["{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"]}