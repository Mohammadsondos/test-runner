{"uid":"4eb148492753cba","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1697716981130,"stop":1697716982111,"duration":981},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f2ba660a380>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2ba66eead0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f2ba660a380>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2ba66eead0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"206b6da15c86e83d","name":"stdout","source":"206b6da15c86e83d.txt","type":"text/plain","size":1036}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az349-37"},{"name":"thread","value":"2114-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f2ba66eead0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"992f5a637ce35536","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697716965060,"stop":1697716966091,"duration":1031}},{"uid":"4d0b2b6ced3891a4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697716949142,"stop":1697716950033,"duration":891}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":46,"skipped":0,"passed":291,"unknown":0,"total":337},"items":[{"uid":"7c87ce5a6e74df89","reportUrl":"https://novasamatech.github.io/test-runner/3977//#testresult/7c87ce5a6e74df89","status":"passed","time":{"start":1697702556828,"stop":1697702564951,"duration":8123}},{"uid":"3649c0c101805516","reportUrl":"https://novasamatech.github.io/test-runner/3976//#testresult/3649c0c101805516","status":"passed","time":{"start":1697688152884,"stop":1697688158892,"duration":6008}},{"uid":"6f14ba291e6582bd","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/6f14ba291e6582bd","status":"passed","time":{"start":1697673785487,"stop":1697673789926,"duration":4439}},{"uid":"eceadd7aa56d143e","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/eceadd7aa56d143e","status":"passed","time":{"start":1697659338008,"stop":1697659344638,"duration":6630}},{"uid":"81f843db1730e9ff","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/81f843db1730e9ff","status":"passed","time":{"start":1697644951553,"stop":1697644962596,"duration":11043}},{"uid":"1707e7842c174abe","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/1707e7842c174abe","status":"passed","time":{"start":1697630555644,"stop":1697630563868,"duration":8224}},{"uid":"207d5fb8254a5409","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/207d5fb8254a5409","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697616185791,"stop":1697616186687,"duration":896}},{"uid":"8c79f4a84dbc1681","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/8c79f4a84dbc1681","status":"passed","time":{"start":1697601764563,"stop":1697601769210,"duration":4647}},{"uid":"3843aadc6e36afb0","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/3843aadc6e36afb0","status":"passed","time":{"start":1697587410366,"stop":1697587416492,"duration":6126}},{"uid":"1050fcc019eeadc8","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/1050fcc019eeadc8","status":"passed","time":{"start":1697572960054,"stop":1697572966189,"duration":6135}},{"uid":"8462eda204d1e0db","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/8462eda204d1e0db","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697558590045,"stop":1697558591463,"duration":1418}},{"uid":"ef9043d4f6a3413d","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/ef9043d4f6a3413d","status":"passed","time":{"start":1697544170302,"stop":1697544177980,"duration":7678}},{"uid":"844d842fb97a8e2a","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/844d842fb97a8e2a","status":"passed","time":{"start":1697529793478,"stop":1697529798309,"duration":4831}},{"uid":"5f874cca836446d2","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/5f874cca836446d2","status":"passed","time":{"start":1697515354004,"stop":1697515357410,"duration":3406}},{"uid":"ccc1ae8923b5aee1","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/ccc1ae8923b5aee1","status":"passed","time":{"start":1697500987571,"stop":1697500991578,"duration":4007}},{"uid":"42786f3b27788011","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/42786f3b27788011","status":"passed","time":{"start":1697486546103,"stop":1697486549833,"duration":3730}},{"uid":"1ba59c3316102bcd","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/1ba59c3316102bcd","status":"passed","time":{"start":1697472163523,"stop":1697472166719,"duration":3196}},{"uid":"6b326ec25bb91cb8","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/6b326ec25bb91cb8","status":"passed","time":{"start":1697457817005,"stop":1697457822038,"duration":5033}},{"uid":"59c7b56cf4246f24","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/59c7b56cf4246f24","status":"passed","time":{"start":1697443352697,"stop":1697443355906,"duration":3209}},{"uid":"a4ae139472b66b0f","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/a4ae139472b66b0f","status":"passed","time":{"start":1697428951380,"stop":1697428955576,"duration":4196}}]},"tags":[]},"source":"4eb148492753cba.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f2ba66eead0>"]}