{"uid":"4dfba69ecae22d0","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1697716979292,"stop":1697716979822,"duration":530},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fc2dfb4ccd0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fc2dfb4ff10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fc2dfb4ccd0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fc2dfb4ff10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"135b8039d2dd41a1","name":"stdout","source":"135b8039d2dd41a1.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az349-37"},{"name":"thread","value":"2111-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fc2dfb4ff10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8daafa51ecf2c182","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697716963522,"stop":1697716964258,"duration":736}},{"uid":"8f2a333b4452d329","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697716947557,"stop":1697716948484,"duration":927}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":40,"skipped":0,"passed":297,"unknown":0,"total":337},"items":[{"uid":"a2de79d0cddeb00a","reportUrl":"https://novasamatech.github.io/test-runner/3977//#testresult/a2de79d0cddeb00a","status":"passed","time":{"start":1697702557907,"stop":1697702561006,"duration":3099}},{"uid":"89c1486a5edc0bac","reportUrl":"https://novasamatech.github.io/test-runner/3976//#testresult/89c1486a5edc0bac","status":"passed","time":{"start":1697688151577,"stop":1697688154801,"duration":3224}},{"uid":"6e1333560c202b2","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/6e1333560c202b2","status":"passed","time":{"start":1697673783402,"stop":1697673785692,"duration":2290}},{"uid":"bef23c704e9160ad","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/bef23c704e9160ad","status":"passed","time":{"start":1697659343414,"stop":1697659346249,"duration":2835}},{"uid":"4d15f74fdafc3334","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/4d15f74fdafc3334","status":"passed","time":{"start":1697644953466,"stop":1697644956367,"duration":2901}},{"uid":"de58a7ebc84e83cd","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/de58a7ebc84e83cd","status":"passed","time":{"start":1697630562389,"stop":1697630569928,"duration":7539}},{"uid":"f21ebf0657abd986","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/f21ebf0657abd986","status":"passed","time":{"start":1697616145595,"stop":1697616148726,"duration":3131}},{"uid":"eae87c064e177b41","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/eae87c064e177b41","status":"passed","time":{"start":1697601757380,"stop":1697601759756,"duration":2376}},{"uid":"29bc33b7f66e1a56","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/29bc33b7f66e1a56","status":"passed","time":{"start":1697587415241,"stop":1697587419447,"duration":4206}},{"uid":"7afbca6ad8a8fc2","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/7afbca6ad8a8fc2","status":"passed","time":{"start":1697572965570,"stop":1697572969692,"duration":4122}},{"uid":"a888b556788b439c","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/a888b556788b439c","status":"passed","time":{"start":1697558553578,"stop":1697558556762,"duration":3184}},{"uid":"bb31e2ea2068ae5e","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/bb31e2ea2068ae5e","status":"passed","time":{"start":1697544171190,"stop":1697544174622,"duration":3432}},{"uid":"81379976736a6e4b","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/81379976736a6e4b","status":"passed","time":{"start":1697529785082,"stop":1697529788118,"duration":3036}},{"uid":"bee808cf806a13cb","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/bee808cf806a13cb","status":"passed","time":{"start":1697515350821,"stop":1697515353999,"duration":3178}},{"uid":"e319324dcb9fc8bd","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/e319324dcb9fc8bd","status":"passed","time":{"start":1697500985241,"stop":1697500987567,"duration":2326}},{"uid":"f169dbf6e103596e","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/f169dbf6e103596e","status":"passed","time":{"start":1697486542378,"stop":1697486544241,"duration":1863}},{"uid":"410e92ff60a7e3ff","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/410e92ff60a7e3ff","status":"passed","time":{"start":1697472148197,"stop":1697472150470,"duration":2273}},{"uid":"336f9ac5cffbc8a7","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/336f9ac5cffbc8a7","status":"passed","time":{"start":1697457781014,"stop":1697457784526,"duration":3512}},{"uid":"6b2f071815836c7","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/6b2f071815836c7","status":"passed","time":{"start":1697443350899,"stop":1697443352692,"duration":1793}},{"uid":"d6e08e28529c591b","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/d6e08e28529c591b","status":"passed","time":{"start":1697428947726,"stop":1697428950108,"duration":2382}}]},"tags":[]},"source":"4dfba69ecae22d0.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fc2dfb4ff10>"]}