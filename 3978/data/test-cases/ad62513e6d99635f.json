{"uid":"ad62513e6d99635f","name":"test_precision[Test for DAO IPCI]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"33810a4242d025509f0e78a3e06893b8","time":{"start":1697716987116,"stop":1697716988305,"duration":1189},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7ff80f7fa050>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff80f826a10>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7ff80f7fa050>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff80f826a10>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"54bb49ba5d41aa0a","name":"stdout","source":"54bb49ba5d41aa0a.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az395-277"},{"name":"thread","value":"2210-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff80f826a10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2fb25e70c6670744","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697716970824,"stop":1697716972089,"duration":1265}},{"uid":"ab7464809126295b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697716954493,"stop":1697716955736,"duration":1243}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":50,"skipped":0,"passed":288,"unknown":0,"total":338},"items":[{"uid":"d3656e83555f1130","reportUrl":"https://novasamatech.github.io/test-runner/3977//#testresult/d3656e83555f1130","status":"passed","time":{"start":1697702575656,"stop":1697702581207,"duration":5551}},{"uid":"f142ca775320ce88","reportUrl":"https://novasamatech.github.io/test-runner/3976//#testresult/f142ca775320ce88","status":"passed","time":{"start":1697688132680,"stop":1697688136715,"duration":4035}},{"uid":"a361ca7b566bd8ce","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/a361ca7b566bd8ce","status":"passed","time":{"start":1697673797669,"stop":1697673803626,"duration":5957}},{"uid":"11705afa937e3c87","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/11705afa937e3c87","status":"passed","time":{"start":1697659346377,"stop":1697659350938,"duration":4561}},{"uid":"1c1cd7b650f49c84","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/1c1cd7b650f49c84","status":"passed","time":{"start":1697644946077,"stop":1697644954119,"duration":8042}},{"uid":"39a77e124ee001cc","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/39a77e124ee001cc","status":"passed","time":{"start":1697630536852,"stop":1697630540308,"duration":3456}},{"uid":"7d3951ec77bd6b56","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/7d3951ec77bd6b56","status":"passed","time":{"start":1697616175396,"stop":1697616180793,"duration":5397}},{"uid":"df31c55b2aa3a1dc","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/df31c55b2aa3a1dc","status":"passed","time":{"start":1697601770758,"stop":1697601777479,"duration":6721}},{"uid":"4eef5c6dacef3ba3","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/4eef5c6dacef3ba3","status":"passed","time":{"start":1697587384603,"stop":1697587389224,"duration":4621}},{"uid":"9d357aa201bb6f3c","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/9d357aa201bb6f3c","status":"passed","time":{"start":1697572962064,"stop":1697572971344,"duration":9280}},{"uid":"8ceb96627b3617a6","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/8ceb96627b3617a6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697558575259,"stop":1697558576048,"duration":789}},{"uid":"d7ba5dc070773379","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/d7ba5dc070773379","status":"passed","time":{"start":1697544137566,"stop":1697544141937,"duration":4371}},{"uid":"331b956ed829e52a","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/331b956ed829e52a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697529788349,"stop":1697529789317,"duration":968}},{"uid":"9b6307583f9c6b2f","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/9b6307583f9c6b2f","status":"passed","time":{"start":1697515352863,"stop":1697515356609,"duration":3746}},{"uid":"364234e19f247d8f","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/364234e19f247d8f","status":"passed","time":{"start":1697500997031,"stop":1697500999928,"duration":2897}},{"uid":"83ff5cfe188b4e91","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/83ff5cfe188b4e91","status":"passed","time":{"start":1697486563784,"stop":1697486567830,"duration":4046}},{"uid":"e7b372bbab6ca782","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/e7b372bbab6ca782","status":"passed","time":{"start":1697472150994,"stop":1697472155036,"duration":4042}},{"uid":"85c750d526f289a7","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/85c750d526f289a7","status":"passed","time":{"start":1697457787050,"stop":1697457790904,"duration":3854}},{"uid":"7f310c5172947974","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/7f310c5172947974","status":"passed","time":{"start":1697443348293,"stop":1697443351529,"duration":3236}},{"uid":"debd42645fffe667","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/debd42645fffe667","status":"passed","time":{"start":1697428941767,"stop":1697428945453,"duration":3686}}]},"tags":[]},"source":"ad62513e6d99635f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff80f826a10>"]}