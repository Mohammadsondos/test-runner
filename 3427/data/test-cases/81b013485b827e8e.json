{"uid":"81b013485b827e8e","name":"test_can_create_connection[Test for Dora Factory (PAUSED), url: wss://kusama.dorafactory.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6fae2adb1d5f7addf05621ce5972b67f","time":{"start":1689926698068,"stop":1689926698877,"duration":809},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:58 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; AWSALBTGCORS=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:58 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; AWSALBTGCORS=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:58 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; AWSALBTGCORS=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:58 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; AWSALBTGCORS=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4956e1a0c4aa81f1","name":"stdout","source":"4956e1a0c4aa81f1.txt","type":"text/plain","size":2967}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az206-544"},{"name":"thread","value":"1930-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2eea05f9f3fb4923","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:42 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=ko5xIbRJMrGJ4ytPBYoPrWvn7orDOq6DIOXrxPB9KqxcXGyIaONBhKig5PrLxJs/HOe2mArycGorQBDP3TLfyjfA2vCt15V8uJvCZHG2720Lcno1wQIDopKhde2ZqV6R9NlQM0t3WsFmcxjKxa/hXaazICgyLYDfPeer/o5AF9MkNGng8Jk=; Expires=Fri, 28 Jul 2023 08:04:42 GMT; Path=/; AWSALBTGCORS=ko5xIbRJMrGJ4ytPBYoPrWvn7orDOq6DIOXrxPB9KqxcXGyIaONBhKig5PrLxJs/HOe2mArycGorQBDP3TLfyjfA2vCt15V8uJvCZHG2720Lcno1wQIDopKhde2ZqV6R9NlQM0t3WsFmcxjKxa/hXaazICgyLYDfPeer/o5AF9MkNGng8Jk=; Expires=Fri, 28 Jul 2023 08:04:42 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1689926682071,"stop":1689926682977,"duration":906}},{"uid":"77ea7960116d8d88","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:26 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=oJab/nYU1UTwIqhVByP1TBe4mk7G1/hlAn2cAozzer1kXIgUMe4eJlUJOhMdASNrwiSGoNKR2VXCAjq/z0bdoMlRwxP0EwoP+UNZr5nZAzaun6/zipRa+B9pSCyzTzzveWcAHadgQenJEKY8RjaBjV/UHnT59xzvmdrsKCdDDSDPxvLI2Q4=; Expires=Fri, 28 Jul 2023 08:04:26 GMT; Path=/; AWSALBTGCORS=oJab/nYU1UTwIqhVByP1TBe4mk7G1/hlAn2cAozzer1kXIgUMe4eJlUJOhMdASNrwiSGoNKR2VXCAjq/z0bdoMlRwxP0EwoP+UNZr5nZAzaun6/zipRa+B9pSCyzTzzveWcAHadgQenJEKY8RjaBjV/UHnT59xzvmdrsKCdDDSDPxvLI2Q4=; Expires=Fri, 28 Jul 2023 08:04:26 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1689926666023,"stop":1689926666931,"duration":908}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":52,"unknown":0,"total":54},"items":[{"uid":"1460756ee5b659e4","reportUrl":"https://novasamatech.github.io/test-runner/3426//#testresult/1460756ee5b659e4","status":"passed","time":{"start":1689912275578,"stop":1689912276725,"duration":1147}},{"uid":"a230fb2ea53499ae","reportUrl":"https://novasamatech.github.io/test-runner/3425//#testresult/a230fb2ea53499ae","status":"passed","time":{"start":1689898467455,"stop":1689898468561,"duration":1106}},{"uid":"3a1bb3e184c4f9ad","reportUrl":"https://novasamatech.github.io/test-runner/3424//#testresult/3a1bb3e184c4f9ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 20 Jul 2023 20:04:47 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=IdnKJ+QUReZkhyvf+9oUdzd7XyWavGMvWs6KW4LwkEXAU2y1I9hoi2bbXagYnBMa//BsP8CQY2SHhSPvDJEaaEDTQYwppm9/BfP7vjk1k1Z3fmWtBBuwpkxKqDHoS4UbD6HM/aNu/ILdNrgJ4p349uF6DYPoYR1aa6YyU9Bd8UvFhsfNRmg=; Expires=Thu, 27 Jul 2023 20:04:47 GMT; Path=/; AWSALBTGCORS=IdnKJ+QUReZkhyvf+9oUdzd7XyWavGMvWs6KW4LwkEXAU2y1I9hoi2bbXagYnBMa//BsP8CQY2SHhSPvDJEaaEDTQYwppm9/BfP7vjk1k1Z3fmWtBBuwpkxKqDHoS4UbD6HM/aNu/ILdNrgJ4p349uF6DYPoYR1aa6YyU9Bd8UvFhsfNRmg=; Expires=Thu, 27 Jul 2023 20:04:47 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1689883486417,"stop":1689883487362,"duration":945}},{"uid":"77f82220242c82fe","reportUrl":"https://novasamatech.github.io/test-runner/3423//#testresult/77f82220242c82fe","status":"passed","time":{"start":1689869067238,"stop":1689869068290,"duration":1052}},{"uid":"fa5262a0c2c1ce58","reportUrl":"https://novasamatech.github.io/test-runner/3422//#testresult/fa5262a0c2c1ce58","status":"passed","time":{"start":1689854713081,"stop":1689854714198,"duration":1117}},{"uid":"83d60571905b38c0","reportUrl":"https://novasamatech.github.io/test-runner/3421//#testresult/83d60571905b38c0","status":"passed","time":{"start":1689840258475,"stop":1689840259854,"duration":1379}},{"uid":"d6b9d20d4583ecff","reportUrl":"https://novasamatech.github.io/test-runner/3420//#testresult/d6b9d20d4583ecff","status":"passed","time":{"start":1689825841469,"stop":1689825842721,"duration":1252}},{"uid":"1af344d9f2e36249","reportUrl":"https://novasamatech.github.io/test-runner/3419//#testresult/1af344d9f2e36249","status":"passed","time":{"start":1689812077826,"stop":1689812078822,"duration":996}},{"uid":"597a779e0b9a98c5","reportUrl":"https://novasamatech.github.io/test-runner/3418//#testresult/597a779e0b9a98c5","status":"passed","time":{"start":1689797054937,"stop":1689797056227,"duration":1290}},{"uid":"8111cd49ec518d1a","reportUrl":"https://novasamatech.github.io/test-runner/3417//#testresult/8111cd49ec518d1a","status":"passed","time":{"start":1689782649844,"stop":1689782651121,"duration":1277}},{"uid":"2cb2c39ac5d1a31a","reportUrl":"https://novasamatech.github.io/test-runner/3416//#testresult/2cb2c39ac5d1a31a","status":"passed","time":{"start":1689768308222,"stop":1689768309623,"duration":1401}},{"uid":"93782331a5ea4656","reportUrl":"https://novasamatech.github.io/test-runner/3415//#testresult/93782331a5ea4656","status":"passed","time":{"start":1689753859697,"stop":1689753861074,"duration":1377}},{"uid":"95e5c1c64a76237c","reportUrl":"https://novasamatech.github.io/test-runner/3414//#testresult/95e5c1c64a76237c","status":"passed","time":{"start":1689739754803,"stop":1689739755842,"duration":1039}},{"uid":"49715479e8fcd4cd","reportUrl":"https://novasamatech.github.io/test-runner/3413//#testresult/49715479e8fcd4cd","status":"passed","time":{"start":1689725958379,"stop":1689725959538,"duration":1159}},{"uid":"63e762d55a1feef","reportUrl":"https://novasamatech.github.io/test-runner/3412//#testresult/63e762d55a1feef","status":"passed","time":{"start":1689710633534,"stop":1689710634845,"duration":1311}},{"uid":"dfe1bfc117c40e21","reportUrl":"https://novasamatech.github.io/test-runner/3411//#testresult/dfe1bfc117c40e21","status":"passed","time":{"start":1689696265832,"stop":1689696266955,"duration":1123}},{"uid":"20daab0bbc9969ff","reportUrl":"https://novasamatech.github.io/test-runner/3410//#testresult/20daab0bbc9969ff","status":"passed","time":{"start":1689681912832,"stop":1689681913979,"duration":1147}},{"uid":"9dd7b7136a80be20","reportUrl":"https://novasamatech.github.io/test-runner/3409//#testresult/9dd7b7136a80be20","status":"passed","time":{"start":1689667483327,"stop":1689667484562,"duration":1235}},{"uid":"d628c0bd4f827692","reportUrl":"https://novasamatech.github.io/test-runner/3408//#testresult/d628c0bd4f827692","status":"passed","time":{"start":1689653047272,"stop":1689653048611,"duration":1339}},{"uid":"836c2cf5568c75c","reportUrl":"https://novasamatech.github.io/test-runner/3407//#testresult/836c2cf5568c75c","status":"passed","time":{"start":1689639767282,"stop":1689639768315,"duration":1033}}]},"tags":[]},"source":"81b013485b827e8e.json","parameterValues":["{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"]}