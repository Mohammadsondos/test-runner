{"uid":"9422b2c40d73df58","name":"test_can_create_connection[Test for Kylin, url: wss://polkadot.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3ee0d191ab7acb2fad9a82a3aa808e89","time":{"start":1699200120622,"stop":1699200120849,"duration":227},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:02:00 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:02:00 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:02:00 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:02:00 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"310dc098c5f66b18","name":"stdout","source":"310dc098c5f66b18.txt","type":"text/plain","size":1500}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1380-0"},{"name":"thread","value":"2460-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8484df18ccd4a88b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:01:45 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699200105403,"stop":1699200105547,"duration":144}},{"uid":"660b444db3df1720","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:01:30 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699200089261,"stop":1699200090272,"duration":1011}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":39,"skipped":0,"passed":403,"unknown":0,"total":442},"items":[{"uid":"7c816a9edc093c3","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/7c816a9edc093c3","status":"passed","time":{"start":1699185686358,"stop":1699185686500,"duration":142}},{"uid":"9f669899ffbb94b0","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/9f669899ffbb94b0","status":"passed","time":{"start":1699171284255,"stop":1699171284349,"duration":94}},{"uid":"55299d6e32d5f45","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/55299d6e32d5f45","status":"passed","time":{"start":1699156885383,"stop":1699156885436,"duration":53}},{"uid":"e7cafe5490182ce7","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/e7cafe5490182ce7","status":"passed","time":{"start":1699142544592,"stop":1699142544965,"duration":373}},{"uid":"a65b98db9ffe49a6","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/a65b98db9ffe49a6","status":"passed","time":{"start":1699128097260,"stop":1699128097367,"duration":107}},{"uid":"3b1bbef5b229e53d","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/3b1bbef5b229e53d","status":"passed","time":{"start":1699113696825,"stop":1699113696950,"duration":125}},{"uid":"6dbb9fc5bcb2492f","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/6dbb9fc5bcb2492f","status":"passed","time":{"start":1699099294838,"stop":1699099295085,"duration":247}},{"uid":"4c95d02a911dbb47","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/4c95d02a911dbb47","status":"passed","time":{"start":1699084892628,"stop":1699084892742,"duration":114}},{"uid":"453a298236e62948","reportUrl":"https://novasamatech.github.io/test-runner/4073//#testresult/453a298236e62948","status":"passed","time":{"start":1699070490111,"stop":1699070490440,"duration":329}},{"uid":"39acc502c4e3b53d","reportUrl":"https://novasamatech.github.io/test-runner/4071//#testresult/39acc502c4e3b53d","status":"passed","time":{"start":1699041691997,"stop":1699041692118,"duration":121}},{"uid":"2790df3ecb8a0a74","reportUrl":"https://novasamatech.github.io/test-runner/4072//#testresult/2790df3ecb8a0a74","status":"passed","time":{"start":1699056146302,"stop":1699056146424,"duration":122}},{"uid":"774fad157458c32a","reportUrl":"https://novasamatech.github.io/test-runner/4070//#testresult/774fad157458c32a","status":"passed","time":{"start":1699027345644,"stop":1699027346088,"duration":444}},{"uid":"439a7b50f21d4f6a","reportUrl":"https://novasamatech.github.io/test-runner/4069//#testresult/439a7b50f21d4f6a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Fri, 03 Nov 2023 12:02:10 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699012930098,"stop":1699012930168,"duration":70}},{"uid":"7d9e45d8f9215a1","reportUrl":"https://novasamatech.github.io/test-runner/4068//#testresult/7d9e45d8f9215a1","status":"passed","time":{"start":1698998521940,"stop":1698998522036,"duration":96}},{"uid":"9df0acb99a373f30","reportUrl":"https://novasamatech.github.io/test-runner/4067//#testresult/9df0acb99a373f30","status":"passed","time":{"start":1698984112668,"stop":1698984112780,"duration":112}},{"uid":"5f845523df6e03f9","reportUrl":"https://novasamatech.github.io/test-runner/4066//#testresult/5f845523df6e03f9","status":"passed","time":{"start":1698969748096,"stop":1698969748160,"duration":64}},{"uid":"bc83d81db7e6f338","reportUrl":"https://novasamatech.github.io/test-runner/4065//#testresult/bc83d81db7e6f338","status":"passed","time":{"start":1698955304376,"stop":1698955304720,"duration":344}},{"uid":"e127467a68bea243","reportUrl":"https://novasamatech.github.io/test-runner/4064//#testresult/e127467a68bea243","status":"passed","time":{"start":1698940900248,"stop":1698940900359,"duration":111}},{"uid":"b67de30a5981eee6","reportUrl":"https://novasamatech.github.io/test-runner/4063//#testresult/b67de30a5981eee6","status":"passed","time":{"start":1698926516747,"stop":1698926516807,"duration":60}},{"uid":"7024d48865d9773f","reportUrl":"https://novasamatech.github.io/test-runner/4062//#testresult/7024d48865d9773f","status":"passed","time":{"start":1698912099090,"stop":1698912099465,"duration":375}}]},"tags":[]},"source":"9422b2c40d73df58.json","parameterValues":["{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"]}