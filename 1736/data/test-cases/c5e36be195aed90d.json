{"uid":"c5e36be195aed90d","name":"test_xcm_parameters[Check XCM data for Shiden]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"4945230031be984aa672ed890652878e","time":{"start":1666123526554,"stop":1666123528771,"duration":2217},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7fe613cb6850>\nchain = <tests.utils.chain_model.Chain object at 0x7fe618dbadf0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az371-587"},{"name":"thread","value":"1671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fe618dbadf0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"52f58cd241ea49a6","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666123507864,"stop":1666123516541,"duration":8677}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":53,"unknown":0,"total":58},"items":[{"uid":"e14face78fffd376","reportUrl":"https://nova-wallet.github.io/test-runner/1735//#testresult/e14face78fffd376","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666109313065,"stop":1666109314269,"duration":1204}},{"uid":"51616e1404c546e6","reportUrl":"https://nova-wallet.github.io/test-runner/1734//#testresult/51616e1404c546e6","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666094820662,"stop":1666094822876,"duration":2214}},{"uid":"3fd8f27ca7618164","reportUrl":"https://nova-wallet.github.io/test-runner/1733//#testresult/3fd8f27ca7618164","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666080513373,"stop":1666080514362,"duration":989}},{"uid":"48eadc73172055a1","reportUrl":"https://nova-wallet.github.io/test-runner/1732//#testresult/48eadc73172055a1","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666067967381,"stop":1666067984991,"duration":17610}},{"uid":"8281482130c6649d","reportUrl":"https://nova-wallet.github.io/test-runner/1731//#testresult/8281482130c6649d","status":"passed","time":{"start":1666052543492,"stop":1666052548094,"duration":4602}},{"uid":"c1694af7923646a4","reportUrl":"https://nova-wallet.github.io/test-runner/1730//#testresult/c1694af7923646a4","status":"passed","time":{"start":1666037084001,"stop":1666037088275,"duration":4274}},{"uid":"df5d71a1c8dfca45","reportUrl":"https://nova-wallet.github.io/test-runner/1729//#testresult/df5d71a1c8dfca45","status":"passed","time":{"start":1666022942578,"stop":1666022947441,"duration":4863}},{"uid":"a11d3132e414566b","reportUrl":"https://nova-wallet.github.io/test-runner/1728//#testresult/a11d3132e414566b","status":"passed","time":{"start":1666008418573,"stop":1666008423172,"duration":4599}},{"uid":"f387ac31a9f135d0","reportUrl":"https://nova-wallet.github.io/test-runner/1727//#testresult/f387ac31a9f135d0","status":"passed","time":{"start":1665994379125,"stop":1665994384083,"duration":4958}},{"uid":"402838297f84d293","reportUrl":"https://nova-wallet.github.io/test-runner/1726//#testresult/402838297f84d293","status":"passed","time":{"start":1665981928602,"stop":1665981933273,"duration":4671}},{"uid":"3e98d1f338bf05ac","reportUrl":"https://nova-wallet.github.io/test-runner/1725//#testresult/3e98d1f338bf05ac","status":"passed","time":{"start":1665966154407,"stop":1665966159106,"duration":4699}},{"uid":"96f487c225853840","reportUrl":"https://nova-wallet.github.io/test-runner/1724//#testresult/96f487c225853840","status":"passed","time":{"start":1665950685552,"stop":1665950689918,"duration":4366}},{"uid":"6b25476cc30857c1","reportUrl":"https://nova-wallet.github.io/test-runner/1723//#testresult/6b25476cc30857c1","status":"passed","time":{"start":1665936303754,"stop":1665936307949,"duration":4195}},{"uid":"3fe6bf29943c7e6f","reportUrl":"https://nova-wallet.github.io/test-runner/1722//#testresult/3fe6bf29943c7e6f","status":"passed","time":{"start":1665921965093,"stop":1665921969110,"duration":4017}},{"uid":"ce5f240b6dcc0d1","reportUrl":"https://nova-wallet.github.io/test-runner/1721//#testresult/ce5f240b6dcc0d1","status":"passed","time":{"start":1665907514710,"stop":1665907518864,"duration":4154}},{"uid":"235f540c5a5e0f6e","reportUrl":"https://nova-wallet.github.io/test-runner/1720//#testresult/235f540c5a5e0f6e","status":"passed","time":{"start":1665894751463,"stop":1665894756008,"duration":4545}},{"uid":"459986245870d80b","reportUrl":"https://nova-wallet.github.io/test-runner/1719//#testresult/459986245870d80b","status":"passed","time":{"start":1665879735963,"stop":1665879740869,"duration":4906}},{"uid":"a79e16beaadecd23","reportUrl":"https://nova-wallet.github.io/test-runner/1718//#testresult/a79e16beaadecd23","status":"passed","time":{"start":1665864261467,"stop":1665864265863,"duration":4396}},{"uid":"cac5b68fb01ddbda","reportUrl":"https://nova-wallet.github.io/test-runner/1717//#testresult/cac5b68fb01ddbda","status":"passed","time":{"start":1665849907513,"stop":1665849911431,"duration":3918}},{"uid":"3c812bdcefe60f13","reportUrl":"https://nova-wallet.github.io/test-runner/1716//#testresult/3c812bdcefe60f13","status":"passed","time":{"start":1665835563676,"stop":1665835568596,"duration":4920}}]},"tags":[]},"source":"c5e36be195aed90d.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fe618dbadf0>"]}