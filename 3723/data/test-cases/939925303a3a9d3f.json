{"uid":"939925303a3a9d3f","name":"test_can_create_connection[Test for Crab, url: wss://darwiniacrab-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"43bb4e4c68b5681eefac14319069a456","time":{"start":1694073824490,"stop":1694073827926,"duration":3436},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","statusTrace":"data = {'name': 'Crab', 'url': 'wss://darwiniacrab-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","statusTrace":"data = {'name': 'Crab', 'url': 'wss://darwiniacrab-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"5df3822a908caf70","name":"stdout","source":"5df3822a908caf70.txt","type":"text/plain","size":606}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az247-115"},{"name":"thread","value":"2055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://darwiniacrab-rpc.dwellir.com', 'name': 'Crab'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8e3f873afc009dae","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694073805941,"stop":1694073809376,"duration":3435}},{"uid":"44bb9829941f9f74","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694073787395,"stop":1694073790831,"duration":3436}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":17,"skipped":0,"passed":67,"unknown":0,"total":84},"items":[{"uid":"dbc0df188c174c4d","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/dbc0df188c174c4d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694059391882,"stop":1694059395319,"duration":3437}},{"uid":"9cfe274be060092f","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/9cfe274be060092f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694045010802,"stop":1694045014169,"duration":3367}},{"uid":"490fa25c51d9066","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/490fa25c51d9066","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694030564856,"stop":1694030568212,"duration":3356}},{"uid":"d5295e7d0bf0ae95","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/d5295e7d0bf0ae95","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694016205344,"stop":1694016208697,"duration":3353}},{"uid":"6bd889590ffdb04a","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/6bd889590ffdb04a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1694001792563,"stop":1694001796038,"duration":3475}},{"uid":"74a22b521fcd019d","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/74a22b521fcd019d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693987373018,"stop":1693987376452,"duration":3434}},{"uid":"9cbb1dc100cae7e6","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/9cbb1dc100cae7e6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693972970944,"stop":1693972974282,"duration":3338}},{"uid":"8a93174dad9c8bd4","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/8a93174dad9c8bd4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693958676600,"stop":1693958679969,"duration":3369}},{"uid":"5c1e1a9709325a3c","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/5c1e1a9709325a3c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693944171741,"stop":1693944175153,"duration":3412}},{"uid":"9994e632a8d33a4","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/9994e632a8d33a4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693929820990,"stop":1693929824330,"duration":3340}},{"uid":"4fdd6e94597e1c35","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/4fdd6e94597e1c35","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693915849302,"stop":1693915852797,"duration":3495}},{"uid":"51e109c641a74bef","reportUrl":"https://novasamatech.github.io/test-runner/3711//#testresult/51e109c641a74bef","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693901070403,"stop":1693901073952,"duration":3549}},{"uid":"13fcd9aa44d315b5","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/13fcd9aa44d315b5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693872225142,"stop":1693872228602,"duration":3460}},{"uid":"c9a688ae99385270","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/c9a688ae99385270","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693857773839,"stop":1693857777187,"duration":3348}},{"uid":"86731fb5887ead0d","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/86731fb5887ead0d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693843385696,"stop":1693843389195,"duration":3499}},{"uid":"a3edc0677e71c43e","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/a3edc0677e71c43e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693828975792,"stop":1693828979267,"duration":3475}},{"uid":"711ac6003ec7b401","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/711ac6003ec7b401","status":"passed","time":{"start":1693814548920,"stop":1693814549740,"duration":820}},{"uid":"ec3b9b3ff0bfa953","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/ec3b9b3ff0bfa953","status":"passed","time":{"start":1693800105555,"stop":1693800106156,"duration":601}},{"uid":"816eb064a28493c8","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/816eb064a28493c8","status":"passed","time":{"start":1693785773416,"stop":1693785774197,"duration":781}},{"uid":"89fbc9c7da9aa790","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/89fbc9c7da9aa790","status":"passed","time":{"start":1693771360792,"stop":1693771361398,"duration":606}}]},"tags":[]},"source":"939925303a3a9d3f.json","parameterValues":["{'url': 'wss://darwiniacrab-rpc.dwellir.com', 'name': 'Crab'}"]}