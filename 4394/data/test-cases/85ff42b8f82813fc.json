{"uid":"85ff42b8f82813fc","name":"test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f40d393a2004b4ab9fba62244d213349","time":{"start":1703578029320,"stop":1703578029320,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1703577993607,"stop":1703577994237,"duration":630},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703578009305,"stop":1703578009926,"duration":621},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703578024991,"stop":1703578029319,"duration":4328},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"4788b2ce3aade42f","name":"stdout","source":"4788b2ce3aade42f.txt","type":"text/plain","size":484}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1196-639"},{"name":"thread","value":"2080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c2deacdfadea70ae","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703578009305,"stop":1703578009305,"duration":0}},{"uid":"73cb50ce9da45655","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;', 'connection': 'close'} -+-+- None","time":{"start":1703577993606,"stop":1703577993606,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":673,"unknown":0,"total":682},"items":[{"uid":"15d2f657dc5e3140","reportUrl":"https://novasamatech.github.io/test-runner/4393//#testresult/15d2f657dc5e3140","status":"passed","time":{"start":1703563574816,"stop":1703563574817,"duration":1}},{"uid":"54581c7f067e29d0","reportUrl":"https://novasamatech.github.io/test-runner/4392//#testresult/54581c7f067e29d0","status":"passed","time":{"start":1703549222278,"stop":1703549222279,"duration":1}},{"uid":"4fd2fa4c1f40da0d","reportUrl":"https://novasamatech.github.io/test-runner/4391//#testresult/4fd2fa4c1f40da0d","status":"passed","time":{"start":1703534819749,"stop":1703534819749,"duration":0}},{"uid":"22310ce1b22fbbf3","reportUrl":"https://novasamatech.github.io/test-runner/4390//#testresult/22310ce1b22fbbf3","status":"passed","time":{"start":1703520435035,"stop":1703520435035,"duration":0}},{"uid":"f072509a597ff105","reportUrl":"https://novasamatech.github.io/test-runner/4389//#testresult/f072509a597ff105","status":"passed","time":{"start":1703505995544,"stop":1703505995544,"duration":0}},{"uid":"58058f8aae76c380","reportUrl":"https://novasamatech.github.io/test-runner/4388//#testresult/58058f8aae76c380","status":"passed","time":{"start":1703491595564,"stop":1703491595564,"duration":0}},{"uid":"258a461c48979c22","reportUrl":"https://novasamatech.github.io/test-runner/4387//#testresult/258a461c48979c22","status":"passed","time":{"start":1703477196360,"stop":1703477196360,"duration":0}},{"uid":"c2995f00d1727ec","reportUrl":"https://novasamatech.github.io/test-runner/4386//#testresult/c2995f00d1727ec","status":"passed","time":{"start":1703462821619,"stop":1703462821619,"duration":0}},{"uid":"bcdf70ea92be9770","reportUrl":"https://novasamatech.github.io/test-runner/4385//#testresult/bcdf70ea92be9770","status":"passed","time":{"start":1703448403856,"stop":1703448403856,"duration":0}},{"uid":"4131a1a99f0a8657","reportUrl":"https://novasamatech.github.io/test-runner/4384//#testresult/4131a1a99f0a8657","status":"passed","time":{"start":1703434035783,"stop":1703434035783,"duration":0}},{"uid":"e09ae6cb2a744d6","reportUrl":"https://novasamatech.github.io/test-runner/4383//#testresult/e09ae6cb2a744d6","status":"passed","time":{"start":1703419645547,"stop":1703419645547,"duration":0}},{"uid":"ede3bf256b3b8f3c","reportUrl":"https://novasamatech.github.io/test-runner/4382//#testresult/ede3bf256b3b8f3c","status":"passed","time":{"start":1703405198759,"stop":1703405198759,"duration":0}},{"uid":"87b140ff0865cf4c","reportUrl":"https://novasamatech.github.io/test-runner/4381//#testresult/87b140ff0865cf4c","status":"passed","time":{"start":1703390788958,"stop":1703390788959,"duration":1}},{"uid":"2ccf2adced0553c4","reportUrl":"https://novasamatech.github.io/test-runner/4380//#testresult/2ccf2adced0553c4","status":"passed","time":{"start":1703376431715,"stop":1703376431715,"duration":0}},{"uid":"82c0a4022c08a96d","reportUrl":"https://novasamatech.github.io/test-runner/4379//#testresult/82c0a4022c08a96d","status":"passed","time":{"start":1703361978057,"stop":1703361978058,"duration":1}},{"uid":"254d68d369fdcfce","reportUrl":"https://novasamatech.github.io/test-runner/4378//#testresult/254d68d369fdcfce","status":"passed","time":{"start":1703347601996,"stop":1703347601997,"duration":1}},{"uid":"4d8fb9d5c978e105","reportUrl":"https://novasamatech.github.io/test-runner/4377//#testresult/4d8fb9d5c978e105","status":"passed","time":{"start":1703333213330,"stop":1703333213330,"duration":0}},{"uid":"ad7a9dfd921b4d1b","reportUrl":"https://novasamatech.github.io/test-runner/4376//#testresult/ad7a9dfd921b4d1b","status":"passed","time":{"start":1703318805049,"stop":1703318805049,"duration":0}},{"uid":"e93761857ca48262","reportUrl":"https://novasamatech.github.io/test-runner/4375//#testresult/e93761857ca48262","status":"passed","time":{"start":1703304396980,"stop":1703304396980,"duration":0}},{"uid":"e85d8d64f2e8b004","reportUrl":"https://novasamatech.github.io/test-runner/4374//#testresult/e85d8d64f2e8b004","status":"passed","time":{"start":1703290016845,"stop":1703290016845,"duration":0}}]},"tags":[]},"source":"85ff42b8f82813fc.json","parameterValues":["{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"]}