{"uid":"514f1992ca3dae6d","name":"test_can_create_connection[Test for Joystream, url: wss://rpc.joystream.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0531002b3c72e5f090f0c59bbed56551","time":{"start":1705032584396,"stop":1705032584396,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1705032547894,"stop":1705032549248,"duration":1354},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Fri, 12 Jan 2024 04:09:09 GMT', 'content-length': '0'} -+-+- b''\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705032564316,"stop":1705032565774,"duration":1458},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Fri, 12 Jan 2024 04:09:25 GMT', 'content-length': '0'} -+-+- b''\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705032580842,"stop":1705032584395,"duration":3553},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"1b0b48ed054408c1","name":"stdout","source":"1b0b48ed054408c1.txt","type":"text/plain","size":502}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az665-706"},{"name":"thread","value":"2112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.joystream.org', 'name': 'Joystream'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"26eaee53d262814","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Fri, 12 Jan 2024 04:09:25 GMT', 'content-length': '0'} -+-+- b''","time":{"start":1705032564316,"stop":1705032564316,"duration":0}},{"uid":"c5fe671cdc9d6571","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Fri, 12 Jan 2024 04:09:09 GMT', 'content-length': '0'} -+-+- b''","time":{"start":1705032547893,"stop":1705032547893,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":137,"unknown":0,"total":137},"items":[{"uid":"75fa939231d000b9","reportUrl":"https://novasamatech.github.io/test-runner/4496//#testresult/75fa939231d000b9","status":"passed","time":{"start":1705018194295,"stop":1705018194295,"duration":0}},{"uid":"f375bb4d46f07741","reportUrl":"https://novasamatech.github.io/test-runner/4495//#testresult/f375bb4d46f07741","status":"passed","time":{"start":1705003813433,"stop":1705003813433,"duration":0}},{"uid":"b8defef4a8bed0c","reportUrl":"https://novasamatech.github.io/test-runner/4494//#testresult/b8defef4a8bed0c","status":"passed","time":{"start":1704989398428,"stop":1704989398429,"duration":1}},{"uid":"472e2213371659e4","reportUrl":"https://novasamatech.github.io/test-runner/4493//#testresult/472e2213371659e4","status":"passed","time":{"start":1704974993516,"stop":1704974993517,"duration":1}},{"uid":"9be0169cc5832446","reportUrl":"https://novasamatech.github.io/test-runner/4492//#testresult/9be0169cc5832446","status":"passed","time":{"start":1704960548909,"stop":1704960548909,"duration":0}},{"uid":"dcd1735c6120238c","reportUrl":"https://novasamatech.github.io/test-runner/4491//#testresult/dcd1735c6120238c","status":"passed","time":{"start":1704946130621,"stop":1704946130622,"duration":1}},{"uid":"d97c19bde2709da7","reportUrl":"https://novasamatech.github.io/test-runner/4490//#testresult/d97c19bde2709da7","status":"passed","time":{"start":1704931825399,"stop":1704931825400,"duration":1}},{"uid":"9a9d1bd0e9afe802","reportUrl":"https://novasamatech.github.io/test-runner/4489//#testresult/9a9d1bd0e9afe802","status":"passed","time":{"start":1704917366003,"stop":1704917366003,"duration":0}},{"uid":"61bd6e03abb64155","reportUrl":"https://novasamatech.github.io/test-runner/4488//#testresult/61bd6e03abb64155","status":"passed","time":{"start":1704902955436,"stop":1704902955436,"duration":0}},{"uid":"557abcdc28d02bd7","reportUrl":"https://novasamatech.github.io/test-runner/4487//#testresult/557abcdc28d02bd7","status":"passed","time":{"start":1704888509212,"stop":1704888509212,"duration":0}},{"uid":"346c3d93a4b30c53","reportUrl":"https://novasamatech.github.io/test-runner/4486//#testresult/346c3d93a4b30c53","status":"passed","time":{"start":1704874156614,"stop":1704874156614,"duration":0}},{"uid":"5c9d17f29704d6a1","reportUrl":"https://novasamatech.github.io/test-runner/4485//#testresult/5c9d17f29704d6a1","status":"passed","time":{"start":1704859712134,"stop":1704859712134,"duration":0}},{"uid":"cead62a7c29c8c55","reportUrl":"https://novasamatech.github.io/test-runner/4484//#testresult/cead62a7c29c8c55","status":"passed","time":{"start":1704845379484,"stop":1704845379484,"duration":0}},{"uid":"21b05e1dfcca2e1e","reportUrl":"https://novasamatech.github.io/test-runner/4483//#testresult/21b05e1dfcca2e1e","status":"passed","time":{"start":1704830964697,"stop":1704830964697,"duration":0}},{"uid":"401dfe4b4672485a","reportUrl":"https://novasamatech.github.io/test-runner/4482//#testresult/401dfe4b4672485a","status":"passed","time":{"start":1704816580656,"stop":1704816580657,"duration":1}},{"uid":"9a9959159baf5363","reportUrl":"https://novasamatech.github.io/test-runner/4481//#testresult/9a9959159baf5363","status":"passed","time":{"start":1704802169563,"stop":1704802169563,"duration":0}},{"uid":"310c92276c8b9c5f","reportUrl":"https://novasamatech.github.io/test-runner/4406//#testresult/310c92276c8b9c5f","status":"passed","time":{"start":1703750921044,"stop":1703750921044,"duration":0}},{"uid":"4013f4de2eb3283c","reportUrl":"https://novasamatech.github.io/test-runner/4405//#testresult/4013f4de2eb3283c","status":"passed","time":{"start":1703736512937,"stop":1703736512938,"duration":1}},{"uid":"dc1c2e68fab07769","reportUrl":"https://novasamatech.github.io/test-runner/4404//#testresult/dc1c2e68fab07769","status":"passed","time":{"start":1703722093566,"stop":1703722093566,"duration":0}},{"uid":"a3e71df45462091e","reportUrl":"https://novasamatech.github.io/test-runner/4403//#testresult/a3e71df45462091e","status":"passed","time":{"start":1703707717441,"stop":1703707717442,"duration":1}}]},"tags":[]},"source":"514f1992ca3dae6d.json","parameterValues":["{'url': 'wss://rpc.joystream.org', 'name': 'Joystream'}"]}