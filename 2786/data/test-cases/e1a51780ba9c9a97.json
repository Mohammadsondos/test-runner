{"uid":"e1a51780ba9c9a97","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1680969878118,"stop":1680969878398,"duration":280},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"dedc0d7fbf9d8725","name":"stdout","source":"dedc0d7fbf9d8725.txt","type":"text/plain","size":228}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az251-622"},{"name":"thread","value":"1760-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e7d749f096332f53","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680969867703,"stop":1680969867994,"duration":291}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":909,"unknown":0,"total":965},"items":[{"uid":"8301f22ba1afd94","reportUrl":"https://nova-wallet.github.io/test-runner/2785//#testresult/8301f22ba1afd94","status":"passed","time":{"start":1680955489552,"stop":1680955490108,"duration":556}},{"uid":"8025d69943dca3d9","reportUrl":"https://nova-wallet.github.io/test-runner/2784//#testresult/8025d69943dca3d9","status":"passed","time":{"start":1680941076944,"stop":1680941077808,"duration":864}},{"uid":"afa890625078c2ef","reportUrl":"https://nova-wallet.github.io/test-runner/2783//#testresult/afa890625078c2ef","status":"passed","time":{"start":1680926691626,"stop":1680926692128,"duration":502}},{"uid":"1c8eee6bd3a23692","reportUrl":"https://nova-wallet.github.io/test-runner/2782//#testresult/1c8eee6bd3a23692","status":"passed","time":{"start":1680912735003,"stop":1680912735544,"duration":541}},{"uid":"13d4845ec51ac64b","reportUrl":"https://nova-wallet.github.io/test-runner/2781//#testresult/13d4845ec51ac64b","status":"passed","time":{"start":1680897860047,"stop":1680897861141,"duration":1094}},{"uid":"d9b8f817eb07c1d1","reportUrl":"https://nova-wallet.github.io/test-runner/2780//#testresult/d9b8f817eb07c1d1","status":"passed","time":{"start":1680883490761,"stop":1680883491186,"duration":425}},{"uid":"611676315974395a","reportUrl":"https://nova-wallet.github.io/test-runner/2779//#testresult/611676315974395a","status":"passed","time":{"start":1680869137770,"stop":1680869138212,"duration":442}},{"uid":"5691a47de0802344","reportUrl":"https://nova-wallet.github.io/test-runner/2778//#testresult/5691a47de0802344","status":"passed","time":{"start":1680854694206,"stop":1680854694885,"duration":679}},{"uid":"85623df5e6eb6367","reportUrl":"https://nova-wallet.github.io/test-runner/2777//#testresult/85623df5e6eb6367","status":"passed","time":{"start":1680840282137,"stop":1680840282523,"duration":386}},{"uid":"6cb1c800862fddff","reportUrl":"https://nova-wallet.github.io/test-runner/2776//#testresult/6cb1c800862fddff","status":"passed","time":{"start":1680826358657,"stop":1680826359140,"duration":483}},{"uid":"855df40422aeb059","reportUrl":"https://nova-wallet.github.io/test-runner/2775//#testresult/855df40422aeb059","status":"passed","time":{"start":1680811473926,"stop":1680811474369,"duration":443}},{"uid":"64946ef4bd36d8cb","reportUrl":"https://nova-wallet.github.io/test-runner/2774//#testresult/64946ef4bd36d8cb","status":"passed","time":{"start":1680797076668,"stop":1680797077176,"duration":508}},{"uid":"43a5b5e6baa55a7e","reportUrl":"https://nova-wallet.github.io/test-runner/2773//#testresult/43a5b5e6baa55a7e","status":"passed","time":{"start":1680782726147,"stop":1680782726953,"duration":806}},{"uid":"a4b6f6e6e39341eb","reportUrl":"https://nova-wallet.github.io/test-runner/2772//#testresult/a4b6f6e6e39341eb","status":"passed","time":{"start":1680768297843,"stop":1680768298232,"duration":389}},{"uid":"11c7b9c16505d080","reportUrl":"https://nova-wallet.github.io/test-runner/2771//#testresult/11c7b9c16505d080","status":"passed","time":{"start":1680753880136,"stop":1680753880666,"duration":530}},{"uid":"2bbd39f4e2328922","reportUrl":"https://nova-wallet.github.io/test-runner/2770//#testresult/2bbd39f4e2328922","status":"passed","time":{"start":1680739971838,"stop":1680739972604,"duration":766}},{"uid":"5ce801132cf25c6","reportUrl":"https://nova-wallet.github.io/test-runner/2769//#testresult/5ce801132cf25c6","status":"passed","time":{"start":1680725110545,"stop":1680725111091,"duration":546}},{"uid":"1541d7b8b35441a1","reportUrl":"https://nova-wallet.github.io/test-runner/2768//#testresult/1541d7b8b35441a1","status":"passed","time":{"start":1680710718377,"stop":1680710719170,"duration":793}},{"uid":"9159eee0c16b3a3b","reportUrl":"https://nova-wallet.github.io/test-runner/2766//#testresult/9159eee0c16b3a3b","status":"passed","time":{"start":1680681908513,"stop":1680681909090,"duration":577}},{"uid":"c450933a79b9d1e2","reportUrl":"https://nova-wallet.github.io/test-runner/2765//#testresult/c450933a79b9d1e2","status":"passed","time":{"start":1680667481822,"stop":1680667482528,"duration":706}}]},"tags":[]},"source":"e1a51780ba9c9a97.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}