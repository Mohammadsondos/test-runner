{"uid":"b9dd18abf72d261b","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1678392253715,"stop":1678392254358,"duration":643},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"729fad23f9e7bdf8","name":"stdout","source":"729fad23f9e7bdf8.txt","type":"text/plain","size":220}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az449-773"},{"name":"thread","value":"1779-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e9eb2e343c5c088b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1678392242931,"stop":1678392243575,"duration":644}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":105,"skipped":0,"passed":736,"unknown":0,"total":841},"items":[{"uid":"40a44d03f29826cb","reportUrl":"https://nova-wallet.github.io/test-runner/2604//#testresult/40a44d03f29826cb","status":"passed","time":{"start":1678377862622,"stop":1678377863714,"duration":1092}},{"uid":"42d9f2b7bf445ac3","reportUrl":"https://nova-wallet.github.io/test-runner/2603//#testresult/42d9f2b7bf445ac3","status":"passed","time":{"start":1678363521451,"stop":1678363522695,"duration":1244}},{"uid":"f38fd4e1bd0edd0c","reportUrl":"https://nova-wallet.github.io/test-runner/2602//#testresult/f38fd4e1bd0edd0c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1678349089325,"stop":1678349089883,"duration":558}},{"uid":"207c9ced87680132","reportUrl":"https://nova-wallet.github.io/test-runner/2601//#testresult/207c9ced87680132","status":"passed","time":{"start":1678334650753,"stop":1678334651941,"duration":1188}},{"uid":"8d0e576730ae4034","reportUrl":"https://nova-wallet.github.io/test-runner/2600//#testresult/8d0e576730ae4034","status":"passed","time":{"start":1678320879800,"stop":1678320881130,"duration":1330}},{"uid":"1c96412573049fd5","reportUrl":"https://nova-wallet.github.io/test-runner/2599//#testresult/1c96412573049fd5","status":"passed","time":{"start":1678305857395,"stop":1678305858676,"duration":1281}},{"uid":"e02571e72f421318","reportUrl":"https://nova-wallet.github.io/test-runner/2598//#testresult/e02571e72f421318","status":"passed","time":{"start":1678291439828,"stop":1678291441111,"duration":1283}},{"uid":"15db5529f23d7e17","reportUrl":"https://nova-wallet.github.io/test-runner/2597//#testresult/15db5529f23d7e17","status":"passed","time":{"start":1678277119235,"stop":1678277120469,"duration":1234}},{"uid":"611c44fe1e58c3a9","reportUrl":"https://nova-wallet.github.io/test-runner/2596//#testresult/611c44fe1e58c3a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1678262693616,"stop":1678262694187,"duration":571}},{"uid":"ef2c83ef4a4484ee","reportUrl":"https://nova-wallet.github.io/test-runner/2595//#testresult/ef2c83ef4a4484ee","status":"passed","time":{"start":1678248252915,"stop":1678248254026,"duration":1111}},{"uid":"9b8656c64bdf0520","reportUrl":"https://nova-wallet.github.io/test-runner/2594//#testresult/9b8656c64bdf0520","status":"passed","time":{"start":1678234471044,"stop":1678234472262,"duration":1218}},{"uid":"f12b030134e6a997","reportUrl":"https://nova-wallet.github.io/test-runner/2593//#testresult/f12b030134e6a997","status":"passed","time":{"start":1678219426118,"stop":1678219427661,"duration":1543}},{"uid":"a2b5217fdb237be9","reportUrl":"https://nova-wallet.github.io/test-runner/2592//#testresult/a2b5217fdb237be9","status":"passed","time":{"start":1678205067512,"stop":1678205068706,"duration":1194}},{"uid":"aafe0697bac23457","reportUrl":"https://nova-wallet.github.io/test-runner/2591//#testresult/aafe0697bac23457","status":"passed","time":{"start":1678190715169,"stop":1678190716504,"duration":1335}},{"uid":"83cde03991ce3b26","reportUrl":"https://nova-wallet.github.io/test-runner/2590//#testresult/83cde03991ce3b26","status":"passed","time":{"start":1678176290933,"stop":1678176291659,"duration":726}},{"uid":"278ba6d6f1b52dc3","reportUrl":"https://nova-wallet.github.io/test-runner/2589//#testresult/278ba6d6f1b52dc3","status":"passed","time":{"start":1678161834824,"stop":1678161835844,"duration":1020}},{"uid":"7305689842c739eb","reportUrl":"https://nova-wallet.github.io/test-runner/2588//#testresult/7305689842c739eb","status":"passed","time":{"start":1678148110888,"stop":1678148111751,"duration":863}},{"uid":"24c0e244fac540ea","reportUrl":"https://nova-wallet.github.io/test-runner/2586//#testresult/24c0e244fac540ea","status":"passed","time":{"start":1678118654075,"stop":1678118655023,"duration":948}},{"uid":"a17b360c3fe9917d","reportUrl":"https://nova-wallet.github.io/test-runner/2585//#testresult/a17b360c3fe9917d","status":"passed","time":{"start":1678104330180,"stop":1678104331527,"duration":1347}},{"uid":"f6d065a755cab980","reportUrl":"https://nova-wallet.github.io/test-runner/2584//#testresult/f6d065a755cab980","status":"passed","time":{"start":1678089885743,"stop":1678089886693,"duration":950}}]},"tags":[]},"source":"b9dd18abf72d261b.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}