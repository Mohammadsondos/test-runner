{"uid":"f362b73089c42df2","name":"test_can_create_connection[Test for Kabocha (PAUSED), url: wss://kabocha.jelliedowl.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"192ee2e31e5ec764123e0c15a6ce9e30","time":{"start":1686715460951,"stop":1686715461223,"duration":272},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 04:04:21 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kabocha (PAUSED)', 'url': 'wss://kabocha.jelliedowl.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 04:04:21 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 04:04:21 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kabocha (PAUSED)', 'url': 'wss://kabocha.jelliedowl.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 04:04:21 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c57658eaab73e7e4","name":"stdout","source":"c57658eaab73e7e4.txt","type":"text/plain","size":1401}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az251-536"},{"name":"thread","value":"1940-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kabocha.jelliedowl.com', 'name': 'Kabocha (PAUSED)'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bc6b4fffac60a803","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 04:04:05 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1686715445586,"stop":1686715445859,"duration":273}},{"uid":"7f4fdbca884684b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 04:03:50 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1686715430140,"stop":1686715430417,"duration":277}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":74,"unknown":0,"total":77},"items":[{"uid":"3fd99c4e19436525","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/3fd99c4e19436525","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 00:13:43 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1686701623396,"stop":1686701623686,"duration":290}},{"uid":"3a55eec4d4aa3652","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/3a55eec4d4aa3652","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 13 Jun 2023 20:04:40 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1686686680131,"stop":1686686680438,"duration":307}},{"uid":"826793272496af9d","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/826793272496af9d","status":"passed","time":{"start":1686672249693,"stop":1686672250301,"duration":608}},{"uid":"9c4f5713180ac566","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/9c4f5713180ac566","status":"passed","time":{"start":1686657894948,"stop":1686657895626,"duration":678}},{"uid":"e630c6ea89e6d5b9","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/e630c6ea89e6d5b9","status":"passed","time":{"start":1686643462579,"stop":1686643462998,"duration":419}},{"uid":"85e473aa24d580f1","reportUrl":"https://novasamatech.github.io/test-runner/3198//#testresult/85e473aa24d580f1","status":"passed","time":{"start":1686629044357,"stop":1686629044783,"duration":426}},{"uid":"ace0cfe204088403","reportUrl":"https://novasamatech.github.io/test-runner/3197//#testresult/ace0cfe204088403","status":"passed","time":{"start":1686615261318,"stop":1686615261903,"duration":585}},{"uid":"d194b35d9e681d85","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/d194b35d9e681d85","status":"passed","time":{"start":1686600244022,"stop":1686600244634,"duration":612}},{"uid":"f196a631cd69c90b","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/f196a631cd69c90b","status":"passed","time":{"start":1686585829143,"stop":1686585829564,"duration":421}},{"uid":"742b7d406df78ad8","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/742b7d406df78ad8","status":"passed","time":{"start":1686571532521,"stop":1686571532917,"duration":396}},{"uid":"19a16b691ff9bba0","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/19a16b691ff9bba0","status":"passed","time":{"start":1686557066841,"stop":1686557067216,"duration":375}},{"uid":"b810c356d0710eb7","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/b810c356d0710eb7","status":"passed","time":{"start":1686542643061,"stop":1686542643423,"duration":362}},{"uid":"cc5be69ab27e27cb","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/cc5be69ab27e27cb","status":"passed","time":{"start":1686528920491,"stop":1686528920894,"duration":403}},{"uid":"6c76caeee798bbdf","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/6c76caeee798bbdf","status":"passed","time":{"start":1686513818928,"stop":1686513819317,"duration":389}},{"uid":"221b28fc94d4b8df","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/221b28fc94d4b8df","status":"passed","time":{"start":1686499447252,"stop":1686499447822,"duration":570}},{"uid":"9ff7f573622fc043","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/9ff7f573622fc043","status":"passed","time":{"start":1686485095583,"stop":1686485096245,"duration":662}},{"uid":"bf758e97e2ed58fe","reportUrl":"https://novasamatech.github.io/test-runner/3187//#testresult/bf758e97e2ed58fe","status":"passed","time":{"start":1686470643124,"stop":1686470643549,"duration":425}},{"uid":"cfd633dd804ee015","reportUrl":"https://novasamatech.github.io/test-runner/3186//#testresult/cfd633dd804ee015","status":"passed","time":{"start":1686456226585,"stop":1686456226979,"duration":394}},{"uid":"ecb949629179209f","reportUrl":"https://novasamatech.github.io/test-runner/3185//#testresult/ecb949629179209f","status":"passed","time":{"start":1686442521572,"stop":1686442522285,"duration":713}},{"uid":"d61f1f5ace98114a","reportUrl":"https://novasamatech.github.io/test-runner/3184//#testresult/d61f1f5ace98114a","status":"passed","time":{"start":1686427472759,"stop":1686427473506,"duration":747}}]},"tags":[]},"source":"f362b73089c42df2.json","parameterValues":["{'url': 'wss://kabocha.jelliedowl.com', 'name': 'Kabocha (PAUSED)'}"]}