{"uid":"25dc2c5d77a0fda3","name":"test_can_create_connection[Test for Pichiu, url: wss://kusama.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"43f9a3f242d3a4a5d24c7320862b4e4b","time":{"start":1673193868886,"stop":1673193868968,"duration":82},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://kusama.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://kusama.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"347d0e7a30274847","name":"stdout","source":"347d0e7a30274847.txt","type":"text/plain","size":238}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az189-20"},{"name":"thread","value":"1721-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.kylin-node.co.uk', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"43250debd083331d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1673193858646,"stop":1673193858781,"duration":135}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":448,"unknown":0,"total":503},"items":[{"uid":"c32ddab579a9d05","reportUrl":"https://nova-wallet.github.io/test-runner/2235//#testresult/c32ddab579a9d05","status":"passed","time":{"start":1673179497039,"stop":1673179497144,"duration":105}},{"uid":"ea9692420ae6cb0a","reportUrl":"https://nova-wallet.github.io/test-runner/2234//#testresult/ea9692420ae6cb0a","status":"passed","time":{"start":1673165081713,"stop":1673165082143,"duration":430}},{"uid":"c5380191e26917af","reportUrl":"https://nova-wallet.github.io/test-runner/2233//#testresult/c5380191e26917af","status":"passed","time":{"start":1673150672373,"stop":1673150672497,"duration":124}},{"uid":"b43729394b0ddd29","reportUrl":"https://nova-wallet.github.io/test-runner/2232//#testresult/b43729394b0ddd29","status":"passed","time":{"start":1673136889111,"stop":1673136889148,"duration":37}},{"uid":"6adf1198f036f34c","reportUrl":"https://nova-wallet.github.io/test-runner/2231//#testresult/6adf1198f036f34c","status":"passed","time":{"start":1673121842749,"stop":1673121842797,"duration":48}},{"uid":"ba81703afba37f56","reportUrl":"https://nova-wallet.github.io/test-runner/2229//#testresult/ba81703afba37f56","status":"passed","time":{"start":1673093090584,"stop":1673093091463,"duration":879}},{"uid":"1c3b06a2f063ef09","reportUrl":"https://nova-wallet.github.io/test-runner/2228//#testresult/1c3b06a2f063ef09","status":"passed","time":{"start":1673078685719,"stop":1673078686317,"duration":598}},{"uid":"da8b594b4d08afbf","reportUrl":"https://nova-wallet.github.io/test-runner/2227//#testresult/da8b594b4d08afbf","status":"passed","time":{"start":1673064279263,"stop":1673064279640,"duration":377}},{"uid":"8987582ab22e30ab","reportUrl":"https://nova-wallet.github.io/test-runner/2226//#testresult/8987582ab22e30ab","status":"passed","time":{"start":1673050437270,"stop":1673050437893,"duration":623}},{"uid":"4403210285cce9d6","reportUrl":"https://nova-wallet.github.io/test-runner/2225//#testresult/4403210285cce9d6","status":"passed","time":{"start":1673035474423,"stop":1673035474803,"duration":380}},{"uid":"4e8ec6467c68b6c7","reportUrl":"https://nova-wallet.github.io/test-runner/2224//#testresult/4e8ec6467c68b6c7","status":"passed","time":{"start":1673021079965,"stop":1673021080564,"duration":599}},{"uid":"7139f1dd7af5ab3b","reportUrl":"https://nova-wallet.github.io/test-runner/2223//#testresult/7139f1dd7af5ab3b","status":"passed","time":{"start":1673006711276,"stop":1673006711715,"duration":439}},{"uid":"8a13fac7f35ff5e8","reportUrl":"https://nova-wallet.github.io/test-runner/2222//#testresult/8a13fac7f35ff5e8","status":"passed","time":{"start":1672992266879,"stop":1672992267326,"duration":447}},{"uid":"e34d7fde8b20344d","reportUrl":"https://nova-wallet.github.io/test-runner/2221//#testresult/e34d7fde8b20344d","status":"passed","time":{"start":1672977869074,"stop":1672977869525,"duration":451}},{"uid":"2e2d18a68bcac129","reportUrl":"https://nova-wallet.github.io/test-runner/2220//#testresult/2e2d18a68bcac129","status":"passed","time":{"start":1672964018322,"stop":1672964018837,"duration":515}},{"uid":"56cd2f8beb8acc6d","reportUrl":"https://nova-wallet.github.io/test-runner/2219//#testresult/56cd2f8beb8acc6d","status":"passed","time":{"start":1672949042273,"stop":1672949042750,"duration":477}},{"uid":"6696661bd4208e4","reportUrl":"https://nova-wallet.github.io/test-runner/2218//#testresult/6696661bd4208e4","status":"passed","time":{"start":1672934679854,"stop":1672934680261,"duration":407}},{"uid":"7e47f03049f320c1","reportUrl":"https://nova-wallet.github.io/test-runner/2217//#testresult/7e47f03049f320c1","status":"passed","time":{"start":1672920325395,"stop":1672920325878,"duration":483}},{"uid":"37df8b2e8d7f8fbe","reportUrl":"https://nova-wallet.github.io/test-runner/2216//#testresult/37df8b2e8d7f8fbe","status":"passed","time":{"start":1672905885336,"stop":1672905885730,"duration":394}},{"uid":"b627079377b54faf","reportUrl":"https://nova-wallet.github.io/test-runner/2215//#testresult/b627079377b54faf","status":"passed","time":{"start":1672891444151,"stop":1672891444562,"duration":411}}]},"tags":[]},"source":"25dc2c5d77a0fda3.json","parameterValues":["{'url': 'wss://kusama.kylin-node.co.uk', 'name': 'Pichiu'}"]}