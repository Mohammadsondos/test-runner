{"uid":"6aa508abaeff9646","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6c77ce47b0ce8fb3c0f86b2e90e26f67","time":{"start":1685966733907,"stop":1685966734357,"duration":450},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 12:05:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 12:05:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 12:05:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 12:05:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4bed8bbb812e8f16","name":"stdout","source":"4bed8bbb812e8f16.txt","type":"text/plain","size":1056}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az339-18"},{"name":"thread","value":"1916-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc.dwellir.com', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8244f50dd3978eae","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 12:05:18 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685966718404,"stop":1685966718838,"duration":434}},{"uid":"249ce28dfc321208","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 12:05:02 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685966702790,"stop":1685966703245,"duration":455}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":188,"unknown":0,"total":193},"items":[{"uid":"c15ae6237efb31ac","reportUrl":"https://novasamatech.github.io/test-runner/3151//#testresult/c15ae6237efb31ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 08:04:27 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685952267796,"stop":1685952268108,"duration":312}},{"uid":"24ea8b2ec126ec0f","reportUrl":"https://novasamatech.github.io/test-runner/3150//#testresult/24ea8b2ec126ec0f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Mon, 05 Jun 2023 04:04:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685937875093,"stop":1685937875430,"duration":337}},{"uid":"8caeef717ec8d1d5","reportUrl":"https://novasamatech.github.io/test-runner/3149//#testresult/8caeef717ec8d1d5","status":"passed","time":{"start":1685924070434,"stop":1685924071179,"duration":745}},{"uid":"9df9d97d492480d5","reportUrl":"https://novasamatech.github.io/test-runner/3148//#testresult/9df9d97d492480d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 04 Jun 2023 20:04:14 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685909054669,"stop":1685909055011,"duration":342}},{"uid":"5e6efa78678ee0ad","reportUrl":"https://novasamatech.github.io/test-runner/3147//#testresult/5e6efa78678ee0ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sun, 04 Jun 2023 16:04:35 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685894675599,"stop":1685894675938,"duration":339}},{"uid":"b6b2c88d10e9abec","reportUrl":"https://novasamatech.github.io/test-runner/3146//#testresult/b6b2c88d10e9abec","status":"passed","time":{"start":1685880306207,"stop":1685880306793,"duration":586}},{"uid":"4bf648fd6fec4d1e","reportUrl":"https://novasamatech.github.io/test-runner/3145//#testresult/4bf648fd6fec4d1e","status":"passed","time":{"start":1685865831114,"stop":1685865831680,"duration":566}},{"uid":"cfab5302d8ed00d7","reportUrl":"https://novasamatech.github.io/test-runner/3144//#testresult/cfab5302d8ed00d7","status":"passed","time":{"start":1685851430770,"stop":1685851431230,"duration":460}},{"uid":"2eac0da7bb6893ea","reportUrl":"https://novasamatech.github.io/test-runner/3143//#testresult/2eac0da7bb6893ea","status":"passed","time":{"start":1685837737984,"stop":1685837738493,"duration":509}},{"uid":"b6b155e9c3ddc580","reportUrl":"https://novasamatech.github.io/test-runner/3142//#testresult/b6b155e9c3ddc580","status":"passed","time":{"start":1685822671882,"stop":1685822672519,"duration":637}},{"uid":"da77a5558489e79","reportUrl":"https://novasamatech.github.io/test-runner/3141//#testresult/da77a5558489e79","status":"passed","time":{"start":1685808258527,"stop":1685808259144,"duration":617}},{"uid":"c1896719f36ad814","reportUrl":"https://novasamatech.github.io/test-runner/3140//#testresult/c1896719f36ad814","status":"passed","time":{"start":1685793888501,"stop":1685793889106,"duration":605}},{"uid":"2e8869fb793fa9f9","reportUrl":"https://novasamatech.github.io/test-runner/3139//#testresult/2e8869fb793fa9f9","status":"passed","time":{"start":1685779429034,"stop":1685779429456,"duration":422}},{"uid":"a3ed1e5a1d8b6699","reportUrl":"https://novasamatech.github.io/test-runner/3138//#testresult/a3ed1e5a1d8b6699","status":"passed","time":{"start":1685765054803,"stop":1685765055381,"duration":578}},{"uid":"7db57a2220a3174f","reportUrl":"https://novasamatech.github.io/test-runner/3137//#testresult/7db57a2220a3174f","status":"passed","time":{"start":1685751235363,"stop":1685751235938,"duration":575}},{"uid":"2975d9f338314515","reportUrl":"https://novasamatech.github.io/test-runner/3136//#testresult/2975d9f338314515","status":"passed","time":{"start":1685736220359,"stop":1685736220844,"duration":485}},{"uid":"fa68225c2cd847af","reportUrl":"https://novasamatech.github.io/test-runner/3135//#testresult/fa68225c2cd847af","status":"passed","time":{"start":1685721852439,"stop":1685721853058,"duration":619}},{"uid":"924b76a7640b2ffc","reportUrl":"https://novasamatech.github.io/test-runner/3134//#testresult/924b76a7640b2ffc","status":"passed","time":{"start":1685707494362,"stop":1685707495124,"duration":762}},{"uid":"67981f303293c77","reportUrl":"https://novasamatech.github.io/test-runner/3133//#testresult/67981f303293c77","status":"passed","time":{"start":1685693070282,"stop":1685693070771,"duration":489}},{"uid":"9f3106ff3d5eff2c","reportUrl":"https://novasamatech.github.io/test-runner/3132//#testresult/9f3106ff3d5eff2c","status":"passed","time":{"start":1685678645388,"stop":1685678646080,"duration":692}}]},"tags":[]},"source":"6aa508abaeff9646.json","parameterValues":["{'url': 'wss://acala-rpc.dwellir.com', 'name': 'Acala'}"]}