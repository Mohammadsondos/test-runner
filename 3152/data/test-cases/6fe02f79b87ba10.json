{"uid":"6fe02f79b87ba10","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1685966738876,"stop":1685966739414,"duration":538},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 05 Jun 2023 12:05:39 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 05 Jun 2023 12:05:39 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 05 Jun 2023 12:05:39 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 05 Jun 2023 12:05:39 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"58526aeb089a585a","name":"stdout","source":"58526aeb089a585a.txt","type":"text/plain","size":1101}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az339-18"},{"name":"thread","value":"1919-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1a36ebc32239608a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 05 Jun 2023 12:05:23 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685966723380,"stop":1685966723799,"duration":419}},{"uid":"7712219904dc7ad2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 05 Jun 2023 12:05:08 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1685966707691,"stop":1685966708247,"duration":556}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":192,"unknown":0,"total":193},"items":[{"uid":"865119ca0e10879e","reportUrl":"https://novasamatech.github.io/test-runner/3151//#testresult/865119ca0e10879e","status":"passed","time":{"start":1685952256257,"stop":1685952256618,"duration":361}},{"uid":"10f61f84a3174ee0","reportUrl":"https://novasamatech.github.io/test-runner/3150//#testresult/10f61f84a3174ee0","status":"passed","time":{"start":1685937848625,"stop":1685937849080,"duration":455}},{"uid":"efc947b58c848131","reportUrl":"https://novasamatech.github.io/test-runner/3149//#testresult/efc947b58c848131","status":"passed","time":{"start":1685924075577,"stop":1685924076445,"duration":868}},{"uid":"cd45930a242d6976","reportUrl":"https://novasamatech.github.io/test-runner/3148//#testresult/cd45930a242d6976","status":"passed","time":{"start":1685909028476,"stop":1685909029057,"duration":581}},{"uid":"2a9e1d60155a583f","reportUrl":"https://novasamatech.github.io/test-runner/3147//#testresult/2a9e1d60155a583f","status":"passed","time":{"start":1685894649634,"stop":1685894650147,"duration":513}},{"uid":"5e5c97d8cfa2a2b1","reportUrl":"https://novasamatech.github.io/test-runner/3146//#testresult/5e5c97d8cfa2a2b1","status":"passed","time":{"start":1685880280789,"stop":1685880281483,"duration":694}},{"uid":"44a7cc01802e5926","reportUrl":"https://novasamatech.github.io/test-runner/3145//#testresult/44a7cc01802e5926","status":"passed","time":{"start":1685865836486,"stop":1685865837190,"duration":704}},{"uid":"13391a9bbe6b072f","reportUrl":"https://novasamatech.github.io/test-runner/3144//#testresult/13391a9bbe6b072f","status":"passed","time":{"start":1685851434870,"stop":1685851435271,"duration":401}},{"uid":"8f9fe60faba2f39","reportUrl":"https://novasamatech.github.io/test-runner/3143//#testresult/8f9fe60faba2f39","status":"passed","time":{"start":1685837742666,"stop":1685837743206,"duration":540}},{"uid":"19369a62cc1c4092","reportUrl":"https://novasamatech.github.io/test-runner/3142//#testresult/19369a62cc1c4092","status":"passed","time":{"start":1685822677163,"stop":1685822677883,"duration":720}},{"uid":"b643107b1fa09280","reportUrl":"https://novasamatech.github.io/test-runner/3141//#testresult/b643107b1fa09280","status":"passed","time":{"start":1685808293746,"stop":1685808294504,"duration":758}},{"uid":"e75b2a22ff59b3de","reportUrl":"https://novasamatech.github.io/test-runner/3140//#testresult/e75b2a22ff59b3de","status":"passed","time":{"start":1685793893966,"stop":1685793894676,"duration":710}},{"uid":"2237080f4a382658","reportUrl":"https://novasamatech.github.io/test-runner/3139//#testresult/2237080f4a382658","status":"passed","time":{"start":1685779432919,"stop":1685779433425,"duration":506}},{"uid":"aea9f8a27ce1d1ed","reportUrl":"https://novasamatech.github.io/test-runner/3138//#testresult/aea9f8a27ce1d1ed","status":"passed","time":{"start":1685765060696,"stop":1685765061430,"duration":734}},{"uid":"ad60c3ba5b5366b7","reportUrl":"https://novasamatech.github.io/test-runner/3137//#testresult/ad60c3ba5b5366b7","status":"passed","time":{"start":1685751256906,"stop":1685751257580,"duration":674}},{"uid":"7a943e01f1c5e197","reportUrl":"https://novasamatech.github.io/test-runner/3136//#testresult/7a943e01f1c5e197","status":"passed","time":{"start":1685736225246,"stop":1685736225812,"duration":566}},{"uid":"caa0124620d85f15","reportUrl":"https://novasamatech.github.io/test-runner/3135//#testresult/caa0124620d85f15","status":"passed","time":{"start":1685721857764,"stop":1685721858452,"duration":688}},{"uid":"b7aa028f9143e1c5","reportUrl":"https://novasamatech.github.io/test-runner/3134//#testresult/b7aa028f9143e1c5","status":"passed","time":{"start":1685707500150,"stop":1685707500886,"duration":736}},{"uid":"ab62c5612fcc3af0","reportUrl":"https://novasamatech.github.io/test-runner/3133//#testresult/ab62c5612fcc3af0","status":"passed","time":{"start":1685693074410,"stop":1685693074955,"duration":545}},{"uid":"9d705d213499001","reportUrl":"https://novasamatech.github.io/test-runner/3132//#testresult/9d705d213499001","status":"passed","time":{"start":1685678651171,"stop":1685678651964,"duration":793}}]},"tags":[]},"source":"6fe02f79b87ba10.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}