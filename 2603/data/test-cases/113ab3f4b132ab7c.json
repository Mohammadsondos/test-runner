{"uid":"113ab3f4b132ab7c","name":"testBalancesLoading[Getting balance for Crab network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Crab network]","historyId":"be7e3ea2ab47f62f5d3330a9a620ef72","time":{"start":1678364201056,"stop":1678364201119,"duration":63},"status":"broken","statusMessage":"[B@70ee9c0 (byte[]) is not a valid instance of 1\n (FixedByteArray)","statusTrace":"jp.co.soramitsu.fearless_utils.runtime.definitions.types.errors.EncodeDecodeException: [B@70ee9c0 (byte[]) is not a valid instance of 1\n (FixedByteArray)\n\tat jp.co.soramitsu.fearless_utils.runtime.definitions.types.RuntimeType.encodeUnsafe(Type.kt:74)\n\tat jp.co.soramitsu.fearless_utils.runtime.definitions.types.TypeExtKt$bytes$$inlined$ensureUnifiedException$lambda$1.invoke(TypeExt.kt:64)\n\tat jp.co.soramitsu.fearless_utils.runtime.definitions.types.TypeExtKt$bytes$$inlined$ensureUnifiedException$lambda$1.invoke(Unknown Source:2)\n\tat jp.co.soramitsu.fearless_utils.runtime.definitions.types.TypeExtKt.useScaleWriter(TypeExt.kt:92)\n\tat jp.co.soramitsu.fearless_utils.runtime.definitions.types.TypeExtKt.bytes(TypeExt.kt:64)\n\tat jp.co.soramitsu.fearless_utils.runtime.metadata.RuntimeMetadataExtKt.storageKey(RuntimeMetadataExt.kt:135)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2$1$1$1.invoke(BalancesIntegrationTest.kt:92)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2$1$1$1.invoke(BalancesIntegrationTest.kt:90)\n\tat io.novafoundation.nova.runtime.storage.source.BaseStorageSource$query$2.invokeSuspend(BaseStorageSource.kt:37)\n\tat io.novafoundation.nova.runtime.storage.source.BaseStorageSource$query$2.invoke(Unknown Source:8)\n\tat io.novafoundation.nova.runtime.storage.source.BaseStorageSource$query$2.invoke(Unknown Source:4)\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:89)\n\tat kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:169)\n\tat kotlinx.coroutines.BuildersKt.withContext(Unknown Source:1)\n\tat io.novafoundation.nova.runtime.storage.source.BaseStorageSource.query$suspendImpl(BaseStorageSource.kt:34)\n\tat io.novafoundation.nova.runtime.storage.source.BaseStorageSource.query(Unknown Source:0)\n\tat io.novafoundation.nova.runtime.storage.source.StorageDataSource$DefaultImpls.query$default(StorageDataSource.kt:16)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2$1$1.invokeSuspend(BalancesIntegrationTest.kt:90)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2$1$1.invoke(Unknown Source:8)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2$1$1.invoke(Unknown Source:4)\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:100)\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:146)\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:44)\n\tat kotlinx.coroutines.TimeoutKt.withTimeout-KLykuaI(Timeout.kt:71)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:89)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invoke(Unknown Source:8)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invoke(Unknown Source:4)\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:89)\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:264)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesInChainAsync-BWLJW6A(BalancesIntegrationTest.kt:87)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest.access$testBalancesInChainAsync-BWLJW6A(BalancesIntegrationTest.kt:36)\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesLoading$1.invokeSuspend(BalancesIntegrationTest.kt:78)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:570)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:749)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:677)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:664)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Crab network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(153)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":831,"unknown":0,"total":841},"items":[{"uid":"c333cee1f5e08ecf","reportUrl":"https://nova-wallet.github.io/test-runner/2602//#testresult/c333cee1f5e08ecf","status":"broken","statusDetails":"[B@70cd559 (byte[]) is not a valid instance of 1\n (FixedByteArray)","time":{"start":1678349925769,"stop":1678349926000,"duration":231}},{"uid":"a472ce8c360d8be3","reportUrl":"https://nova-wallet.github.io/test-runner/2601//#testresult/a472ce8c360d8be3","status":"broken","statusDetails":"[B@9008625 (byte[]) is not a valid instance of 1\n (FixedByteArray)","time":{"start":1678335271760,"stop":1678335271807,"duration":47}},{"uid":"77939aed22ad7a02","reportUrl":"https://nova-wallet.github.io/test-runner/2600//#testresult/77939aed22ad7a02","status":"broken","statusDetails":"[B@93981de (byte[]) is not a valid instance of 1\n (FixedByteArray)","time":{"start":1678321637125,"stop":1678321637172,"duration":47}},{"uid":"5587d356217872ff","reportUrl":"https://nova-wallet.github.io/test-runner/2599//#testresult/5587d356217872ff","status":"broken","statusDetails":"Timed out waiting for 80000 ms","time":{"start":1678306566374,"stop":1678306646406,"duration":80032}},{"uid":"6f1e8f5a8026c4d7","reportUrl":"https://nova-wallet.github.io/test-runner/2598//#testresult/6f1e8f5a8026c4d7","status":"broken","statusDetails":"Timed out waiting for 80000 ms","time":{"start":1678292278348,"stop":1678292358388,"duration":80040}},{"uid":"3428c067c04d1b4f","reportUrl":"https://nova-wallet.github.io/test-runner/2597//#testresult/3428c067c04d1b4f","status":"passed","time":{"start":1678277914188,"stop":1678277914440,"duration":252}},{"uid":"6fe601b6ea0c4c3c","reportUrl":"https://nova-wallet.github.io/test-runner/2596//#testresult/6fe601b6ea0c4c3c","status":"passed","time":{"start":1678263402751,"stop":1678263403040,"duration":289}},{"uid":"77a10422e06bbecb","reportUrl":"https://nova-wallet.github.io/test-runner/2595//#testresult/77a10422e06bbecb","status":"passed","time":{"start":1678248937376,"stop":1678248937623,"duration":247}},{"uid":"c0a69f93c0521c80","reportUrl":"https://nova-wallet.github.io/test-runner/2594//#testresult/c0a69f93c0521c80","status":"passed","time":{"start":1678235211817,"stop":1678235212087,"duration":270}},{"uid":"8873cab3896f01e1","reportUrl":"https://nova-wallet.github.io/test-runner/2593//#testresult/8873cab3896f01e1","status":"passed","time":{"start":1678220245542,"stop":1678220245798,"duration":256}},{"uid":"fdf429bec1c38f","reportUrl":"https://nova-wallet.github.io/test-runner/2592//#testresult/fdf429bec1c38f","status":"passed","time":{"start":1678205729699,"stop":1678205729944,"duration":245}},{"uid":"b637316749637504","reportUrl":"https://nova-wallet.github.io/test-runner/2591//#testresult/b637316749637504","status":"passed","time":{"start":1678191532217,"stop":1678191532483,"duration":266}},{"uid":"7f3783ecf5ffd5b2","reportUrl":"https://nova-wallet.github.io/test-runner/2590//#testresult/7f3783ecf5ffd5b2","status":"passed","time":{"start":1678177286595,"stop":1678177286830,"duration":235}},{"uid":"ec572b1b6a206e3","reportUrl":"https://nova-wallet.github.io/test-runner/2589//#testresult/ec572b1b6a206e3","status":"passed","time":{"start":1678162597575,"stop":1678162597832,"duration":257}},{"uid":"6019afa29c81ab8b","reportUrl":"https://nova-wallet.github.io/test-runner/2588//#testresult/6019afa29c81ab8b","status":"passed","time":{"start":1678148929178,"stop":1678148929413,"duration":235}},{"uid":"1e67fc8087ec9f17","reportUrl":"https://nova-wallet.github.io/test-runner/2586//#testresult/1e67fc8087ec9f17","status":"passed","time":{"start":1678119869584,"stop":1678119870012,"duration":428}},{"uid":"3301a8a6a268a92d","reportUrl":"https://nova-wallet.github.io/test-runner/2585//#testresult/3301a8a6a268a92d","status":"passed","time":{"start":1678105036975,"stop":1678105037260,"duration":285}},{"uid":"c316c40d67163d47","reportUrl":"https://nova-wallet.github.io/test-runner/2584//#testresult/c316c40d67163d47","status":"passed","time":{"start":1678090614468,"stop":1678090614719,"duration":251}},{"uid":"f4b6f2df31905e34","reportUrl":"https://nova-wallet.github.io/test-runner/2583//#testresult/f4b6f2df31905e34","status":"passed","time":{"start":1678076132479,"stop":1678076132725,"duration":246}},{"uid":"8bfd166c69ffe6fb","reportUrl":"https://nova-wallet.github.io/test-runner/2582//#testresult/8bfd166c69ffe6fb","status":"passed","time":{"start":1678062325972,"stop":1678062326220,"duration":248}}]},"tags":[]},"source":"113ab3f4b132ab7c.json","parameterValues":[]}