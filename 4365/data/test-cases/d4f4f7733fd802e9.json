{"uid":"d4f4f7733fd802e9","name":"test_can_create_connection[Test for OriginTrail Parachain, url: wss://parachain-rpc.origin-trail.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2f3c2858490b7fe22f1ec62a2cdaccfd","time":{"start":1703174781690,"stop":1703174781690,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for OriginTrail Parachain, url: wss://parachain-rpc.origin-trail.network]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1703174750056,"stop":1703174750585,"duration":529},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:05:50 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703174765653,"stop":1703174766236,"duration":583},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:06 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703174781690,"stop":1703174782099,"duration":409},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for OriginTrail Parachain, url: wss://parachain-rpc.origin-trail.network]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"72b2242928fe858b","name":"stdout","source":"72b2242928fe858b.txt","type":"text/plain","size":1035}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az973-512"},{"name":"thread","value":"2070-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://parachain-rpc.origin-trail.network', 'name': 'OriginTrail Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7f5bbe581215c5ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:06:06 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703174765653,"stop":1703174765653,"duration":0}},{"uid":"f3c1f70b3663ce33","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 16:05:50 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703174750056,"stop":1703174750056,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":640,"unknown":0,"total":653},"items":[{"uid":"90b7c1fc6f08ee7a","reportUrl":"https://novasamatech.github.io/test-runner/4364//#testresult/90b7c1fc6f08ee7a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 12:06:48 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703160408195,"stop":1703160408195,"duration":0}},{"uid":"981f3afadf7ced95","reportUrl":"https://novasamatech.github.io/test-runner/4363//#testresult/981f3afadf7ced95","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 08:06:10 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703145969617,"stop":1703145969617,"duration":0}},{"uid":"d1f337d4c193bac9","reportUrl":"https://novasamatech.github.io/test-runner/4362//#testresult/d1f337d4c193bac9","status":"passed","time":{"start":1703131491095,"stop":1703131491096,"duration":1}},{"uid":"bef147ebcddbe817","reportUrl":"https://novasamatech.github.io/test-runner/4361//#testresult/bef147ebcddbe817","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 21 Dec 2023 00:05:20 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703117120063,"stop":1703117120063,"duration":0}},{"uid":"2b8494c18901d055","reportUrl":"https://novasamatech.github.io/test-runner/4360//#testresult/2b8494c18901d055","status":"passed","time":{"start":1703102731498,"stop":1703102731498,"duration":0}},{"uid":"3225dd230e1ffb5d","reportUrl":"https://novasamatech.github.io/test-runner/4359//#testresult/3225dd230e1ffb5d","status":"passed","time":{"start":1703088212696,"stop":1703088212696,"duration":0}},{"uid":"2f7505a3538ee2f8","reportUrl":"https://novasamatech.github.io/test-runner/4358//#testresult/2f7505a3538ee2f8","status":"passed","time":{"start":1703073895040,"stop":1703073895040,"duration":0}},{"uid":"e5f335ce6afc3810","reportUrl":"https://novasamatech.github.io/test-runner/4357//#testresult/e5f335ce6afc3810","status":"passed","time":{"start":1703059404477,"stop":1703059404477,"duration":0}},{"uid":"1377b1901660af11","reportUrl":"https://novasamatech.github.io/test-runner/4356//#testresult/1377b1901660af11","status":"passed","time":{"start":1703045011540,"stop":1703045011540,"duration":0}},{"uid":"b91c102de2edeb0c","reportUrl":"https://novasamatech.github.io/test-runner/4355//#testresult/b91c102de2edeb0c","status":"passed","time":{"start":1703030650402,"stop":1703030650402,"duration":0}},{"uid":"44a55e8d47b5333d","reportUrl":"https://novasamatech.github.io/test-runner/4354//#testresult/44a55e8d47b5333d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 19 Dec 2023 20:03:50 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703016229728,"stop":1703016229728,"duration":0}},{"uid":"75b72568269632d7","reportUrl":"https://novasamatech.github.io/test-runner/4353//#testresult/75b72568269632d7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 19 Dec 2023 16:03:57 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1703001836965,"stop":1703001836965,"duration":0}},{"uid":"c657ecc5431df155","reportUrl":"https://novasamatech.github.io/test-runner/4352//#testresult/c657ecc5431df155","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 19 Dec 2023 12:03:55 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1702987435054,"stop":1702987435054,"duration":0}},{"uid":"22afe5cacf87f0be","reportUrl":"https://novasamatech.github.io/test-runner/4351//#testresult/22afe5cacf87f0be","status":"passed","time":{"start":1702973002224,"stop":1702973002224,"duration":0}},{"uid":"eb835802e02c6667","reportUrl":"https://novasamatech.github.io/test-runner/4350//#testresult/eb835802e02c6667","status":"passed","time":{"start":1702958599889,"stop":1702958599890,"duration":1}},{"uid":"4a321f34b5c71719","reportUrl":"https://novasamatech.github.io/test-runner/4349//#testresult/4a321f34b5c71719","status":"passed","time":{"start":1702944256699,"stop":1702944256699,"duration":0}},{"uid":"59097e25deca8d69","reportUrl":"https://novasamatech.github.io/test-runner/4348//#testresult/59097e25deca8d69","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 18 Dec 2023 20:04:03 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1702929842899,"stop":1702929842899,"duration":0}},{"uid":"204e514be89b2ef3","reportUrl":"https://novasamatech.github.io/test-runner/4347//#testresult/204e514be89b2ef3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 18 Dec 2023 16:03:47 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1702915426984,"stop":1702915426984,"duration":0}},{"uid":"dd70641e814d8466","reportUrl":"https://novasamatech.github.io/test-runner/4346//#testresult/dd70641e814d8466","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 18 Dec 2023 12:04:17 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'close'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1702901057406,"stop":1702901057406,"duration":0}},{"uid":"af8ce9e18079fc88","reportUrl":"https://novasamatech.github.io/test-runner/4345//#testresult/af8ce9e18079fc88","status":"passed","time":{"start":1702892981035,"stop":1702892981035,"duration":0}}]},"tags":[]},"source":"d4f4f7733fd802e9.json","parameterValues":["{'url': 'wss://parachain-rpc.origin-trail.network', 'name': 'OriginTrail Parachain'}"]}