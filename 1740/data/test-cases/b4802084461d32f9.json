{"uid":"b4802084461d32f9","name":"test_xcm_parameters[Check XCM data for Polkadot]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"ef3622b89ef3366b11fda76d9391fcfc","time":{"start":1666181168721,"stop":1666181169299,"duration":578},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7fdeea735310>\nchain = <tests.utils.chain_model.Chain object at 0x7fdeeb9b92b0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7fdeea735310>\nchain = <tests.utils.chain_model.Chain object at 0x7fdeeb9b92b0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})\n\ntests/test_xcm_data.py:30: AssertionError","steps":[],"attachments":[{"uid":"2ed260a01374d003","name":"stdout","source":"2ed260a01374d003.txt","type":"text/plain","size":27}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az747-990"},{"name":"thread","value":"1688-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fdeeb9b92b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"92ba7b8d5cae0e5b","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666181154529,"stop":1666181158675,"duration":4146}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":61,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":62},"items":[{"uid":"4e5030d1c62f3e9d","reportUrl":"https://nova-wallet.github.io/test-runner/1739//#testresult/4e5030d1c62f3e9d","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666167044221,"stop":1666167044814,"duration":593}},{"uid":"ca5f4a8adedc5a19","reportUrl":"https://nova-wallet.github.io/test-runner/1738//#testresult/ca5f4a8adedc5a19","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666154365785,"stop":1666154366664,"duration":879}},{"uid":"bbe8ad6e17b7d4a2","reportUrl":"https://nova-wallet.github.io/test-runner/1737//#testresult/bbe8ad6e17b7d4a2","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666138889962,"stop":1666138890845,"duration":883}},{"uid":"5686521cfa54433f","reportUrl":"https://nova-wallet.github.io/test-runner/1736//#testresult/5686521cfa54433f","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666123475216,"stop":1666123476311,"duration":1095}},{"uid":"bc508408b54ac075","reportUrl":"https://nova-wallet.github.io/test-runner/1735//#testresult/bc508408b54ac075","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666109276431,"stop":1666109277347,"duration":916}},{"uid":"ec838ee8ac076185","reportUrl":"https://nova-wallet.github.io/test-runner/1734//#testresult/ec838ee8ac076185","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5852263000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:500000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:85212000>]})","time":{"start":1666094780135,"stop":1666094781311,"duration":1176}},{"uid":"76441049b716d724","reportUrl":"https://nova-wallet.github.io/test-runner/1733//#testresult/76441049b716d724","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666080475712,"stop":1666080476266,"duration":554}},{"uid":"acd5d06b971da7b9","reportUrl":"https://nova-wallet.github.io/test-runner/1732//#testresult/acd5d06b971da7b9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666067892869,"stop":1666067893794,"duration":925}},{"uid":"71ba5636c66607e6","reportUrl":"https://nova-wallet.github.io/test-runner/1731//#testresult/71ba5636c66607e6","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666052523965,"stop":1666052525327,"duration":1362}},{"uid":"be7bd517d9f91aa8","reportUrl":"https://nova-wallet.github.io/test-runner/1730//#testresult/be7bd517d9f91aa8","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666037062013,"stop":1666037062907,"duration":894}},{"uid":"b25512c2f312927","reportUrl":"https://nova-wallet.github.io/test-runner/1729//#testresult/b25512c2f312927","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666022922862,"stop":1666022923530,"duration":668}},{"uid":"f30395c4de6ef764","reportUrl":"https://nova-wallet.github.io/test-runner/1728//#testresult/f30395c4de6ef764","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1666008398833,"stop":1666008399405,"duration":572}},{"uid":"ab957edfdcffe252","reportUrl":"https://nova-wallet.github.io/test-runner/1727//#testresult/ab957edfdcffe252","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665994349914,"stop":1665994350495,"duration":581}},{"uid":"52f6129e4f1e00ee","reportUrl":"https://nova-wallet.github.io/test-runner/1726//#testresult/52f6129e4f1e00ee","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665981909542,"stop":1665981910211,"duration":669}},{"uid":"5c8af58bbb59a22b","reportUrl":"https://nova-wallet.github.io/test-runner/1725//#testresult/5c8af58bbb59a22b","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665966107999,"stop":1665966108704,"duration":705}},{"uid":"9565a74fb90e5d12","reportUrl":"https://nova-wallet.github.io/test-runner/1724//#testresult/9565a74fb90e5d12","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665950663518,"stop":1665950664350,"duration":832}},{"uid":"d4077ac45b60592d","reportUrl":"https://nova-wallet.github.io/test-runner/1723//#testresult/d4077ac45b60592d","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665936280996,"stop":1665936281910,"duration":914}},{"uid":"ade6404ea3f8c82d","reportUrl":"https://nova-wallet.github.io/test-runner/1722//#testresult/ade6404ea3f8c82d","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665921943202,"stop":1665921944201,"duration":999}},{"uid":"af4f4eec567aeb59","reportUrl":"https://nova-wallet.github.io/test-runner/1721//#testresult/af4f4eec567aeb59","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665907499867,"stop":1665907500963,"duration":1096}},{"uid":"26ae0fc564675b8e","reportUrl":"https://nova-wallet.github.io/test-runner/1720//#testresult/26ae0fc564675b8e","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'values_changed': [<root['base_block'] t1:5849907000, t2:5852263000>]})","time":{"start":1665894732249,"stop":1665894732955,"duration":706}}]},"tags":[]},"source":"b4802084461d32f9.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fdeeb9b92b0>"]}