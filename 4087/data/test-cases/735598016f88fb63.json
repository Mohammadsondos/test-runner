{"uid":"735598016f88fb63","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1699272155883,"stop":1699272156444,"duration":561},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f17884204c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f178848ea70>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f17884204c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f178848ea70>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"4ca009fdda6acd3","name":"stdout","source":"4ca009fdda6acd3.txt","type":"text/plain","size":1036}],"parameters":[],"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1024-708"},{"name":"thread","value":"2232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f178848ea70>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"456b9a331b8ef3bc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699272140405,"stop":1699272140861,"duration":456}},{"uid":"6aace689a269067","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699272124882,"stop":1699272125375,"duration":493}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":60,"skipped":0,"passed":386,"unknown":0,"total":446},"items":[{"uid":"230ccc2c47a5144a","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/230ccc2c47a5144a","status":"passed","time":{"start":1699257724502,"stop":1699257727837,"duration":3335}},{"uid":"75b8889db17705a3","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/75b8889db17705a3","status":"passed","time":{"start":1699243338351,"stop":1699243343001,"duration":4650}},{"uid":"3d18ac16be3fba60","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/3d18ac16be3fba60","status":"passed","time":{"start":1699228976462,"stop":1699228980940,"duration":4478}},{"uid":"302f80e82da3881","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/302f80e82da3881","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699214606422,"stop":1699214607877,"duration":1455}},{"uid":"fbb6a95e8f23164f","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/fbb6a95e8f23164f","status":"passed","time":{"start":1699200132323,"stop":1699200136241,"duration":3918}},{"uid":"c95d83c571e48228","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/c95d83c571e48228","status":"passed","time":{"start":1699185711172,"stop":1699185715663,"duration":4491}},{"uid":"f147a178f057952d","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/f147a178f057952d","status":"passed","time":{"start":1699171338454,"stop":1699171342227,"duration":3773}},{"uid":"4fc0719fced22362","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/4fc0719fced22362","status":"passed","time":{"start":1699156932380,"stop":1699156936594,"duration":4214}},{"uid":"2576718fb9901b73","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/2576718fb9901b73","status":"passed","time":{"start":1699142613287,"stop":1699142618931,"duration":5644}},{"uid":"334a78684861bfd7","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/334a78684861bfd7","status":"passed","time":{"start":1699128153469,"stop":1699128159311,"duration":5842}},{"uid":"4763e7783faab1d4","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/4763e7783faab1d4","status":"passed","time":{"start":1699113741680,"stop":1699113745573,"duration":3893}},{"uid":"25a548dc2a629a3d","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/25a548dc2a629a3d","status":"passed","time":{"start":1699099317047,"stop":1699099320233,"duration":3186}},{"uid":"9b1ffe6adf76543b","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/9b1ffe6adf76543b","status":"passed","time":{"start":1699084934470,"stop":1699084941991,"duration":7521}},{"uid":"2c8306b017a260ad","reportUrl":"https://novasamatech.github.io/test-runner/4073//#testresult/2c8306b017a260ad","status":"passed","time":{"start":1699070523537,"stop":1699070527658,"duration":4121}},{"uid":"8a4e5706c46d52e4","reportUrl":"https://novasamatech.github.io/test-runner/4071//#testresult/8a4e5706c46d52e4","status":"passed","time":{"start":1699041715110,"stop":1699041718354,"duration":3244}},{"uid":"7767c0addb4e9b8b","reportUrl":"https://novasamatech.github.io/test-runner/4072//#testresult/7767c0addb4e9b8b","status":"passed","time":{"start":1699056180676,"stop":1699056184775,"duration":4099}},{"uid":"cfc2165aaa8e5db9","reportUrl":"https://novasamatech.github.io/test-runner/4070//#testresult/cfc2165aaa8e5db9","status":"passed","time":{"start":1699027360966,"stop":1699027368048,"duration":7082}},{"uid":"b263b19972de9461","reportUrl":"https://novasamatech.github.io/test-runner/4069//#testresult/b263b19972de9461","status":"passed","time":{"start":1699012990496,"stop":1699012995298,"duration":4802}},{"uid":"4e956af19b24ef0e","reportUrl":"https://novasamatech.github.io/test-runner/4068//#testresult/4e956af19b24ef0e","status":"passed","time":{"start":1698998535001,"stop":1698998538776,"duration":3775}},{"uid":"1f605a075880a00f","reportUrl":"https://novasamatech.github.io/test-runner/4067//#testresult/1f605a075880a00f","status":"passed","time":{"start":1698984175395,"stop":1698984181544,"duration":6149}}]},"tags":[]},"source":"735598016f88fb63.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f178848ea70>"]}