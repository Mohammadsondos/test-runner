{"uid":"df8ea4c71e022cbe","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"68c8c856fd3ef7a98a33ddd771ff867a","time":{"start":1682438639370,"stop":1682438639694,"duration":324},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"63e991dde3348b5b","name":"stdout","source":"63e991dde3348b5b.txt","type":"text/plain","size":236}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az590-805"},{"name":"thread","value":"1845-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc.dwellir.com', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"23b5d3c30ed8e3f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682438628870,"stop":1682438629211,"duration":341}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":32,"unknown":0,"total":34},"items":[{"uid":"5c84cd8af3d9e29a","reportUrl":"https://nova-wallet.github.io/test-runner/2889//#testresult/5c84cd8af3d9e29a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1682424337414,"stop":1682424337740,"duration":326}},{"uid":"f568e254582ab6fa","reportUrl":"https://nova-wallet.github.io/test-runner/2888//#testresult/f568e254582ab6fa","status":"passed","time":{"start":1682409837108,"stop":1682409837567,"duration":459}},{"uid":"618d413800973866","reportUrl":"https://nova-wallet.github.io/test-runner/2887//#testresult/618d413800973866","status":"passed","time":{"start":1682395430746,"stop":1682395431241,"duration":495}},{"uid":"a3da1bc653d71454","reportUrl":"https://nova-wallet.github.io/test-runner/2886//#testresult/a3da1bc653d71454","status":"passed","time":{"start":1682381553405,"stop":1682381553884,"duration":479}},{"uid":"c4cddc7227ca443a","reportUrl":"https://nova-wallet.github.io/test-runner/2885//#testresult/c4cddc7227ca443a","status":"passed","time":{"start":1682366629321,"stop":1682366630127,"duration":806}},{"uid":"3a9390740c47fe81","reportUrl":"https://nova-wallet.github.io/test-runner/2883//#testresult/3a9390740c47fe81","status":"passed","time":{"start":1682337901272,"stop":1682337902074,"duration":802}},{"uid":"dd10a7137af4bdf1","reportUrl":"https://nova-wallet.github.io/test-runner/2882//#testresult/dd10a7137af4bdf1","status":"passed","time":{"start":1682323475722,"stop":1682323476323,"duration":601}},{"uid":"cdea3b1bfb040b48","reportUrl":"https://nova-wallet.github.io/test-runner/2881//#testresult/cdea3b1bfb040b48","status":"passed","time":{"start":1682309043587,"stop":1682309044165,"duration":578}},{"uid":"1f3a08b9b7bf8680","reportUrl":"https://nova-wallet.github.io/test-runner/2880//#testresult/1f3a08b9b7bf8680","status":"passed","time":{"start":1682295172036,"stop":1682295172616,"duration":580}},{"uid":"8752e004afcd4c5e","reportUrl":"https://nova-wallet.github.io/test-runner/2879//#testresult/8752e004afcd4c5e","status":"passed","time":{"start":1682280241865,"stop":1682280242464,"duration":599}},{"uid":"96303278ee56067f","reportUrl":"https://nova-wallet.github.io/test-runner/2878//#testresult/96303278ee56067f","status":"passed","time":{"start":1682265827159,"stop":1682265827719,"duration":560}},{"uid":"aa4160e3f4277142","reportUrl":"https://nova-wallet.github.io/test-runner/2877//#testresult/aa4160e3f4277142","status":"passed","time":{"start":1682251452480,"stop":1682251452970,"duration":490}},{"uid":"27984654c3ad72ae","reportUrl":"https://nova-wallet.github.io/test-runner/2876//#testresult/27984654c3ad72ae","status":"passed","time":{"start":1682237031042,"stop":1682237031638,"duration":596}},{"uid":"7a470f01d0deac90","reportUrl":"https://nova-wallet.github.io/test-runner/2875//#testresult/7a470f01d0deac90","status":"passed","time":{"start":1682222648548,"stop":1682222649000,"duration":452}},{"uid":"cc49911ea9efa587","reportUrl":"https://nova-wallet.github.io/test-runner/2874//#testresult/cc49911ea9efa587","status":"passed","time":{"start":1682208851284,"stop":1682208851752,"duration":468}},{"uid":"82d280e02b3b4ed6","reportUrl":"https://nova-wallet.github.io/test-runner/2873//#testresult/82d280e02b3b4ed6","status":"passed","time":{"start":1682193836090,"stop":1682193836899,"duration":809}},{"uid":"165f5d4330489629","reportUrl":"https://nova-wallet.github.io/test-runner/2872//#testresult/165f5d4330489629","status":"passed","time":{"start":1682179421345,"stop":1682179422099,"duration":754}},{"uid":"6fd5771b2e79df9e","reportUrl":"https://nova-wallet.github.io/test-runner/2871//#testresult/6fd5771b2e79df9e","status":"passed","time":{"start":1682165059721,"stop":1682165060335,"duration":614}},{"uid":"d270e65ef38b93b2","reportUrl":"https://nova-wallet.github.io/test-runner/2870//#testresult/d270e65ef38b93b2","status":"passed","time":{"start":1682150648543,"stop":1682150649134,"duration":591}},{"uid":"342811bd9630eb8d","reportUrl":"https://nova-wallet.github.io/test-runner/2869//#testresult/342811bd9630eb8d","status":"passed","time":{"start":1682136259259,"stop":1682136259894,"duration":635}}]},"tags":[]},"source":"df8ea4c71e022cbe.json","parameterValues":["{'url': 'wss://karura-rpc.dwellir.com', 'name': 'Karura'}"]}