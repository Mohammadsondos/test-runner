{"uid":"b96fa7839bdf412c","name":"test_can_create_connection[Test for Tanganika, url: wss://tanganika.datahighway.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82948670f054b2cd664c9319f41b4e5e","time":{"start":1683749149439,"stop":1683749149758,"duration":319},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"ee47aee4b3283083","name":"stdout","source":"ee47aee4b3283083.txt","type":"text/plain","size":242}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az437-63"},{"name":"thread","value":"1923-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"27e5ccc67aed1a72","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683749139002,"stop":1683749139354,"duration":352}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":67,"unknown":0,"total":89},"items":[{"uid":"82703b65ff8231ab","reportUrl":"https://nova-wallet.github.io/test-runner/2983//#testresult/82703b65ff8231ab","status":"passed","time":{"start":1683720330159,"stop":1683720330610,"duration":451}},{"uid":"8e69a9adc94123e1","reportUrl":"https://nova-wallet.github.io/test-runner/2982//#testresult/8e69a9adc94123e1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683705909961,"stop":1683705910264,"duration":303}},{"uid":"e1f6751509542164","reportUrl":"https://nova-wallet.github.io/test-runner/2981//#testresult/e1f6751509542164","status":"passed","time":{"start":1683691477364,"stop":1683691477945,"duration":581}},{"uid":"9576cb1cd0641278","reportUrl":"https://nova-wallet.github.io/test-runner/2980//#testresult/9576cb1cd0641278","status":"passed","time":{"start":1683677592014,"stop":1683677592600,"duration":586}},{"uid":"a3838454878c1dbd","reportUrl":"https://nova-wallet.github.io/test-runner/2979//#testresult/a3838454878c1dbd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683662769145,"stop":1683662769471,"duration":326}},{"uid":"75bd8f13113d2107","reportUrl":"https://nova-wallet.github.io/test-runner/2978//#testresult/75bd8f13113d2107","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683648312402,"stop":1683648312910,"duration":508}},{"uid":"4e3ca5b730b2789f","reportUrl":"https://nova-wallet.github.io/test-runner/2977//#testresult/4e3ca5b730b2789f","status":"passed","time":{"start":1683635525469,"stop":1683635526040,"duration":571}},{"uid":"4304b3cb18eb247b","reportUrl":"https://nova-wallet.github.io/test-runner/2976//#testresult/4304b3cb18eb247b","status":"passed","time":{"start":1683619501916,"stop":1683619502609,"duration":693}},{"uid":"22dd702b181d785c","reportUrl":"https://nova-wallet.github.io/test-runner/2975//#testresult/22dd702b181d785c","status":"passed","time":{"start":1683605102451,"stop":1683605103139,"duration":688}},{"uid":"63edfbbcf32dbec9","reportUrl":"https://nova-wallet.github.io/test-runner/2972//#testresult/63edfbbcf32dbec9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683561901914,"stop":1683561902228,"duration":314}},{"uid":"55ade54c6b8415e3","reportUrl":"https://nova-wallet.github.io/test-runner/2969//#testresult/55ade54c6b8415e3","status":"passed","time":{"start":1683518676001,"stop":1683518676435,"duration":434}},{"uid":"9d5205edc54715f2","reportUrl":"https://nova-wallet.github.io/test-runner/2968//#testresult/9d5205edc54715f2","status":"passed","time":{"start":1683504774559,"stop":1683504774971,"duration":412}},{"uid":"32da7911b6d04a4c","reportUrl":"https://nova-wallet.github.io/test-runner/2967//#testresult/32da7911b6d04a4c","status":"passed","time":{"start":1683489856643,"stop":1683489857069,"duration":426}},{"uid":"6421e2d75d3911c","reportUrl":"https://nova-wallet.github.io/test-runner/2966//#testresult/6421e2d75d3911c","status":"passed","time":{"start":1683475465960,"stop":1683475466364,"duration":404}},{"uid":"f7615bf9e0fae3e7","reportUrl":"https://nova-wallet.github.io/test-runner/2965//#testresult/f7615bf9e0fae3e7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683461131547,"stop":1683461132103,"duration":556}},{"uid":"f4b55f43f3ad6c1d","reportUrl":"https://nova-wallet.github.io/test-runner/2964//#testresult/f4b55f43f3ad6c1d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683446700489,"stop":1683446700999,"duration":510}},{"uid":"4830d895a640f3dc","reportUrl":"https://nova-wallet.github.io/test-runner/2963//#testresult/4830d895a640f3dc","status":"passed","time":{"start":1683432274321,"stop":1683432274909,"duration":588}},{"uid":"89f2f9d67e1e03f8","reportUrl":"https://nova-wallet.github.io/test-runner/2962//#testresult/89f2f9d67e1e03f8","status":"passed","time":{"start":1683418436334,"stop":1683418436774,"duration":440}},{"uid":"6e7adba272e14e69","reportUrl":"https://nova-wallet.github.io/test-runner/2961//#testresult/6e7adba272e14e69","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683403480564,"stop":1683403481084,"duration":520}},{"uid":"7d4b7e72ade9275","reportUrl":"https://nova-wallet.github.io/test-runner/2960//#testresult/7d4b7e72ade9275","status":"passed","time":{"start":1683389059200,"stop":1683389059656,"duration":456}}]},"tags":[]},"source":"b96fa7839bdf412c.json","parameterValues":["{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"]}