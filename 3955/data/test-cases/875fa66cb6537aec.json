{"uid":"875fa66cb6537aec","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1697385752209,"stop":1697385752452,"duration":243},"status":"broken","statusMessage":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLEOFError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLEOFError","steps":[],"attachments":[{"uid":"b95cce2cda0c97b4","name":"stdout","source":"b95cce2cda0c97b4.txt","type":"text/plain","size":1139}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az799-341"},{"name":"thread","value":"2149-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4253ceaf202e422","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sun, 15 Oct 2023 16:02:17 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1697385736748,"stop":1697385737115,"duration":367}},{"uid":"7f2bd64e37b51c07","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sun, 15 Oct 2023 16:02:01 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1697385721126,"stop":1697385721653,"duration":527}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":44,"skipped":0,"passed":271,"unknown":0,"total":315},"items":[{"uid":"87cdb21ebcf20f6b","reportUrl":"https://novasamatech.github.io/test-runner/3954//#testresult/87cdb21ebcf20f6b","status":"passed","time":{"start":1697371329392,"stop":1697371329761,"duration":369}},{"uid":"f2df481fbebffee9","reportUrl":"https://novasamatech.github.io/test-runner/3953//#testresult/f2df481fbebffee9","status":"passed","time":{"start":1697356893044,"stop":1697356893448,"duration":404}},{"uid":"fe226a3ea994c1fd","reportUrl":"https://novasamatech.github.io/test-runner/3952//#testresult/fe226a3ea994c1fd","status":"passed","time":{"start":1697342508664,"stop":1697342509335,"duration":671}},{"uid":"82c2fa80de30add6","reportUrl":"https://novasamatech.github.io/test-runner/3951//#testresult/82c2fa80de30add6","status":"passed","time":{"start":1697328145059,"stop":1697328145625,"duration":566}},{"uid":"a887e46bb311cbbd","reportUrl":"https://novasamatech.github.io/test-runner/3950//#testresult/a887e46bb311cbbd","status":"passed","time":{"start":1697313704057,"stop":1697313704555,"duration":498}},{"uid":"8e9cdde76f1c58e6","reportUrl":"https://novasamatech.github.io/test-runner/3949//#testresult/8e9cdde76f1c58e6","status":"passed","time":{"start":1697299316985,"stop":1697299317653,"duration":668}},{"uid":"30a65311354629ee","reportUrl":"https://novasamatech.github.io/test-runner/3948//#testresult/30a65311354629ee","status":"passed","time":{"start":1697284902599,"stop":1697284903092,"duration":493}},{"uid":"ee8ef96de7625fcc","reportUrl":"https://novasamatech.github.io/test-runner/3947//#testresult/ee8ef96de7625fcc","status":"passed","time":{"start":1697270499503,"stop":1697270500113,"duration":610}},{"uid":"da32693ecb3f24d","reportUrl":"https://novasamatech.github.io/test-runner/3946//#testresult/da32693ecb3f24d","status":"passed","time":{"start":1697256106595,"stop":1697256107396,"duration":801}},{"uid":"2fb1c3f6175286fc","reportUrl":"https://novasamatech.github.io/test-runner/3945//#testresult/2fb1c3f6175286fc","status":"passed","time":{"start":1697241751562,"stop":1697241751966,"duration":404}},{"uid":"66edaf0d2787abba","reportUrl":"https://novasamatech.github.io/test-runner/3944//#testresult/66edaf0d2787abba","status":"passed","time":{"start":1697227304148,"stop":1697227304722,"duration":574}},{"uid":"7cd502e59cd1f5fa","reportUrl":"https://novasamatech.github.io/test-runner/3943//#testresult/7cd502e59cd1f5fa","status":"passed","time":{"start":1697212942529,"stop":1697212943179,"duration":650}},{"uid":"66f6c9b8f1bc8cb3","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/66f6c9b8f1bc8cb3","status":"passed","time":{"start":1697198512288,"stop":1697198512684,"duration":396}},{"uid":"a9d1778fbd3cad0","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/a9d1778fbd3cad0","status":"passed","time":{"start":1697184106492,"stop":1697184107055,"duration":563}},{"uid":"96d9160d9cf4af5f","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/96d9160d9cf4af5f","status":"passed","time":{"start":1697169705324,"stop":1697169705987,"duration":663}},{"uid":"28f44b03dfedcbfa","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/28f44b03dfedcbfa","status":"passed","time":{"start":1697155347752,"stop":1697155348151,"duration":399}},{"uid":"734e718be388172d","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/734e718be388172d","status":"passed","time":{"start":1697140907927,"stop":1697140908297,"duration":370}},{"uid":"bb2f533a474be19c","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/bb2f533a474be19c","status":"passed","time":{"start":1697126552004,"stop":1697126552399,"duration":395}},{"uid":"8fc2bf47e3b00804","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/8fc2bf47e3b00804","status":"passed","time":{"start":1697112117544,"stop":1697112117939,"duration":395}},{"uid":"8a305461b45f16aa","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/8a305461b45f16aa","status":"passed","time":{"start":1697097717541,"stop":1697097717940,"duration":399}}]},"tags":[]},"source":"875fa66cb6537aec.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}