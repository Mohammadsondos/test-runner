{"uid":"37fcadad72b89a78","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1697385712028,"stop":1697385712528,"duration":500},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 15 Oct 2023 16:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JJigXSzwEbQ3A5g3kP0ACrdbPvhni%2B%2Bwabbr4v8og5HWLNUtbo%2FtLBj66scHwO5mntcd5fEFZ8LJ%2BoYTwsdFhLwTW%2B%2F62eSBNjtjzEgo2mWcuKNEVvnAeZ8aXEyj%2FCUXRIBkYQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4Ch3zRE8oABL1z; SameSite=None; Secure; path=/; expires=Mon, 16-Oct-23 15:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8169487c6df828dd-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 15 Oct 2023 16:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JJigXSzwEbQ3A5g3kP0ACrdbPvhni%2B%2Bwabbr4v8og5HWLNUtbo%2FtLBj66scHwO5mntcd5fEFZ8LJ%2BoYTwsdFhLwTW%2B%2F62eSBNjtjzEgo2mWcuKNEVvnAeZ8aXEyj%2FCUXRIBkYQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4Ch3zRE8oABL1z; SameSite=None; Secure; path=/; expires=Mon, 16-Oct-23 15:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8169487c6df828dd-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 15 Oct 2023 16:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JJigXSzwEbQ3A5g3kP0ACrdbPvhni%2B%2Bwabbr4v8og5HWLNUtbo%2FtLBj66scHwO5mntcd5fEFZ8LJ%2BoYTwsdFhLwTW%2B%2F62eSBNjtjzEgo2mWcuKNEVvnAeZ8aXEyj%2FCUXRIBkYQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4Ch3zRE8oABL1z; SameSite=None; Secure; path=/; expires=Mon, 16-Oct-23 15:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8169487c6df828dd-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 15 Oct 2023 16:01:52 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=JJigXSzwEbQ3A5g3kP0ACrdbPvhni%2B%2Bwabbr4v8og5HWLNUtbo%2FtLBj66scHwO5mntcd5fEFZ8LJ%2BoYTwsdFhLwTW%2B%2F62eSBNjtjzEgo2mWcuKNEVvnAeZ8aXEyj%2FCUXRIBkYQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4Ch3zRE8oABL1z; SameSite=None; Secure; path=/; expires=Mon, 16-Oct-23 15:01:52 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8169487c6df828dd-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2e7d370fbe480f3e","name":"stdout","source":"2e7d370fbe480f3e.txt","type":"text/plain","size":2548}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az799-341"},{"name":"thread","value":"2149-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7dd34b9d019f485d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 15 Oct 2023 16:01:36 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=oz9ZqFc9tiKBbHF8hUW9sDbOqWCG2eR9ABHz5j562Ly8NUpnmfq5TZLeb5B9ifUc264wAPis327%2FJDvGQ9nFwMZS4rdb3hHlZrebsmDH37zg8MTCNtNfNOxFHGeryY%2FWTayf9g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEm3RXP3PRhDUZS; SameSite=None; Secure; path=/; expires=Mon, 16-Oct-23 15:01:36 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8169481ba816aa76-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1697385696556,"stop":1697385696932,"duration":376}},{"uid":"a43ad5b25ef1ac4d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 15 Oct 2023 16:01:21 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=pSyt7yisFv%2FvdRjVIeEJD%2F6J6GirmzDLNG301982szHKu1szD4qXMMp6PUWCFspszAPhQhhBZPmBzNPZuEYXfCIxRHiU%2BfK6zYn6H%2BGiVb2q6ZFrHyO2n5TsBDHKAW%2Fe3E577A%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3UYmjySEK8PaeY; SameSite=None; Secure; path=/; expires=Mon, 16-Oct-23 15:01:21 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '816947ba5f8aaa76-DFW', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1697385680922,"stop":1697385681402,"duration":480}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":44,"skipped":0,"passed":271,"unknown":0,"total":315},"items":[{"uid":"c09609d4b3df47bd","reportUrl":"https://novasamatech.github.io/test-runner/3954//#testresult/c09609d4b3df47bd","status":"passed","time":{"start":1697371280818,"stop":1697371281361,"duration":543}},{"uid":"2d6b224b5f8c5115","reportUrl":"https://novasamatech.github.io/test-runner/3953//#testresult/2d6b224b5f8c5115","status":"passed","time":{"start":1697356876479,"stop":1697356877024,"duration":545}},{"uid":"37bf178f15433527","reportUrl":"https://novasamatech.github.io/test-runner/3952//#testresult/37bf178f15433527","status":"passed","time":{"start":1697342489038,"stop":1697342489711,"duration":673}},{"uid":"1ef89c3a71ccf11","reportUrl":"https://novasamatech.github.io/test-runner/3951//#testresult/1ef89c3a71ccf11","status":"passed","time":{"start":1697328127896,"stop":1697328128440,"duration":544}},{"uid":"a5697afc9d547642","reportUrl":"https://novasamatech.github.io/test-runner/3950//#testresult/a5697afc9d547642","status":"passed","time":{"start":1697313698853,"stop":1697313699221,"duration":368}},{"uid":"748986cf44cdd928","reportUrl":"https://novasamatech.github.io/test-runner/3949//#testresult/748986cf44cdd928","status":"passed","time":{"start":1697299292252,"stop":1697299292889,"duration":637}},{"uid":"b37e7ba702c0e7d8","reportUrl":"https://novasamatech.github.io/test-runner/3948//#testresult/b37e7ba702c0e7d8","status":"passed","time":{"start":1697284888360,"stop":1697284888788,"duration":428}},{"uid":"a7c95f1c2db63d02","reportUrl":"https://novasamatech.github.io/test-runner/3947//#testresult/a7c95f1c2db63d02","status":"passed","time":{"start":1697270483208,"stop":1697270483857,"duration":649}},{"uid":"fcd94486213bd273","reportUrl":"https://novasamatech.github.io/test-runner/3946//#testresult/fcd94486213bd273","status":"passed","time":{"start":1697256089276,"stop":1697256089935,"duration":659}},{"uid":"489654d86bd31502","reportUrl":"https://novasamatech.github.io/test-runner/3945//#testresult/489654d86bd31502","status":"passed","time":{"start":1697241735599,"stop":1697241736045,"duration":446}},{"uid":"fcd313c758c0f718","reportUrl":"https://novasamatech.github.io/test-runner/3944//#testresult/fcd313c758c0f718","status":"passed","time":{"start":1697227285522,"stop":1697227286155,"duration":633}},{"uid":"a676286f8b077e5a","reportUrl":"https://novasamatech.github.io/test-runner/3943//#testresult/a676286f8b077e5a","status":"passed","time":{"start":1697212892538,"stop":1697212893332,"duration":794}},{"uid":"b78a1fb0112e88ff","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/b78a1fb0112e88ff","status":"passed","time":{"start":1697198492304,"stop":1697198492815,"duration":511}},{"uid":"10bb2e056610ae8e","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/10bb2e056610ae8e","status":"passed","time":{"start":1697184087441,"stop":1697184088146,"duration":705}},{"uid":"af1e010fb259a482","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/af1e010fb259a482","status":"passed","time":{"start":1697169689024,"stop":1697169689754,"duration":730}},{"uid":"3d487169e850e9e5","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/3d487169e850e9e5","status":"passed","time":{"start":1697155328570,"stop":1697155329067,"duration":497}},{"uid":"e3c2ad666f5be142","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/e3c2ad666f5be142","status":"passed","time":{"start":1697140875882,"stop":1697140876388,"duration":506}},{"uid":"7869de3423cbf2b8","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/7869de3423cbf2b8","status":"passed","time":{"start":1697126535337,"stop":1697126535747,"duration":410}},{"uid":"63caae5ac7b3b2bc","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/63caae5ac7b3b2bc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 12 Oct 2023 12:02:17 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=pDfH9qC5248FPA2uo3tIHbBhE0Yv5%2FDZFDz7Xb1STtNtHmdoF%2BBghq7VNYxH00iSjbrMXv5j1ufJYuQtZliLU2f4cfD9Xep7%2F45J1U%2FMVoIVDTYD3Ok34QeRlsQRufR9guGNPw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkkZC7KpC6CM7r; SameSite=None; Secure; path=/; expires=Fri, 13-Oct-23 11:02:17 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '814f31688b2081a5-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1697112137023,"stop":1697112137297,"duration":274}},{"uid":"f5f7c91bff57cd11","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/f5f7c91bff57cd11","status":"passed","time":{"start":1697097757249,"stop":1697097757719,"duration":470}}]},"tags":[]},"source":"37fcadad72b89a78.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}