{"uid":"9ffae217991af75c","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1671638724838,"stop":1671638736240,"duration":11402},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4484041a749d8e20","name":"stdout","source":"4484041a749d8e20.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az351-823"},{"name":"thread","value":"1725-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"21d8aa409498b75e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671638704092,"stop":1671638714736,"duration":10644}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":187,"skipped":0,"passed":207,"unknown":0,"total":394},"items":[{"uid":"60fa48ea36370462","reportUrl":"https://nova-wallet.github.io/test-runner/2125//#testresult/60fa48ea36370462","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671624365639,"stop":1671624379169,"duration":13530}},{"uid":"e8353caffd8d3587","reportUrl":"https://nova-wallet.github.io/test-runner/2124//#testresult/e8353caffd8d3587","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671609979269,"stop":1671609992147,"duration":12878}},{"uid":"1a90e0d33da16e7b","reportUrl":"https://nova-wallet.github.io/test-runner/2123//#testresult/1a90e0d33da16e7b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671595512236,"stop":1671595525126,"duration":12890}},{"uid":"2770d54cb6135903","reportUrl":"https://nova-wallet.github.io/test-runner/2122//#testresult/2770d54cb6135903","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671581648646,"stop":1671581660064,"duration":11418}},{"uid":"de65b07310ee2912","reportUrl":"https://nova-wallet.github.io/test-runner/2121//#testresult/de65b07310ee2912","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671566710615,"stop":1671566723246,"duration":12631}},{"uid":"fe582af5ef75a803","reportUrl":"https://nova-wallet.github.io/test-runner/2120//#testresult/fe582af5ef75a803","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671552319219,"stop":1671552331828,"duration":12609}},{"uid":"abb8ad2933edcab4","reportUrl":"https://nova-wallet.github.io/test-runner/2119//#testresult/abb8ad2933edcab4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671537965608,"stop":1671537978336,"duration":12728}},{"uid":"cf7a2ed14557a743","reportUrl":"https://nova-wallet.github.io/test-runner/2118//#testresult/cf7a2ed14557a743","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671523548450,"stop":1671523559792,"duration":11342}},{"uid":"307ec205b79f2df1","reportUrl":"https://nova-wallet.github.io/test-runner/2117//#testresult/307ec205b79f2df1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671509107111,"stop":1671509119884,"duration":12773}},{"uid":"2c03878df309011","reportUrl":"https://nova-wallet.github.io/test-runner/2116//#testresult/2c03878df309011","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671495281666,"stop":1671495294287,"duration":12621}},{"uid":"1b8493d6a6fb9c7b","reportUrl":"https://nova-wallet.github.io/test-runner/2115//#testresult/1b8493d6a6fb9c7b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671480300781,"stop":1671480313579,"duration":12798}},{"uid":"312178c18c33584e","reportUrl":"https://nova-wallet.github.io/test-runner/2113//#testresult/312178c18c33584e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671451560434,"stop":1671451575667,"duration":15233}},{"uid":"178a157b7c7f55bd","reportUrl":"https://nova-wallet.github.io/test-runner/2112//#testresult/178a157b7c7f55bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671437134862,"stop":1671437146291,"duration":11429}},{"uid":"b5ae8ff5ae746343","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/b5ae8ff5ae746343","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671422738234,"stop":1671422749648,"duration":11414}},{"uid":"36c3bcd115ce7193","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/36c3bcd115ce7193","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671408833689,"stop":1671408846519,"duration":12830}},{"uid":"6d3a245ad0d861ca","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/6d3a245ad0d861ca","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671393889826,"stop":1671393902464,"duration":12638}},{"uid":"b8a5ff3dbdccc3af","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/b8a5ff3dbdccc3af","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671379592415,"stop":1671379605299,"duration":12884}},{"uid":"84d9642445690fc1","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/84d9642445690fc1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671365302153,"stop":1671365314880,"duration":12727}},{"uid":"ae4d1cea1956e8e0","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/ae4d1cea1956e8e0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671350836315,"stop":1671350848945,"duration":12630}},{"uid":"90f1c94987201628","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/90f1c94987201628","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671336350156,"stop":1671336363055,"duration":12899}}]},"tags":[]},"source":"9ffae217991af75c.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}