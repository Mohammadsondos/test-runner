{"uid":"c450f59dc10aa148","name":"test_can_create_connection[Test for Polkadot, url: wss://rpc-polkadot.luckyfriday.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"13eca3e028aca6b5814c6e221a0eec15","time":{"start":1712160112375,"stop":1712160112375,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:52 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=tfk%2BBZ9%2Fqb9DAbadS%2FIVM33DgmthxrsPKxiYu92aNX10a%2FJ8Vdrz1qFPQYdk4nNu8tP9EfKDiPv3sXRd3qD%2BjoGgWQZbmoMkvXUDLBjSwSZhrxJqpe70JW4myHyFMJji0ilCs6dj%2FVVO3%2BBp5w%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea479ecaf296c5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Polkadot, url: wss://rpc-polkadot.luckyfriday.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:52 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=tfk%2BBZ9%2Fqb9DAbadS%2FIVM33DgmthxrsPKxiYu92aNX10a%2FJ8Vdrz1qFPQYdk4nNu8tP9EfKDiPv3sXRd3qD%2BjoGgWQZbmoMkvXUDLBjSwSZhrxJqpe70JW4myHyFMJji0ilCs6dj%2FVVO3%2BBp5w%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea479ecaf296c5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1712160101296,"stop":1712160101622,"duration":326},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:41 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=n5qOgAkbDjDO6zRcU3SD1UgCcTDhUqLivE1wCFb8n02zv77KDsmJ0ligSj39hKvmX01bpIR06MvUugM6edmzKZ7ntRQ%2F22Q2fQBg2xY%2FzGAgJ%2B1cUA0LVVPCCJhGVT0dTCwxq3yKnxxNU%2FQvmQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea4759ba6d9432-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1712160106731,"stop":1712160106976,"duration":245},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 525 None -+-+- {'date': 'Wed, 03 Apr 2024 16:01:46 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=5iRl50NbgjeoPZSQXGW60VoK5s8qE8irUMYEMGf%2FZtn8oysgeQnPvZ3yhjL9mpbjY6gUL0rEV1B8EwLwPj2TZLn7I22sRfPYKFaJ5afybu9Y%2FW2s3ZGj3TwcfMYOo9g05OqgEJmeWT20Djv%2FGQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '86ea477baa72168e-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 525'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1712160112375,"stop":1712160112523,"duration":148},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:52 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=tfk%2BBZ9%2Fqb9DAbadS%2FIVM33DgmthxrsPKxiYu92aNX10a%2FJ8Vdrz1qFPQYdk4nNu8tP9EfKDiPv3sXRd3qD%2BjoGgWQZbmoMkvXUDLBjSwSZhrxJqpe70JW4myHyFMJji0ilCs6dj%2FVVO3%2BBp5w%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea479ecaf296c5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:52 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=tfk%2BBZ9%2Fqb9DAbadS%2FIVM33DgmthxrsPKxiYu92aNX10a%2FJ8Vdrz1qFPQYdk4nNu8tP9EfKDiPv3sXRd3qD%2BjoGgWQZbmoMkvXUDLBjSwSZhrxJqpe70JW4myHyFMJji0ilCs6dj%2FVVO3%2BBp5w%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea479ecaf296c5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Polkadot, url: wss://rpc-polkadot.luckyfriday.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:52 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=tfk%2BBZ9%2Fqb9DAbadS%2FIVM33DgmthxrsPKxiYu92aNX10a%2FJ8Vdrz1qFPQYdk4nNu8tP9EfKDiPv3sXRd3qD%2BjoGgWQZbmoMkvXUDLBjSwSZhrxJqpe70JW4myHyFMJji0ilCs6dj%2FVVO3%2BBp5w%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea479ecaf296c5-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e8aeb59303930e8e","name":"stdout","source":"e8aeb59303930e8e.txt","type":"text/plain","size":2455}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1426-982"},{"name":"thread","value":"2102-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc-polkadot.luckyfriday.io', 'name': 'Polkadot'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7f4c91b78eb14bf5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 525 None -+-+- {'date': 'Wed, 03 Apr 2024 16:01:46 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=5iRl50NbgjeoPZSQXGW60VoK5s8qE8irUMYEMGf%2FZtn8oysgeQnPvZ3yhjL9mpbjY6gUL0rEV1B8EwLwPj2TZLn7I22sRfPYKFaJ5afybu9Y%2FW2s3ZGj3TwcfMYOo9g05OqgEJmeWT20Djv%2FGQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '86ea477baa72168e-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 525'","time":{"start":1712160106731,"stop":1712160106731,"duration":0}},{"uid":"390794819d79d044","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 03 Apr 2024 16:01:41 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=n5qOgAkbDjDO6zRcU3SD1UgCcTDhUqLivE1wCFb8n02zv77KDsmJ0ligSj39hKvmX01bpIR06MvUugM6edmzKZ7ntRQ%2F22Q2fQBg2xY%2FzGAgJ%2B1cUA0LVVPCCJhGVT0dTCwxq3yKnxxNU%2FQvmQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '86ea4759ba6d9432-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1712160101293,"stop":1712160101293,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":1056,"unknown":0,"total":1074},"items":[{"uid":"14c372f00ecb2322","reportUrl":"https://novasamatech.github.io/test-runner/4997//#testresult/14c372f00ecb2322","status":"passed","time":{"start":1712145701786,"stop":1712145701786,"duration":0}},{"uid":"8fcfde1fef8e9123","reportUrl":"https://novasamatech.github.io/test-runner/4996//#testresult/8fcfde1fef8e9123","status":"passed","time":{"start":1712131299358,"stop":1712131299358,"duration":0}},{"uid":"2fc4b5bbb0c0bb44","reportUrl":"https://novasamatech.github.io/test-runner/4995//#testresult/2fc4b5bbb0c0bb44","status":"passed","time":{"start":1712116894191,"stop":1712116894191,"duration":0}},{"uid":"8995b832f754e46c","reportUrl":"https://novasamatech.github.io/test-runner/4994//#testresult/8995b832f754e46c","status":"passed","time":{"start":1712102540250,"stop":1712102540250,"duration":0}},{"uid":"ad215546b821959c","reportUrl":"https://novasamatech.github.io/test-runner/4993//#testresult/ad215546b821959c","status":"passed","time":{"start":1712088091261,"stop":1712088091261,"duration":0}},{"uid":"9a6b1f29b64a872e","reportUrl":"https://novasamatech.github.io/test-runner/4992//#testresult/9a6b1f29b64a872e","status":"passed","time":{"start":1712073696128,"stop":1712073696128,"duration":0}},{"uid":"a53f42d0d184f3a2","reportUrl":"https://novasamatech.github.io/test-runner/4991//#testresult/a53f42d0d184f3a2","status":"passed","time":{"start":1712059292008,"stop":1712059292008,"duration":0}},{"uid":"f1f4be07c70a24d6","reportUrl":"https://novasamatech.github.io/test-runner/4990//#testresult/f1f4be07c70a24d6","status":"passed","time":{"start":1712048261600,"stop":1712048261601,"duration":1}},{"uid":"516df9ab2e27685","reportUrl":"https://novasamatech.github.io/test-runner/4954//#testresult/516df9ab2e27685","status":"passed","time":{"start":1711540899013,"stop":1711540899014,"duration":1}},{"uid":"e85249c7c03b7a0a","reportUrl":"https://novasamatech.github.io/test-runner/4953//#testresult/e85249c7c03b7a0a","status":"passed","time":{"start":1711526511108,"stop":1711526511108,"duration":0}},{"uid":"4f3c3b7f33a5044a","reportUrl":"https://novasamatech.github.io/test-runner/4952//#testresult/4f3c3b7f33a5044a","status":"passed","time":{"start":1711512097843,"stop":1711512097843,"duration":0}},{"uid":"d272fdeb95ac9879","reportUrl":"https://novasamatech.github.io/test-runner/4951//#testresult/d272fdeb95ac9879","status":"passed","time":{"start":1711497724293,"stop":1711497724293,"duration":0}},{"uid":"c1aa8b3caf863ee","reportUrl":"https://novasamatech.github.io/test-runner/4950//#testresult/c1aa8b3caf863ee","status":"passed","time":{"start":1711483290892,"stop":1711483290892,"duration":0}},{"uid":"7cb061428078a12b","reportUrl":"https://novasamatech.github.io/test-runner/4949//#testresult/7cb061428078a12b","status":"passed","time":{"start":1711468890936,"stop":1711468890936,"duration":0}},{"uid":"235efe778e89fa3e","reportUrl":"https://novasamatech.github.io/test-runner/4948//#testresult/235efe778e89fa3e","status":"passed","time":{"start":1711454500461,"stop":1711454500461,"duration":0}},{"uid":"3fc7e68c69e2fa2","reportUrl":"https://novasamatech.github.io/test-runner/4947//#testresult/3fc7e68c69e2fa2","status":"passed","time":{"start":1711440097683,"stop":1711440097683,"duration":0}},{"uid":"d7261e3c5a8a1722","reportUrl":"https://novasamatech.github.io/test-runner/4946//#testresult/d7261e3c5a8a1722","status":"passed","time":{"start":1711425709992,"stop":1711425709992,"duration":0}},{"uid":"f261253887f86bf7","reportUrl":"https://novasamatech.github.io/test-runner/4945//#testresult/f261253887f86bf7","status":"passed","time":{"start":1711411325518,"stop":1711411325519,"duration":1}},{"uid":"e232a5a86e672b64","reportUrl":"https://novasamatech.github.io/test-runner/4944//#testresult/e232a5a86e672b64","status":"passed","time":{"start":1711396889407,"stop":1711396889407,"duration":0}},{"uid":"45c584338690ec93","reportUrl":"https://novasamatech.github.io/test-runner/4943//#testresult/45c584338690ec93","status":"passed","time":{"start":1711382493879,"stop":1711382493879,"duration":0}}]},"tags":[]},"source":"c450f59dc10aa148.json","parameterValues":["{'url': 'wss://rpc-polkadot.luckyfriday.io', 'name': 'Polkadot'}"]}