{"uid":"68b80fae9f7e4c6a","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc-0.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3d8f2ce0558c9bfde019f2a96edd941d","time":{"start":1680581070995,"stop":1680581071547,"duration":552},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"6f464256212cb6","name":"stdout","source":"6f464256212cb6.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az574-655"},{"name":"thread","value":"1848-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1bdd1b957a35efcc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1680581060288,"stop":1680581060862,"duration":574}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":68,"skipped":0,"passed":872,"unknown":0,"total":940},"items":[{"uid":"a412a9df852136dc","reportUrl":"https://nova-wallet.github.io/test-runner/2758//#testresult/a412a9df852136dc","status":"passed","time":{"start":1680567195712,"stop":1680567196226,"duration":514}},{"uid":"cbc5e93522097da3","reportUrl":"https://nova-wallet.github.io/test-runner/2757//#testresult/cbc5e93522097da3","status":"passed","time":{"start":1680552257025,"stop":1680552257640,"duration":615}},{"uid":"3ea9058ab73d2fca","reportUrl":"https://nova-wallet.github.io/test-runner/2756//#testresult/3ea9058ab73d2fca","status":"passed","time":{"start":1680537850724,"stop":1680537851229,"duration":505}},{"uid":"53780926cdb7d83a","reportUrl":"https://nova-wallet.github.io/test-runner/2755//#testresult/53780926cdb7d83a","status":"passed","time":{"start":1680523508472,"stop":1680523509185,"duration":713}},{"uid":"6fb9c1649e31f91c","reportUrl":"https://nova-wallet.github.io/test-runner/2754//#testresult/6fb9c1649e31f91c","status":"passed","time":{"start":1680509052685,"stop":1680509053182,"duration":497}},{"uid":"97501b6b63fee3ec","reportUrl":"https://nova-wallet.github.io/test-runner/2753//#testresult/97501b6b63fee3ec","status":"passed","time":{"start":1680494651523,"stop":1680494652273,"duration":750}},{"uid":"4030ac87765efa88","reportUrl":"https://nova-wallet.github.io/test-runner/2752//#testresult/4030ac87765efa88","status":"passed","time":{"start":1680480777943,"stop":1680480778622,"duration":679}},{"uid":"713775f7022ccd1c","reportUrl":"https://nova-wallet.github.io/test-runner/2751//#testresult/713775f7022ccd1c","status":"passed","time":{"start":1680465831285,"stop":1680465831783,"duration":498}},{"uid":"71111620510ddef5","reportUrl":"https://nova-wallet.github.io/test-runner/2750//#testresult/71111620510ddef5","status":"passed","time":{"start":1680451448631,"stop":1680451449377,"duration":746}},{"uid":"b654ff8ead3dcef5","reportUrl":"https://nova-wallet.github.io/test-runner/2749//#testresult/b654ff8ead3dcef5","status":"passed","time":{"start":1680437063283,"stop":1680437063916,"duration":633}},{"uid":"92630ce68ce2e3b9","reportUrl":"https://nova-wallet.github.io/test-runner/2748//#testresult/92630ce68ce2e3b9","status":"passed","time":{"start":1680422657159,"stop":1680422657628,"duration":469}},{"uid":"d81ca947cbf937e5","reportUrl":"https://nova-wallet.github.io/test-runner/2747//#testresult/d81ca947cbf937e5","status":"passed","time":{"start":1680408253726,"stop":1680408254439,"duration":713}},{"uid":"f55988b9d2e6b17d","reportUrl":"https://nova-wallet.github.io/test-runner/2746//#testresult/f55988b9d2e6b17d","status":"passed","time":{"start":1680394470114,"stop":1680394470626,"duration":512}},{"uid":"363c56ba2564b062","reportUrl":"https://nova-wallet.github.io/test-runner/2745//#testresult/363c56ba2564b062","status":"passed","time":{"start":1680379449232,"stop":1680379449740,"duration":508}},{"uid":"b3ddf85ea4253123","reportUrl":"https://nova-wallet.github.io/test-runner/2744//#testresult/b3ddf85ea4253123","status":"passed","time":{"start":1680365044870,"stop":1680365045500,"duration":630}},{"uid":"436e6e43d707776c","reportUrl":"https://nova-wallet.github.io/test-runner/2743//#testresult/436e6e43d707776c","status":"passed","time":{"start":1680350665166,"stop":1680350665881,"duration":715}},{"uid":"533e56187e0da3bd","reportUrl":"https://nova-wallet.github.io/test-runner/2742//#testresult/533e56187e0da3bd","status":"passed","time":{"start":1680336347353,"stop":1680336347850,"duration":497}},{"uid":"15d2ee7a9df75f11","reportUrl":"https://nova-wallet.github.io/test-runner/2741//#testresult/15d2ee7a9df75f11","status":"passed","time":{"start":1680321841096,"stop":1680321841743,"duration":647}},{"uid":"45adbd4e9578fbd9","reportUrl":"https://nova-wallet.github.io/test-runner/2740//#testresult/45adbd4e9578fbd9","status":"passed","time":{"start":1680308035031,"stop":1680308035508,"duration":477}},{"uid":"9118b859c21be85b","reportUrl":"https://nova-wallet.github.io/test-runner/2739//#testresult/9118b859c21be85b","status":"passed","time":{"start":1680293044825,"stop":1680293045460,"duration":635}}]},"tags":[]},"source":"68b80fae9f7e4c6a.json","parameterValues":["{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"]}