{"uid":"de7db893e364ab85","name":"test_address_prefix[Test for XX network]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"2d187b8404bace95933c94fa9c4f33f0","time":{"start":1676779602643,"stop":1676779608237,"duration":5594},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7ff3c871f3a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff3c86e71c0>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:69: in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:800: in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7ff3c871f3a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff3c86e71c0>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:69: in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:800: in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"9091052d44200494","name":"stdout","source":"9091052d44200494.txt","type":"text/plain","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az560-419"},{"name":"thread","value":"1632-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff3c86e71c0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8ddf4a8f76cbef04","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1676779590122,"stop":1676779592621,"duration":2499}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":60,"skipped":0,"passed":419,"unknown":0,"total":479},"items":[{"uid":"faae0f8ad6434b85","reportUrl":"https://nova-wallet.github.io/test-runner/2485//#testresult/faae0f8ad6434b85","status":"passed","time":{"start":1676750830054,"stop":1676750836738,"duration":6684}},{"uid":"f79afd55657c78b0","reportUrl":"https://nova-wallet.github.io/test-runner/2484//#testresult/f79afd55657c78b0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1676736423282,"stop":1676736425471,"duration":2189}},{"uid":"104f5d7b9aa9db6a","reportUrl":"https://nova-wallet.github.io/test-runner/2483//#testresult/104f5d7b9aa9db6a","status":"passed","time":{"start":1676722061204,"stop":1676722066036,"duration":4832}},{"uid":"d8922e2c57bfcfb8","reportUrl":"https://nova-wallet.github.io/test-runner/2482//#testresult/d8922e2c57bfcfb8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1676707671120,"stop":1676707674071,"duration":2951}},{"uid":"2916b1cfa0aec0e8","reportUrl":"https://nova-wallet.github.io/test-runner/2480//#testresult/2916b1cfa0aec0e8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1676679469646,"stop":1676679473162,"duration":3516}},{"uid":"2aa6c0259e59b050","reportUrl":"https://nova-wallet.github.io/test-runner/2479//#testresult/2aa6c0259e59b050","status":"passed","time":{"start":1676664438890,"stop":1676664448327,"duration":9437}},{"uid":"a31c97ccab93bf6e","reportUrl":"https://nova-wallet.github.io/test-runner/2478//#testresult/a31c97ccab93bf6e","status":"passed","time":{"start":1676650048578,"stop":1676650055460,"duration":6882}},{"uid":"25b9c79faef9d789","reportUrl":"https://nova-wallet.github.io/test-runner/2477//#testresult/25b9c79faef9d789","status":"passed","time":{"start":1676635733170,"stop":1676635738823,"duration":5653}},{"uid":"aa0410cf104a341c","reportUrl":"https://nova-wallet.github.io/test-runner/2476//#testresult/aa0410cf104a341c","status":"passed","time":{"start":1676621242701,"stop":1676621248728,"duration":6027}},{"uid":"24d6df877cb8d7d6","reportUrl":"https://nova-wallet.github.io/test-runner/2475//#testresult/24d6df877cb8d7d6","status":"passed","time":{"start":1676606831850,"stop":1676606836639,"duration":4789}},{"uid":"4055481f17d2f4ea","reportUrl":"https://nova-wallet.github.io/test-runner/2474//#testresult/4055481f17d2f4ea","status":"passed","time":{"start":1676593142451,"stop":1676593154671,"duration":12220}},{"uid":"ef06f01ae7978d3b","reportUrl":"https://nova-wallet.github.io/test-runner/2473//#testresult/ef06f01ae7978d3b","status":"passed","time":{"start":1676578018182,"stop":1676578024793,"duration":6611}},{"uid":"7027f07dcd534ce3","reportUrl":"https://nova-wallet.github.io/test-runner/2472//#testresult/7027f07dcd534ce3","status":"passed","time":{"start":1676563618439,"stop":1676563627471,"duration":9032}},{"uid":"4361b815b52b6818","reportUrl":"https://nova-wallet.github.io/test-runner/2471//#testresult/4361b815b52b6818","status":"passed","time":{"start":1676549331685,"stop":1676549337162,"duration":5477}},{"uid":"1b71fcc6d0571ef0","reportUrl":"https://nova-wallet.github.io/test-runner/2469//#testresult/1b71fcc6d0571ef0","status":"passed","time":{"start":1676520422088,"stop":1676520428147,"duration":6059}},{"uid":"2e406fc29e6ed6b3","reportUrl":"https://nova-wallet.github.io/test-runner/2468//#testresult/2e406fc29e6ed6b3","status":"passed","time":{"start":1676506596771,"stop":1676506602713,"duration":5942}},{"uid":"17fc842b64bee70","reportUrl":"https://nova-wallet.github.io/test-runner/2467//#testresult/17fc842b64bee70","status":"passed","time":{"start":1676491630912,"stop":1676491637709,"duration":6797}},{"uid":"45ebc70a68aff681","reportUrl":"https://nova-wallet.github.io/test-runner/2466//#testresult/45ebc70a68aff681","status":"passed","time":{"start":1676477236764,"stop":1676477241452,"duration":4688}},{"uid":"2314064ca779d61c","reportUrl":"https://nova-wallet.github.io/test-runner/2465//#testresult/2314064ca779d61c","status":"passed","time":{"start":1676462958347,"stop":1676462964028,"duration":5681}},{"uid":"fd99343f8f917d87","reportUrl":"https://nova-wallet.github.io/test-runner/2464//#testresult/fd99343f8f917d87","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1676448456884,"stop":1676448463104,"duration":6220}}]},"tags":[]},"source":"de7db893e364ab85.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff3c86e71c0>"]}