{"uid":"94655a4d8d7d1415","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1695052954507,"stop":1695052955213,"duration":706},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fea61da4d60>\nchain = <scripts.utils.chain_model.Chain object at 0x7fea61d7b400>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fea61da4d60>\nchain = <scripts.utils.chain_model.Chain object at 0x7fea61d7b400>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"b3334bcca14a94e7","name":"stdout","source":"b3334bcca14a94e7.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az810-170"},{"name":"thread","value":"2090-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fea61d7b400>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"82da4a4016962bd3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695052938679,"stop":1695052939470,"duration":791}},{"uid":"b29a02ec8288ccf7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695052922631,"stop":1695052923652,"duration":1021}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":139,"unknown":0,"total":153},"items":[{"uid":"8ea1b2e9a39b423b","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/8ea1b2e9a39b423b","status":"passed","time":{"start":1695067346555,"stop":1695067353356,"duration":6801}},{"uid":"f5b09130cb79443d","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/f5b09130cb79443d","status":"passed","time":{"start":1695038556761,"stop":1695038560684,"duration":3923}},{"uid":"7ecac553a765288f","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/7ecac553a765288f","status":"passed","time":{"start":1695024134571,"stop":1695024138894,"duration":4323}},{"uid":"5aaeafeedab3a463","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/5aaeafeedab3a463","status":"passed","time":{"start":1695009742830,"stop":1695009749624,"duration":6794}},{"uid":"1a2f871749c888cc","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/1a2f871749c888cc","status":"passed","time":{"start":1694995408129,"stop":1694995417807,"duration":9678}},{"uid":"2a009d0d01cf32da","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/2a009d0d01cf32da","status":"passed","time":{"start":1694980941167,"stop":1694980946089,"duration":4922}},{"uid":"fc018b9dc54a7fbd","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/fc018b9dc54a7fbd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694966545539,"stop":1694966546480,"duration":941}},{"uid":"3d548edf0b02d09a","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/3d548edf0b02d09a","status":"passed","time":{"start":1694952153149,"stop":1694952159286,"duration":6137}},{"uid":"8774b39c405491c3","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/8774b39c405491c3","status":"passed","time":{"start":1694937727547,"stop":1694937732357,"duration":4810}},{"uid":"f3ccb52808bfb6a8","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/f3ccb52808bfb6a8","status":"passed","time":{"start":1694923358268,"stop":1694923364150,"duration":5882}},{"uid":"a2ee8de3f1e6695e","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/a2ee8de3f1e6695e","status":"passed","time":{"start":1694909004568,"stop":1694909014006,"duration":9438}},{"uid":"59f64beffd00e492","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/59f64beffd00e492","status":"passed","time":{"start":1694894546407,"stop":1694894553026,"duration":6619}},{"uid":"9eba1f4498507244","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/9eba1f4498507244","status":"passed","time":{"start":1694880118113,"stop":1694880121850,"duration":3737}},{"uid":"cb5e8da7bdf57407","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/cb5e8da7bdf57407","status":"passed","time":{"start":1694865742101,"stop":1694865747055,"duration":4954}},{"uid":"ab8905f44c5d88c3","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/ab8905f44c5d88c3","status":"passed","time":{"start":1694851353357,"stop":1694851360568,"duration":7211}},{"uid":"e243a3e15fc1abbe","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/e243a3e15fc1abbe","status":"passed","time":{"start":1694836945134,"stop":1694836951872,"duration":6738}},{"uid":"aed33bcbfcd83999","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/aed33bcbfcd83999","status":"passed","time":{"start":1694822573146,"stop":1694822577172,"duration":4026}},{"uid":"cc53da1cd42bb51e","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/cc53da1cd42bb51e","status":"passed","time":{"start":1694808134920,"stop":1694808138434,"duration":3514}},{"uid":"d3149cb0a2febe9a","reportUrl":"https://novasamatech.github.io/test-runner/3774//#testresult/d3149cb0a2febe9a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694793768871,"stop":1694793769853,"duration":982}},{"uid":"aa2974b9a0c5a578","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/aa2974b9a0c5a578","status":"passed","time":{"start":1694779382451,"stop":1694779389172,"duration":6721}}]},"tags":[]},"source":"94655a4d8d7d1415.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fea61d7b400>"]}