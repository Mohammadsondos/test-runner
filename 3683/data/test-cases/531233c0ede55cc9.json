{"uid":"531233c0ede55cc9","name":"testBalancesLoading[Getting balance for Centrifuge Parachain network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Centrifuge Parachain network]","historyId":"c11994a2b8e63f2d1b4981a1b9a932ac","time":{"start":1693498552751,"stop":1693498632825,"duration":80074},"status":"broken","statusMessage":"Socket state: Connected(url=wss://centrifuge-parachain.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(2002324450)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=2292ec85d3a3e8309a787aadb548c703, initiatorId=2002324450)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://centrifuge-parachain.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(2002324450)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=2292ec85d3a3e8309a787aadb548c703, initiatorId=2002324450)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Centrifuge Parachain network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":47,"unknown":0,"total":48},"items":[{"uid":"e61fa81573d47de8","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/e61fa81573d47de8","status":"passed","time":{"start":1693484226390,"stop":1693484226618,"duration":228}},{"uid":"b6a760d98f20ac59","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/b6a760d98f20ac59","status":"passed","time":{"start":1693469663776,"stop":1693469664067,"duration":291}},{"uid":"d46ad7b81b2b5bf2","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/d46ad7b81b2b5bf2","status":"passed","time":{"start":1693455405526,"stop":1693455408262,"duration":2736}},{"uid":"52b5bec47ac1ea7a","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/52b5bec47ac1ea7a","status":"passed","time":{"start":1693441089490,"stop":1693441089722,"duration":232}},{"uid":"d9bc02f0518564b3","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/d9bc02f0518564b3","status":"passed","time":{"start":1693426713548,"stop":1693426713810,"duration":262}},{"uid":"fdfe1d7bc28e3094","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/fdfe1d7bc28e3094","status":"passed","time":{"start":1693412192774,"stop":1693412192995,"duration":221}},{"uid":"f12dd730c7f02249","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/f12dd730c7f02249","status":"passed","time":{"start":1693397704230,"stop":1693397704490,"duration":260}},{"uid":"204582fb47b9e3d4","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/204582fb47b9e3d4","status":"passed","time":{"start":1693383329462,"stop":1693383329708,"duration":246}},{"uid":"74e9f51746f0fc1","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/74e9f51746f0fc1","status":"passed","time":{"start":1693368848617,"stop":1693368848851,"duration":234}},{"uid":"fbf92092f6f75a35","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/fbf92092f6f75a35","status":"passed","time":{"start":1693354553305,"stop":1693354553541,"duration":236}},{"uid":"bab6600a54852def","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/bab6600a54852def","status":"passed","time":{"start":1693340252348,"stop":1693340252616,"duration":268}},{"uid":"69dbc922398a1e2d","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/69dbc922398a1e2d","status":"passed","time":{"start":1693325811089,"stop":1693325811714,"duration":625}},{"uid":"b14cbf22e9d22b32","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/b14cbf22e9d22b32","status":"passed","time":{"start":1693311342531,"stop":1693311342780,"duration":249}},{"uid":"24585cade1298d5b","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/24585cade1298d5b","status":"passed","time":{"start":1693296925983,"stop":1693296926303,"duration":320}},{"uid":"1787d80ac505f537","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/1787d80ac505f537","status":"passed","time":{"start":1693282638677,"stop":1693282638953,"duration":276}},{"uid":"9906732ebfb07d6f","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/9906732ebfb07d6f","status":"passed","time":{"start":1693268285500,"stop":1693268285756,"duration":256}},{"uid":"4fe2b9d0c77c94a7","reportUrl":"https://novasamatech.github.io/test-runner/3666//#testresult/4fe2b9d0c77c94a7","status":"passed","time":{"start":1693253743304,"stop":1693253743564,"duration":260}},{"uid":"1ac01066116f384d","reportUrl":"https://novasamatech.github.io/test-runner/3665//#testresult/1ac01066116f384d","status":"passed","time":{"start":1693239454244,"stop":1693239454445,"duration":201}},{"uid":"f89aa6e014863364","reportUrl":"https://novasamatech.github.io/test-runner/3664//#testresult/f89aa6e014863364","status":"passed","time":{"start":1693224899804,"stop":1693224900130,"duration":326}},{"uid":"58fd9552d7e89ac5","reportUrl":"https://novasamatech.github.io/test-runner/3663//#testresult/58fd9552d7e89ac5","status":"passed","time":{"start":1693210648343,"stop":1693210648989,"duration":646}}]},"tags":[]},"source":"531233c0ede55cc9.json","parameterValues":[]}