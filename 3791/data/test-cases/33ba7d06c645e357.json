{"uid":"33ba7d06c645e357","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1695038603571,"stop":1695038604453,"duration":882},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0e1046fd30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0e1051da50>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0e1046fd30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0e1051da50>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"2c0603865536b2ee","name":"stdout","source":"2c0603865536b2ee.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az338-624"},{"name":"thread","value":"2026-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0e1051da50>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e0e22ff426d1b214","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695038587643,"stop":1695038588544,"duration":901}},{"uid":"7a8cec364ca9c09a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695038571714,"stop":1695038572615,"duration":901}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":146,"unknown":0,"total":151},"items":[{"uid":"43d80173675cd209","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/43d80173675cd209","status":"passed","time":{"start":1695024161421,"stop":1695024167012,"duration":5591}},{"uid":"97e4b6e0e04ce384","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/97e4b6e0e04ce384","status":"passed","time":{"start":1695009779317,"stop":1695009784864,"duration":5547}},{"uid":"589f905a3eb3de83","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/589f905a3eb3de83","status":"passed","time":{"start":1694995442380,"stop":1694995449452,"duration":7072}},{"uid":"929aeb43bf36e65f","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/929aeb43bf36e65f","status":"passed","time":{"start":1694980970893,"stop":1694980976738,"duration":5845}},{"uid":"6cd21aaf786cf560","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/6cd21aaf786cf560","status":"passed","time":{"start":1694966541971,"stop":1694966544851,"duration":2880}},{"uid":"207f43f6ab4e5ab4","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/207f43f6ab4e5ab4","status":"passed","time":{"start":1694952196325,"stop":1694952200747,"duration":4422}},{"uid":"76b3d114e770b11","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/76b3d114e770b11","status":"passed","time":{"start":1694937746735,"stop":1694937750171,"duration":3436}},{"uid":"27d2e71f633e630d","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/27d2e71f633e630d","status":"passed","time":{"start":1694923395699,"stop":1694923401647,"duration":5948}},{"uid":"a7e40f95d1183a","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/a7e40f95d1183a","status":"passed","time":{"start":1694909044643,"stop":1694909050643,"duration":6000}},{"uid":"9ce8cc2c55be42f4","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/9ce8cc2c55be42f4","status":"passed","time":{"start":1694894565452,"stop":1694894570750,"duration":5298}},{"uid":"390a8426f33b31af","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/390a8426f33b31af","status":"passed","time":{"start":1694880166158,"stop":1694880170367,"duration":4209}},{"uid":"dbe9f1e0e0cb56c6","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/dbe9f1e0e0cb56c6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694865782861,"stop":1694865784270,"duration":1409}},{"uid":"aea15ca06ab58c7c","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/aea15ca06ab58c7c","status":"passed","time":{"start":1694851381750,"stop":1694851388573,"duration":6823}},{"uid":"61457ecc118714ba","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/61457ecc118714ba","status":"passed","time":{"start":1694836969293,"stop":1694836977315,"duration":8022}},{"uid":"4620ac09ea9fdb94","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/4620ac09ea9fdb94","status":"passed","time":{"start":1694822599263,"stop":1694822605532,"duration":6269}},{"uid":"6f9fb02ed76ee45e","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/6f9fb02ed76ee45e","status":"passed","time":{"start":1694808181066,"stop":1694808184010,"duration":2944}},{"uid":"9e176fdeb079a0df","reportUrl":"https://novasamatech.github.io/test-runner/3774//#testresult/9e176fdeb079a0df","status":"passed","time":{"start":1694793765483,"stop":1694793769546,"duration":4063}},{"uid":"4e5322597e608ddf","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/4e5322597e608ddf","status":"passed","time":{"start":1694779401555,"stop":1694779408014,"duration":6459}},{"uid":"7c0ec6a9efb9b343","reportUrl":"https://novasamatech.github.io/test-runner/3772//#testresult/7c0ec6a9efb9b343","status":"passed","time":{"start":1694764968317,"stop":1694764973033,"duration":4716}},{"uid":"663463e90a8e5ccf","reportUrl":"https://novasamatech.github.io/test-runner/3771//#testresult/663463e90a8e5ccf","status":"passed","time":{"start":1694750612953,"stop":1694750623092,"duration":10139}}]},"tags":[]},"source":"33ba7d06c645e357.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0e1051da50>"]}