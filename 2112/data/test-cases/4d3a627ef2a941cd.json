{"uid":"4d3a627ef2a941cd","name":"test_can_create_connection[Test for Khala, url: wss://khala-api.phala.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b9ef5d231f3ccda572f27ab1ee01534b","time":{"start":1671437104968,"stop":1671437105252,"duration":284},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Khala', 'url': 'wss://khala-api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Khala', 'url': 'wss://khala-api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3dbe55642deab6f4","name":"stdout","source":"3dbe55642deab6f4.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az735-384"},{"name":"thread","value":"1779-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://khala-api.phala.network/ws', 'name': 'Khala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ecf4726c6489df6f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671437094589,"stop":1671437094893,"duration":304}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":57,"skipped":0,"passed":324,"unknown":0,"total":381},"items":[{"uid":"cce0e93bd891e88c","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/cce0e93bd891e88c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671422708418,"stop":1671422708676,"duration":258}},{"uid":"d321b0937cdb9d30","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/d321b0937cdb9d30","status":"passed","time":{"start":1671408794183,"stop":1671408794825,"duration":642}},{"uid":"de000083d9554450","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/de000083d9554450","status":"passed","time":{"start":1671393857807,"stop":1671393858186,"duration":379}},{"uid":"ab9f4363dd8d0d3","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/ab9f4363dd8d0d3","status":"passed","time":{"start":1671379492600,"stop":1671379493551,"duration":951}},{"uid":"2f5436755b1d22c4","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/2f5436755b1d22c4","status":"passed","time":{"start":1671365262046,"stop":1671365262965,"duration":919}},{"uid":"a1cd9303b304a974","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/a1cd9303b304a974","status":"passed","time":{"start":1671350804369,"stop":1671350805273,"duration":904}},{"uid":"860c6a56d5327f0a","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/860c6a56d5327f0a","status":"passed","time":{"start":1671336307679,"stop":1671336308598,"duration":919}},{"uid":"45c3e34271e073e0","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/45c3e34271e073e0","status":"passed","time":{"start":1671322428938,"stop":1671322429914,"duration":976}},{"uid":"eec2759458d8fa53","reportUrl":"https://nova-wallet.github.io/test-runner/2103//#testresult/eec2759458d8fa53","status":"passed","time":{"start":1671307456092,"stop":1671307456991,"duration":899}},{"uid":"8b24e0ecb02a751a","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/8b24e0ecb02a751a","status":"passed","time":{"start":1671293078021,"stop":1671293078944,"duration":923}},{"uid":"e6783f69899d802e","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/e6783f69899d802e","status":"passed","time":{"start":1671278692543,"stop":1671278693461,"duration":918}},{"uid":"2de0829db17ab987","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/2de0829db17ab987","status":"passed","time":{"start":1671264317325,"stop":1671264318220,"duration":895}},{"uid":"d6fffd8e0a21ab4b","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/d6fffd8e0a21ab4b","status":"passed","time":{"start":1671249869641,"stop":1671249870575,"duration":934}},{"uid":"623a996378a7c88e","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/623a996378a7c88e","status":"passed","time":{"start":1671235969369,"stop":1671235970280,"duration":911}},{"uid":"1167a8be1137f0f","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/1167a8be1137f0f","status":"passed","time":{"start":1671221072952,"stop":1671221073902,"duration":950}},{"uid":"f9c4763d8845d79e","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/f9c4763d8845d79e","status":"passed","time":{"start":1671206669350,"stop":1671206670284,"duration":934}},{"uid":"aa46c5b9ee0fe7f0","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/aa46c5b9ee0fe7f0","status":"passed","time":{"start":1671192307497,"stop":1671192308392,"duration":895}},{"uid":"18b44bfe9a7f4ba0","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/18b44bfe9a7f4ba0","status":"passed","time":{"start":1671177889452,"stop":1671177890399,"duration":947}},{"uid":"b7bae823a18cda1d","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/b7bae823a18cda1d","status":"passed","time":{"start":1671163493279,"stop":1671163494303,"duration":1024}},{"uid":"97382bacf7b46976","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/97382bacf7b46976","status":"passed","time":{"start":1671149632286,"stop":1671149633191,"duration":905}}]},"tags":[]},"source":"4d3a627ef2a941cd.json","parameterValues":["{'url': 'wss://khala-api.phala.network/ws', 'name': 'Khala'}"]}