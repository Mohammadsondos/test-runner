{"uid":"d3149cb0a2febe9a","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1694793768871,"stop":1694793769853,"duration":982},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb0152edc30>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb01554eec0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb0152edc30>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb01554eec0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"5a7c5d584396174","name":"stdout","source":"5a7c5d584396174.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az477-63"},{"name":"thread","value":"2175-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb01554eec0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2a73577013026626","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694793752898,"stop":1694793753856,"duration":958}},{"uid":"a7c5131869fa9ebe","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694793736687,"stop":1694793737868,"duration":1181}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":122,"unknown":0,"total":134},"items":[{"uid":"aa2974b9a0c5a578","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/aa2974b9a0c5a578","status":"passed","time":{"start":1694779382451,"stop":1694779389172,"duration":6721}},{"uid":"ce861fa01781804b","reportUrl":"https://novasamatech.github.io/test-runner/3772//#testresult/ce861fa01781804b","status":"passed","time":{"start":1694764926202,"stop":1694764929545,"duration":3343}},{"uid":"1064a138357401ef","reportUrl":"https://novasamatech.github.io/test-runner/3771//#testresult/1064a138357401ef","status":"passed","time":{"start":1694750564624,"stop":1694750571938,"duration":7314}},{"uid":"78a063df8cf611f9","reportUrl":"https://novasamatech.github.io/test-runner/3770//#testresult/78a063df8cf611f9","status":"passed","time":{"start":1694736183960,"stop":1694736187828,"duration":3868}},{"uid":"3a57e4ea34c2f89a","reportUrl":"https://novasamatech.github.io/test-runner/3769//#testresult/3a57e4ea34c2f89a","status":"passed","time":{"start":1694721724526,"stop":1694721728022,"duration":3496}},{"uid":"3c52ef6c04edf8c4","reportUrl":"https://novasamatech.github.io/test-runner/3768//#testresult/3c52ef6c04edf8c4","status":"passed","time":{"start":1694707350206,"stop":1694707354216,"duration":4010}},{"uid":"667e5c772074ec06","reportUrl":"https://novasamatech.github.io/test-runner/3767//#testresult/667e5c772074ec06","status":"passed","time":{"start":1694692947045,"stop":1694692951577,"duration":4532}},{"uid":"c81c09cf38ce831b","reportUrl":"https://novasamatech.github.io/test-runner/3766//#testresult/c81c09cf38ce831b","status":"passed","time":{"start":1694678558388,"stop":1694678564163,"duration":5775}},{"uid":"276ec3035547f882","reportUrl":"https://novasamatech.github.io/test-runner/3765//#testresult/276ec3035547f882","status":"passed","time":{"start":1694664129231,"stop":1694664133820,"duration":4589}},{"uid":"b6c97d48165524bd","reportUrl":"https://novasamatech.github.io/test-runner/3764//#testresult/b6c97d48165524bd","status":"passed","time":{"start":1694649777311,"stop":1694649781130,"duration":3819}},{"uid":"e9239b780e4782a2","reportUrl":"https://novasamatech.github.io/test-runner/3763//#testresult/e9239b780e4782a2","status":"passed","time":{"start":1694635340567,"stop":1694635344633,"duration":4066}},{"uid":"3fecda926b6afc88","reportUrl":"https://novasamatech.github.io/test-runner/3762//#testresult/3fecda926b6afc88","status":"passed","time":{"start":1694620930231,"stop":1694620933851,"duration":3620}},{"uid":"4c007bed92c064de","reportUrl":"https://novasamatech.github.io/test-runner/3761//#testresult/4c007bed92c064de","status":"passed","time":{"start":1694606542742,"stop":1694606547350,"duration":4608}},{"uid":"dabf94f01120de62","reportUrl":"https://novasamatech.github.io/test-runner/3760//#testresult/dabf94f01120de62","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694597354377,"stop":1694597355185,"duration":808}},{"uid":"3d4a5e5e49a72a64","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/3d4a5e5e49a72a64","status":"passed","time":{"start":1694592139642,"stop":1694592143455,"duration":3813}},{"uid":"3a2ea53b7d9a8d3f","reportUrl":"https://novasamatech.github.io/test-runner/3758//#testresult/3a2ea53b7d9a8d3f","status":"passed","time":{"start":1694577735662,"stop":1694577739620,"duration":3958}},{"uid":"1b792ed7c96253d8","reportUrl":"https://novasamatech.github.io/test-runner/3757//#testresult/1b792ed7c96253d8","status":"passed","time":{"start":1694563389900,"stop":1694563395980,"duration":6080}},{"uid":"3946849128e16ec7","reportUrl":"https://novasamatech.github.io/test-runner/3756//#testresult/3946849128e16ec7","status":"passed","time":{"start":1694548946326,"stop":1694548950186,"duration":3860}},{"uid":"2d2893bebf293aa8","reportUrl":"https://novasamatech.github.io/test-runner/3755//#testresult/2d2893bebf293aa8","status":"passed","time":{"start":1694534527867,"stop":1694534531553,"duration":3686}},{"uid":"abb449fb29e72fad","reportUrl":"https://novasamatech.github.io/test-runner/3754//#testresult/abb449fb29e72fad","status":"passed","time":{"start":1694520150640,"stop":1694520155139,"duration":4499}}]},"tags":[]},"source":"d3149cb0a2febe9a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb01554eec0>"]}