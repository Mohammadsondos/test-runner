{"uid":"3e3eb13bd66c193f","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://1rpc.io/eth]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"9e0c16e1a7876bd51b49d655a0298c26","time":{"start":1715702494919,"stop":1715702505111,"duration":10192},"status":"failed","statusMessage":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f55bd750>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f55bd750>> = <web3.main.Web3 object at 0x7fb9f55bd750>.is_connected","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7fb9f7869cc0>\ndata = {'name': 'Ethereum', 'url': 'https://1rpc.io/eth'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n>       assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\nE       AssertionError: Failed to connect to Ethereum RPC node\nE       assert False\nE        +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f55bd750>>()\nE        +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f55bd750>> = <web3.main.Web3 object at 0x7fb9f55bd750>.is_connected\n\ntests/test_eth_nodes_availability.py:37: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1114-78"},{"name":"thread","value":"2153-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c3a67e16aa9247ea","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f77627a0>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f77627a0>> = <web3.main.Web3 object at 0x7fb9f77627a0>.is_connected","time":{"start":1715702479729,"stop":1715702489908,"duration":10179}},{"uid":"c253b3434d6e6501","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f770b0a0>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fb9f770b0a0>> = <web3.main.Web3 object at 0x7fb9f770b0a0>.is_connected","time":{"start":1715702461928,"stop":1715702474661,"duration":12733}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":74,"skipped":0,"passed":1241,"unknown":0,"total":1323},"items":[{"uid":"6c2bd954a7777fd4","reportUrl":"https://novasamatech.github.io/test-runner/5245//#testresult/6c2bd954a7777fd4","status":"passed","time":{"start":1715673683586,"stop":1715673685875,"duration":2289}},{"uid":"f193de55bba56b17","reportUrl":"https://novasamatech.github.io/test-runner/5246//#testresult/f193de55bba56b17","status":"passed","time":{"start":1715688064332,"stop":1715688065178,"duration":846}},{"uid":"77d9f80abcc036fc","reportUrl":"https://novasamatech.github.io/test-runner/5244//#testresult/77d9f80abcc036fc","status":"passed","time":{"start":1715659262839,"stop":1715659263332,"duration":493}},{"uid":"26cf38c51fa1b8c","reportUrl":"https://novasamatech.github.io/test-runner/5243//#testresult/26cf38c51fa1b8c","status":"passed","time":{"start":1715644917438,"stop":1715644918852,"duration":1414}},{"uid":"7c04caa3ae42c881","reportUrl":"https://novasamatech.github.io/test-runner/5241//#testresult/7c04caa3ae42c881","status":"passed","time":{"start":1715616072872,"stop":1715616074691,"duration":1819}},{"uid":"e3193df29effe3a7","reportUrl":"https://novasamatech.github.io/test-runner/5242//#testresult/e3193df29effe3a7","status":"passed","time":{"start":1715630466115,"stop":1715630467229,"duration":1114}},{"uid":"4f0ed20b24645aff","reportUrl":"https://novasamatech.github.io/test-runner/5239//#testresult/4f0ed20b24645aff","status":"passed","time":{"start":1715587276693,"stop":1715587278116,"duration":1423}},{"uid":"1bd5733bbd31fb4","reportUrl":"https://novasamatech.github.io/test-runner/5240//#testresult/1bd5733bbd31fb4","status":"passed","time":{"start":1715601665394,"stop":1715601666646,"duration":1252}},{"uid":"4bcf8f8e9a9a7480","reportUrl":"https://novasamatech.github.io/test-runner/5238//#testresult/4bcf8f8e9a9a7480","status":"passed","time":{"start":1715572868713,"stop":1715572869771,"duration":1058}},{"uid":"c69d5d333f5da990","reportUrl":"https://novasamatech.github.io/test-runner/5237//#testresult/c69d5d333f5da990","status":"passed","time":{"start":1715558510776,"stop":1715558511678,"duration":902}},{"uid":"1e652ceb8bee281a","reportUrl":"https://novasamatech.github.io/test-runner/5236//#testresult/1e652ceb8bee281a","status":"passed","time":{"start":1715544057815,"stop":1715544059490,"duration":1675}},{"uid":"2162902f03fd54ab","reportUrl":"https://novasamatech.github.io/test-runner/5235//#testresult/2162902f03fd54ab","status":"passed","time":{"start":1715529665554,"stop":1715529666605,"duration":1051}},{"uid":"57454453a26e0189","reportUrl":"https://novasamatech.github.io/test-runner/5234//#testresult/57454453a26e0189","status":"passed","time":{"start":1715515261072,"stop":1715515262224,"duration":1152}},{"uid":"39d80fd7cd0be258","reportUrl":"https://novasamatech.github.io/test-runner/5233//#testresult/39d80fd7cd0be258","status":"passed","time":{"start":1715500866977,"stop":1715500868725,"duration":1748}},{"uid":"114420ec87389c02","reportUrl":"https://novasamatech.github.io/test-runner/5231//#testresult/114420ec87389c02","status":"passed","time":{"start":1715472103489,"stop":1715472104439,"duration":950}},{"uid":"5f2d1bb3487701fb","reportUrl":"https://novasamatech.github.io/test-runner/5232//#testresult/5f2d1bb3487701fb","status":"failed","statusDetails":"AssertionError: Difference in block numbers is greater than 3:            wss_block_number=19851422, rpc_block_number=19851414\nassert 8 <= 3\n +  where 8 = abs((19851422 - 19851414))","time":{"start":1715486470366,"stop":1715486471159,"duration":793}},{"uid":"477998b1bb893104","reportUrl":"https://novasamatech.github.io/test-runner/5230//#testresult/477998b1bb893104","status":"passed","time":{"start":1715457659865,"stop":1715457660715,"duration":850}},{"uid":"ffb52914319bcf67","reportUrl":"https://novasamatech.github.io/test-runner/5229//#testresult/ffb52914319bcf67","status":"passed","time":{"start":1715443267481,"stop":1715443268477,"duration":996}},{"uid":"242d2bc94b645793","reportUrl":"https://novasamatech.github.io/test-runner/5228//#testresult/242d2bc94b645793","status":"passed","time":{"start":1715428878176,"stop":1715428879837,"duration":1661}},{"uid":"b3139b81c07117ee","reportUrl":"https://novasamatech.github.io/test-runner/5226//#testresult/b3139b81c07117ee","status":"passed","time":{"start":1715400060702,"stop":1715400061982,"duration":1280}}]},"tags":[]},"source":"3e3eb13bd66c193f.json","parameterValues":["{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"]}