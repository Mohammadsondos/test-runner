{"uid":"e73f50aa6c0d97df","name":"test_rpc_node_work_fast[Test for Ethereum, url: https://api.securerpc.com/v1]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_work_fast","historyId":"6a4ac116eb5566e5ddc9be64a3b58657","time":{"start":1705449802772,"stop":1705449802863,"duration":91},"status":"broken","statusMessage":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7ff1ac6e0c10>\ndata = {'name': 'Ethereum', 'url': 'https://api.securerpc.com/v1'}\n\n    def test_rpc_node_work_fast(self, data):\n    \n        w3 = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to Ethereum RPC node\n        assert w3.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Measure time taken to retrieve current block\n        start_time = time.time()\n>       block = w3.eth.get_block('latest')\n\ntests/test_eth_nodes_availability.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:389: in get_block\n    return self._get_block(block_identifier, full_transactions)\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'error': {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries e...fely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}, 'id': 1, 'jsonrpc': '2.0'}\nparams = ('latest', False)\nerror_formatters = <cyfunction identity at 0x7ff1aec7a400>\nnull_result_formatters = <function raise_block_not_found at 0x7ff1ad813250>\n\n    @staticmethod\n    def formatted_response(\n        response: RPCResponse,\n        params: Any,\n        error_formatters: Optional[Callable[..., Any]] = None,\n        null_result_formatters: Optional[Callable[..., Any]] = None,\n    ) -> Any:\n        if \"error\" in response:\n            apply_error_formatters(error_formatters, response)\n    \n            # guard against eth-tester case - eth-tester returns a string\n            # with no code, so can't parse what the error is.\n            if isinstance(response[\"error\"], dict):\n                resp_code = response[\"error\"].get(\"code\")\n                if resp_code == -32601:\n                    raise MethodUnavailable(response[\"error\"])\n>           raise ValueError(response[\"error\"])\nE           ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}\n\n.venv/lib/python3.10/site-packages/web3/manager.py:205: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1200-785"},{"name":"thread","value":"2140-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"232c29b674e41342","status":"broken","statusDetails":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","time":{"start":1705449777487,"stop":1705449787741,"duration":10254}},{"uid":"9f2e42e7f4c7a70e","status":"broken","statusDetails":"requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.securerpc.com', port=443): Read timed out. (read timeout=10)","time":{"start":1705449711855,"stop":1705449762260,"duration":50405}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":739,"unknown":0,"total":740},"items":[{"uid":"42917d18d46b237d","reportUrl":"https://novasamatech.github.io/test-runner/4525//#testresult/42917d18d46b237d","status":"passed","time":{"start":1705435278109,"stop":1705435278365,"duration":256}},{"uid":"99392e1ba0d30596","reportUrl":"https://novasamatech.github.io/test-runner/4524//#testresult/99392e1ba0d30596","status":"passed","time":{"start":1705420866532,"stop":1705420867010,"duration":478}},{"uid":"7d61fc3ecb78b74","reportUrl":"https://novasamatech.github.io/test-runner/4523//#testresult/7d61fc3ecb78b74","status":"passed","time":{"start":1705406468889,"stop":1705406469178,"duration":289}},{"uid":"354e6da15228c64f","reportUrl":"https://novasamatech.github.io/test-runner/4522//#testresult/354e6da15228c64f","status":"passed","time":{"start":1705392064207,"stop":1705392064565,"duration":358}},{"uid":"dd159002e2ec84f","reportUrl":"https://novasamatech.github.io/test-runner/4521//#testresult/dd159002e2ec84f","status":"passed","time":{"start":1705377668741,"stop":1705377669237,"duration":496}},{"uid":"a5b869f3c5547b99","reportUrl":"https://novasamatech.github.io/test-runner/4520//#testresult/a5b869f3c5547b99","status":"passed","time":{"start":1705363306180,"stop":1705363306457,"duration":277}},{"uid":"5ba5d20c45669d6b","reportUrl":"https://novasamatech.github.io/test-runner/4519//#testresult/5ba5d20c45669d6b","status":"passed","time":{"start":1705348864338,"stop":1705348864829,"duration":491}},{"uid":"aff93065206e60f4","reportUrl":"https://novasamatech.github.io/test-runner/4518//#testresult/aff93065206e60f4","status":"passed","time":{"start":1705334470561,"stop":1705334471070,"duration":509}},{"uid":"44ea0e1fa66bba7e","reportUrl":"https://novasamatech.github.io/test-runner/4517//#testresult/44ea0e1fa66bba7e","status":"passed","time":{"start":1705320070051,"stop":1705320070784,"duration":733}},{"uid":"6414bc4b5cc05f22","reportUrl":"https://novasamatech.github.io/test-runner/4516//#testresult/6414bc4b5cc05f22","status":"passed","time":{"start":1705305672667,"stop":1705305673331,"duration":664}},{"uid":"e2fb959f6fb5cf7","reportUrl":"https://novasamatech.github.io/test-runner/4515//#testresult/e2fb959f6fb5cf7","status":"passed","time":{"start":1705291266451,"stop":1705291266872,"duration":421}},{"uid":"74d5ffb376c3c937","reportUrl":"https://novasamatech.github.io/test-runner/4514//#testresult/74d5ffb376c3c937","status":"passed","time":{"start":1705276910184,"stop":1705276910658,"duration":474}},{"uid":"4579a7b95dc3aa8d","reportUrl":"https://novasamatech.github.io/test-runner/4513//#testresult/4579a7b95dc3aa8d","status":"passed","time":{"start":1705262461276,"stop":1705262462443,"duration":1167}},{"uid":"7ffbcf13585c9c96","reportUrl":"https://novasamatech.github.io/test-runner/4512//#testresult/7ffbcf13585c9c96","status":"passed","time":{"start":1705248066348,"stop":1705248066646,"duration":298}},{"uid":"2dde9cd6f2c432d9","reportUrl":"https://novasamatech.github.io/test-runner/4511//#testresult/2dde9cd6f2c432d9","status":"passed","time":{"start":1705233662892,"stop":1705233663117,"duration":225}},{"uid":"bdaf1ca1959ac6e8","reportUrl":"https://novasamatech.github.io/test-runner/4510//#testresult/bdaf1ca1959ac6e8","status":"passed","time":{"start":1705219262424,"stop":1705219262670,"duration":246}},{"uid":"635456f9f4594ab5","reportUrl":"https://novasamatech.github.io/test-runner/4509//#testresult/635456f9f4594ab5","status":"passed","time":{"start":1705204865932,"stop":1705204866267,"duration":335}},{"uid":"b4d30b92bdddd843","reportUrl":"https://novasamatech.github.io/test-runner/4508//#testresult/b4d30b92bdddd843","status":"passed","time":{"start":1705190512885,"stop":1705190513264,"duration":379}},{"uid":"3d982b90072ae971","reportUrl":"https://novasamatech.github.io/test-runner/4507//#testresult/3d982b90072ae971","status":"passed","time":{"start":1705176060448,"stop":1705176060716,"duration":268}},{"uid":"966ec7849b0d609b","reportUrl":"https://novasamatech.github.io/test-runner/4506//#testresult/966ec7849b0d609b","status":"passed","time":{"start":1705161661445,"stop":1705161661599,"duration":154}}]},"tags":[]},"source":"e73f50aa6c0d97df.json","parameterValues":["{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"]}