{"uid":"c227bf3fa54321a3","name":"test_precision[Test for krest]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"b172a6db002daec6b0c22e96738764d9","time":{"start":1691611541774,"stop":1691611542700,"duration":926},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f7587698250>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7587650910>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f7587698250>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7587650910>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"df111257f364913d","name":"stdout","source":"df111257f364913d.txt","type":"text/plain","size":1029}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az795-419"},{"name":"thread","value":"1947-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f7587650910>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4ab7cc857826575","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691611525773,"stop":1691611526746,"duration":973}},{"uid":"a4085a205bc9be14","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691611508781,"stop":1691611510530,"duration":1749}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":4,"unknown":0,"total":8},"items":[{"uid":"ed80b86f0ee69f6e","reportUrl":"https://novasamatech.github.io/test-runner/3543//#testresult/ed80b86f0ee69f6e","status":"passed","time":{"start":1691597147079,"stop":1691597151016,"duration":3937}},{"uid":"57ea2ee2bb940ffe","reportUrl":"https://novasamatech.github.io/test-runner/3542//#testresult/57ea2ee2bb940ffe","status":"passed","time":{"start":1691582805883,"stop":1691582809584,"duration":3701}},{"uid":"7f75a71e40e91dee","reportUrl":"https://novasamatech.github.io/test-runner/3541//#testresult/7f75a71e40e91dee","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691568382962,"stop":1691568383684,"duration":722}},{"uid":"4ba2b9ff293e085e","reportUrl":"https://novasamatech.github.io/test-runner/3540//#testresult/4ba2b9ff293e085e","status":"passed","time":{"start":1691553933234,"stop":1691553937911,"duration":4677}},{"uid":"a16b379453cd2531","reportUrl":"https://novasamatech.github.io/test-runner/3539//#testresult/a16b379453cd2531","status":"passed","time":{"start":1691540110137,"stop":1691540115261,"duration":5124}},{"uid":"a7ddf3ed1149abf1","reportUrl":"https://novasamatech.github.io/test-runner/3538//#testresult/a7ddf3ed1149abf1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691525168661,"stop":1691525169444,"duration":783}},{"uid":"2727895d993b3684","reportUrl":"https://novasamatech.github.io/test-runner/3537//#testresult/2727895d993b3684","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691510738513,"stop":1691510739132,"duration":619}}]},"tags":[]},"source":"c227bf3fa54321a3.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f7587650910>"]}