{"uid":"293337c59941bf36","name":"test_can_create_connection[Test for Kylin, url: wss://polkadot.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3ee0d191ab7acb2fad9a82a3aa808e89","time":{"start":1699632133842,"stop":1699632134055,"duration":213},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 10 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 10 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 10 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 10 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3aeb8f6b2e57a515","name":"stdout","source":"3aeb8f6b2e57a515.txt","type":"text/plain","size":1410}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az193-351"},{"name":"thread","value":"2094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c3925ac1c289c799","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 10 Nov 2023 16:01:58 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699632118541,"stop":1699632118752,"duration":211}},{"uid":"302c8ff83996b22e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Fri, 10 Nov 2023 16:01:43 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699632103122,"stop":1699632103342,"duration":220}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":43,"skipped":0,"passed":429,"unknown":0,"total":472},"items":[{"uid":"f4802bcbf6e101ec","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/f4802bcbf6e101ec","status":"passed","time":{"start":1699617722866,"stop":1699617722913,"duration":47}},{"uid":"e4da0bb5c8e992af","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/e4da0bb5c8e992af","status":"passed","time":{"start":1699603353407,"stop":1699603353799,"duration":392}},{"uid":"77f491cbdba1b8b9","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/77f491cbdba1b8b9","status":"passed","time":{"start":1699588964882,"stop":1699588965019,"duration":137}},{"uid":"8ea1b17d4a623991","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/8ea1b17d4a623991","status":"passed","time":{"start":1699574545412,"stop":1699574545487,"duration":75}},{"uid":"e36ec850f8d90c4a","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/e36ec850f8d90c4a","status":"passed","time":{"start":1699560123617,"stop":1699560123875,"duration":258}},{"uid":"8713743cfc2af7b2","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/8713743cfc2af7b2","status":"passed","time":{"start":1699545708652,"stop":1699545708739,"duration":87}},{"uid":"952c0002e04b5b23","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/952c0002e04b5b23","status":"passed","time":{"start":1699531390276,"stop":1699531390373,"duration":97}},{"uid":"b6d74d6420021e4e","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/b6d74d6420021e4e","status":"passed","time":{"start":1699516913280,"stop":1699516913447,"duration":167}},{"uid":"96cd632125a200f3","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/96cd632125a200f3","status":"passed","time":{"start":1699502495838,"stop":1699502495950,"duration":112}},{"uid":"91cea9ce8021831e","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/91cea9ce8021831e","status":"passed","time":{"start":1699488149945,"stop":1699488150316,"duration":371}},{"uid":"21145eb6b9214cb4","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/21145eb6b9214cb4","status":"passed","time":{"start":1699473684853,"stop":1699473685000,"duration":147}},{"uid":"9ef761007f5a336d","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/9ef761007f5a336d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:02:03 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699459323479,"stop":1699459323503,"duration":24}},{"uid":"47044511db71fab5","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/47044511db71fab5","status":"passed","time":{"start":1699444900584,"stop":1699444900855,"duration":271}},{"uid":"4d1926a26e9dc406","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/4d1926a26e9dc406","status":"passed","time":{"start":1699430498497,"stop":1699430498727,"duration":230}},{"uid":"a836ab8cb7b3634a","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/a836ab8cb7b3634a","status":"passed","time":{"start":1699416113956,"stop":1699416114385,"duration":429}},{"uid":"6356a99801f064e0","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/6356a99801f064e0","status":"passed","time":{"start":1699401732443,"stop":1699401732626,"duration":183}},{"uid":"f0a17f63fbc8a93e","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/f0a17f63fbc8a93e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Tue, 07 Nov 2023 20:01:58 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699387318228,"stop":1699387318274,"duration":46}},{"uid":"602bf6c5e86b1b78","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/602bf6c5e86b1b78","status":"passed","time":{"start":1699372902631,"stop":1699372902688,"duration":57}},{"uid":"951006d4adf4e1c0","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/951006d4adf4e1c0","status":"passed","time":{"start":1699358510319,"stop":1699358510411,"duration":92}},{"uid":"47c3d7d092c290b4","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/47c3d7d092c290b4","status":"passed","time":{"start":1699344090955,"stop":1699344091309,"duration":354}}]},"tags":[]},"source":"293337c59941bf36.json","parameterValues":["{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"]}