{"uid":"62e317e71664d99","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1699632190803,"stop":1699632191779,"duration":976},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f41a454b3a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f41a4555a20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f41a454b3a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f41a4555a20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"35d46806f020bd16","name":"stdout","source":"35d46806f020bd16.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az193-351"},{"name":"thread","value":"2101-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f41a4555a20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"48994311bba67c8f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699632174717,"stop":1699632175775,"duration":1058}},{"uid":"4ccecf4ac6b5ed8a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699632158212,"stop":1699632159682,"duration":1470}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":65,"skipped":0,"passed":406,"unknown":0,"total":471},"items":[{"uid":"6320d2dcc42ec50","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/6320d2dcc42ec50","status":"passed","time":{"start":1699617752856,"stop":1699617755776,"duration":2920}},{"uid":"f057d41e69030f9a","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/f057d41e69030f9a","status":"passed","time":{"start":1699603361801,"stop":1699603365143,"duration":3342}},{"uid":"d67808efbf0790d3","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/d67808efbf0790d3","status":"passed","time":{"start":1699588966704,"stop":1699588970398,"duration":3694}},{"uid":"d0010617a608b3fb","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/d0010617a608b3fb","status":"passed","time":{"start":1699574606115,"stop":1699574609723,"duration":3608}},{"uid":"5ea716eef6ab6e49","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/5ea716eef6ab6e49","status":"passed","time":{"start":1699560258125,"stop":1699560263083,"duration":4958}},{"uid":"81f042e85a4328dd","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/81f042e85a4328dd","status":"passed","time":{"start":1699545755203,"stop":1699545759457,"duration":4254}},{"uid":"4a22e2e8e944ed40","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/4a22e2e8e944ed40","status":"passed","time":{"start":1699531378277,"stop":1699531384128,"duration":5851}},{"uid":"18050c0d738eb3fb","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/18050c0d738eb3fb","status":"passed","time":{"start":1699516944970,"stop":1699516949026,"duration":4056}},{"uid":"cb93b9be6acc3da6","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/cb93b9be6acc3da6","status":"passed","time":{"start":1699502542915,"stop":1699502546508,"duration":3593}},{"uid":"f0919006b1e4574e","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/f0919006b1e4574e","status":"passed","time":{"start":1699488165396,"stop":1699488168474,"duration":3078}},{"uid":"c805b39a95adf719","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/c805b39a95adf719","status":"passed","time":{"start":1699473778484,"stop":1699473783476,"duration":4992}},{"uid":"c68e7a30840d4ba2","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/c68e7a30840d4ba2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699459362395,"stop":1699459363097,"duration":702}},{"uid":"2cd1121c09d6562b","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/2cd1121c09d6562b","status":"passed","time":{"start":1699444963770,"stop":1699444969717,"duration":5947}},{"uid":"62c3fc7d1fcf904","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/62c3fc7d1fcf904","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699430554627,"stop":1699430555077,"duration":450}},{"uid":"f2b7d2c77718c26f","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/f2b7d2c77718c26f","status":"passed","time":{"start":1699416165759,"stop":1699416170999,"duration":5240}},{"uid":"f9cbf24007244dc0","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/f9cbf24007244dc0","status":"passed","time":{"start":1699401792939,"stop":1699401797623,"duration":4684}},{"uid":"f55e1ab6ad0e19cd","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/f55e1ab6ad0e19cd","status":"passed","time":{"start":1699387342784,"stop":1699387349500,"duration":6716}},{"uid":"408a403cec14f997","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/408a403cec14f997","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372951365,"stop":1699372951671,"duration":306}},{"uid":"f59b3922a53448fe","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/f59b3922a53448fe","status":"passed","time":{"start":1699358554278,"stop":1699358558092,"duration":3814}},{"uid":"f83ed4a036574176","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/f83ed4a036574176","status":"passed","time":{"start":1699344184015,"stop":1699344190525,"duration":6510}}]},"tags":[]},"source":"62e317e71664d99.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f41a4555a20>"]}