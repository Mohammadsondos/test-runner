{"uid":"6ad76be7aaba7b7f","name":"test_can_create_connection[Test for Aventus, url: wss://public-rpc.mainnet.aventus.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"44233bbaddf25c1595c9c2f0c82f319e","time":{"start":1699632150341,"stop":1699632150649,"duration":308},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:02:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Aventus', 'url': 'wss://public-rpc.mainnet.aventus.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:02:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:02:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Aventus', 'url': 'wss://public-rpc.mainnet.aventus.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:02:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"c136c702b11cd511","name":"stdout","source":"c136c702b11cd511.txt","type":"text/plain","size":1134}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az193-351"},{"name":"thread","value":"2097-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://public-rpc.mainnet.aventus.io', 'name': 'Aventus'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bef85a9af5159027","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:02:15 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699632134872,"stop":1699632135254,"duration":382}},{"uid":"99a353ccd6c950f0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:01:59 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699632119262,"stop":1699632119755,"duration":493}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":33,"skipped":0,"passed":439,"unknown":0,"total":472},"items":[{"uid":"72667c032c460910","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/72667c032c460910","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 12:02:12 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699617732198,"stop":1699617732443,"duration":245}},{"uid":"857be01b08e01dd9","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/857be01b08e01dd9","status":"passed","time":{"start":1699603360760,"stop":1699603361374,"duration":614}},{"uid":"18c599524b9e0341","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/18c599524b9e0341","status":"passed","time":{"start":1699588968119,"stop":1699588968816,"duration":697}},{"uid":"ea8dcff2f9082bf6","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/ea8dcff2f9082bf6","status":"passed","time":{"start":1699574549054,"stop":1699574549413,"duration":359}},{"uid":"4eaaa92743b4b12f","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/4eaaa92743b4b12f","status":"passed","time":{"start":1699560143947,"stop":1699560144410,"duration":463}},{"uid":"c1add513d19fec43","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/c1add513d19fec43","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 09 Nov 2023 16:02:23 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699545743207,"stop":1699545743478,"duration":271}},{"uid":"8b4c5e4a97a8eb5d","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/8b4c5e4a97a8eb5d","status":"passed","time":{"start":1699531392095,"stop":1699531392618,"duration":523}},{"uid":"12723fbcebb1f121","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/12723fbcebb1f121","status":"passed","time":{"start":1699516916406,"stop":1699516916877,"duration":471}},{"uid":"1def38542ec3a8da","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/1def38542ec3a8da","status":"passed","time":{"start":1699502496372,"stop":1699502496879,"duration":507}},{"uid":"dcd4a188e8b101b4","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/dcd4a188e8b101b4","status":"passed","time":{"start":1699488150489,"stop":1699488151111,"duration":622}},{"uid":"f0dd4651562afb5b","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/f0dd4651562afb5b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 08 Nov 2023 20:01:57 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699473717422,"stop":1699473717648,"duration":226}},{"uid":"df7a1fb15f6d6bba","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/df7a1fb15f6d6bba","status":"passed","time":{"start":1699459337312,"stop":1699459337639,"duration":327}},{"uid":"6a20f42a7e46a4e5","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/6a20f42a7e46a4e5","status":"passed","time":{"start":1699444934037,"stop":1699444934518,"duration":481}},{"uid":"b5750826c956b779","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/b5750826c956b779","status":"passed","time":{"start":1699430499049,"stop":1699430499630,"duration":581}},{"uid":"9fb6a613a8507be5","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/9fb6a613a8507be5","status":"passed","time":{"start":1699416113251,"stop":1699416113873,"duration":622}},{"uid":"ed78054550ae48a6","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/ed78054550ae48a6","status":"passed","time":{"start":1699401732898,"stop":1699401733568,"duration":670}},{"uid":"74a1baf00385a67a","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/74a1baf00385a67a","status":"passed","time":{"start":1699387307550,"stop":1699387307843,"duration":293}},{"uid":"53fbe0ce45174b","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/53fbe0ce45174b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 07 Nov 2023 16:02:00 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699372920436,"stop":1699372920869,"duration":433}},{"uid":"3bd665d6cadf03f0","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/3bd665d6cadf03f0","status":"passed","time":{"start":1699358529064,"stop":1699358529408,"duration":344}},{"uid":"f6b3e4ae279178fa","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/f6b3e4ae279178fa","status":"passed","time":{"start":1699344091517,"stop":1699344092286,"duration":769}}]},"tags":[]},"source":"6ad76be7aaba7b7f.json","parameterValues":["{'url': 'wss://public-rpc.mainnet.aventus.io', 'name': 'Aventus'}"]}