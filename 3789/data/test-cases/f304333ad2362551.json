{"uid":"f304333ad2362551","name":"test_can_create_connection[Test for Efinity, url: wss://efinity.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e7127e77471430140b24b1b56702eaf3","time":{"start":1695009800842,"stop":1695009816543,"duration":15701},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:03:36 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15153', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://efinity.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:03:36 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15153', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:03:36 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15153', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://efinity.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:03:36 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15153', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"eedb0aae7901da68","name":"stdout","source":"eedb0aae7901da68.txt","type":"text/plain","size":1557}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az573-876"},{"name":"thread","value":"2068-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://efinity.api.onfinality.io/public-ws', 'name': 'Efinity'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b420a5c28c0dce81","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:03:05 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15015', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695009770160,"stop":1695009785703,"duration":15543}},{"uid":"eb3641eb216c5bda","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:02:34 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695009739486,"stop":1695009755055,"duration":15569}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":134,"unknown":0,"total":150},"items":[{"uid":"1f4434ab4a6134ce","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/1f4434ab4a6134ce","status":"passed","time":{"start":1694995388933,"stop":1694995389688,"duration":755}},{"uid":"ef8ecc107d422794","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/ef8ecc107d422794","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sun, 17 Sep 2023 20:20:37 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300002', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694981677392,"stop":1694982038063,"duration":360671}},{"uid":"4cd9f324af8559c2","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/4cd9f324af8559c2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sun, 17 Sep 2023 16:20:29 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300009', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694967269385,"stop":1694967630107,"duration":360722}},{"uid":"1bff0d6ec0e6b48b","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/1bff0d6ec0e6b48b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sun, 17 Sep 2023 12:20:40 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300002', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694952879671,"stop":1694953240408,"duration":360737}},{"uid":"4a9da44cc8131a52","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/4a9da44cc8131a52","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sun, 17 Sep 2023 08:19:37 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300002', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694938416839,"stop":1694938777382,"duration":360543}},{"uid":"4b9c808ffb3399ff","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/4b9c808ffb3399ff","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sun, 17 Sep 2023 04:20:31 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300000', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694924071053,"stop":1694924431986,"duration":360933}},{"uid":"1f09e34d71c93580","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/1f09e34d71c93580","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sun, 17 Sep 2023 00:21:36 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694909735987,"stop":1694910096547,"duration":360560}},{"uid":"d94d1c046c87462c","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/d94d1c046c87462c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 16 Sep 2023 20:20:36 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300003', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694895275984,"stop":1694895636631,"duration":360647}},{"uid":"3c1fab633a4be0a","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/3c1fab633a4be0a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 16 Sep 2023 16:20:33 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300003', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694880872976,"stop":1694881233725,"duration":360749}},{"uid":"6a208a31a703fac5","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/6a208a31a703fac5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 16 Sep 2023 12:21:01 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300002', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694866500899,"stop":1694866861449,"duration":360550}},{"uid":"feca2a433aaa3f14","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/feca2a433aaa3f14","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 16 Sep 2023 08:20:48 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694852088111,"stop":1694852448842,"duration":360731}},{"uid":"2326f592b1fdf374","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/2326f592b1fdf374","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 16 Sep 2023 04:20:47 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300006', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694837686961,"stop":1694838047605,"duration":360644}},{"uid":"75b713c7839eb655","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/75b713c7839eb655","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Sat, 16 Sep 2023 00:17:06 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '34059', 'x-kong-proxy-latency': '60001', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1694823332415,"stop":1694823427083,"duration":94668}},{"uid":"ba672d4a7ac25089","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/ba672d4a7ac25089","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 15 Sep 2023 20:20:54 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300003', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694808893844,"stop":1694809254469,"duration":360625}},{"uid":"2a1d462348d022d1","reportUrl":"https://novasamatech.github.io/test-runner/3774//#testresult/2a1d462348d022d1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 15 Sep 2023 16:21:01 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300008', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1694794501090,"stop":1694794861817,"duration":360727}},{"uid":"e52f030d6aeb78ae","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/e52f030d6aeb78ae","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Fri, 15 Sep 2023 12:19:28 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '42582', 'x-kong-proxy-latency': '244805', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1694780092532,"stop":1694780380636,"duration":288104}},{"uid":"c18dc2bcf41274db","reportUrl":"https://novasamatech.github.io/test-runner/3772//#testresult/c18dc2bcf41274db","status":"passed","time":{"start":1694764906316,"stop":1694764907163,"duration":847}},{"uid":"5fea604d0548e95c","reportUrl":"https://novasamatech.github.io/test-runner/3771//#testresult/5fea604d0548e95c","status":"passed","time":{"start":1694750512188,"stop":1694750512941,"duration":753}},{"uid":"dd117fd23c712376","reportUrl":"https://novasamatech.github.io/test-runner/3770//#testresult/dd117fd23c712376","status":"passed","time":{"start":1694736142635,"stop":1694736143742,"duration":1107}},{"uid":"3db018c6418cb3c2","reportUrl":"https://novasamatech.github.io/test-runner/3769//#testresult/3db018c6418cb3c2","status":"passed","time":{"start":1694721705281,"stop":1694721706027,"duration":746}}]},"tags":[]},"source":"f304333ad2362551.json","parameterValues":["{'url': 'wss://efinity.api.onfinality.io/public-ws', 'name': 'Efinity'}"]}