{"uid":"ad3462e2acfc0783","name":"test_can_create_connection[Test for Tinkernet, url: wss://invarch-tinkernet.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa04c589555648ef054595cb3e43047c","time":{"start":1671350910609,"stop":1671350957425,"duration":46816},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"db15c606fedcfe69","name":"stdout","source":"db15c606fedcfe69.txt","type":"text/plain","size":252}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az440-119"},{"name":"thread","value":"1726-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"85fa96c8d8367450","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671350843331,"stop":1671350900529,"duration":57198}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":83,"skipped":0,"passed":235,"unknown":0,"total":318},"items":[{"uid":"83a893956cec53ba","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/83a893956cec53ba","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671336413935,"stop":1671336444572,"duration":30637}},{"uid":"4d72b688065eca8f","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/4d72b688065eca8f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671322522344,"stop":1671322559094,"duration":36750}},{"uid":"5cfa2096edd72ea3","reportUrl":"https://nova-wallet.github.io/test-runner/2103//#testresult/5cfa2096edd72ea3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671307563837,"stop":1671307594262,"duration":30425}},{"uid":"33d1d6ed7618c8cc","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/33d1d6ed7618c8cc","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671293197922,"stop":1671293257403,"duration":59481}},{"uid":"6276b9ace1d0dec","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/6276b9ace1d0dec","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671278816495,"stop":1671278876756,"duration":60261}},{"uid":"e9b44219ae632377","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/e9b44219ae632377","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671264517157,"stop":1671264553859,"duration":36702}},{"uid":"d1217deada1b67ec","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/d1217deada1b67ec","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671250044678,"stop":1671250091716,"duration":47038}},{"uid":"c15da2f32d80312","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/c15da2f32d80312","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671236112893,"stop":1671236143285,"duration":30392}},{"uid":"1f8ce81a88e1703","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/1f8ce81a88e1703","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671221260129,"stop":1671221311123,"duration":50994}},{"uid":"8eae478de126aca2","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/8eae478de126aca2","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671206849364,"stop":1671206909275,"duration":59911}},{"uid":"62018b0bca962a18","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/62018b0bca962a18","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671192485382,"stop":1671192517823,"duration":32441}},{"uid":"26192c1ca422c793","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/26192c1ca422c793","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671178057148,"stop":1671178101838,"duration":44690}},{"uid":"b3d7fac815f11c28","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/b3d7fac815f11c28","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671163668128,"stop":1671163728257,"duration":60129}},{"uid":"163d265f07390d30","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/163d265f07390d30","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671149812207,"stop":1671149872045,"duration":59838}},{"uid":"c47200e43905040c","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/c47200e43905040c","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671134855188,"stop":1671134915271,"duration":60083}},{"uid":"bea001156eb51a32","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/bea001156eb51a32","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671120464143,"stop":1671120524271,"duration":60128}},{"uid":"17062a7e5869242c","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/17062a7e5869242c","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671106157405,"stop":1671106217045,"duration":59640}},{"uid":"e4d0708fcd09166b","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/e4d0708fcd09166b","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671091702255,"stop":1671091762080,"duration":59825}},{"uid":"4a1f4b77d0c6cd89","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/4a1f4b77d0c6cd89","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1671077292351,"stop":1671077345519,"duration":53168}},{"uid":"eddfed1c37cc0f2f","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/eddfed1c37cc0f2f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671063405986,"stop":1671063466062,"duration":60076}}]},"tags":[]},"source":"ad3462e2acfc0783.json","parameterValues":["{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"]}