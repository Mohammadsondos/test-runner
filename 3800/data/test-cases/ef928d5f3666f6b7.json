{"uid":"ef928d5f3666f6b7","name":"test_has_new_assets[Test for Dora Factory (PAUSED)]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2618293375d61e703515aac3ceeb0de7","time":{"start":1695168231928,"stop":1695168233318,"duration":1390},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f6825c69000>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6825c756f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f6825c69000>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6825c756f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f16717357640f53f","name":"stdout","source":"f16717357640f53f.txt","type":"text/plain","size":3228}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az268-955"},{"name":"thread","value":"2119-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f6825c756f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e47fb7ccd3600b27","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695168215209,"stop":1695168216879,"duration":1670}},{"uid":"ed1d15b099669e50","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695168198925,"stop":1695168200171,"duration":1246}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":48,"skipped":0,"passed":112,"unknown":0,"total":160},"items":[{"uid":"94cf6ba9844d6a88","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/94cf6ba9844d6a88","status":"passed","time":{"start":1695153749658,"stop":1695153754490,"duration":4832}},{"uid":"3d8893942f1d8807","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/3d8893942f1d8807","status":"passed","time":{"start":1695139342092,"stop":1695139347073,"duration":4981}},{"uid":"9d1e627d135e5482","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/9d1e627d135e5482","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695124964445,"stop":1695124965779,"duration":1334}},{"uid":"78fb58cffbb4075e","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/78fb58cffbb4075e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695110561588,"stop":1695110563058,"duration":1470}},{"uid":"4ef9685f84822498","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/4ef9685f84822498","status":"passed","time":{"start":1695096124344,"stop":1695096131023,"duration":6679}},{"uid":"238518d2ae96b86d","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/238518d2ae96b86d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695081823479,"stop":1695081825060,"duration":1581}},{"uid":"1b1818b5ccb44f6b","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/1b1818b5ccb44f6b","status":"passed","time":{"start":1695052925269,"stop":1695052930192,"duration":4923}},{"uid":"d159a8ef7134b7a8","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/d159a8ef7134b7a8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695067377426,"stop":1695067379126,"duration":1700}},{"uid":"366d18b05629898a","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/366d18b05629898a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695038565671,"stop":1695038566980,"duration":1309}},{"uid":"dcef4e928081e04d","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/dcef4e928081e04d","status":"passed","time":{"start":1695024158011,"stop":1695024163730,"duration":5719}},{"uid":"96db3f5715aed64","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/96db3f5715aed64","status":"passed","time":{"start":1695009741124,"stop":1695009745752,"duration":4628}},{"uid":"21054f814cba33ac","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/21054f814cba33ac","status":"passed","time":{"start":1694995410781,"stop":1694995417803,"duration":7022}},{"uid":"f7701856fe56f960","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/f7701856fe56f960","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694980971353,"stop":1694980972420,"duration":1067}},{"uid":"6ac46f44e6f16fdc","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/6ac46f44e6f16fdc","status":"passed","time":{"start":1694966511862,"stop":1694966518103,"duration":6241}},{"uid":"600cd2c6dae7d394","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/600cd2c6dae7d394","status":"passed","time":{"start":1694952191406,"stop":1694952195984,"duration":4578}},{"uid":"cbe5dc56ab4443dd","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/cbe5dc56ab4443dd","status":"passed","time":{"start":1694937720441,"stop":1694937726788,"duration":6347}},{"uid":"57070e804d1b179b","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/57070e804d1b179b","status":"passed","time":{"start":1694923372925,"stop":1694923378619,"duration":5694}},{"uid":"a26b11103087a9cd","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/a26b11103087a9cd","status":"passed","time":{"start":1694909036676,"stop":1694909046720,"duration":10044}},{"uid":"ed41a9dbb4a0b1e2","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/ed41a9dbb4a0b1e2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694894559911,"stop":1694894561446,"duration":1535}},{"uid":"ea600bce675b42b9","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/ea600bce675b42b9","status":"passed","time":{"start":1694880149870,"stop":1694880154588,"duration":4718}}]},"tags":[]},"source":"ef928d5f3666f6b7.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f6825c756f0>"]}