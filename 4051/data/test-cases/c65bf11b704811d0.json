{"uid":"c65bf11b704811d0","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1698753777795,"stop":1698753779113,"duration":1318},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9f3d598dc0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9f3d598af0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9f3d598dc0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9f3d598af0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f3efa689bd1944ec","name":"stdout","source":"f3efa689bd1944ec.txt","type":"text/plain","size":1361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az444-866"},{"name":"thread","value":"2112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9f3d598af0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1a4bf66f67bb412e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698753761848,"stop":1698753762767,"duration":919}},{"uid":"7a5306ef74698486","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698753745862,"stop":1698753746820,"duration":958}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":355,"unknown":0,"total":410},"items":[{"uid":"60e53edefea0f402","reportUrl":"https://novasamatech.github.io/test-runner/4050//#testresult/60e53edefea0f402","status":"passed","time":{"start":1698739352037,"stop":1698739356617,"duration":4580}},{"uid":"b4a5c8bb1ce6f7c2","reportUrl":"https://novasamatech.github.io/test-runner/4049//#testresult/b4a5c8bb1ce6f7c2","status":"passed","time":{"start":1698724943073,"stop":1698724946882,"duration":3809}},{"uid":"d7142def5308867f","reportUrl":"https://novasamatech.github.io/test-runner/4048//#testresult/d7142def5308867f","status":"passed","time":{"start":1698710580166,"stop":1698710583988,"duration":3822}},{"uid":"cab97b4c012e92ce","reportUrl":"https://novasamatech.github.io/test-runner/4047//#testresult/cab97b4c012e92ce","status":"passed","time":{"start":1698696181498,"stop":1698696186534,"duration":5036}},{"uid":"9f167e636c344b1e","reportUrl":"https://novasamatech.github.io/test-runner/4046//#testresult/9f167e636c344b1e","status":"passed","time":{"start":1698681737830,"stop":1698681741250,"duration":3420}},{"uid":"c680a7823dcebbbf","reportUrl":"https://novasamatech.github.io/test-runner/4045//#testresult/c680a7823dcebbbf","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698667404187,"stop":1698667405455,"duration":1268}},{"uid":"2df6c9f02f6c72cb","reportUrl":"https://novasamatech.github.io/test-runner/4044//#testresult/2df6c9f02f6c72cb","status":"passed","time":{"start":1698652969298,"stop":1698652976586,"duration":7288}},{"uid":"b1a93eac024f9fde","reportUrl":"https://novasamatech.github.io/test-runner/4043//#testresult/b1a93eac024f9fde","status":"passed","time":{"start":1698638556903,"stop":1698638566980,"duration":10077}},{"uid":"fb4d2b549732ee00","reportUrl":"https://novasamatech.github.io/test-runner/4042//#testresult/fb4d2b549732ee00","status":"passed","time":{"start":1698624191107,"stop":1698624195582,"duration":4475}},{"uid":"e636a5e6687f0e99","reportUrl":"https://novasamatech.github.io/test-runner/4041//#testresult/e636a5e6687f0e99","status":"passed","time":{"start":1698609731271,"stop":1698609735382,"duration":4111}},{"uid":"96bbd72056f5582c","reportUrl":"https://novasamatech.github.io/test-runner/4040//#testresult/96bbd72056f5582c","status":"passed","time":{"start":1698595372418,"stop":1698595378494,"duration":6076}},{"uid":"e6b62d7e67816421","reportUrl":"https://novasamatech.github.io/test-runner/4039//#testresult/e6b62d7e67816421","status":"passed","time":{"start":1698580965461,"stop":1698580970250,"duration":4789}},{"uid":"7f040471e01d6c38","reportUrl":"https://novasamatech.github.io/test-runner/4038//#testresult/7f040471e01d6c38","status":"passed","time":{"start":1698566555196,"stop":1698566560385,"duration":5189}},{"uid":"ca84b621d1409f12","reportUrl":"https://novasamatech.github.io/test-runner/4037//#testresult/ca84b621d1409f12","status":"passed","time":{"start":1698552132575,"stop":1698552136403,"duration":3828}},{"uid":"a00fc67d007b8fed","reportUrl":"https://novasamatech.github.io/test-runner/4036//#testresult/a00fc67d007b8fed","status":"passed","time":{"start":1698537805317,"stop":1698537811099,"duration":5782}},{"uid":"9649a130eb41708b","reportUrl":"https://novasamatech.github.io/test-runner/4035//#testresult/9649a130eb41708b","status":"passed","time":{"start":1698523351495,"stop":1698523356502,"duration":5007}},{"uid":"fb3661327ba58c8b","reportUrl":"https://novasamatech.github.io/test-runner/4034//#testresult/fb3661327ba58c8b","status":"passed","time":{"start":1698508965200,"stop":1698508969074,"duration":3874}},{"uid":"f58c64b0dd19fcd6","reportUrl":"https://novasamatech.github.io/test-runner/4033//#testresult/f58c64b0dd19fcd6","status":"passed","time":{"start":1698494535786,"stop":1698494539895,"duration":4109}},{"uid":"7f9ce9b6cb7f8f3c","reportUrl":"https://novasamatech.github.io/test-runner/4032//#testresult/7f9ce9b6cb7f8f3c","status":"passed","time":{"start":1698480139016,"stop":1698480143089,"duration":4073}},{"uid":"bd680b566d227171","reportUrl":"https://novasamatech.github.io/test-runner/4031//#testresult/bd680b566d227171","status":"passed","time":{"start":1698465732447,"stop":1698465737214,"duration":4767}}]},"tags":[]},"source":"c65bf11b704811d0.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9f3d598af0>"]}