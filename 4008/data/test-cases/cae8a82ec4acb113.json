{"uid":"cae8a82ec4acb113","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1698134572824,"stop":1698134573464,"duration":640},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f67a50e6050>\nchain = <scripts.utils.chain_model.Chain object at 0x7f67a533ef50>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f67a50e6050>\nchain = <scripts.utils.chain_model.Chain object at 0x7f67a533ef50>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"cef1f8922a2182a7","name":"stdout","source":"cef1f8922a2182a7.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az306-221"},{"name":"thread","value":"2127-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f67a533ef50>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4d653e28f81dd582","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698134557145,"stop":1698134557804,"duration":659}},{"uid":"d71dfdd5c70beb33","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698134541171,"stop":1698134542107,"duration":936}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":41,"skipped":0,"passed":325,"unknown":0,"total":366},"items":[{"uid":"ccc0acddc047308d","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/ccc0acddc047308d","status":"passed","time":{"start":1698105791934,"stop":1698105795080,"duration":3146}},{"uid":"3a00cdc725eb368b","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/3a00cdc725eb368b","status":"passed","time":{"start":1698091339518,"stop":1698091343472,"duration":3954}},{"uid":"3fc46563aa767bf4","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/3fc46563aa767bf4","status":"passed","time":{"start":1698076965955,"stop":1698076968199,"duration":2244}},{"uid":"52c12a79f4558b6e","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/52c12a79f4558b6e","status":"passed","time":{"start":1698062577419,"stop":1698062581041,"duration":3622}},{"uid":"9ef3961b17f35c75","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/9ef3961b17f35c75","status":"passed","time":{"start":1698048157020,"stop":1698048161060,"duration":4040}},{"uid":"6cc02b3a3dbf1b54","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/6cc02b3a3dbf1b54","status":"passed","time":{"start":1698033732241,"stop":1698033735342,"duration":3101}},{"uid":"4a74e257799106fc","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/4a74e257799106fc","status":"passed","time":{"start":1698019388100,"stop":1698019390126,"duration":2026}},{"uid":"1c7be3e076447cd4","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/1c7be3e076447cd4","status":"passed","time":{"start":1698004946613,"stop":1698004950342,"duration":3729}},{"uid":"5f3b6bc665d7aa40","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/5f3b6bc665d7aa40","status":"passed","time":{"start":1697990531791,"stop":1697990533830,"duration":2039}},{"uid":"cbb9a04bddc837b8","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/cbb9a04bddc837b8","status":"passed","time":{"start":1697976130805,"stop":1697976133483,"duration":2678}},{"uid":"d7682cf115ba84da","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/d7682cf115ba84da","status":"passed","time":{"start":1697961734260,"stop":1697961736681,"duration":2421}},{"uid":"24c518ab5ceed8c7","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/24c518ab5ceed8c7","status":"passed","time":{"start":1697947334510,"stop":1697947337341,"duration":2831}},{"uid":"2c9e048470d384af","reportUrl":"https://novasamatech.github.io/test-runner/3994//#testresult/2c9e048470d384af","status":"passed","time":{"start":1697932991583,"stop":1697932994999,"duration":3416}},{"uid":"6a87ec408aa8868e","reportUrl":"https://novasamatech.github.io/test-runner/3993//#testresult/6a87ec408aa8868e","status":"passed","time":{"start":1697918566215,"stop":1697918569998,"duration":3783}},{"uid":"471c0379c125ec71","reportUrl":"https://novasamatech.github.io/test-runner/3992//#testresult/471c0379c125ec71","status":"passed","time":{"start":1697904135869,"stop":1697904138940,"duration":3071}},{"uid":"2fbdd1078c5392ac","reportUrl":"https://novasamatech.github.io/test-runner/3991//#testresult/2fbdd1078c5392ac","status":"passed","time":{"start":1697889743316,"stop":1697889746104,"duration":2788}},{"uid":"c3b47cd8821caeff","reportUrl":"https://novasamatech.github.io/test-runner/3990//#testresult/c3b47cd8821caeff","status":"passed","time":{"start":1697875348502,"stop":1697875353184,"duration":4682}},{"uid":"faf85b9b030e1cea","reportUrl":"https://novasamatech.github.io/test-runner/3989//#testresult/faf85b9b030e1cea","status":"passed","time":{"start":1697860943731,"stop":1697860946666,"duration":2935}},{"uid":"6ad7842a7ffdf5ca","reportUrl":"https://novasamatech.github.io/test-runner/3988//#testresult/6ad7842a7ffdf5ca","status":"passed","time":{"start":1697846627169,"stop":1697846630557,"duration":3388}},{"uid":"5f2b351051823b5d","reportUrl":"https://novasamatech.github.io/test-runner/3987//#testresult/5f2b351051823b5d","status":"passed","time":{"start":1697832150681,"stop":1697832154126,"duration":3445}}]},"tags":[]},"source":"cae8a82ec4acb113.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f67a533ef50>"]}