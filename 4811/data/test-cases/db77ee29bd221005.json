{"uid":"db77ee29bd221005","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://eden-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b83cbea806fcf0b5f2c8c12818bb2158","time":{"start":1709496269267,"stop":1709496269267,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1709496240799,"stop":1709496246425,"duration":5626},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1709496251488,"stop":1709496257030,"duration":5542},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1709496262105,"stop":1709496269266,"duration":7161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"96365201c2986a44","name":"stdout","source":"96365201c2986a44.txt","type":"text/plain","size":388}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az736-570"},{"name":"thread","value":"2091-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://eden-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"edf665051c84ee30","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709496251488,"stop":1709496251488,"duration":0}},{"uid":"e8a93de015fcfc28","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709496240797,"stop":1709496240797,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":17,"skipped":0,"passed":905,"unknown":0,"total":922},"items":[{"uid":"fd69e8466e404be6","reportUrl":"https://novasamatech.github.io/test-runner/4810//#testresult/fd69e8466e404be6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709481821296,"stop":1709481821296,"duration":0}},{"uid":"1b82a70e6c4d6c6a","reportUrl":"https://novasamatech.github.io/test-runner/4809//#testresult/1b82a70e6c4d6c6a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709467392911,"stop":1709467392911,"duration":0}},{"uid":"7375f6bc771dfc28","reportUrl":"https://novasamatech.github.io/test-runner/4808//#testresult/7375f6bc771dfc28","status":"passed","time":{"start":1709453014619,"stop":1709453014620,"duration":1}},{"uid":"d03659464469a807","reportUrl":"https://novasamatech.github.io/test-runner/4807//#testresult/d03659464469a807","status":"passed","time":{"start":1709438633040,"stop":1709438633041,"duration":1}},{"uid":"ebe8d56e2abc0fb7","reportUrl":"https://novasamatech.github.io/test-runner/4806//#testresult/ebe8d56e2abc0fb7","status":"passed","time":{"start":1709424280756,"stop":1709424280757,"duration":1}},{"uid":"339a3a29238742f3","reportUrl":"https://novasamatech.github.io/test-runner/4805//#testresult/339a3a29238742f3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709409811770,"stop":1709409811770,"duration":0}},{"uid":"e2a3ecbe5075ca19","reportUrl":"https://novasamatech.github.io/test-runner/4804//#testresult/e2a3ecbe5075ca19","status":"passed","time":{"start":1709395453461,"stop":1709395453461,"duration":0}},{"uid":"5d60c8f5302c13d","reportUrl":"https://novasamatech.github.io/test-runner/4803//#testresult/5d60c8f5302c13d","status":"passed","time":{"start":1709381025867,"stop":1709381025867,"duration":0}},{"uid":"4cf33553fc454441","reportUrl":"https://novasamatech.github.io/test-runner/4802//#testresult/4cf33553fc454441","status":"passed","time":{"start":1709366622438,"stop":1709366622438,"duration":0}},{"uid":"7d8cc8c3fefc22c6","reportUrl":"https://novasamatech.github.io/test-runner/4801//#testresult/7d8cc8c3fefc22c6","status":"passed","time":{"start":1709352181074,"stop":1709352181074,"duration":0}},{"uid":"3d5882040720a8f7","reportUrl":"https://novasamatech.github.io/test-runner/4800//#testresult/3d5882040720a8f7","status":"passed","time":{"start":1709337820209,"stop":1709337820209,"duration":0}},{"uid":"93b6863a2309478a","reportUrl":"https://novasamatech.github.io/test-runner/4799//#testresult/93b6863a2309478a","status":"passed","time":{"start":1709323395458,"stop":1709323395458,"duration":0}},{"uid":"c9b47323f303a58c","reportUrl":"https://novasamatech.github.io/test-runner/4798//#testresult/c9b47323f303a58c","status":"passed","time":{"start":1709309003860,"stop":1709309003860,"duration":0}},{"uid":"6cebfa584c42647","reportUrl":"https://novasamatech.github.io/test-runner/4796//#testresult/6cebfa584c42647","status":"passed","time":{"start":1709290099625,"stop":1709290099625,"duration":0}},{"uid":"5c61fbf391296dc8","reportUrl":"https://novasamatech.github.io/test-runner/4789//#testresult/5c61fbf391296dc8","status":"passed","time":{"start":1709193761110,"stop":1709193761110,"duration":0}},{"uid":"e295b334430c0994","reportUrl":"https://novasamatech.github.io/test-runner/4788//#testresult/e295b334430c0994","status":"passed","time":{"start":1709179398477,"stop":1709179398477,"duration":0}},{"uid":"4675f1e09fa3c9ae","reportUrl":"https://novasamatech.github.io/test-runner/4787//#testresult/4675f1e09fa3c9ae","status":"passed","time":{"start":1709165026747,"stop":1709165026747,"duration":0}},{"uid":"4522e770635efe33","reportUrl":"https://novasamatech.github.io/test-runner/4786//#testresult/4522e770635efe33","status":"passed","time":{"start":1709150603547,"stop":1709150603547,"duration":0}},{"uid":"a6937081bc5c963f","reportUrl":"https://novasamatech.github.io/test-runner/4785//#testresult/a6937081bc5c963f","status":"passed","time":{"start":1709136202269,"stop":1709136202269,"duration":0}},{"uid":"4a2665daccd31953","reportUrl":"https://novasamatech.github.io/test-runner/4784//#testresult/4a2665daccd31953","status":"passed","time":{"start":1709121791200,"stop":1709121791200,"duration":0}}]},"tags":[]},"source":"db77ee29bd221005.json","parameterValues":["{'url': 'wss://eden-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}