{"uid":"e241d8bd882bad9d","name":"test_can_create_connection[Test for GM, url: wss://ws-node-gm.terrabiodao.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3278cac67526220f4f1c0a171e1bb018","time":{"start":1673438779707,"stop":1673438780140,"duration":433},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"1971be3e9d56eef6","name":"stdout","source":"1971be3e9d56eef6.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az365-941"},{"name":"thread","value":"1664-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8aee2c40ffb57e4f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673438769197,"stop":1673438769626,"duration":429}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":520,"skipped":0,"passed":0,"unknown":0,"total":520},"items":[{"uid":"26bedfb6582ee7e8","reportUrl":"https://nova-wallet.github.io/test-runner/2252//#testresult/26bedfb6582ee7e8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673424316004,"stop":1673424316422,"duration":418}},{"uid":"d5024a09fb5efc7b","reportUrl":"https://nova-wallet.github.io/test-runner/2251//#testresult/d5024a09fb5efc7b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673409878741,"stop":1673409879215,"duration":474}},{"uid":"5fe3a60f33e01280","reportUrl":"https://nova-wallet.github.io/test-runner/2250//#testresult/5fe3a60f33e01280","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673396031243,"stop":1673396031637,"duration":394}},{"uid":"773d4739204f0025","reportUrl":"https://nova-wallet.github.io/test-runner/2249//#testresult/773d4739204f0025","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673381073294,"stop":1673381073732,"duration":438}},{"uid":"e2d02b5d19abcf98","reportUrl":"https://nova-wallet.github.io/test-runner/2248//#testresult/e2d02b5d19abcf98","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673366687779,"stop":1673366688093,"duration":314}},{"uid":"7115f57b97d16d31","reportUrl":"https://nova-wallet.github.io/test-runner/2247//#testresult/7115f57b97d16d31","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673352329610,"stop":1673352330153,"duration":543}},{"uid":"a7c471c164b402c","reportUrl":"https://nova-wallet.github.io/test-runner/2246//#testresult/a7c471c164b402c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673338002142,"stop":1673338002638,"duration":496}},{"uid":"3dca243509a77ae7","reportUrl":"https://nova-wallet.github.io/test-runner/2245//#testresult/3dca243509a77ae7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673323480333,"stop":1673323480824,"duration":491}},{"uid":"2f7d974234d555d4","reportUrl":"https://nova-wallet.github.io/test-runner/2244//#testresult/2f7d974234d555d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673309688681,"stop":1673309689085,"duration":404}},{"uid":"af1dfee60195b693","reportUrl":"https://nova-wallet.github.io/test-runner/2243//#testresult/af1dfee60195b693","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673294686183,"stop":1673294686677,"duration":494}},{"uid":"df37a4a5112b89e7","reportUrl":"https://nova-wallet.github.io/test-runner/2242//#testresult/df37a4a5112b89e7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673280411747,"stop":1673280412058,"duration":311}},{"uid":"ab7eb1c97bbdfed8","reportUrl":"https://nova-wallet.github.io/test-runner/2241//#testresult/ab7eb1c97bbdfed8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673265966445,"stop":1673265966861,"duration":416}},{"uid":"63c5438ec27d86b4","reportUrl":"https://nova-wallet.github.io/test-runner/2240//#testresult/63c5438ec27d86b4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673251512988,"stop":1673251513285,"duration":297}},{"uid":"38ec238a63142cf3","reportUrl":"https://nova-wallet.github.io/test-runner/2239//#testresult/38ec238a63142cf3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673237110879,"stop":1673237111388,"duration":509}},{"uid":"92fd263f0413e50","reportUrl":"https://nova-wallet.github.io/test-runner/2238//#testresult/92fd263f0413e50","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673223322065,"stop":1673223322492,"duration":427}},{"uid":"458497b0f21aaa36","reportUrl":"https://nova-wallet.github.io/test-runner/2237//#testresult/458497b0f21aaa36","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673208273886,"stop":1673208274395,"duration":509}},{"uid":"36a7366ec0e5a5e6","reportUrl":"https://nova-wallet.github.io/test-runner/2236//#testresult/36a7366ec0e5a5e6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673193881107,"stop":1673193881413,"duration":306}},{"uid":"ed0d3ba6016ceb5f","reportUrl":"https://nova-wallet.github.io/test-runner/2235//#testresult/ed0d3ba6016ceb5f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673179509585,"stop":1673179509885,"duration":300}},{"uid":"1cb732772aab3118","reportUrl":"https://nova-wallet.github.io/test-runner/2234//#testresult/1cb732772aab3118","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673165096821,"stop":1673165097310,"duration":489}},{"uid":"e6f1486636c17dd5","reportUrl":"https://nova-wallet.github.io/test-runner/2233//#testresult/e6f1486636c17dd5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1673150692616,"stop":1673150692921,"duration":305}}]},"tags":[]},"source":"e241d8bd882bad9d.json","parameterValues":["{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"]}