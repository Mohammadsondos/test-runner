{"uid":"10b52112c746c27d","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1694822562530,"stop":1694822563132,"duration":602},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 16 Sep 2023 00:02:43 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 16 Sep 2023 00:02:43 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 16 Sep 2023 00:02:43 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 16 Sep 2023 00:02:43 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"7a72afb52d61b2ba","name":"stdout","source":"7a72afb52d61b2ba.txt","type":"text/plain","size":2889}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az741-312"},{"name":"thread","value":"2057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f766b2ac0525961e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 16 Sep 2023 00:02:27 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1694822546899,"stop":1694822547440,"duration":541}},{"uid":"4e587ed2b8acd785","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sat, 16 Sep 2023 00:02:11 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1694822531162,"stop":1694822531760,"duration":598}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":123,"unknown":0,"total":137},"items":[{"uid":"4939e3c5e9ddb23","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/4939e3c5e9ddb23","status":"passed","time":{"start":1694808112512,"stop":1694808113706,"duration":1194}},{"uid":"fd5e39793852e245","reportUrl":"https://novasamatech.github.io/test-runner/3774//#testresult/fd5e39793852e245","status":"passed","time":{"start":1694793695812,"stop":1694793697315,"duration":1503}},{"uid":"d04c40e49a46c09a","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/d04c40e49a46c09a","status":"passed","time":{"start":1694779303806,"stop":1694779305135,"duration":1329}},{"uid":"b5a36ae2c0f7d7d1","reportUrl":"https://novasamatech.github.io/test-runner/3772//#testresult/b5a36ae2c0f7d7d1","status":"passed","time":{"start":1694764897509,"stop":1694764898713,"duration":1204}},{"uid":"1d3ca52a481b502a","reportUrl":"https://novasamatech.github.io/test-runner/3771//#testresult/1d3ca52a481b502a","status":"passed","time":{"start":1694750502575,"stop":1694750503837,"duration":1262}},{"uid":"3c7c742914003d3a","reportUrl":"https://novasamatech.github.io/test-runner/3770//#testresult/3c7c742914003d3a","status":"passed","time":{"start":1694736133847,"stop":1694736135303,"duration":1456}},{"uid":"7efe3ee313c077a","reportUrl":"https://novasamatech.github.io/test-runner/3769//#testresult/7efe3ee313c077a","status":"passed","time":{"start":1694721695054,"stop":1694721696190,"duration":1136}},{"uid":"fb4ab9b2462ce413","reportUrl":"https://novasamatech.github.io/test-runner/3768//#testresult/fb4ab9b2462ce413","status":"passed","time":{"start":1694707287696,"stop":1694707288995,"duration":1299}},{"uid":"fda441c48eef58bb","reportUrl":"https://novasamatech.github.io/test-runner/3767//#testresult/fda441c48eef58bb","status":"passed","time":{"start":1694692911876,"stop":1694692913289,"duration":1413}},{"uid":"67da1a4cd7d7b70c","reportUrl":"https://novasamatech.github.io/test-runner/3766//#testresult/67da1a4cd7d7b70c","status":"passed","time":{"start":1694678490078,"stop":1694678491520,"duration":1442}},{"uid":"ce93605bf6fd85e9","reportUrl":"https://novasamatech.github.io/test-runner/3765//#testresult/ce93605bf6fd85e9","status":"passed","time":{"start":1694664080095,"stop":1694664081563,"duration":1468}},{"uid":"444523490c8303c6","reportUrl":"https://novasamatech.github.io/test-runner/3764//#testresult/444523490c8303c6","status":"passed","time":{"start":1694649729993,"stop":1694649731264,"duration":1271}},{"uid":"479730e8bfe5479e","reportUrl":"https://novasamatech.github.io/test-runner/3763//#testresult/479730e8bfe5479e","status":"passed","time":{"start":1694635283391,"stop":1694635284681,"duration":1290}},{"uid":"88a2f6ec07f37243","reportUrl":"https://novasamatech.github.io/test-runner/3762//#testresult/88a2f6ec07f37243","status":"passed","time":{"start":1694620905731,"stop":1694620906861,"duration":1130}},{"uid":"4ed958be232b1dcc","reportUrl":"https://novasamatech.github.io/test-runner/3761//#testresult/4ed958be232b1dcc","status":"passed","time":{"start":1694606528050,"stop":1694606529295,"duration":1245}},{"uid":"1d7e8fd9a15db9dc","reportUrl":"https://novasamatech.github.io/test-runner/3760//#testresult/1d7e8fd9a15db9dc","status":"passed","time":{"start":1694597311097,"stop":1694597312390,"duration":1293}},{"uid":"5c16e55269b9ac71","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/5c16e55269b9ac71","status":"passed","time":{"start":1694592085951,"stop":1694592087408,"duration":1457}},{"uid":"878816b0bf7ec2cc","reportUrl":"https://novasamatech.github.io/test-runner/3758//#testresult/878816b0bf7ec2cc","status":"passed","time":{"start":1694577699003,"stop":1694577700265,"duration":1262}},{"uid":"715b015b214cd4fd","reportUrl":"https://novasamatech.github.io/test-runner/3757//#testresult/715b015b214cd4fd","status":"passed","time":{"start":1694563348332,"stop":1694563349596,"duration":1264}},{"uid":"ffa14212a5d142fe","reportUrl":"https://novasamatech.github.io/test-runner/3756//#testresult/ffa14212a5d142fe","status":"passed","time":{"start":1694548939706,"stop":1694548940835,"duration":1129}}]},"tags":[]},"source":"10b52112c746c27d.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}