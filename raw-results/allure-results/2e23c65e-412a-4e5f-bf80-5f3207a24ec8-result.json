{"name": "test_xcm_parameters[Check XCM data for Polkadot]", "status": "broken", "statusDetails": {"message": "websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.", "trace": "self = <tests.test_xcm_data.TestCompareXCMData object at 0x7f6c6ec0da00>\nchain = <tests.utils.chain_model.Chain object at 0x7f6c6f9f92b0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n>       chain.init_properties()\n\ntests/test_xcm_data.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/chain_model.py:35: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/create_type_file.py:52: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2374: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2348: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:1112: in init_runtime\n    runtime_info = self.get_block_runtime_version(block_hash=runtime_block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:979: in get_block_runtime_version\n    response = self.rpc_request(\"chain_getRuntimeVersion\", [block_hash])\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:655: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:359: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:382: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:403: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:442: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:526: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException"}, "parameters": [{"name": "chain", "value": "<tests.utils.chain_model.Chain object at 0x7f6c6f9f92b0>"}], "start": 1665373333265, "stop": 1665373453678, "uuid": "8f596a25-794b-4017-b30e-9a5fd6e0bb97", "historyId": "ef3622b89ef3366b11fda76d9391fcfc", "testCaseId": "8ae5d99ccaa796aa26780d9f083a6092", "fullName": "tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_xcm_data"}, {"name": "subSuite", "value": "TestCompareXCMData"}, {"name": "host", "value": "fv-az206-257"}, {"name": "thread", "value": "1657-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_xcm_data"}]}