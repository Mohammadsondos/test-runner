{"name": "test_can_create_connection[Test for Statemine, url: wss://kusama-statemine-rpc.paritytech.net]", "status": "broken", "statusDetails": {"message": "ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1131)", "trace": "data = {'name': 'Statemine', 'url': 'wss://kusama-statemine-rpc.paritytech.net'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:605: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:246: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.8/ssl.py:500: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.8/ssl.py:1040: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1131)\n\n/usr/lib/python3.8/ssl.py:1309: SSLCertVerificationError"}, "parameters": [{"name": "data", "value": "{'url': 'wss://kusama-statemine-rpc.paritytech.net', 'name': 'Statemine'}"}], "start": 1665375268333, "stop": 1665375268527, "uuid": "e2d4213f-1bd9-41f7-bfe7-f7f779f367e6", "historyId": "cff6e2173c72c0d2d2f72c2f886164c3", "testCaseId": "19d21698a6efe53584258abf12a22784", "fullName": "tests.test_nodes_availability#test_can_create_connection", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_nodes_availability"}, {"name": "host", "value": "fv-az191-446"}, {"name": "thread", "value": "1682-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_nodes_availability"}]}