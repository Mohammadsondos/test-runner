{"uid":"3895b28550530c52","name":"test_can_create_connection[Test for Crab, url: wss://crab.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"58a7b8c2f8659c261eb4c7a54fb84fd8","time":{"start":1695096919302,"stop":1695097279529,"duration":360227},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:21:19 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300173', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:21:19 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300173', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:21:19 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300173', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:21:19 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300173', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"5c66a3b91198a365","name":"stdout","source":"5c66a3b91198a365.txt","type":"text/plain","size":1344}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az627-274"},{"name":"thread","value":"2086-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://crab.api.onfinality.io/public-ws', 'name': 'Crab'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6c47ab3e55cb7b49","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:15:04 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300002', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695096544112,"stop":1695096904189,"duration":360077}},{"uid":"6eacdce24437016b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 04:08:48 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60014', 'x-kong-proxy-latency': '300350', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695096168512,"stop":1695096528987,"duration":360475}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":155,"unknown":0,"total":156},"items":[{"uid":"1f0d5adafac4cd16","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/1f0d5adafac4cd16","status":"passed","time":{"start":1695081781301,"stop":1695081782136,"duration":835}},{"uid":"ddbb57d914dcdd05","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/ddbb57d914dcdd05","status":"passed","time":{"start":1695052967061,"stop":1695052967899,"duration":838}},{"uid":"154f090477145b75","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/154f090477145b75","status":"passed","time":{"start":1695067357937,"stop":1695067359035,"duration":1098}},{"uid":"4b87c23133168eae","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/4b87c23133168eae","status":"passed","time":{"start":1695038580914,"stop":1695038581923,"duration":1009}},{"uid":"cd9ed10e2aab127b","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/cd9ed10e2aab127b","status":"passed","time":{"start":1695024187671,"stop":1695024188532,"duration":861}},{"uid":"c2711059e38fe622","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/c2711059e38fe622","status":"passed","time":{"start":1695009759209,"stop":1695009760316,"duration":1107}},{"uid":"6e8046b4e652a1f6","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/6e8046b4e652a1f6","status":"passed","time":{"start":1694995390493,"stop":1694995391579,"duration":1086}},{"uid":"4a378e7dff35348b","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/4a378e7dff35348b","status":"passed","time":{"start":1694980970772,"stop":1694980971786,"duration":1014}},{"uid":"c59f5218335f12ac","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/c59f5218335f12ac","status":"passed","time":{"start":1694966554290,"stop":1694966555101,"duration":811}},{"uid":"b213a3529b7a8bf","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/b213a3529b7a8bf","status":"passed","time":{"start":1694952144078,"stop":1694952144888,"duration":810}},{"uid":"31854f3480ab4426","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/31854f3480ab4426","status":"passed","time":{"start":1694937757722,"stop":1694937759658,"duration":1936}},{"uid":"934d7c154f76a418","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/934d7c154f76a418","status":"passed","time":{"start":1694923329115,"stop":1694923329968,"duration":853}},{"uid":"63961c7f6397b0bf","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/63961c7f6397b0bf","status":"passed","time":{"start":1694908993190,"stop":1694908994263,"duration":1073}},{"uid":"1a8333f2fcb3f1c1","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/1a8333f2fcb3f1c1","status":"passed","time":{"start":1694894533583,"stop":1694894534615,"duration":1032}},{"uid":"6768b1a0babf6e9a","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/6768b1a0babf6e9a","status":"passed","time":{"start":1694880145013,"stop":1694880145859,"duration":846}},{"uid":"418225bc2eb1dce1","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/418225bc2eb1dce1","status":"passed","time":{"start":1694865794448,"stop":1694865795517,"duration":1069}},{"uid":"23200651fd4a2add","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/23200651fd4a2add","status":"passed","time":{"start":1694851341656,"stop":1694851342543,"duration":887}},{"uid":"6994fd2f15fc4529","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/6994fd2f15fc4529","status":"passed","time":{"start":1694836939914,"stop":1694836940891,"duration":977}},{"uid":"27973ad1c9d59266","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/27973ad1c9d59266","status":"passed","time":{"start":1694822578661,"stop":1694822579696,"duration":1035}},{"uid":"86452865a6c84bbf","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/86452865a6c84bbf","status":"passed","time":{"start":1694808172264,"stop":1694808173255,"duration":991}}]},"tags":[]},"source":"3895b28550530c52.json","parameterValues":["{'url': 'wss://crab.api.onfinality.io/public-ws', 'name': 'Crab'}"]}