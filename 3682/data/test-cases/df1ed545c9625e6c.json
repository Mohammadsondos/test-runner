{"uid":"df1ed545c9625e6c","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1693483329114,"stop":1693483329820,"duration":706},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 12:02:09 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 12:02:09 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 12:02:09 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 12:02:09 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"8974dedc515257b4","name":"stdout","source":"8974dedc515257b4.txt","type":"text/plain","size":2889}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az395-860"},{"name":"thread","value":"2032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9e67ec15aca3c134","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 12:01:53 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1693483313308,"stop":1693483314005,"duration":697}},{"uid":"256d8e9cdf14d9f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 12:01:38 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1693483297305,"stop":1693483298113,"duration":808}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":38,"unknown":0,"total":44},"items":[{"uid":"e1229ea5d2b8e6cb","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/e1229ea5d2b8e6cb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 31 Aug 2023 08:01:55 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1693468915216,"stop":1693468915958,"duration":742}},{"uid":"31b80309972ce564","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/31b80309972ce564","status":"passed","time":{"start":1693454498342,"stop":1693454499478,"duration":1136}},{"uid":"44d9006f1b3a7ee5","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/44d9006f1b3a7ee5","status":"passed","time":{"start":1693440158839,"stop":1693440160104,"duration":1265}},{"uid":"31ab002b5661b329","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/31ab002b5661b329","status":"passed","time":{"start":1693425686683,"stop":1693425688105,"duration":1422}},{"uid":"5defebb8e2bcd1e1","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/5defebb8e2bcd1e1","status":"passed","time":{"start":1693411337592,"stop":1693411338719,"duration":1127}},{"uid":"6a4f71094aafa86c","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/6a4f71094aafa86c","status":"passed","time":{"start":1693396912550,"stop":1693396913658,"duration":1108}},{"uid":"7b7b08d5bcdc3bd9","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/7b7b08d5bcdc3bd9","status":"passed","time":{"start":1693382499660,"stop":1693382500917,"duration":1257}},{"uid":"a6cb47a6b036a4d5","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/a6cb47a6b036a4d5","status":"passed","time":{"start":1693368081552,"stop":1693368082865,"duration":1313}},{"uid":"765f14d0f728a0ed","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/765f14d0f728a0ed","status":"passed","time":{"start":1693353752747,"stop":1693353754005,"duration":1258}},{"uid":"812bc5e1efd1c670","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/812bc5e1efd1c670","status":"passed","time":{"start":1693339285502,"stop":1693339286984,"duration":1482}},{"uid":"135049dc98129a71","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/135049dc98129a71","status":"passed","time":{"start":1693324893209,"stop":1693324894468,"duration":1259}},{"uid":"48009e7e5c6f64eb","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/48009e7e5c6f64eb","status":"passed","time":{"start":1693310491981,"stop":1693310493374,"duration":1393}},{"uid":"a8a5f3c5e902b8ec","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/a8a5f3c5e902b8ec","status":"passed","time":{"start":1693296086475,"stop":1693296087906,"duration":1431}},{"uid":"e108d94cb7f9c8ef","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/e108d94cb7f9c8ef","status":"passed","time":{"start":1693281688173,"stop":1693281689535,"duration":1362}},{"uid":"48382604299b9e6f","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/48382604299b9e6f","status":"passed","time":{"start":1693267340158,"stop":1693267341440,"duration":1282}},{"uid":"8a22799db3e85050","reportUrl":"https://novasamatech.github.io/test-runner/3666//#testresult/8a22799db3e85050","status":"passed","time":{"start":1693252895019,"stop":1693252896140,"duration":1121}},{"uid":"53ae3de9f35bd4d3","reportUrl":"https://novasamatech.github.io/test-runner/3665//#testresult/53ae3de9f35bd4d3","status":"passed","time":{"start":1693238512855,"stop":1693238514165,"duration":1310}},{"uid":"3ab81d5e95f0acf0","reportUrl":"https://novasamatech.github.io/test-runner/3664//#testresult/3ab81d5e95f0acf0","status":"passed","time":{"start":1693224095767,"stop":1693224097223,"duration":1456}},{"uid":"642869747fd74edd","reportUrl":"https://novasamatech.github.io/test-runner/3663//#testresult/642869747fd74edd","status":"broken","statusDetails":"websocket._exceptions.WebSocketProtocolException: rsv is not implemented, yet","time":{"start":1693209716095,"stop":1693209716803,"duration":708}},{"uid":"2e44aaf7494cdf90","reportUrl":"https://novasamatech.github.io/test-runner/3662//#testresult/2e44aaf7494cdf90","status":"passed","time":{"start":1693195287965,"stop":1693195289401,"duration":1436}}]},"tags":[]},"source":"df1ed545c9625e6c.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}