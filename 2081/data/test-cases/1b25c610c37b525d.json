{"uid":"1b25c610c37b525d","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://centrifuge-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c61d3131e170cf9bb6fa392a1937f08b","time":{"start":1670990760586,"stop":1670990772640,"duration":12054},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"1a3f5d140aae4828","name":"stdout","source":"1a3f5d140aae4828.txt","type":"text/plain","size":248}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az576-818"},{"name":"thread","value":"1668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fdf877cb5ff7b696","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670990738233,"stop":1670990750492,"duration":12259}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":142,"skipped":0,"passed":208,"unknown":0,"total":350},"items":[{"uid":"dafd4cc8c24ddc0","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/dafd4cc8c24ddc0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670976963657,"stop":1670976975065,"duration":11408}},{"uid":"3355ad52f30f4d96","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/3355ad52f30f4d96","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670961941679,"stop":1670961953096,"duration":11417}},{"uid":"33b9407acaabd09e","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/33b9407acaabd09e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670947548731,"stop":1670947560153,"duration":11422}},{"uid":"7f7838d8da857354","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/7f7838d8da857354","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670933219267,"stop":1670933231563,"duration":12296}},{"uid":"7f0620209611dc89","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/7f0620209611dc89","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670918779271,"stop":1670918792016,"duration":12745}},{"uid":"fdb305f07be40b33","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/fdb305f07be40b33","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670904345788,"stop":1670904358429,"duration":12641}},{"uid":"bd40222b2ef66ce7","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/bd40222b2ef66ce7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670890551505,"stop":1670890563885,"duration":12380}},{"uid":"580afa5aaf8556c1","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/580afa5aaf8556c1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670875529391,"stop":1670875540821,"duration":11430}},{"uid":"ce59c406fac229f6","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/ce59c406fac229f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670861170299,"stop":1670861181711,"duration":11412}},{"uid":"ec34c436c8594a14","reportUrl":"https://nova-wallet.github.io/test-runner/2071//#testresult/ec34c436c8594a14","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670846838367,"stop":1670846849791,"duration":11424}},{"uid":"fffba103dfe61174","reportUrl":"https://nova-wallet.github.io/test-runner/2070//#testresult/fffba103dfe61174","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670832366329,"stop":1670832378391,"duration":12062}},{"uid":"73c2a4563a693ada","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/73c2a4563a693ada","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670817987528,"stop":1670817999625,"duration":12097}},{"uid":"5f0cf174353f2baf","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/5f0cf174353f2baf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670804157225,"stop":1670804168653,"duration":11428}},{"uid":"e01c37a6d02a0ce3","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/e01c37a6d02a0ce3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670789142499,"stop":1670789153907,"duration":11408}},{"uid":"3bc2179c1826d214","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/3bc2179c1826d214","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670774726458,"stop":1670774737879,"duration":11421}},{"uid":"b55ab6cd239e2667","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/b55ab6cd239e2667","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670760415310,"stop":1670760427515,"duration":12205}},{"uid":"b19a81fad3fdf789","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/b19a81fad3fdf789","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670746029463,"stop":1670746041562,"duration":12099}},{"uid":"c5a0f769f97638b7","reportUrl":"https://nova-wallet.github.io/test-runner/2063//#testresult/c5a0f769f97638b7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670731616701,"stop":1670731628505,"duration":11804}},{"uid":"f6585db852e74f3f","reportUrl":"https://nova-wallet.github.io/test-runner/2062//#testresult/f6585db852e74f3f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670717806499,"stop":1670717818542,"duration":12043}},{"uid":"c449815f883493d8","reportUrl":"https://nova-wallet.github.io/test-runner/2061//#testresult/c449815f883493d8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670702739229,"stop":1670702750652,"duration":11423}}]},"tags":[]},"source":"1b25c610c37b525d.json","parameterValues":["{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"]}