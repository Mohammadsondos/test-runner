{"uid":"7a2b139b79a161","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1699445011323,"stop":1699445012101,"duration":778},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f786b6ce3e0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f786b93ef80>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f786b6ce3e0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f786b93ef80>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f081212e5091f0","name":"stdout","source":"f081212e5091f0.txt","type":"text/plain","size":1338}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1232-199"},{"name":"thread","value":"2134-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f786b93ef80>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"26b7231558ad8a26","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699444995247,"stop":1699444996282,"duration":1035}},{"uid":"907ea4651f0a026","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699444979389,"stop":1699444980211,"duration":822}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":444,"unknown":0,"total":458},"items":[{"uid":"472b97931fdd6bf0","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/472b97931fdd6bf0","status":"passed","time":{"start":1699430532259,"stop":1699430534738,"duration":2479}},{"uid":"fc0979028f40b264","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/fc0979028f40b264","status":"passed","time":{"start":1699416177688,"stop":1699416183599,"duration":5911}},{"uid":"7876954757eca751","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/7876954757eca751","status":"passed","time":{"start":1699401807387,"stop":1699401811273,"duration":3886}},{"uid":"c43dfdaf36ec6753","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/c43dfdaf36ec6753","status":"passed","time":{"start":1699387355838,"stop":1699387359168,"duration":3330}},{"uid":"a2a8ca2959b0528e","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/a2a8ca2959b0528e","status":"passed","time":{"start":1699372962934,"stop":1699372964874,"duration":1940}},{"uid":"4b42bab99931bd26","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/4b42bab99931bd26","status":"passed","time":{"start":1699358561557,"stop":1699358568602,"duration":7045}},{"uid":"615645d7cd4f1b98","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/615645d7cd4f1b98","status":"passed","time":{"start":1699344180916,"stop":1699344185132,"duration":4216}},{"uid":"5bffdfc0b9c81d6c","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/5bffdfc0b9c81d6c","status":"passed","time":{"start":1699329730768,"stop":1699329732519,"duration":1751}},{"uid":"c3fbd9a25888ead4","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/c3fbd9a25888ead4","status":"passed","time":{"start":1699315372915,"stop":1699315375672,"duration":2757}},{"uid":"7d2bd08bb0197b26","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/7d2bd08bb0197b26","status":"passed","time":{"start":1699300947432,"stop":1699300951826,"duration":4394}},{"uid":"eda181a554777a86","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/eda181a554777a86","status":"passed","time":{"start":1699286550430,"stop":1699286553159,"duration":2729}},{"uid":"bad5cc4f8fc28aa3","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/bad5cc4f8fc28aa3","status":"passed","time":{"start":1699272131082,"stop":1699272135263,"duration":4181}},{"uid":"1dda358f9a207c1","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/1dda358f9a207c1","status":"passed","time":{"start":1699257731866,"stop":1699257733481,"duration":1615}},{"uid":"72d92e0a3f62b8fc","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/72d92e0a3f62b8fc","status":"passed","time":{"start":1699243347866,"stop":1699243351570,"duration":3704}},{"uid":"2ead8fa513508117","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/2ead8fa513508117","status":"passed","time":{"start":1699228987655,"stop":1699228991025,"duration":3370}},{"uid":"cefa0ee446bebbc8","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/cefa0ee446bebbc8","status":"passed","time":{"start":1699214607916,"stop":1699214613681,"duration":5765}},{"uid":"41e8cebe93493c7e","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/41e8cebe93493c7e","status":"passed","time":{"start":1699200137481,"stop":1699200141587,"duration":4106}},{"uid":"92859f3fab91c80b","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/92859f3fab91c80b","status":"passed","time":{"start":1699185719084,"stop":1699185721134,"duration":2050}},{"uid":"9a8f60197537bfdf","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/9a8f60197537bfdf","status":"passed","time":{"start":1699171346412,"stop":1699171352296,"duration":5884}},{"uid":"ca0af15faf8741bf","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/ca0af15faf8741bf","status":"passed","time":{"start":1699156941684,"stop":1699156945338,"duration":3654}}]},"tags":[]},"source":"7a2b139b79a161.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f786b93ef80>"]}