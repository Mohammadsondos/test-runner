{"uid":"34b4ef16bfd3b56f","name":"testFeeLoading[Karura]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testFeeLoading[Karura]","historyId":"127519bfd20eb8c12622e2835888454e","time":{"start":1699445861411,"stop":1699445861505,"duration":94},"status":"broken","statusMessage":"Method not found","statusTrace":"jp.co.soramitsu.fearless_utils.wsrpc.exception.RpcException: Method not found\n\tat jp.co.soramitsu.fearless_utils.wsrpc.mappers.ErrorMapper.map(Base.kt:30)\n\tat jp.co.soramitsu.fearless_utils.wsrpc.mappers.NonNullMapper.map(Base.kt:39)\n\tat jp.co.soramitsu.fearless_utils.wsrpc.CoroutineAdapterKt$executeAsync$2.invokeSuspend(CoroutineAdapter.kt:36)\n\tat jp.co.soramitsu.fearless_utils.wsrpc.CoroutineAdapterKt$executeAsync$2.invoke(Unknown Source:10)\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:78)\n\tat kotlinx.coroutines.BuildersKt__Builders_commonKt.withContext(Builders.common.kt:167)\n\tat kotlinx.coroutines.BuildersKt.withContext(Unknown Source:1)\n\tat jp.co.soramitsu.fearless_utils.wsrpc.CoroutineAdapterKt.executeAsync(CoroutineAdapter.kt:35)\n\tat jp.co.soramitsu.fearless_utils.wsrpc.CoroutineAdapterKt$executeAsync$1.invokeSuspend(Unknown Source:10)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testFeeLoading[Karura]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":194,"unknown":0,"total":208},"items":[{"uid":"985e74f7b1170e02","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/985e74f7b1170e02","status":"broken","statusDetails":"Method not found","time":{"start":1699431499206,"stop":1699431499303,"duration":97}},{"uid":"ff81a4a69ae56ce9","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/ff81a4a69ae56ce9","status":"passed","time":{"start":1699416831391,"stop":1699416832579,"duration":1188}},{"uid":"fcb36f19c284756c","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/fcb36f19c284756c","status":"passed","time":{"start":1699388016854,"stop":1699388021364,"duration":4510}},{"uid":"89c62acfebbdbd93","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/89c62acfebbdbd93","status":"broken","statusDetails":"Method not found","time":{"start":1699373914652,"stop":1699373914765,"duration":113}},{"uid":"ed1367827a642c48","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/ed1367827a642c48","status":"broken","statusDetails":"Method not found","time":{"start":1699359328669,"stop":1699359328782,"duration":113}},{"uid":"34f2df42b5af7a40","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/34f2df42b5af7a40","status":"broken","statusDetails":"Method not found","time":{"start":1699345107933,"stop":1699345107977,"duration":44}},{"uid":"d32dd146fa0abe29","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/d32dd146fa0abe29","status":"broken","statusDetails":"Method not found","time":{"start":1699330505948,"stop":1699330506025,"duration":77}},{"uid":"fd75a4040025569c","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/fd75a4040025569c","status":"broken","statusDetails":"Method not found","time":{"start":1699315933548,"stop":1699315933628,"duration":80}},{"uid":"86cbcdf1ce77adca","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/86cbcdf1ce77adca","status":"broken","statusDetails":"Method not found","time":{"start":1699301695314,"stop":1699301695524,"duration":210}},{"uid":"2a52b21f1586b6f5","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/2a52b21f1586b6f5","status":"broken","statusDetails":"Method not found","time":{"start":1699287749046,"stop":1699287749134,"duration":88}},{"uid":"fb963c59b18d0f1d","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/fb963c59b18d0f1d","status":"broken","statusDetails":"Method not found","time":{"start":1699272814541,"stop":1699272814654,"duration":113}},{"uid":"3fc0bb78dc6aeaec","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/3fc0bb78dc6aeaec","status":"broken","statusDetails":"Method not found","time":{"start":1699258612217,"stop":1699258612328,"duration":111}},{"uid":"71c5203a6cee59d0","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/71c5203a6cee59d0","status":"broken","statusDetails":"Method not found","time":{"start":1699243962842,"stop":1699243962968,"duration":126}},{"uid":"145d213b11f75de6","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/145d213b11f75de6","status":"broken","statusDetails":"Method not found","time":{"start":1699229540292,"stop":1699229540356,"duration":64}},{"uid":"6401ab0649dc8255","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/6401ab0649dc8255","status":"passed","time":{"start":1699215258395,"stop":1699215268039,"duration":9644}},{"uid":"9925e1d7289570dc","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/9925e1d7289570dc","status":"passed","time":{"start":1699200890403,"stop":1699200898390,"duration":7987}},{"uid":"c3171dc079dde0fb","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/c3171dc079dde0fb","status":"passed","time":{"start":1699186306377,"stop":1699186319828,"duration":13451}},{"uid":"b5b700cfe5f001e1","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/b5b700cfe5f001e1","status":"broken","statusDetails":"Method not found","time":{"start":1699171902779,"stop":1699171902857,"duration":78}},{"uid":"21449aff521beeba","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/21449aff521beeba","status":"passed","time":{"start":1699157786080,"stop":1699157807859,"duration":21779}},{"uid":"3467de2cbcceee8c","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/3467de2cbcceee8c","status":"passed","time":{"start":1699143157181,"stop":1699143166365,"duration":9184}}]},"tags":[]},"source":"34b4ef16bfd3b56f.json","parameterValues":[]}