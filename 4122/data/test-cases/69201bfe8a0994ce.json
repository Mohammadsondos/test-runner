{"uid":"69201bfe8a0994ce","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1699776226983,"stop":1699776227745,"duration":762},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f96d8ca1330>\nchain = <scripts.utils.chain_model.Chain object at 0x7f96d8cc1000>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f96d8ca1330>\nchain = <scripts.utils.chain_model.Chain object at 0x7f96d8cc1000>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c43b43cd7332667e","name":"stdout","source":"c43b43cd7332667e.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az351-224"},{"name":"thread","value":"2164-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f96d8cc1000>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b85dc493590af344","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699776211032,"stop":1699776211951,"duration":919}},{"uid":"2f6fc2b8c3ecce07","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699776195053,"stop":1699776196000,"duration":947}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":33,"skipped":0,"passed":448,"unknown":0,"total":481},"items":[{"uid":"fa576f124fcb02c8","reportUrl":"https://novasamatech.github.io/test-runner/4121//#testresult/fa576f124fcb02c8","status":"passed","time":{"start":1699761756019,"stop":1699761760079,"duration":4060}},{"uid":"304fd65fba51ad9c","reportUrl":"https://novasamatech.github.io/test-runner/4120//#testresult/304fd65fba51ad9c","status":"passed","time":{"start":1699747380649,"stop":1699747383366,"duration":2717}},{"uid":"7f60bd7aa36af2d7","reportUrl":"https://novasamatech.github.io/test-runner/4119//#testresult/7f60bd7aa36af2d7","status":"passed","time":{"start":1699732923012,"stop":1699732926174,"duration":3162}},{"uid":"f2524c0f54675d","reportUrl":"https://novasamatech.github.io/test-runner/4118//#testresult/f2524c0f54675d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699718571775,"stop":1699718572648,"duration":873}},{"uid":"1b4b55ded7cd4bfd","reportUrl":"https://novasamatech.github.io/test-runner/4117//#testresult/1b4b55ded7cd4bfd","status":"passed","time":{"start":1699704148649,"stop":1699704152024,"duration":3375}},{"uid":"7c1e013926ed9633","reportUrl":"https://novasamatech.github.io/test-runner/4116//#testresult/7c1e013926ed9633","status":"passed","time":{"start":1699689734969,"stop":1699689738473,"duration":3504}},{"uid":"b7fac19a0bbea1d3","reportUrl":"https://novasamatech.github.io/test-runner/4115//#testresult/b7fac19a0bbea1d3","status":"passed","time":{"start":1699675336957,"stop":1699675339751,"duration":2794}},{"uid":"bc58dfc1fc6abca9","reportUrl":"https://novasamatech.github.io/test-runner/4114//#testresult/bc58dfc1fc6abca9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699661032214,"stop":1699661033010,"duration":796}},{"uid":"b78129e3fbaaf5a7","reportUrl":"https://novasamatech.github.io/test-runner/4113//#testresult/b78129e3fbaaf5a7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699646593848,"stop":1699646594926,"duration":1078}},{"uid":"d03d470ca4b43602","reportUrl":"https://novasamatech.github.io/test-runner/4112//#testresult/d03d470ca4b43602","status":"passed","time":{"start":1699632166184,"stop":1699632170027,"duration":3843}},{"uid":"25b1c8d995863108","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/25b1c8d995863108","status":"passed","time":{"start":1699617763437,"stop":1699617767172,"duration":3735}},{"uid":"41147d782e4e4b5d","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/41147d782e4e4b5d","status":"passed","time":{"start":1699603367319,"stop":1699603370713,"duration":3394}},{"uid":"65404595e8b0990c","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/65404595e8b0990c","status":"passed","time":{"start":1699588973098,"stop":1699588977793,"duration":4695}},{"uid":"70a95d21d517bc39","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/70a95d21d517bc39","status":"passed","time":{"start":1699574615700,"stop":1699574619365,"duration":3665}},{"uid":"cbc36f925e340407","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/cbc36f925e340407","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699560243543,"stop":1699560244482,"duration":939}},{"uid":"9e7f8b3ce94250ef","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/9e7f8b3ce94250ef","status":"passed","time":{"start":1699545759712,"stop":1699545763046,"duration":3334}},{"uid":"f7b765552a301ee4","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/f7b765552a301ee4","status":"passed","time":{"start":1699531397217,"stop":1699531403449,"duration":6232}},{"uid":"7eadea65a9243e56","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/7eadea65a9243e56","status":"passed","time":{"start":1699516951171,"stop":1699516954711,"duration":3540}},{"uid":"5a510018424b4368","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/5a510018424b4368","status":"passed","time":{"start":1699502547079,"stop":1699502550973,"duration":3894}},{"uid":"79233c071ac82f07","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/79233c071ac82f07","status":"passed","time":{"start":1699488170236,"stop":1699488173369,"duration":3133}}]},"tags":[]},"source":"69201bfe8a0994ce.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f96d8cc1000>"]}