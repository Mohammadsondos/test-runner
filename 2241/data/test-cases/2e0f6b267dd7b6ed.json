{"uid":"2e0f6b267dd7b6ed","name":"test_can_create_connection[Test for Kylin, url: wss://polkadot.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3ee0d191ab7acb2fad9a82a3aa808e89","time":{"start":1673265978369,"stop":1673265978412,"duration":43},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9a0ec5950afe552b","name":"stdout","source":"9a0ec5950afe552b.txt","type":"text/plain","size":242}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az399-960"},{"name":"thread","value":"1730-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8fa60f8299c9b15","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1673265968146,"stop":1673265968263,"duration":117}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":64,"skipped":0,"passed":444,"unknown":0,"total":508},"items":[{"uid":"2639cd33275eca07","reportUrl":"https://nova-wallet.github.io/test-runner/2240//#testresult/2639cd33275eca07","status":"passed","time":{"start":1673251503842,"stop":1673251503927,"duration":85}},{"uid":"7a6ddb98f1a0c8ff","reportUrl":"https://nova-wallet.github.io/test-runner/2239//#testresult/7a6ddb98f1a0c8ff","status":"passed","time":{"start":1673237111069,"stop":1673237111459,"duration":390}},{"uid":"abae5e13bee6623b","reportUrl":"https://nova-wallet.github.io/test-runner/2238//#testresult/abae5e13bee6623b","status":"passed","time":{"start":1673223323836,"stop":1673223323934,"duration":98}},{"uid":"6db6065019d610b8","reportUrl":"https://nova-wallet.github.io/test-runner/2237//#testresult/6db6065019d610b8","status":"passed","time":{"start":1673208270433,"stop":1673208270825,"duration":392}},{"uid":"29ea04edfd913506","reportUrl":"https://nova-wallet.github.io/test-runner/2236//#testresult/29ea04edfd913506","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1673193881499,"stop":1673193881557,"duration":58}},{"uid":"6c9de6312c95d7b5","reportUrl":"https://nova-wallet.github.io/test-runner/2235//#testresult/6c9de6312c95d7b5","status":"passed","time":{"start":1673179499258,"stop":1673179499299,"duration":41}},{"uid":"5c6e186b2341ea2","reportUrl":"https://nova-wallet.github.io/test-runner/2234//#testresult/5c6e186b2341ea2","status":"passed","time":{"start":1673165099322,"stop":1673165099664,"duration":342}},{"uid":"42b64ccd0e969a15","reportUrl":"https://nova-wallet.github.io/test-runner/2233//#testresult/42b64ccd0e969a15","status":"passed","time":{"start":1673150694179,"stop":1673150694212,"duration":33}},{"uid":"4e865c8e439a7e81","reportUrl":"https://nova-wallet.github.io/test-runner/2232//#testresult/4e865c8e439a7e81","status":"passed","time":{"start":1673136891635,"stop":1673136891676,"duration":41}},{"uid":"5e4304f16bfc92cf","reportUrl":"https://nova-wallet.github.io/test-runner/2231//#testresult/5e4304f16bfc92cf","status":"passed","time":{"start":1673121868882,"stop":1673121868913,"duration":31}},{"uid":"a24db51e3491966f","reportUrl":"https://nova-wallet.github.io/test-runner/2229//#testresult/a24db51e3491966f","status":"passed","time":{"start":1673093103715,"stop":1673093103961,"duration":246}},{"uid":"df37029d0bedb017","reportUrl":"https://nova-wallet.github.io/test-runner/2228//#testresult/df37029d0bedb017","status":"passed","time":{"start":1673078703382,"stop":1673078703687,"duration":305}},{"uid":"9fa7033e235899","reportUrl":"https://nova-wallet.github.io/test-runner/2227//#testresult/9fa7033e235899","status":"passed","time":{"start":1673064295137,"stop":1673064295275,"duration":138}},{"uid":"7b1ebd084c3bcef9","reportUrl":"https://nova-wallet.github.io/test-runner/2226//#testresult/7b1ebd084c3bcef9","status":"passed","time":{"start":1673050516813,"stop":1673050517230,"duration":417}},{"uid":"8079927ba5198871","reportUrl":"https://nova-wallet.github.io/test-runner/2225//#testresult/8079927ba5198871","status":"passed","time":{"start":1673035488721,"stop":1673035489142,"duration":421}},{"uid":"cd7a086ae55f84a6","reportUrl":"https://nova-wallet.github.io/test-runner/2224//#testresult/cd7a086ae55f84a6","status":"passed","time":{"start":1673021084433,"stop":1673021084729,"duration":296}},{"uid":"cb96f08933a9cf60","reportUrl":"https://nova-wallet.github.io/test-runner/2223//#testresult/cb96f08933a9cf60","status":"passed","time":{"start":1673006728551,"stop":1673006728889,"duration":338}},{"uid":"48bc4888aac4ab33","reportUrl":"https://nova-wallet.github.io/test-runner/2222//#testresult/48bc4888aac4ab33","status":"passed","time":{"start":1672992280647,"stop":1672992281032,"duration":385}},{"uid":"e5eef06243d3212d","reportUrl":"https://nova-wallet.github.io/test-runner/2221//#testresult/e5eef06243d3212d","status":"passed","time":{"start":1672977886090,"stop":1672977886424,"duration":334}},{"uid":"53eefdb2cd0d5584","reportUrl":"https://nova-wallet.github.io/test-runner/2220//#testresult/53eefdb2cd0d5584","status":"passed","time":{"start":1672964033966,"stop":1672964034467,"duration":501}}]},"tags":[]},"source":"2e0f6b267dd7b6ed.json","parameterValues":["{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"]}