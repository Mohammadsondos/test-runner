{"uid":"6b80a79f59245794","name":"testBalancesLoading[Getting balance for Nodle Parachain network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Nodle Parachain network]","historyId":"37a476cf2310007718a293f4e9b3bcab","time":{"start":1692663475324,"stop":1692663555390,"duration":80066},"status":"broken","statusMessage":"Socket state: Connecting(url=wss://nodle-parachain.api.onfinality.io/public-ws, attempt=3, pendingSendables=[Sendable(422053011)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connecting(url=wss://nodle-parachain.api.onfinality.io/public-ws, attempt=3, pendingSendables=[Sendable(422053011)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Nodle Parachain network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":553,"unknown":0,"total":554},"items":[{"uid":"5d3880cd1d3669b","reportUrl":"https://novasamatech.github.io/test-runner/3617//#testresult/5d3880cd1d3669b","status":"passed","time":{"start":1692648910203,"stop":1692648910226,"duration":23}},{"uid":"294604045af2ca81","reportUrl":"https://novasamatech.github.io/test-runner/3616//#testresult/294604045af2ca81","status":"passed","time":{"start":1692634569131,"stop":1692634569232,"duration":101}},{"uid":"a98d201f83394267","reportUrl":"https://novasamatech.github.io/test-runner/3615//#testresult/a98d201f83394267","status":"passed","time":{"start":1692620070099,"stop":1692620070318,"duration":219}},{"uid":"a32a6c971694f0e1","reportUrl":"https://novasamatech.github.io/test-runner/3614//#testresult/a32a6c971694f0e1","status":"passed","time":{"start":1692614111779,"stop":1692614111877,"duration":98}},{"uid":"2f16c7e8abbc8e7d","reportUrl":"https://novasamatech.github.io/test-runner/3592//#testresult/2f16c7e8abbc8e7d","status":"passed","time":{"start":1692260366671,"stop":1692260366687,"duration":16}},{"uid":"4aa6677955ee0c7e","reportUrl":"https://novasamatech.github.io/test-runner/3591//#testresult/4aa6677955ee0c7e","status":"passed","time":{"start":1692245933413,"stop":1692245933510,"duration":97}},{"uid":"fcfba6fad9f99b3d","reportUrl":"https://novasamatech.github.io/test-runner/3590//#testresult/fcfba6fad9f99b3d","status":"passed","time":{"start":1692232019297,"stop":1692232019396,"duration":99}},{"uid":"330db098a6ab3b1","reportUrl":"https://novasamatech.github.io/test-runner/3589//#testresult/330db098a6ab3b1","status":"passed","time":{"start":1692217215308,"stop":1692217215417,"duration":109}},{"uid":"6229f1cb5f057f8b","reportUrl":"https://novasamatech.github.io/test-runner/3587//#testresult/6229f1cb5f057f8b","status":"passed","time":{"start":1692188260000,"stop":1692188260098,"duration":98}},{"uid":"2a4ee2cc960be467","reportUrl":"https://novasamatech.github.io/test-runner/3586//#testresult/2a4ee2cc960be467","status":"passed","time":{"start":1692174170896,"stop":1692174170988,"duration":92}},{"uid":"dd3a5eed8207b1a8","reportUrl":"https://novasamatech.github.io/test-runner/3585//#testresult/dd3a5eed8207b1a8","status":"passed","time":{"start":1692159477006,"stop":1692159477044,"duration":38}},{"uid":"fbcf1d9464221059","reportUrl":"https://novasamatech.github.io/test-runner/3583//#testresult/fbcf1d9464221059","status":"passed","time":{"start":1692130857699,"stop":1692130857831,"duration":132}},{"uid":"c65067f0570688b1","reportUrl":"https://novasamatech.github.io/test-runner/3582//#testresult/c65067f0570688b1","status":"passed","time":{"start":1692116248641,"stop":1692116248744,"duration":103}},{"uid":"b101300932de2315","reportUrl":"https://novasamatech.github.io/test-runner/3581//#testresult/b101300932de2315","status":"passed","time":{"start":1692101857072,"stop":1692101857089,"duration":17}},{"uid":"f860a6f9f0448176","reportUrl":"https://novasamatech.github.io/test-runner/3580//#testresult/f860a6f9f0448176","status":"passed","time":{"start":1692087456009,"stop":1692087456053,"duration":44}},{"uid":"bc7886e5cd7becb6","reportUrl":"https://novasamatech.github.io/test-runner/3579//#testresult/bc7886e5cd7becb6","status":"passed","time":{"start":1692073027355,"stop":1692073027386,"duration":31}},{"uid":"fdde68fa50590600","reportUrl":"https://novasamatech.github.io/test-runner/3578//#testresult/fdde68fa50590600","status":"passed","time":{"start":1692059188057,"stop":1692059188425,"duration":368}},{"uid":"32c08dd364b44165","reportUrl":"https://novasamatech.github.io/test-runner/3577//#testresult/32c08dd364b44165","status":"passed","time":{"start":1692044412163,"stop":1692044412199,"duration":36}},{"uid":"48dd128cb44fc391","reportUrl":"https://novasamatech.github.io/test-runner/3576//#testresult/48dd128cb44fc391","status":"passed","time":{"start":1692029825932,"stop":1692029826067,"duration":135}},{"uid":"e8f68c00dd4dbd2e","reportUrl":"https://novasamatech.github.io/test-runner/3575//#testresult/e8f68c00dd4dbd2e","status":"passed","time":{"start":1692015584579,"stop":1692015584598,"duration":19}}]},"tags":[]},"source":"6b80a79f59245794.json","parameterValues":[]}