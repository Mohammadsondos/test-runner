{"uid":"57eb83f53a972d64","name":"test_can_create_connection[Test for Polkadot, url: wss://polkadot.public.curie.radiumblock.io/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a5de27066c49991b0497e12a217d610d","time":{"start":1672329835372,"stop":1672329835582,"duration":210},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","statusTrace":"data = {'name': 'Polkadot', 'url': 'wss://polkadot.public.curie.radiumblock.io/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","statusTrace":"data = {'name': 'Polkadot', 'url': 'wss://polkadot.public.curie.radiumblock.io/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"123f25c8c4c1ebcf","name":"stdout","source":"123f25c8c4c1ebcf.txt","type":"text/plain","size":298}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-953"},{"name":"thread","value":"1868-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.public.curie.radiumblock.io/ws', 'name': 'Polkadot'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dab21ba94808e258","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672329824866,"stop":1672329825261,"duration":395}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":194,"skipped":0,"passed":118,"unknown":0,"total":312},"items":[{"uid":"1fc19e92dc61c493","reportUrl":"https://nova-wallet.github.io/test-runner/2175//#testresult/1fc19e92dc61c493","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672315475076,"stop":1672315475260,"duration":184}},{"uid":"d4e0bdabec2cafad","reportUrl":"https://nova-wallet.github.io/test-runner/2174//#testresult/d4e0bdabec2cafad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672301054246,"stop":1672301054321,"duration":75}},{"uid":"76d051e7e5949136","reportUrl":"https://nova-wallet.github.io/test-runner/2173//#testresult/76d051e7e5949136","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672286635961,"stop":1672286636290,"duration":329}},{"uid":"27e910e85f434265","reportUrl":"https://nova-wallet.github.io/test-runner/2172//#testresult/27e910e85f434265","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672272770241,"stop":1672272770338,"duration":97}},{"uid":"c0e75f969622e318","reportUrl":"https://nova-wallet.github.io/test-runner/2171//#testresult/c0e75f969622e318","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672257836672,"stop":1672257836862,"duration":190}},{"uid":"4f62a80f08168bbb","reportUrl":"https://nova-wallet.github.io/test-runner/2170//#testresult/4f62a80f08168bbb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672243446657,"stop":1672243446750,"duration":93}},{"uid":"cb3e723429d7a33f","reportUrl":"https://nova-wallet.github.io/test-runner/2169//#testresult/cb3e723429d7a33f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672229084991,"stop":1672229085068,"duration":77}},{"uid":"45e30611fdb42e02","reportUrl":"https://nova-wallet.github.io/test-runner/2168//#testresult/45e30611fdb42e02","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672226728382,"stop":1672226728585,"duration":203}},{"uid":"46d42981ba58f5c9","reportUrl":"https://nova-wallet.github.io/test-runner/2167//#testresult/46d42981ba58f5c9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672219618199,"stop":1672219618282,"duration":83}},{"uid":"4d7ab990a65034ff","reportUrl":"https://nova-wallet.github.io/test-runner/2166//#testresult/4d7ab990a65034ff","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672214659181,"stop":1672214659738,"duration":557}},{"uid":"8ef608fe6064c78c","reportUrl":"https://nova-wallet.github.io/test-runner/2165//#testresult/8ef608fe6064c78c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672200242641,"stop":1672200242718,"duration":77}},{"uid":"b1b247822c025a00","reportUrl":"https://nova-wallet.github.io/test-runner/2164//#testresult/b1b247822c025a00","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672186355390,"stop":1672186355467,"duration":77}},{"uid":"749d5055308461bd","reportUrl":"https://nova-wallet.github.io/test-runner/2163//#testresult/749d5055308461bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672171428210,"stop":1672171428536,"duration":326}},{"uid":"1be4ee9965e3fb08","reportUrl":"https://nova-wallet.github.io/test-runner/2162//#testresult/1be4ee9965e3fb08","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672157045914,"stop":1672157045993,"duration":79}},{"uid":"3264970aad1300a1","reportUrl":"https://nova-wallet.github.io/test-runner/2161//#testresult/3264970aad1300a1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672142675861,"stop":1672142676057,"duration":196}},{"uid":"edd2ff57be3d30bd","reportUrl":"https://nova-wallet.github.io/test-runner/2160//#testresult/edd2ff57be3d30bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672128242100,"stop":1672128242199,"duration":99}},{"uid":"779b1a1ab73eebf2","reportUrl":"https://nova-wallet.github.io/test-runner/2159//#testresult/779b1a1ab73eebf2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672113839867,"stop":1672113839942,"duration":75}},{"uid":"9b4e280c5630e52c","reportUrl":"https://nova-wallet.github.io/test-runner/2158//#testresult/9b4e280c5630e52c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672100023668,"stop":1672100023874,"duration":206}},{"uid":"6a737e42e41b9029","reportUrl":"https://nova-wallet.github.io/test-runner/2157//#testresult/6a737e42e41b9029","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672085023227,"stop":1672085023432,"duration":205}},{"uid":"7fb3cfeb6154df3","reportUrl":"https://nova-wallet.github.io/test-runner/2156//#testresult/7fb3cfeb6154df3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1672070651994,"stop":1672070652242,"duration":248}}]},"tags":[]},"source":"57eb83f53a972d64.json","parameterValues":["{'url': 'wss://polkadot.public.curie.radiumblock.io/ws', 'name': 'Polkadot'}"]}