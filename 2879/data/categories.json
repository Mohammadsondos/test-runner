{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Bifrost Kusama]","uid":"ae5c0c8e8f4b04f8","parentUid":"4f259164810e5718c9bb3a676e1dff0a","status":"failed","time":{"start":1682280252524,"stop":1682280253666,"duration":1142},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fb6ab51bcd0>"]}],"uid":"4f259164810e5718c9bb3a676e1dff0a"},{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 3\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: INTR\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n2: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: IBTC\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n3: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Kintsugi]","uid":"8ae3e4bacf14503e","parentUid":"a48452b38450747c54e44e725ec69e07","status":"failed","time":{"start":1682280311011,"stop":1682280312087,"duration":1076},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f6c7b372770>"]}],"uid":"a48452b38450747c54e44e725ec69e07"},{"name":"AssertionError: native asset has changed\nassert ('KPX' in dict_keys(['KAPEX', 'AUSD', 'XX']) or 'KPX' in dict_values(['', 'KUSD', 'xx']))\n +  where 'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7fb6747caa70>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7fb6747caa70> = <scripts.utils.chain_model.Chain object at 0x7fb6aaf3c670>.properties\n +  and   dict_keys(['KAPEX', 'AUSD', 'XX']) = <built-in method keys of dict object at 0x7fb6746abd00>()\n +    where <built-in method keys of dict object at 0x7fb6746abd00> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.keys\n +  and   'KPX' = <scripts.utils.metadata_interaction.Properties object at 0x7fb6747caa70>.symbol\n +    where <scripts.utils.metadata_interaction.Properties object at 0x7fb6747caa70> = <scripts.utils.chain_model.Chain object at 0x7fb6aaf3c670>.properties\n +  and   dict_values(['', 'KUSD', 'xx']) = <built-in method values of dict object at 0x7fb6746abd00>()\n +    where <built-in method values of dict object at 0x7fb6746abd00> = {'AUSD': 'KUSD', 'KAPEX': '', 'XX': 'xx'}.values","children":[{"name":"test_has_new_assets[Test for Kapex]","uid":"623a96f34df7d9f7","parentUid":"b225d4b021ddf9a554400e2ea8cc3cbe","status":"failed","time":{"start":1682280374903,"stop":1682280376166,"duration":1263},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fb6aaf3c670>"]}],"uid":"b225d4b021ddf9a554400e2ea8cc3cbe"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"AttributeError: 'NoneType' object has no attribute 'get_constant'","children":[{"name":"test_address_prefix[Test for Centrifuge Parachain]","uid":"f0b0eccfb9aeeab4","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280262259,"stop":1682280262850,"duration":591},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c957fd60>"]},{"name":"test_has_new_assets[Test for Centrifuge Parachain]","uid":"6f07876df22d50aa","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280302907,"stop":1682280303496,"duration":589},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fb6aaf3c160>"]},{"name":"test_address_prefix[Test for Tanganika]","uid":"7b4db2db0c46c4c","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280344590,"stop":1682280345776,"duration":1186},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c8fc0100>"]},{"name":"test_address_prefix[Test for Imbue]","uid":"e10f2b0de1371ecb","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280361257,"stop":1682280362140,"duration":883},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c8fc0160>"]},{"name":"test_has_new_assets[Test for Exosama]","uid":"1a06a98b8369ebaf","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280400428,"stop":1682280401620,"duration":1192},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fb6aaf3c850>"]},{"name":"test_chainId[Test for Centrifuge Parachain]","uid":"816f79e1d0cbae2a","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280413163,"stop":1682280414453,"duration":1290},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c957fd60>"]},{"name":"test_chainId[Test for Tanganika]","uid":"10efe5c9c1ae906a","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280451107,"stop":1682280452443,"duration":1336},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c8fc0100>"]},{"name":"test_address_prefix[Test for Exosama]","uid":"2915ed616aae8492","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280452635,"stop":1682280454654,"duration":2019},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f2fb1342470>"]},{"name":"test_chainId[Test for Exosama]","uid":"7583e76575c85814","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280535990,"stop":1682280537299,"duration":1309},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c8fc0490>"]},{"name":"test_precision[Test for Centrifuge Parachain]","uid":"787fee32998bde14","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280557887,"stop":1682280558980,"duration":1093},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c957fd60>"]},{"name":"test_precision[Test for Exosama]","uid":"f3aac43f00298154","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682280619984,"stop":1682280621302,"duration":1318},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f72c8fc0490>"]}],"uid":"5aa24b8a3c4111290b34f017f14d2ab4"},{"name":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","children":[{"name":"test_can_create_connection[Test for Altair, url: wss://fullnode.altair.centrifuge.io]","uid":"859a84a9c2fdb51d","parentUid":"73652fd111bd75b46d4eadb94be6c5be","status":"broken","time":{"start":1682280262501,"stop":1682280262877,"duration":376},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://fullnode.altair.centrifuge.io', 'name': 'Altair'}"]},{"name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://fullnode.parachain.centrifuge.io]","uid":"cadb76db3d914411","parentUid":"73652fd111bd75b46d4eadb94be6c5be","status":"broken","time":{"start":1682280277794,"stop":1682280278194,"duration":400},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://fullnode.parachain.centrifuge.io', 'name': 'Centrifuge Parachain'}"]}],"uid":"73652fd111bd75b46d4eadb94be6c5be"},{"name":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32601, 'message': 'Method system_chain is not supported'}","children":[{"name":"test_can_create_connection[Test for Exosama, url: wss://rpc.exosama.com]","uid":"b0cefca301cc794f","parentUid":"216ddde9b6485d42e113b52340f71442","status":"broken","time":{"start":1682280302935,"stop":1682280303530,"duration":595},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://rpc.exosama.com', 'name': 'Exosama'}"]}],"uid":"216ddde9b6485d42e113b52340f71442"},{"name":"Socket state: WaitingForReconnect(url=wss://fullnode.parachain.centrifuge.io, attempt=9, pendingSendables=[Sendable(1818162183)])","children":[{"name":"testBalancesLoading[Getting balance for Centrifuge Parachain network]","uid":"c25d310febada272","parentUid":"7ed9905dc3959881dcaa4dde52e11d92","status":"broken","time":{"start":1682281032207,"stop":1682281112306,"duration":80099},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"7ed9905dc3959881dcaa4dde52e11d92"}],"uid":"bdbf199525818fae7a8651db9eafe741"}],"name":"categories"}