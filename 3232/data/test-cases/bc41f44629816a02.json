{"uid":"bc41f44629816a02","name":"test_can_create_connection[Test for Hashed Network, url: wss://c2.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c89828a53a64d5be0404b3846fb6bd54","time":{"start":1687118666732,"stop":1687118666802,"duration":70},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 20:04:26 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 20:04:26 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 20:04:26 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 20:04:26 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"1bdbccb8a2f100dc","name":"stdout","source":"1bdbccb8a2f100dc.txt","type":"text/plain","size":1098}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az365-311"},{"name":"thread","value":"1972-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fe9942d3b28be653","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 20:04:11 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687118651584,"stop":1687118651648,"duration":64}},{"uid":"e66da7c4c9a10e4b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 20:03:56 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687118636365,"stop":1687118636447,"duration":82}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":79,"skipped":0,"passed":194,"unknown":0,"total":273},"items":[{"uid":"695a9a6704406a8e","reportUrl":"https://novasamatech.github.io/test-runner/3231//#testresult/695a9a6704406a8e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 16:04:24 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687104264935,"stop":1687104264995,"duration":60}},{"uid":"b4b68ac3303efddd","reportUrl":"https://novasamatech.github.io/test-runner/3230//#testresult/b4b68ac3303efddd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 12:05:05 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687089905220,"stop":1687089905382,"duration":162}},{"uid":"e85c0ef4f297585b","reportUrl":"https://novasamatech.github.io/test-runner/3229//#testresult/e85c0ef4f297585b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 18 Jun 2023 08:04:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687075470305,"stop":1687075470375,"duration":70}},{"uid":"defe167bf07a181","reportUrl":"https://novasamatech.github.io/test-runner/3228//#testresult/defe167bf07a181","status":"passed","time":{"start":1687061052392,"stop":1687061052703,"duration":311}},{"uid":"e36be1c3ae2b4097","reportUrl":"https://novasamatech.github.io/test-runner/3227//#testresult/e36be1c3ae2b4097","status":"passed","time":{"start":1687047335960,"stop":1687047336044,"duration":84}},{"uid":"bad88ef3a30e0f76","reportUrl":"https://novasamatech.github.io/test-runner/3226//#testresult/bad88ef3a30e0f76","status":"passed","time":{"start":1687032235640,"stop":1687032235872,"duration":232}},{"uid":"ab3772cc004a892d","reportUrl":"https://novasamatech.github.io/test-runner/3225//#testresult/ab3772cc004a892d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 17 Jun 2023 16:04:55 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687017895186,"stop":1687017895429,"duration":243}},{"uid":"c42a19a7b44ba569","reportUrl":"https://novasamatech.github.io/test-runner/3224//#testresult/c42a19a7b44ba569","status":"passed","time":{"start":1687003489909,"stop":1687003489989,"duration":80}},{"uid":"bac5e1ad2ea13ea7","reportUrl":"https://novasamatech.github.io/test-runner/3223//#testresult/bac5e1ad2ea13ea7","status":"passed","time":{"start":1686989051814,"stop":1686989052151,"duration":337}},{"uid":"d63fbffe541d4265","reportUrl":"https://novasamatech.github.io/test-runner/3222//#testresult/d63fbffe541d4265","status":"passed","time":{"start":1686974652574,"stop":1686974653008,"duration":434}},{"uid":"2d0ae074f937baa3","reportUrl":"https://novasamatech.github.io/test-runner/3221//#testresult/2d0ae074f937baa3","status":"passed","time":{"start":1686960816176,"stop":1686960816391,"duration":215}},{"uid":"7a05a313de5fb53f","reportUrl":"https://novasamatech.github.io/test-runner/3220//#testresult/7a05a313de5fb53f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 16 Jun 2023 20:04:32 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686945872699,"stop":1686945872748,"duration":49}},{"uid":"f2c1d7db7e0a07e8","reportUrl":"https://novasamatech.github.io/test-runner/3219//#testresult/f2c1d7db7e0a07e8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 16 Jun 2023 16:04:42 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686931481958,"stop":1686931482134,"duration":176}},{"uid":"3d507aa241e3428","reportUrl":"https://novasamatech.github.io/test-runner/3218//#testresult/3d507aa241e3428","status":"passed","time":{"start":1686917112669,"stop":1686917112926,"duration":257}},{"uid":"66099319d70a1c2a","reportUrl":"https://novasamatech.github.io/test-runner/3217//#testresult/66099319d70a1c2a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 16 Jun 2023 08:04:40 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686902679758,"stop":1686902680118,"duration":360}},{"uid":"df3df72282aae4bf","reportUrl":"https://novasamatech.github.io/test-runner/3216//#testresult/df3df72282aae4bf","status":"passed","time":{"start":1686888260299,"stop":1686888260536,"duration":237}},{"uid":"86885daa64698c71","reportUrl":"https://novasamatech.github.io/test-runner/3215//#testresult/86885daa64698c71","status":"passed","time":{"start":1686874463398,"stop":1686874463456,"duration":58}},{"uid":"7947bf99fb0c7480","reportUrl":"https://novasamatech.github.io/test-runner/3214//#testresult/7947bf99fb0c7480","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 15 Jun 2023 20:04:33 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686859473956,"stop":1686859473983,"duration":27}},{"uid":"518f23053e668f5b","reportUrl":"https://novasamatech.github.io/test-runner/3213//#testresult/518f23053e668f5b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 15 Jun 2023 16:04:33 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686845073781,"stop":1686845073856,"duration":75}},{"uid":"72d6e38b7052b897","reportUrl":"https://novasamatech.github.io/test-runner/3212//#testresult/72d6e38b7052b897","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 15 Jun 2023 12:05:46 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686830746149,"stop":1686830746412,"duration":263}}]},"tags":[]},"source":"bc41f44629816a02.json","parameterValues":["{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"]}