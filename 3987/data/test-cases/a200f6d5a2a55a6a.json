{"uid":"a200f6d5a2a55a6a","name":"test_can_create_connection[Test for Altair, url: wss://fullnode.altair.centrifuge.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"8945b10a5f602533d42cc30bfb0e5945","time":{"start":1697832111366,"stop":1697832111811,"duration":445},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Fri, 20 Oct 2023 20:01:51 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ToCxR6e5OZ3MsqAVh9oNBhnlZUneWyAGlWQP7bLa2Yqt6i6voUcUdEQS6iWBieg1B5VHmRrixS%2FxVSQ8LlEblrE3f9UtFfSooycrKUDwjooBIMAso%2FyZx3r9wVpXoQ%2BfUjAGuKQAQxzlfIMynPdh\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'expect-ct': 'max-age=86400, enforce', 'referrer-policy': 'same-origin', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'cloudflare', 'cf-ray': '8193dae85d570c3a-DFW'} -+-+- None","statusTrace":"data = {'name': 'Altair', 'url': 'wss://fullnode.altair.centrifuge.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Fri, 20 Oct 2023 20:01:51 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ToCxR6e5OZ3MsqAVh9oNBhnlZUneWyAGlWQP7bLa2Yqt6i6voUcUdEQS6iWBieg1B5VHmRrixS%2FxVSQ8LlEblrE3f9UtFfSooycrKUDwjooBIMAso%2FyZx3r9wVpXoQ%2BfUjAGuKQAQxzlfIMynPdh\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'expect-ct': 'max-age=86400, enforce', 'referrer-policy': 'same-origin', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'cloudflare', 'cf-ray': '8193dae85d570c3a-DFW'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Fri, 20 Oct 2023 20:01:51 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ToCxR6e5OZ3MsqAVh9oNBhnlZUneWyAGlWQP7bLa2Yqt6i6voUcUdEQS6iWBieg1B5VHmRrixS%2FxVSQ8LlEblrE3f9UtFfSooycrKUDwjooBIMAso%2FyZx3r9wVpXoQ%2BfUjAGuKQAQxzlfIMynPdh\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'expect-ct': 'max-age=86400, enforce', 'referrer-policy': 'same-origin', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'cloudflare', 'cf-ray': '8193dae85d570c3a-DFW'} -+-+- None","statusTrace":"data = {'name': 'Altair', 'url': 'wss://fullnode.altair.centrifuge.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Fri, 20 Oct 2023 20:01:51 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ToCxR6e5OZ3MsqAVh9oNBhnlZUneWyAGlWQP7bLa2Yqt6i6voUcUdEQS6iWBieg1B5VHmRrixS%2FxVSQ8LlEblrE3f9UtFfSooycrKUDwjooBIMAso%2FyZx3r9wVpXoQ%2BfUjAGuKQAQxzlfIMynPdh\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'expect-ct': 'max-age=86400, enforce', 'referrer-policy': 'same-origin', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'cloudflare', 'cf-ray': '8193dae85d570c3a-DFW'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"61e7d00bc10defec","name":"stdout","source":"61e7d00bc10defec.txt","type":"text/plain","size":2936}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az344-774"},{"name":"thread","value":"2078-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://fullnode.altair.centrifuge.io', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"df84fec7f780d5b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Fri, 20 Oct 2023 20:01:36 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=pBPt6W30BxmEA5Mr0BuIjnixlGse6vEyEcvFduzvQeKGXXEFcrjX3o372kUg6kvaWPZZJUuqOjN%2B8k%2FV5%2Fn%2FWSVymV3VPtUv5i56T2SJUB%2FbBJsOm7iWJzkfO9jgXlryub%2F2x3d3r3jpxTYYzVAY\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'expect-ct': 'max-age=86400, enforce', 'referrer-policy': 'same-origin', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'cloudflare', 'cf-ray': '8193da873f9f0c3a-DFW'} -+-+- None","time":{"start":1697832095827,"stop":1697832096272,"duration":445}},{"uid":"d5f1e5bdab572a4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Fri, 20 Oct 2023 20:01:20 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=aKgNBMJcpMVXVx%2F9cBFs7dYWfzkvwAtKu7x7%2ByoULIzAXTtE0P%2FN5IpH7Fc%2B0lrJTDW7%2FEPyXyhqEgVgVlJVbtXSijk4tGX24IvL%2FnYQb3qxjRmAVTOb%2BNgbR4WGSUbYEa9b9dZtfQ7GAk7tryDU\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'expect-ct': 'max-age=86400, enforce', 'referrer-policy': 'same-origin', 'x-content-type-options': 'nosniff', 'x-frame-options': 'SAMEORIGIN', 'x-xss-protection': '1; mode=block', 'server': 'cloudflare', 'cf-ray': '8193da25cfd30c3a-DFW'} -+-+- None","time":{"start":1697832080182,"stop":1697832080674,"duration":492}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":346,"unknown":0,"total":347},"items":[{"uid":"ef4bab5b0dd5f2ac","reportUrl":"https://novasamatech.github.io/test-runner/3986//#testresult/ef4bab5b0dd5f2ac","status":"passed","time":{"start":1697817711902,"stop":1697817712590,"duration":688}},{"uid":"34d4fbc37f7edb55","reportUrl":"https://novasamatech.github.io/test-runner/3985//#testresult/34d4fbc37f7edb55","status":"passed","time":{"start":1697803284321,"stop":1697803285016,"duration":695}},{"uid":"6b2332a638c2a69e","reportUrl":"https://novasamatech.github.io/test-runner/3984//#testresult/6b2332a638c2a69e","status":"passed","time":{"start":1697788894064,"stop":1697788894803,"duration":739}},{"uid":"562b489fcb0fe15d","reportUrl":"https://novasamatech.github.io/test-runner/3983//#testresult/562b489fcb0fe15d","status":"passed","time":{"start":1697786801823,"stop":1697786802491,"duration":668}},{"uid":"97c0741a47d0c213","reportUrl":"https://novasamatech.github.io/test-runner/3982//#testresult/97c0741a47d0c213","status":"passed","time":{"start":1697774488173,"stop":1697774489010,"duration":837}},{"uid":"11faa1106c23eb74","reportUrl":"https://novasamatech.github.io/test-runner/3981//#testresult/11faa1106c23eb74","status":"passed","time":{"start":1697760135320,"stop":1697760135736,"duration":416}},{"uid":"b296b20d1a15010c","reportUrl":"https://novasamatech.github.io/test-runner/3980//#testresult/b296b20d1a15010c","status":"passed","time":{"start":1697745716734,"stop":1697745717281,"duration":547}},{"uid":"817bea35ae070e04","reportUrl":"https://novasamatech.github.io/test-runner/3979//#testresult/817bea35ae070e04","status":"passed","time":{"start":1697731306234,"stop":1697731306859,"duration":625}},{"uid":"6df28e83a889970e","reportUrl":"https://novasamatech.github.io/test-runner/3978//#testresult/6df28e83a889970e","status":"passed","time":{"start":1697716902724,"stop":1697716903368,"duration":644}},{"uid":"b90eeee692ddfe4b","reportUrl":"https://novasamatech.github.io/test-runner/3977//#testresult/b90eeee692ddfe4b","status":"passed","time":{"start":1697702485664,"stop":1697702486117,"duration":453}},{"uid":"65347d80d7510b65","reportUrl":"https://novasamatech.github.io/test-runner/3976//#testresult/65347d80d7510b65","status":"passed","time":{"start":1697688089054,"stop":1697688089731,"duration":677}},{"uid":"a9549429b8e3a1cb","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/a9549429b8e3a1cb","status":"passed","time":{"start":1697673718460,"stop":1697673718879,"duration":419}},{"uid":"63fac17f2a607a65","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/63fac17f2a607a65","status":"passed","time":{"start":1697659287939,"stop":1697659288375,"duration":436}},{"uid":"4ace00da770924d","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/4ace00da770924d","status":"passed","time":{"start":1697644886316,"stop":1697644886855,"duration":539}},{"uid":"44e075563225194","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/44e075563225194","status":"passed","time":{"start":1697630508372,"stop":1697630509488,"duration":1116}},{"uid":"788b5d0f33cc35ba","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/788b5d0f33cc35ba","status":"passed","time":{"start":1697616081790,"stop":1697616082403,"duration":613}},{"uid":"7cc0989f8f7690e1","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/7cc0989f8f7690e1","status":"passed","time":{"start":1697601687281,"stop":1697601687803,"duration":522}},{"uid":"478ef331aeee6bc2","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/478ef331aeee6bc2","status":"passed","time":{"start":1697587337372,"stop":1697587338186,"duration":814}},{"uid":"c1796948684326ee","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/c1796948684326ee","status":"passed","time":{"start":1697572880257,"stop":1697572880844,"duration":587}},{"uid":"8a242800d0a4beb2","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/8a242800d0a4beb2","status":"passed","time":{"start":1697558512287,"stop":1697558512813,"duration":526}}]},"tags":[]},"source":"a200f6d5a2a55a6a.json","parameterValues":["{'url': 'wss://fullnode.altair.centrifuge.io', 'name': 'Altair'}"]}