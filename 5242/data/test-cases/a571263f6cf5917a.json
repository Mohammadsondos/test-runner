{"uid":"a571263f6cf5917a","name":"test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa8c3605e2f5b4f16369f446caef3de6","time":{"start":1715630507094,"stop":1715630507094,"duration":0},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:165: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2948: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2962: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:359: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f5588972470>\nmethod = 'system_chain', params = [], result_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1715630494744,"stop":1715630495822,"duration":1078},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 165, in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2948, in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2962, in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 359, in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1715630500982,"stop":1715630501933,"duration":951},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 165, in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2948, in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2962, in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 359, in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1715630507095,"stop":1715630508217,"duration":1122},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 165, in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2948, in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2962, in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 359, in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:165: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2948: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2962: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:359: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f5588972470>\nmethod = 'system_chain', params = [], result_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","steps":[],"attachments":[{"uid":"a22897e564e550a3","name":"stdout","source":"a22897e564e550a3.txt","type":"text/plain","size":465}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1780-897"},{"name":"thread","value":"2088-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://1rpc.io/glmr', 'name': 'Moonbeam'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"56e9c5dcf0984e55","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715630500982,"stop":1715630500982,"duration":0}},{"uid":"5f7ed738889a8cb2","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715630494742,"stop":1715630494742,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":183,"skipped":0,"passed":1134,"unknown":0,"total":1317},"items":[{"uid":"2272801c6e3e7c0f","reportUrl":"https://novasamatech.github.io/test-runner/5239//#testresult/2272801c6e3e7c0f","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715587319819,"stop":1715587319819,"duration":0}},{"uid":"1ab8496fb3de2bfb","reportUrl":"https://novasamatech.github.io/test-runner/5240//#testresult/1ab8496fb3de2bfb","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715601706120,"stop":1715601706120,"duration":0}},{"uid":"380629cf388c65da","reportUrl":"https://novasamatech.github.io/test-runner/5238//#testresult/380629cf388c65da","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715572918279,"stop":1715572918279,"duration":0}},{"uid":"58312e38f99fc2a","reportUrl":"https://novasamatech.github.io/test-runner/5237//#testresult/58312e38f99fc2a","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715558577950,"stop":1715558577950,"duration":0}},{"uid":"991eaf23b5040e22","reportUrl":"https://novasamatech.github.io/test-runner/5236//#testresult/991eaf23b5040e22","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715544125451,"stop":1715544125451,"duration":0}},{"uid":"eaf7ad06db19e761","reportUrl":"https://novasamatech.github.io/test-runner/5235//#testresult/eaf7ad06db19e761","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715529721392,"stop":1715529721392,"duration":0}},{"uid":"a06012be2d2744bb","reportUrl":"https://novasamatech.github.io/test-runner/5234//#testresult/a06012be2d2744bb","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715515309588,"stop":1715515309588,"duration":0}},{"uid":"c7fb708c613080fb","reportUrl":"https://novasamatech.github.io/test-runner/5233//#testresult/c7fb708c613080fb","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715500917436,"stop":1715500917436,"duration":0}},{"uid":"af91e4f9d43c0bc5","reportUrl":"https://novasamatech.github.io/test-runner/5231//#testresult/af91e4f9d43c0bc5","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715472144410,"stop":1715472144410,"duration":0}},{"uid":"e8c9b631c880acbd","reportUrl":"https://novasamatech.github.io/test-runner/5232//#testresult/e8c9b631c880acbd","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715486515068,"stop":1715486515068,"duration":0}},{"uid":"eb2aa903fbea5fac","reportUrl":"https://novasamatech.github.io/test-runner/5230//#testresult/eb2aa903fbea5fac","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715457702010,"stop":1715457702010,"duration":0}},{"uid":"ec197b378554e2d","reportUrl":"https://novasamatech.github.io/test-runner/5229//#testresult/ec197b378554e2d","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715443308193,"stop":1715443308193,"duration":0}},{"uid":"d2e7133c2e8f2c35","reportUrl":"https://novasamatech.github.io/test-runner/5228//#testresult/d2e7133c2e8f2c35","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715428926146,"stop":1715428926146,"duration":0}},{"uid":"2305035b5a503e9c","reportUrl":"https://novasamatech.github.io/test-runner/5226//#testresult/2305035b5a503e9c","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715400113410,"stop":1715400113410,"duration":0}},{"uid":"44dd5d378dcf14d8","reportUrl":"https://novasamatech.github.io/test-runner/5227//#testresult/44dd5d378dcf14d8","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715414529568,"stop":1715414529568,"duration":0}},{"uid":"74c7fbd99dcfe930","reportUrl":"https://novasamatech.github.io/test-runner/5225//#testresult/74c7fbd99dcfe930","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715385754467,"stop":1715385754467,"duration":0}},{"uid":"58642f4b323afd5e","reportUrl":"https://novasamatech.github.io/test-runner/5224//#testresult/58642f4b323afd5e","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715371311427,"stop":1715371311427,"duration":0}},{"uid":"d6eb1f12ff130810","reportUrl":"https://novasamatech.github.io/test-runner/5223//#testresult/d6eb1f12ff130810","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715356913214,"stop":1715356913214,"duration":0}},{"uid":"a38d75b31ff52830","reportUrl":"https://novasamatech.github.io/test-runner/5221//#testresult/a38d75b31ff52830","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715328122201,"stop":1715328122201,"duration":0}},{"uid":"197fa93b0794d1ad","reportUrl":"https://novasamatech.github.io/test-runner/5222//#testresult/197fa93b0794d1ad","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'message': 'the method system_chain does not exist/is not available', 'code': 32601}","time":{"start":1715342515925,"stop":1715342515925,"duration":0}}]},"tags":[]},"source":"a571263f6cf5917a.json","parameterValues":["{'url': 'wss://1rpc.io/glmr', 'name': 'Moonbeam'}"]}