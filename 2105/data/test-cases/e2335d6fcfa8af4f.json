{"uid":"e2335d6fcfa8af4f","name":"test_can_create_connection[Test for Kintsugi, url: wss://kintsugi-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"764ca318c5eada7b509393e0fd98a29a","time":{"start":1671336309236,"stop":1671336320636,"duration":11400},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Kintsugi', 'url': 'wss://kintsugi-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Kintsugi', 'url': 'wss://kintsugi-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"8d6476376b7c0400","name":"stdout","source":"8d6476376b7c0400.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az262-302"},{"name":"thread","value":"1720-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kintsugi-rpc.dwellir.com', 'name': 'Kintsugi'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f10aaae32feb0bd7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671336287691,"stop":1671336299128,"duration":11437}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":166,"skipped":0,"passed":208,"unknown":0,"total":374},"items":[{"uid":"a89366159f52ad92","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/a89366159f52ad92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671322434929,"stop":1671322447691,"duration":12762}},{"uid":"a55169dc9c983c9a","reportUrl":"https://nova-wallet.github.io/test-runner/2103//#testresult/a55169dc9c983c9a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671307463971,"stop":1671307476629,"duration":12658}},{"uid":"7f3dc70d87a79964","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/7f3dc70d87a79964","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671293083120,"stop":1671293094517,"duration":11397}},{"uid":"14b9b365087c9201","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/14b9b365087c9201","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671278704314,"stop":1671278716951,"duration":12637}},{"uid":"670bff44fd94bded","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/670bff44fd94bded","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671264447379,"stop":1671264458759,"duration":11380}},{"uid":"4723f107b69609c7","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/4723f107b69609c7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671250001547,"stop":1671250012929,"duration":11382}},{"uid":"d3f82db755504cb2","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/d3f82db755504cb2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671236112324,"stop":1671236122944,"duration":10620}},{"uid":"c4bd5ca2d591a67","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/c4bd5ca2d591a67","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671221202133,"stop":1671221213562,"duration":11429}},{"uid":"f4eb9f080789fa69","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/f4eb9f080789fa69","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671206800306,"stop":1671206811688,"duration":11382}},{"uid":"85e71e9eeb2df40","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/85e71e9eeb2df40","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671192451988,"stop":1671192464598,"duration":12610}},{"uid":"4242fd254ed39a47","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/4242fd254ed39a47","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671178040697,"stop":1671178050740,"duration":10043}},{"uid":"24d6ca27d41af59a","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/24d6ca27d41af59a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671163622102,"stop":1671163634745,"duration":12643}},{"uid":"4c848bdb20065532","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/4c848bdb20065532","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671149761587,"stop":1671149772985,"duration":11398}},{"uid":"69997ef1ddbddd06","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/69997ef1ddbddd06","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671134795618,"stop":1671134807016,"duration":11398}},{"uid":"1d253a54e47da27d","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/1d253a54e47da27d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671120418436,"stop":1671120431146,"duration":12710}},{"uid":"9df0e20afb4d2d17","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/9df0e20afb4d2d17","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671106082219,"stop":1671106093625,"duration":11406}},{"uid":"fb63824729f241f6","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/fb63824729f241f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671091638985,"stop":1671091650374,"duration":11389}},{"uid":"b750820e02d9776","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/b750820e02d9776","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671077223610,"stop":1671077236430,"duration":12820}},{"uid":"c08d6f24405e6c3b","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/c08d6f24405e6c3b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671063387290,"stop":1671063400011,"duration":12721}},{"uid":"ef72e20daafe88f7","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/ef72e20daafe88f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671048408916,"stop":1671048420277,"duration":11361}}]},"tags":[]},"source":"e2335d6fcfa8af4f.json","parameterValues":["{'url': 'wss://kintsugi-rpc.dwellir.com', 'name': 'Kintsugi'}"]}