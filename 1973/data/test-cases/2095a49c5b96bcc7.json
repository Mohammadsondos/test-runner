{"uid":"2095a49c5b96bcc7","name":"test_can_create_connection[Test for Encointer, url: wss://encointer.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"8737cc376b759fe084df17567c102feb","time":{"start":1669493368145,"stop":1669493368474,"duration":329},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Encointer', 'url': 'wss://encointer.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az265-855"},{"name":"thread","value":"1580-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://encointer.api.onfinality.io/public-ws', 'name': 'Encointer'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1e558b72cad9bacf","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669493357621,"stop":1669493358052,"duration":431}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":250,"unknown":0,"total":260},"items":[{"uid":"66757c992909d2e4","reportUrl":"https://nova-wallet.github.io/test-runner/1972//#testresult/66757c992909d2e4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669478937067,"stop":1669478937461,"duration":394}},{"uid":"1cca8ff344588ce8","reportUrl":"https://nova-wallet.github.io/test-runner/1971//#testresult/1cca8ff344588ce8","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669464576406,"stop":1669464576837,"duration":431}},{"uid":"b5d5a37dfcd807ab","reportUrl":"https://nova-wallet.github.io/test-runner/1970//#testresult/b5d5a37dfcd807ab","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669450140283,"stop":1669450140770,"duration":487}},{"uid":"a675d115d83188fe","reportUrl":"https://nova-wallet.github.io/test-runner/1969//#testresult/a675d115d83188fe","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669435779785,"stop":1669435780205,"duration":420}},{"uid":"268a981980d43f0b","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/268a981980d43f0b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421898054,"stop":1669421898537,"duration":483}},{"uid":"6d6b5c87d4e90264","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/6d6b5c87d4e90264","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406950446,"stop":1669406950869,"duration":423}},{"uid":"8f89df80510df13a","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/8f89df80510df13a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392547651,"stop":1669392548109,"duration":458}},{"uid":"e0a56a1d66025289","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/e0a56a1d66025289","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378214496,"stop":1669378214995,"duration":499}},{"uid":"ed33100b9e0755fc","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/ed33100b9e0755fc","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370955536,"stop":1669370955973,"duration":437}},{"uid":"634189a5b5be6ef1","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/634189a5b5be6ef1","status":"passed","time":{"start":1669118719172,"stop":1669118719916,"duration":744}},{"uid":"bbf721f67974e75d","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/bbf721f67974e75d","status":"passed","time":{"start":1669104288655,"stop":1669104289204,"duration":549}},{"uid":"6438d57cbae3fcd0","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/6438d57cbae3fcd0","status":"passed","time":{"start":1669089850061,"stop":1669089850783,"duration":722}},{"uid":"b528ddd59e6aedac","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/b528ddd59e6aedac","status":"passed","time":{"start":1669076141072,"stop":1669076141789,"duration":717}},{"uid":"eeeba625d50d58c5","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/eeeba625d50d58c5","status":"passed","time":{"start":1669061047836,"stop":1669061048468,"duration":632}},{"uid":"f12539debba33bb7","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/f12539debba33bb7","status":"passed","time":{"start":1669046727288,"stop":1669046727867,"duration":579}},{"uid":"f2d8504d5f5f5558","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/f2d8504d5f5f5558","status":"passed","time":{"start":1669032331826,"stop":1669032332497,"duration":671}},{"uid":"bead5d942e37b9a6","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/bead5d942e37b9a6","status":"passed","time":{"start":1669017882789,"stop":1669017883377,"duration":588}},{"uid":"6dc2a7ec080013c0","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/6dc2a7ec080013c0","status":"passed","time":{"start":1669003729476,"stop":1669003730164,"duration":688}},{"uid":"2b8927361a8183a0","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/2b8927361a8183a0","status":"passed","time":{"start":1668989748666,"stop":1668989749357,"duration":691}},{"uid":"87b649b2671c0ad0","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/87b649b2671c0ad0","status":"passed","time":{"start":1668974637100,"stop":1668974637912,"duration":812}}]},"tags":[]},"source":"2095a49c5b96bcc7.json","parameterValues":["{'url': 'wss://encointer.api.onfinality.io/public-ws', 'name': 'Encointer'}"]}