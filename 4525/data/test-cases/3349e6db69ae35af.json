{"uid":"3349e6db69ae35af","name":"test_rpc_node_work_fast[Test for Ethereum, url: https://api.securerpc.com/v1]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_work_fast","historyId":"6a4ac116eb5566e5ddc9be64a3b58657","time":{"start":1705435262779,"stop":1705435263007,"duration":228},"status":"broken","statusMessage":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7fd98d954be0>\ndata = {'name': 'Ethereum', 'url': 'https://api.securerpc.com/v1'}\n\n    def test_rpc_node_work_fast(self, data):\n    \n        w3 = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to Ethereum RPC node\n        assert w3.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Measure time taken to retrieve current block\n        start_time = time.time()\n>       block = w3.eth.get_block('latest')\n\ntests/test_eth_nodes_availability.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:389: in get_block\n    return self._get_block(block_identifier, full_transactions)\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'error': {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries e...fely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}, 'id': 1, 'jsonrpc': '2.0'}\nparams = ('latest', False)\nerror_formatters = <cyfunction identity at 0x7fd98fdd2400>\nnull_result_formatters = <function raise_block_not_found at 0x7fd98ea4b250>\n\n    @staticmethod\n    def formatted_response(\n        response: RPCResponse,\n        params: Any,\n        error_formatters: Optional[Callable[..., Any]] = None,\n        null_result_formatters: Optional[Callable[..., Any]] = None,\n    ) -> Any:\n        if \"error\" in response:\n            apply_error_formatters(error_formatters, response)\n    \n            # guard against eth-tester case - eth-tester returns a string\n            # with no code, so can't parse what the error is.\n            if isinstance(response[\"error\"], dict):\n                resp_code = response[\"error\"].get(\"code\")\n                if resp_code == -32601:\n                    raise MethodUnavailable(response[\"error\"])\n>           raise ValueError(response[\"error\"])\nE           ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}\n\n.venv/lib/python3.10/site-packages/web3/manager.py:205: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az975-722"},{"name":"thread","value":"2096-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3349e6db69ae35af.json","parameterValues":["{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"]}