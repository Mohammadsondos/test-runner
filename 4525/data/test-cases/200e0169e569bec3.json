{"uid":"200e0169e569bec3","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://api.securerpc.com/v1]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"5f51e5f09562d64cd0497442c6c29430","time":{"start":1705435304925,"stop":1705435305375,"duration":450},"status":"broken","statusMessage":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7fa1a5fad0c0>\ndata = {'name': 'Ethereum', 'url': 'https://api.securerpc.com/v1'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n        assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Get the latest block number from nodes\n>       rpc_block_number = w3_rpc.eth.block_number\n\ntests/test_eth_nodes_availability.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:133: in block_number\n    return self.get_block_number()\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'error': {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries e...fely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}, 'id': 1, 'jsonrpc': '2.0'}\nparams = (), error_formatters = <cyfunction identity at 0x7fa1ac4da400>\nnull_result_formatters = <cyfunction identity at 0x7fa1ac4da400>\n\n    @staticmethod\n    def formatted_response(\n        response: RPCResponse,\n        params: Any,\n        error_formatters: Optional[Callable[..., Any]] = None,\n        null_result_formatters: Optional[Callable[..., Any]] = None,\n    ) -> Any:\n        if \"error\" in response:\n            apply_error_formatters(error_formatters, response)\n    \n            # guard against eth-tester case - eth-tester returns a string\n            # with no code, so can't parse what the error is.\n            if isinstance(response[\"error\"], dict):\n                resp_code = response[\"error\"].get(\"code\")\n                if resp_code == -32601:\n                    raise MethodUnavailable(response[\"error\"])\n>           raise ValueError(response[\"error\"])\nE           ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}\n\n.venv/lib/python3.10/site-packages/web3/manager.py:205: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az975-722"},{"name":"thread","value":"2093-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bf3cbe2f765e41cf","status":"broken","statusDetails":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","time":{"start":1705435289682,"stop":1705435289896,"duration":214}},{"uid":"4ea20a5c2a7af73e","status":"broken","statusDetails":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","time":{"start":1705435264136,"stop":1705435274575,"duration":10439}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":738,"unknown":0,"total":739},"items":[{"uid":"ba3545cf5e36e766","reportUrl":"https://novasamatech.github.io/test-runner/4524//#testresult/ba3545cf5e36e766","status":"passed","time":{"start":1705420867143,"stop":1705420867900,"duration":757}},{"uid":"9c95dc11c16bab21","reportUrl":"https://novasamatech.github.io/test-runner/4523//#testresult/9c95dc11c16bab21","status":"passed","time":{"start":1705406469305,"stop":1705406469888,"duration":583}},{"uid":"2c570edba77ea0c6","reportUrl":"https://novasamatech.github.io/test-runner/4522//#testresult/2c570edba77ea0c6","status":"passed","time":{"start":1705392065046,"stop":1705392066099,"duration":1053}},{"uid":"19016bd391ef4e31","reportUrl":"https://novasamatech.github.io/test-runner/4521//#testresult/19016bd391ef4e31","status":"passed","time":{"start":1705377669189,"stop":1705377669502,"duration":313}},{"uid":"48b357030ea4ed74","reportUrl":"https://novasamatech.github.io/test-runner/4520//#testresult/48b357030ea4ed74","status":"passed","time":{"start":1705363306399,"stop":1705363306664,"duration":265}},{"uid":"ef8158c0a1e1bb7e","reportUrl":"https://novasamatech.github.io/test-runner/4519//#testresult/ef8158c0a1e1bb7e","status":"passed","time":{"start":1705348864937,"stop":1705348865828,"duration":891}},{"uid":"4c4c0a07e4721586","reportUrl":"https://novasamatech.github.io/test-runner/4518//#testresult/4c4c0a07e4721586","status":"passed","time":{"start":1705334470928,"stop":1705334471250,"duration":322}},{"uid":"9caf8c23e86e0bbd","reportUrl":"https://novasamatech.github.io/test-runner/4517//#testresult/9caf8c23e86e0bbd","status":"passed","time":{"start":1705320070340,"stop":1705320070837,"duration":497}},{"uid":"ba3049381ba53bf4","reportUrl":"https://novasamatech.github.io/test-runner/4516//#testresult/ba3049381ba53bf4","status":"passed","time":{"start":1705305673074,"stop":1705305673518,"duration":444}},{"uid":"17a600540907516b","reportUrl":"https://novasamatech.github.io/test-runner/4515//#testresult/17a600540907516b","status":"passed","time":{"start":1705291266696,"stop":1705291266938,"duration":242}},{"uid":"3645f9d02cbccc0f","reportUrl":"https://novasamatech.github.io/test-runner/4514//#testresult/3645f9d02cbccc0f","status":"passed","time":{"start":1705276911265,"stop":1705276912027,"duration":762}},{"uid":"10ba701c9429395e","reportUrl":"https://novasamatech.github.io/test-runner/4513//#testresult/10ba701c9429395e","status":"passed","time":{"start":1705262461731,"stop":1705262462602,"duration":871}},{"uid":"d34dfd16f624fbe","reportUrl":"https://novasamatech.github.io/test-runner/4512//#testresult/d34dfd16f624fbe","status":"passed","time":{"start":1705248066859,"stop":1705248067142,"duration":283}},{"uid":"e40e1623e30d5014","reportUrl":"https://novasamatech.github.io/test-runner/4511//#testresult/e40e1623e30d5014","status":"passed","time":{"start":1705233663855,"stop":1705233664075,"duration":220}},{"uid":"75dbbd7420151d4d","reportUrl":"https://novasamatech.github.io/test-runner/4510//#testresult/75dbbd7420151d4d","status":"passed","time":{"start":1705219262945,"stop":1705219263158,"duration":213}},{"uid":"e46a991bd249442d","reportUrl":"https://novasamatech.github.io/test-runner/4509//#testresult/e46a991bd249442d","status":"passed","time":{"start":1705204866270,"stop":1705204866566,"duration":296}},{"uid":"766639bff538bea1","reportUrl":"https://novasamatech.github.io/test-runner/4508//#testresult/766639bff538bea1","status":"passed","time":{"start":1705190513383,"stop":1705190513606,"duration":223}},{"uid":"4423c71377e9a8d2","reportUrl":"https://novasamatech.github.io/test-runner/4507//#testresult/4423c71377e9a8d2","status":"passed","time":{"start":1705176061189,"stop":1705176061387,"duration":198}},{"uid":"20eb22924f838c5d","reportUrl":"https://novasamatech.github.io/test-runner/4506//#testresult/20eb22924f838c5d","status":"passed","time":{"start":1705161661772,"stop":1705161661964,"duration":192}},{"uid":"85fdc1b4f1b07869","reportUrl":"https://novasamatech.github.io/test-runner/4505//#testresult/85fdc1b4f1b07869","status":"passed","time":{"start":1705147265150,"stop":1705147265433,"duration":283}}]},"tags":[]},"source":"200e0169e569bec3.json","parameterValues":["{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"]}