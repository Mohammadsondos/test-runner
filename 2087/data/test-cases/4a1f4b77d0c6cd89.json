{"uid":"4a1f4b77d0c6cd89","name":"test_can_create_connection[Test for Tinkernet, url: wss://invarch-tinkernet.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa04c589555648ef054595cb3e43047c","time":{"start":1671077292351,"stop":1671077345519,"duration":53168},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"25452569050607fd","name":"stdout","source":"25452569050607fd.txt","type":"text/plain","size":264}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-51"},{"name":"thread","value":"1658-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"22e28dc9e70b3fcc","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671077222910,"stop":1671077282272,"duration":59362}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":64,"skipped":0,"passed":235,"unknown":0,"total":299},"items":[{"uid":"eddfed1c37cc0f2f","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/eddfed1c37cc0f2f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671063405986,"stop":1671063466062,"duration":60076}},{"uid":"a6b3e325bd764f79","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/a6b3e325bd764f79","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671048479189,"stop":1671048539072,"duration":59883}},{"uid":"b726c13cee7a1edd","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/b726c13cee7a1edd","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671034288162,"stop":1671034348271,"duration":60109}},{"uid":"f220f3a5a8a526e1","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/f220f3a5a8a526e1","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671019700195,"stop":1671019760253,"duration":60058}},{"uid":"4751001b37d5f301","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/4751001b37d5f301","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671005292137,"stop":1671005352054,"duration":59917}},{"uid":"57f9674ca2264a7d","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/57f9674ca2264a7d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670990886446,"stop":1670990946079,"duration":59633}},{"uid":"ace1bafb7758770e","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/ace1bafb7758770e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670977058568,"stop":1670977118254,"duration":59686}},{"uid":"d6dd291705629126","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/d6dd291705629126","status":"passed","time":{"start":1670961983603,"stop":1670961984100,"duration":497}},{"uid":"b30852c785787d2c","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/b30852c785787d2c","status":"passed","time":{"start":1670947615957,"stop":1670947616257,"duration":300}},{"uid":"7c7c93331c77327e","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/7c7c93331c77327e","status":"passed","time":{"start":1670933261935,"stop":1670933262410,"duration":475}},{"uid":"7ef037d51fa2c87b","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/7ef037d51fa2c87b","status":"passed","time":{"start":1670918811853,"stop":1670918812374,"duration":521}},{"uid":"b2ec4583f26e4258","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/b2ec4583f26e4258","status":"passed","time":{"start":1670904330693,"stop":1670904331052,"duration":359}},{"uid":"8ebdf598f2b0cbb0","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/8ebdf598f2b0cbb0","status":"passed","time":{"start":1670890520913,"stop":1670890521401,"duration":488}},{"uid":"5e78da9e6bc28844","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/5e78da9e6bc28844","status":"passed","time":{"start":1670875505274,"stop":1670875505635,"duration":361}},{"uid":"ddd3ff8f7e09ef8b","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/ddd3ff8f7e09ef8b","status":"passed","time":{"start":1670861142857,"stop":1670861143534,"duration":677}},{"uid":"f81cd8b654bff0e8","reportUrl":"https://nova-wallet.github.io/test-runner/2071//#testresult/f81cd8b654bff0e8","status":"passed","time":{"start":1670846810482,"stop":1670846811091,"duration":609}},{"uid":"1bb2af6d40062889","reportUrl":"https://nova-wallet.github.io/test-runner/2070//#testresult/1bb2af6d40062889","status":"passed","time":{"start":1670832375491,"stop":1670832375812,"duration":321}},{"uid":"ba56a90efe298a69","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/ba56a90efe298a69","status":"passed","time":{"start":1670817949320,"stop":1670817949756,"duration":436}},{"uid":"750fbc81a515092d","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/750fbc81a515092d","status":"passed","time":{"start":1670804133894,"stop":1670804134353,"duration":459}},{"uid":"123d0b57132e110c","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/123d0b57132e110c","status":"passed","time":{"start":1670789130830,"stop":1670789131166,"duration":336}}]},"tags":[]},"source":"4a1f4b77d0c6cd89.json","parameterValues":["{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"]}