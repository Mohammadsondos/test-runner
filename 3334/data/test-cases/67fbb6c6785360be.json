{"uid":"67fbb6c6785360be","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1688587559001,"stop":1688587559245,"duration":244},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f8988830130>\nchain = <scripts.utils.chain_model.Chain object at 0x7f89887e89a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f8988830130>\nchain = <scripts.utils.chain_model.Chain object at 0x7f89887e89a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"bed87bf013877f1e","name":"stdout","source":"bed87bf013877f1e.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1248-204"},{"name":"thread","value":"1977-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f89887e89a0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cd9e0eeab164fd1a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688587543456,"stop":1688587543964,"duration":508}},{"uid":"408a25dc4756dd72","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688587527137,"stop":1688587528382,"duration":1245}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":83,"skipped":0,"passed":255,"unknown":0,"total":338},"items":[{"uid":"c032da6c5f59534c","reportUrl":"https://novasamatech.github.io/test-runner/3333//#testresult/c032da6c5f59534c","status":"passed","time":{"start":1688573159577,"stop":1688573163069,"duration":3492}},{"uid":"24f5bf7c91ea8ac4","reportUrl":"https://novasamatech.github.io/test-runner/3332//#testresult/24f5bf7c91ea8ac4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688558852136,"stop":1688558852579,"duration":443}},{"uid":"6084c7df103f0cd5","reportUrl":"https://novasamatech.github.io/test-runner/3331//#testresult/6084c7df103f0cd5","status":"passed","time":{"start":1688544353990,"stop":1688544355644,"duration":1654}},{"uid":"9245012c20d2080f","reportUrl":"https://novasamatech.github.io/test-runner/3330//#testresult/9245012c20d2080f","status":"passed","time":{"start":1688529935284,"stop":1688529950073,"duration":14789}},{"uid":"79acf5e6bd19a369","reportUrl":"https://novasamatech.github.io/test-runner/3329//#testresult/79acf5e6bd19a369","status":"passed","time":{"start":1688516236603,"stop":1688516243754,"duration":7151}},{"uid":"23f0541945cee14a","reportUrl":"https://novasamatech.github.io/test-runner/3328//#testresult/23f0541945cee14a","status":"passed","time":{"start":1688501107421,"stop":1688501113741,"duration":6320}},{"uid":"66ad72af78a23193","reportUrl":"https://novasamatech.github.io/test-runner/3327//#testresult/66ad72af78a23193","status":"passed","time":{"start":1688486738115,"stop":1688486750926,"duration":12811}},{"uid":"26fd70ee8ddf595e","reportUrl":"https://novasamatech.github.io/test-runner/3326//#testresult/26fd70ee8ddf595e","status":"passed","time":{"start":1688472382584,"stop":1688472390714,"duration":8130}},{"uid":"227824940ad65f13","reportUrl":"https://novasamatech.github.io/test-runner/3325//#testresult/227824940ad65f13","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688457982364,"stop":1688457982740,"duration":376}},{"uid":"d354d3e2d91f953c","reportUrl":"https://novasamatech.github.io/test-runner/3324//#testresult/d354d3e2d91f953c","status":"passed","time":{"start":1688443521134,"stop":1688443528316,"duration":7182}},{"uid":"9806bd52393d225c","reportUrl":"https://novasamatech.github.io/test-runner/3323//#testresult/9806bd52393d225c","status":"passed","time":{"start":1688429807177,"stop":1688429816688,"duration":9511}},{"uid":"d8a7aeaec0caa675","reportUrl":"https://novasamatech.github.io/test-runner/3322//#testresult/d8a7aeaec0caa675","status":"passed","time":{"start":1688414754784,"stop":1688414758326,"duration":3542}},{"uid":"37c6ef05c5f6c645","reportUrl":"https://novasamatech.github.io/test-runner/3321//#testresult/37c6ef05c5f6c645","status":"passed","time":{"start":1688400317740,"stop":1688400320664,"duration":2924}},{"uid":"dab78a0b9932f9d4","reportUrl":"https://novasamatech.github.io/test-runner/3320//#testresult/dab78a0b9932f9d4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688386036958,"stop":1688386037382,"duration":424}},{"uid":"ad5cfbc8dc507b93","reportUrl":"https://novasamatech.github.io/test-runner/3319//#testresult/ad5cfbc8dc507b93","status":"passed","time":{"start":1688371552520,"stop":1688371554000,"duration":1480}},{"uid":"50a1b4ae0a9c5f4c","reportUrl":"https://novasamatech.github.io/test-runner/3318//#testresult/50a1b4ae0a9c5f4c","status":"passed","time":{"start":1688357134666,"stop":1688357149847,"duration":15181}},{"uid":"4f3b47351f8080e8","reportUrl":"https://novasamatech.github.io/test-runner/3317//#testresult/4f3b47351f8080e8","status":"passed","time":{"start":1688343425649,"stop":1688343427895,"duration":2246}},{"uid":"9d90ce960805ca57","reportUrl":"https://novasamatech.github.io/test-runner/3316//#testresult/9d90ce960805ca57","status":"passed","time":{"start":1688328301109,"stop":1688328303178,"duration":2069}},{"uid":"86d52994e54fcec7","reportUrl":"https://novasamatech.github.io/test-runner/3315//#testresult/86d52994e54fcec7","status":"passed","time":{"start":1688313914274,"stop":1688313917796,"duration":3522}},{"uid":"dbc223fd2f005615","reportUrl":"https://novasamatech.github.io/test-runner/3314//#testresult/dbc223fd2f005615","status":"passed","time":{"start":1688299545702,"stop":1688299552420,"duration":6718}}]},"tags":[]},"source":"67fbb6c6785360be.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f89887e89a0>"]}