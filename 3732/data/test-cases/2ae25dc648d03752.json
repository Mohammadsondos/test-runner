{"uid":"2ae25dc648d03752","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1694203389850,"stop":1694203390343,"duration":493},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fcbb182a350>\nchain = <scripts.utils.chain_model.Chain object at 0x7fcbb1968700>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fcbb182a350>\nchain = <scripts.utils.chain_model.Chain object at 0x7fcbb1968700>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"ab3f0dc2f3ed62bf","name":"stdout","source":"ab3f0dc2f3ed62bf.txt","type":"text/plain","size":1338}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1255-669"},{"name":"thread","value":"2104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fcbb1968700>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ddea54b09bb7aa7e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694203374305,"stop":1694203374820,"duration":515}},{"uid":"ab96a495f41ec130","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694203358767,"stop":1694203359288,"duration":521}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":91,"unknown":0,"total":92},"items":[{"uid":"524d44317865ce54","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/524d44317865ce54","status":"passed","time":{"start":1694188987959,"stop":1694188996254,"duration":8295}},{"uid":"82e825bcb0adfe17","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/82e825bcb0adfe17","status":"passed","time":{"start":1694174618157,"stop":1694174621894,"duration":3737}},{"uid":"ee90597aeae17e35","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/ee90597aeae17e35","status":"passed","time":{"start":1694160262598,"stop":1694160264967,"duration":2369}},{"uid":"d890ef327cb94ed3","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/d890ef327cb94ed3","status":"passed","time":{"start":1694145751516,"stop":1694145756272,"duration":4756}},{"uid":"85851fcd595debec","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/85851fcd595debec","status":"passed","time":{"start":1694131440098,"stop":1694131447519,"duration":7421}},{"uid":"1b9de8505390f21e","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/1b9de8505390f21e","status":"passed","time":{"start":1694116994330,"stop":1694116998881,"duration":4551}},{"uid":"b4f138180055f9dd","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/b4f138180055f9dd","status":"passed","time":{"start":1694102596490,"stop":1694102599600,"duration":3110}},{"uid":"844bec69e8c4f49c","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/844bec69e8c4f49c","status":"passed","time":{"start":1694088167287,"stop":1694088170121,"duration":2834}},{"uid":"42037e655ae4a6dd","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/42037e655ae4a6dd","status":"passed","time":{"start":1694073762008,"stop":1694073764531,"duration":2523}},{"uid":"4d4e44af3ebf4cd","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/4d4e44af3ebf4cd","status":"passed","time":{"start":1694059392805,"stop":1694059400175,"duration":7370}},{"uid":"dc3f61ab2ae594dd","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/dc3f61ab2ae594dd","status":"passed","time":{"start":1694045036648,"stop":1694045044122,"duration":7474}},{"uid":"3bddb222680b2483","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/3bddb222680b2483","status":"passed","time":{"start":1694030585957,"stop":1694030589125,"duration":3168}},{"uid":"cb837bb05b8a074c","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/cb837bb05b8a074c","status":"passed","time":{"start":1694016226521,"stop":1694016230703,"duration":4182}},{"uid":"b0997d005e95d049","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/b0997d005e95d049","status":"passed","time":{"start":1694001793106,"stop":1694001795595,"duration":2489}},{"uid":"8e97fd63de50a698","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/8e97fd63de50a698","status":"passed","time":{"start":1693987384286,"stop":1693987388645,"duration":4359}},{"uid":"87d0ee853e27e278","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/87d0ee853e27e278","status":"passed","time":{"start":1693972958313,"stop":1693972961386,"duration":3073}},{"uid":"ea437dca73092c7c","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/ea437dca73092c7c","status":"passed","time":{"start":1693958617208,"stop":1693958621739,"duration":4531}},{"uid":"fbed115ffb5873c6","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/fbed115ffb5873c6","status":"passed","time":{"start":1693944164801,"stop":1693944168104,"duration":3303}},{"uid":"8502e305cc302293","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/8502e305cc302293","status":"passed","time":{"start":1693929772857,"stop":1693929778001,"duration":5144}},{"uid":"1e760ad5fd68a82a","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/1e760ad5fd68a82a","status":"passed","time":{"start":1693915394507,"stop":1693915397951,"duration":3444}}]},"tags":[]},"source":"2ae25dc648d03752.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fcbb1968700>"]}