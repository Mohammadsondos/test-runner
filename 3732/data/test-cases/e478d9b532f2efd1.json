{"uid":"e478d9b532f2efd1","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1694203384392,"stop":1694203384999,"duration":607},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9eedd474c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9eedd6fd30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9eedd474c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9eedd6fd30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"fc1592141764aefc","name":"stdout","source":"fc1592141764aefc.txt","type":"text/plain","size":1036}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1255-669"},{"name":"thread","value":"2110-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9eedd6fd30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8e6daf644ff8f5e5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694203368671,"stop":1694203369355,"duration":684}},{"uid":"302082106c460783","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694203352915,"stop":1694203353639,"duration":724}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":86,"unknown":0,"total":92},"items":[{"uid":"5220bc71cd1029f2","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/5220bc71cd1029f2","status":"passed","time":{"start":1694188980871,"stop":1694188985105,"duration":4234}},{"uid":"9113ca8fbdc5b339","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/9113ca8fbdc5b339","status":"passed","time":{"start":1694174666434,"stop":1694174671501,"duration":5067}},{"uid":"f58a0b74be883de1","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/f58a0b74be883de1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694160182412,"stop":1694160183194,"duration":782}},{"uid":"fe8fb18ca2156e10","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/fe8fb18ca2156e10","status":"passed","time":{"start":1694145776624,"stop":1694145781536,"duration":4912}},{"uid":"f48ae660b1dba9ca","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/f48ae660b1dba9ca","status":"passed","time":{"start":1694131432461,"stop":1694131436728,"duration":4267}},{"uid":"9d5f3a741a96a0db","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/9d5f3a741a96a0db","status":"passed","time":{"start":1694116983914,"stop":1694116989487,"duration":5573}},{"uid":"6dc3aa46086a8da5","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/6dc3aa46086a8da5","status":"passed","time":{"start":1694102634878,"stop":1694102639585,"duration":4707}},{"uid":"a3ebbe28128fd524","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/a3ebbe28128fd524","status":"passed","time":{"start":1694088162933,"stop":1694088167262,"duration":4329}},{"uid":"deb1249358728e9a","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/deb1249358728e9a","status":"passed","time":{"start":1694073784136,"stop":1694073789891,"duration":5755}},{"uid":"bea8e81c0b8bedcb","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/bea8e81c0b8bedcb","status":"passed","time":{"start":1694059384082,"stop":1694059389948,"duration":5866}},{"uid":"86a2bd2566c82148","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/86a2bd2566c82148","status":"passed","time":{"start":1694045029607,"stop":1694045035975,"duration":6368}},{"uid":"b0776a89a105f0f","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/b0776a89a105f0f","status":"passed","time":{"start":1694030594351,"stop":1694030598819,"duration":4468}},{"uid":"1fea7337930c662a","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/1fea7337930c662a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694016219568,"stop":1694016220478,"duration":910}},{"uid":"d88d3d016071fa8f","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/d88d3d016071fa8f","status":"passed","time":{"start":1694001789647,"stop":1694001792649,"duration":3002}},{"uid":"1183f21136f495ce","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/1183f21136f495ce","status":"passed","time":{"start":1693987388948,"stop":1693987395902,"duration":6954}},{"uid":"b945456aaa6c4296","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/b945456aaa6c4296","status":"passed","time":{"start":1693972950253,"stop":1693972953978,"duration":3725}},{"uid":"1a7b04115a00e843","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/1a7b04115a00e843","status":"passed","time":{"start":1693958609794,"stop":1693958614795,"duration":5001}},{"uid":"8c0be522eeefa095","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/8c0be522eeefa095","status":"passed","time":{"start":1693944155142,"stop":1693944159421,"duration":4279}},{"uid":"d2384b6bf0f8e368","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/d2384b6bf0f8e368","status":"passed","time":{"start":1693929765419,"stop":1693929769660,"duration":4241}},{"uid":"f8f791c540f23831","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/f8f791c540f23831","status":"passed","time":{"start":1693915403627,"stop":1693915407487,"duration":3860}}]},"tags":[]},"source":"e478d9b532f2efd1.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9eedd6fd30>"]}