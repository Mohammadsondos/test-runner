{"uid":"4603b681bf13d6c1","name":"test_can_create_connection[Test for Enjin, url: wss://enjin-matrix-rpc-1.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c1e6914ed3cec85aaa03b0868d4449c1","time":{"start":1700798835495,"stop":1700798835495,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Enjin, url: wss://enjin-matrix-rpc-1.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1700798835495,"stop":1700798848363,"duration":12868},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Enjin, url: wss://enjin-matrix-rpc-1.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"538a17f9cd7c734f","name":"stdout","source":"538a17f9cd7c734f.txt","type":"text/plain","size":612}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az801-458"},{"name":"thread","value":"2174-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://enjin-matrix-rpc-1.dwellir.com', 'name': 'Enjin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f0f7a13d230868d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1700798807844,"stop":1700798807844,"duration":0}},{"uid":"ac62a93069ad1abc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1700798780944,"stop":1700798780944,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":368,"unknown":0,"total":370},"items":[{"uid":"a5875389df9ec755","reportUrl":"https://novasamatech.github.io/test-runner/4192//#testresult/a5875389df9ec755","status":"passed","time":{"start":1700784412385,"stop":1700784412385,"duration":0}},{"uid":"62e2cdf5a8f9d733","reportUrl":"https://novasamatech.github.io/test-runner/4191//#testresult/62e2cdf5a8f9d733","status":"passed","time":{"start":1700769999092,"stop":1700769999092,"duration":0}},{"uid":"995601ed2cfb9c43","reportUrl":"https://novasamatech.github.io/test-runner/4189//#testresult/995601ed2cfb9c43","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1700741243207,"stop":1700741243207,"duration":0}},{"uid":"92dd8bf513b9d5f4","reportUrl":"https://novasamatech.github.io/test-runner/4190//#testresult/92dd8bf513b9d5f4","status":"passed","time":{"start":1700755658621,"stop":1700755658621,"duration":0}},{"uid":"3ac0f2d080b72e37","reportUrl":"https://novasamatech.github.io/test-runner/4188//#testresult/3ac0f2d080b72e37","status":"passed","time":{"start":1700726783767,"stop":1700726783768,"duration":1}},{"uid":"e9b2f410522289e8","reportUrl":"https://novasamatech.github.io/test-runner/4187//#testresult/e9b2f410522289e8","status":"passed","time":{"start":1700712393784,"stop":1700712393784,"duration":0}},{"uid":"f23aea4a41c323c0","reportUrl":"https://novasamatech.github.io/test-runner/4186//#testresult/f23aea4a41c323c0","status":"passed","time":{"start":1700698023389,"stop":1700698023389,"duration":0}},{"uid":"e2658b0abef5f360","reportUrl":"https://novasamatech.github.io/test-runner/4185//#testresult/e2658b0abef5f360","status":"passed","time":{"start":1700683560869,"stop":1700683560869,"duration":0}},{"uid":"dcdaa844f4669ef7","reportUrl":"https://novasamatech.github.io/test-runner/4184//#testresult/dcdaa844f4669ef7","status":"passed","time":{"start":1700669178700,"stop":1700669178700,"duration":0}},{"uid":"faf8b7268114ad55","reportUrl":"https://novasamatech.github.io/test-runner/4183//#testresult/faf8b7268114ad55","status":"passed","time":{"start":1700654746876,"stop":1700654746877,"duration":1}},{"uid":"7755440ca1d177e0","reportUrl":"https://novasamatech.github.io/test-runner/4182//#testresult/7755440ca1d177e0","status":"passed","time":{"start":1700640393669,"stop":1700640393669,"duration":0}},{"uid":"c36dc0cfae8bfcee","reportUrl":"https://novasamatech.github.io/test-runner/4181//#testresult/c36dc0cfae8bfcee","status":"passed","time":{"start":1700625930603,"stop":1700625930603,"duration":0}},{"uid":"abd0fcc5aa5e3f8","reportUrl":"https://novasamatech.github.io/test-runner/4180//#testresult/abd0fcc5aa5e3f8","status":"passed","time":{"start":1700611610710,"stop":1700611610710,"duration":0}},{"uid":"869f155af9784fe2","reportUrl":"https://novasamatech.github.io/test-runner/4179//#testresult/869f155af9784fe2","status":"passed","time":{"start":1700597171664,"stop":1700597171664,"duration":0}},{"uid":"19ea6974270be078","reportUrl":"https://novasamatech.github.io/test-runner/4178//#testresult/19ea6974270be078","status":"passed","time":{"start":1700582752013,"stop":1700582752013,"duration":0}},{"uid":"b0901fe2cdeb49fd","reportUrl":"https://novasamatech.github.io/test-runner/4177//#testresult/b0901fe2cdeb49fd","status":"passed","time":{"start":1700568390389,"stop":1700568390389,"duration":0}},{"uid":"adbfdfd2ce2a14c1","reportUrl":"https://novasamatech.github.io/test-runner/4176//#testresult/adbfdfd2ce2a14c1","status":"passed","time":{"start":1700553927363,"stop":1700553927363,"duration":0}},{"uid":"554294c487fe7f4c","reportUrl":"https://novasamatech.github.io/test-runner/4175//#testresult/554294c487fe7f4c","status":"passed","time":{"start":1700539547094,"stop":1700539547095,"duration":1}},{"uid":"863f11fc37108c7b","reportUrl":"https://novasamatech.github.io/test-runner/4174//#testresult/863f11fc37108c7b","status":"passed","time":{"start":1700525165616,"stop":1700525165617,"duration":1}},{"uid":"c38005c471391737","reportUrl":"https://novasamatech.github.io/test-runner/4173//#testresult/c38005c471391737","status":"passed","time":{"start":1700510778240,"stop":1700510778240,"duration":0}}]},"tags":[]},"source":"4603b681bf13d6c1.json","parameterValues":["{'url': 'wss://enjin-matrix-rpc-1.dwellir.com', 'name': 'Enjin'}"]}