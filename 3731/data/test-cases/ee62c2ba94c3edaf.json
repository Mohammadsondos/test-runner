{"uid":"ee62c2ba94c3edaf","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1694188990024,"stop":1694188991027,"duration":1003},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f343f5f6290>\nchain = <scripts.utils.chain_model.Chain object at 0x7f343fbbefe0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f343f5f6290>\nchain = <scripts.utils.chain_model.Chain object at 0x7f343fbbefe0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"dc9bbb19f040d78a","name":"stdout","source":"dc9bbb19f040d78a.txt","type":"text/plain","size":1713}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az177-554"},{"name":"thread","value":"2187-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f343fbbefe0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c16c48a7e35c3667","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694188974214,"stop":1694188974993,"duration":779}},{"uid":"c364fb4740345992","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694188958361,"stop":1694188959190,"duration":829}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":84,"unknown":0,"total":91},"items":[{"uid":"1a57dca3299ac6cb","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/1a57dca3299ac6cb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694174632706,"stop":1694174633935,"duration":1229}},{"uid":"196fba3cf9d2e77c","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/196fba3cf9d2e77c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694160175673,"stop":1694160176291,"duration":618}},{"uid":"a0113b8bfdfee3be","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/a0113b8bfdfee3be","status":"passed","time":{"start":1694145742836,"stop":1694145745047,"duration":2211}},{"uid":"377c4d8289acdd4d","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/377c4d8289acdd4d","status":"passed","time":{"start":1694131430618,"stop":1694131434329,"duration":3711}},{"uid":"7b95475e13da31a9","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/7b95475e13da31a9","status":"passed","time":{"start":1694116984783,"stop":1694116989387,"duration":4604}},{"uid":"604cfaf6bf7bccb5","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/604cfaf6bf7bccb5","status":"passed","time":{"start":1694102614329,"stop":1694102618145,"duration":3816}},{"uid":"91bbd3dd07b55a21","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/91bbd3dd07b55a21","status":"passed","time":{"start":1694088156822,"stop":1694088162565,"duration":5743}},{"uid":"12b36708c555b727","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/12b36708c555b727","status":"passed","time":{"start":1694073745486,"stop":1694073749489,"duration":4003}},{"uid":"fb968d8960372be5","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/fb968d8960372be5","status":"passed","time":{"start":1694059375368,"stop":1694059378170,"duration":2802}},{"uid":"d56a0826d0acc98d","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/d56a0826d0acc98d","status":"passed","time":{"start":1694045020643,"stop":1694045024071,"duration":3428}},{"uid":"e87decac5658da2b","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/e87decac5658da2b","status":"passed","time":{"start":1694030575963,"stop":1694030579080,"duration":3117}},{"uid":"93a2db3a8043a782","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/93a2db3a8043a782","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694016210349,"stop":1694016211119,"duration":770}},{"uid":"f0691c2b5f7d9d09","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/f0691c2b5f7d9d09","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694001781909,"stop":1694001782454,"duration":545}},{"uid":"ca05f296362a4259","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/ca05f296362a4259","status":"passed","time":{"start":1693987362463,"stop":1693987364862,"duration":2399}},{"uid":"77c81ddaf387074b","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/77c81ddaf387074b","status":"passed","time":{"start":1693972947947,"stop":1693972950250,"duration":2303}},{"uid":"dc96d765497e591d","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/dc96d765497e591d","status":"passed","time":{"start":1693958609589,"stop":1693958612998,"duration":3409}},{"uid":"ae2fd2242d06b94a","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/ae2fd2242d06b94a","status":"passed","time":{"start":1693944152314,"stop":1693944153986,"duration":1672}},{"uid":"fd8d892edbb598cb","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/fd8d892edbb598cb","status":"passed","time":{"start":1693929759666,"stop":1693929762572,"duration":2906}},{"uid":"f1d5f78c0e542a2b","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/f1d5f78c0e542a2b","status":"passed","time":{"start":1693915381769,"stop":1693915385425,"duration":3656}},{"uid":"1b8705b6cc345650","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/1b8705b6cc345650","status":"passed","time":{"start":1693872222468,"stop":1693872228824,"duration":6356}}]},"tags":[]},"source":"ee62c2ba94c3edaf.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f343fbbefe0>"]}