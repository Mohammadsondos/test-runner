{"uid":"248a68bcb11482ff","name":"test_can_create_connection[Test for Jur, url: wss://jur-mainnet-archive-rpc-1.icebergnodes.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"dd04e52265ef77974494aaad2d4c080f","time":{"start":1694189024227,"stop":1694189024697,"duration":470},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 08 Sep 2023 16:03:44 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Jur', 'url': 'wss://jur-mainnet-archive-rpc-1.icebergnodes.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 08 Sep 2023 16:03:44 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 08 Sep 2023 16:03:44 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Jur', 'url': 'wss://jur-mainnet-archive-rpc-1.icebergnodes.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 08 Sep 2023 16:03:44 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"b005be1e6fc89111","name":"stdout","source":"b005be1e6fc89111.txt","type":"text/plain","size":1071}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az575-466"},{"name":"thread","value":"2046-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://jur-mainnet-archive-rpc-1.icebergnodes.io', 'name': 'Jur'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6e68fc6e01dfbf4e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 08 Sep 2023 16:03:29 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1694189008634,"stop":1694189009120,"duration":486}},{"uid":"fc64d7be5cca026b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Fri, 08 Sep 2023 16:03:13 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1694188992871,"stop":1694188993484,"duration":613}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":87,"unknown":0,"total":92},"items":[{"uid":"fb08d4619207ea3f","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/fb08d4619207ea3f","status":"passed","time":{"start":1694174555607,"stop":1694174556087,"duration":480}},{"uid":"603ee94b0e9b86b0","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/603ee94b0e9b86b0","status":"passed","time":{"start":1694160131049,"stop":1694160131554,"duration":505}},{"uid":"31633197e9457109","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/31633197e9457109","status":"passed","time":{"start":1694145765074,"stop":1694145765617,"duration":543}},{"uid":"136fd123be5803b","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/136fd123be5803b","status":"passed","time":{"start":1694131381222,"stop":1694131381710,"duration":488}},{"uid":"255de12f1adc7f02","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/255de12f1adc7f02","status":"passed","time":{"start":1694116927575,"stop":1694116928033,"duration":458}},{"uid":"65565c5742a9e95b","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/65565c5742a9e95b","status":"passed","time":{"start":1694102603189,"stop":1694102603587,"duration":398}},{"uid":"476becb571498b54","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/476becb571498b54","status":"passed","time":{"start":1694088195119,"stop":1694088195652,"duration":533}},{"uid":"d5c640e2b16f60fe","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/d5c640e2b16f60fe","status":"passed","time":{"start":1694073781649,"stop":1694073782182,"duration":533}},{"uid":"54f9084d2ea60abb","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/54f9084d2ea60abb","status":"passed","time":{"start":1694059357660,"stop":1694059358201,"duration":541}},{"uid":"b26827a531792ee8","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/b26827a531792ee8","status":"passed","time":{"start":1694044979441,"stop":1694044979919,"duration":478}},{"uid":"c0d61ba9cbfbf80c","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/c0d61ba9cbfbf80c","status":"passed","time":{"start":1694030534900,"stop":1694030535262,"duration":362}},{"uid":"638315c2c743a2e5","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/638315c2c743a2e5","status":"passed","time":{"start":1694016191389,"stop":1694016191859,"duration":470}},{"uid":"aacd11507afedc55","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/aacd11507afedc55","status":"passed","time":{"start":1694001770979,"stop":1694001771521,"duration":542}},{"uid":"22fa2b0f4b05f2a3","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/22fa2b0f4b05f2a3","status":"passed","time":{"start":1693987338789,"stop":1693987339314,"duration":525}},{"uid":"6bf8c858da7ff2a2","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/6bf8c858da7ff2a2","status":"passed","time":{"start":1693972942015,"stop":1693972942477,"duration":462}},{"uid":"17026861ee81abd","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/17026861ee81abd","status":"passed","time":{"start":1693958612240,"stop":1693958612781,"duration":541}},{"uid":"98ba003a04eda1e8","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/98ba003a04eda1e8","status":"passed","time":{"start":1693944144202,"stop":1693944144605,"duration":403}},{"uid":"b2940ee52e10ede7","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/b2940ee52e10ede7","status":"passed","time":{"start":1693929774770,"stop":1693929775287,"duration":517}},{"uid":"fd5df8b3f8b6f86b","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/fd5df8b3f8b6f86b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 05 Sep 2023 12:11:17 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1693915877505,"stop":1693915877939,"duration":434}},{"uid":"fd79a1c1791f9831","reportUrl":"https://novasamatech.github.io/test-runner/3711//#testresult/fd79a1c1791f9831","status":"passed","time":{"start":1693901045533,"stop":1693901046159,"duration":626}}]},"tags":[]},"source":"248a68bcb11482ff.json","parameterValues":["{'url': 'wss://jur-mainnet-archive-rpc-1.icebergnodes.io', 'name': 'Jur'}"]}