{"uid":"75b84d6a48aa56c3","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1693771373744,"stop":1693771374337,"duration":593},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f735d6f22f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f735d953040>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f735d6f22f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f735d953040>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"7d07ef493b6d353c","name":"stdout","source":"7d07ef493b6d353c.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az450-760"},{"name":"thread","value":"2049-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f735d953040>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2f3bb0e6fdb81b15","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693771358140,"stop":1693771358718,"duration":578}},{"uid":"d699ae41a47fd45d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693771342638,"stop":1693771343114,"duration":476}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":63,"unknown":0,"total":64},"items":[{"uid":"fb33c5f91b916ae5","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/fb33c5f91b916ae5","status":"passed","time":{"start":1693756965217,"stop":1693756968515,"duration":3298}},{"uid":"8635e01ab6261e2b","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/8635e01ab6261e2b","status":"passed","time":{"start":1693742572758,"stop":1693742574279,"duration":1521}},{"uid":"713146076c71b0b1","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/713146076c71b0b1","status":"passed","time":{"start":1693728173506,"stop":1693728178152,"duration":4646}},{"uid":"73f1ab9ee0c980c5","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/73f1ab9ee0c980c5","status":"passed","time":{"start":1693713742813,"stop":1693713746564,"duration":3751}},{"uid":"e847ac3d137b4809","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/e847ac3d137b4809","status":"passed","time":{"start":1693699411144,"stop":1693699414419,"duration":3275}},{"uid":"bbc87c059cae887e","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/bbc87c059cae887e","status":"passed","time":{"start":1693684984301,"stop":1693684991638,"duration":7337}},{"uid":"49e54974d3676311","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/49e54974d3676311","status":"passed","time":{"start":1693670555654,"stop":1693670558197,"duration":2543}},{"uid":"a5c7735abe1100de","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/a5c7735abe1100de","status":"passed","time":{"start":1693656178197,"stop":1693656181998,"duration":3801}},{"uid":"5d1bba997483ca3b","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/5d1bba997483ca3b","status":"passed","time":{"start":1693641745073,"stop":1693641749501,"duration":4428}},{"uid":"4271373048cfa440","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/4271373048cfa440","status":"passed","time":{"start":1693627370195,"stop":1693627377099,"duration":6904}},{"uid":"54607e74cd8dbff8","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/54607e74cd8dbff8","status":"passed","time":{"start":1693613043913,"stop":1693613049415,"duration":5502}},{"uid":"688dd80a91267dac","reportUrl":"https://novasamatech.github.io/test-runner/3690//#testresult/688dd80a91267dac","status":"passed","time":{"start":1693598560897,"stop":1693598563139,"duration":2242}},{"uid":"a70f811ef1ca7ed9","reportUrl":"https://novasamatech.github.io/test-runner/3689//#testresult/a70f811ef1ca7ed9","status":"passed","time":{"start":1693584192599,"stop":1693584196460,"duration":3861}},{"uid":"f93f0598b8a5c59a","reportUrl":"https://novasamatech.github.io/test-runner/3688//#testresult/f93f0598b8a5c59a","status":"passed","time":{"start":1693569784622,"stop":1693569787234,"duration":2612}},{"uid":"bb644f563cb74ff7","reportUrl":"https://novasamatech.github.io/test-runner/3687//#testresult/bb644f563cb74ff7","status":"passed","time":{"start":1693555378324,"stop":1693555380975,"duration":2651}},{"uid":"8688adbf01b66042","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/8688adbf01b66042","status":"passed","time":{"start":1693540938205,"stop":1693540942070,"duration":3865}},{"uid":"724df2c81ede32bf","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/724df2c81ede32bf","status":"passed","time":{"start":1693526614813,"stop":1693526619297,"duration":4484}},{"uid":"9e8f3ddc757568a3","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/9e8f3ddc757568a3","status":"passed","time":{"start":1693512174144,"stop":1693512175915,"duration":1771}},{"uid":"db6265f310d5e62","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/db6265f310d5e62","status":"passed","time":{"start":1693497772950,"stop":1693497776872,"duration":3922}},{"uid":"55fafed3a6a1be65","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/55fafed3a6a1be65","status":"passed","time":{"start":1693483396715,"stop":1693483401299,"duration":4584}}]},"tags":[]},"source":"75b84d6a48aa56c3.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f735d953040>"]}