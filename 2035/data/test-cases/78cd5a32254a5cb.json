{"uid":"78cd5a32254a5cb","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://centrifuge-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c61d3131e170cf9bb6fa392a1937f08b","time":{"start":1670333529239,"stop":1670333541378,"duration":12139},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"5b94b5d16feeddf0","name":"stdout","source":"5b94b5d16feeddf0.txt","type":"text/plain","size":248}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az83-829"},{"name":"thread","value":"1573-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7b14e3d9ede1aa99","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670333508070,"stop":1670333519106,"duration":11036}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":97,"skipped":0,"passed":208,"unknown":0,"total":305},"items":[{"uid":"9d98fa0f4d378feb","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/9d98fa0f4d378feb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670242487216,"stop":1670242499320,"duration":12104}},{"uid":"13ea6ab454529436","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/13ea6ab454529436","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670228031496,"stop":1670228044009,"duration":12513}},{"uid":"667230f903e61eb4","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/667230f903e61eb4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670213611876,"stop":1670213623304,"duration":11428}},{"uid":"665640928713919e","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/665640928713919e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670199810223,"stop":1670199821638,"duration":11415}},{"uid":"a28712e6d9e1fb1e","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/a28712e6d9e1fb1e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670184803992,"stop":1670184815420,"duration":11428}},{"uid":"61d01d06675b5e53","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/61d01d06675b5e53","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670170395000,"stop":1670170406418,"duration":11418}},{"uid":"5207ba469e69114f","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/5207ba469e69114f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670157326730,"stop":1670157339448,"duration":12718}},{"uid":"cfc89c955f091cfa","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/cfc89c955f091cfa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670142381978,"stop":1670142393388,"duration":11410}},{"uid":"1e590a3e741be1b","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/1e590a3e741be1b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670127944870,"stop":1670127956308,"duration":11438}},{"uid":"bfae35844d6088e0","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/bfae35844d6088e0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670116703126,"stop":1670116714556,"duration":11430}},{"uid":"866682eb815e0cf1","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/866682eb815e0cf1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670098965200,"stop":1670098976611,"duration":11411}},{"uid":"2c893fbab8096b9f","reportUrl":"https://nova-wallet.github.io/test-runner/2016//#testresult/2c893fbab8096b9f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670084850921,"stop":1670084863254,"duration":12333}},{"uid":"4132ee202a437bfa","reportUrl":"https://nova-wallet.github.io/test-runner/2015//#testresult/4132ee202a437bfa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670070792609,"stop":1670070804029,"duration":11420}},{"uid":"115527dde420e5ee","reportUrl":"https://nova-wallet.github.io/test-runner/2014//#testresult/115527dde420e5ee","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670055959197,"stop":1670055970585,"duration":11388}},{"uid":"9e0b704f8e5fb3e4","reportUrl":"https://nova-wallet.github.io/test-runner/2013//#testresult/9e0b704f8e5fb3e4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670041528497,"stop":1670041540250,"duration":11753}},{"uid":"eef502f0d5260833","reportUrl":"https://nova-wallet.github.io/test-runner/2012//#testresult/eef502f0d5260833","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670030019330,"stop":1670030030884,"duration":11554}},{"uid":"dd442bc269bdd53","reportUrl":"https://nova-wallet.github.io/test-runner/2011//#testresult/dd442bc269bdd53","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670012623185,"stop":1670012634496,"duration":11311}},{"uid":"97debb66fa579173","reportUrl":"https://nova-wallet.github.io/test-runner/2010//#testresult/97debb66fa579173","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1669998484633,"stop":1669998496067,"duration":11434}},{"uid":"de4fefac3e293c0f","reportUrl":"https://nova-wallet.github.io/test-runner/2009//#testresult/de4fefac3e293c0f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1669986567454,"stop":1669986579884,"duration":12430}},{"uid":"c0aeaea973b9514e","reportUrl":"https://nova-wallet.github.io/test-runner/2000//#testresult/c0aeaea973b9514e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1669883332030,"stop":1669883343471,"duration":11441}}]},"tags":[]},"source":"78cd5a32254a5cb.json","parameterValues":["{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"]}