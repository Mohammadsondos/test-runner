{"uid":"75ac707a89d0691b","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1691136306041,"stop":1691136306525,"duration":484},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 04 Aug 2023 08:05:06 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=3ND6ENCTJoo%2B9UXv3SdPrLOUmdWAFkHO7XMqSKstVWL9eUwJ%2FXFyQL19Hgx1hPkdbYBH5YKXNOmF5YzBKRolY1g163UhEOsZW12QLaYKSAIhsIcLB9qwCPshJi%2FZoDXreHPzPA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkTg3hLyc9DhH6; SameSite=None; Secure; path=/; expires=Sat, 05-Aug-23 07:05:06 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f154b18ee519438-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 04 Aug 2023 08:05:06 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=3ND6ENCTJoo%2B9UXv3SdPrLOUmdWAFkHO7XMqSKstVWL9eUwJ%2FXFyQL19Hgx1hPkdbYBH5YKXNOmF5YzBKRolY1g163UhEOsZW12QLaYKSAIhsIcLB9qwCPshJi%2FZoDXreHPzPA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkTg3hLyc9DhH6; SameSite=None; Secure; path=/; expires=Sat, 05-Aug-23 07:05:06 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f154b18ee519438-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 04 Aug 2023 08:05:06 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=3ND6ENCTJoo%2B9UXv3SdPrLOUmdWAFkHO7XMqSKstVWL9eUwJ%2FXFyQL19Hgx1hPkdbYBH5YKXNOmF5YzBKRolY1g163UhEOsZW12QLaYKSAIhsIcLB9qwCPshJi%2FZoDXreHPzPA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkTg3hLyc9DhH6; SameSite=None; Secure; path=/; expires=Sat, 05-Aug-23 07:05:06 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f154b18ee519438-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 04 Aug 2023 08:05:06 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=3ND6ENCTJoo%2B9UXv3SdPrLOUmdWAFkHO7XMqSKstVWL9eUwJ%2FXFyQL19Hgx1hPkdbYBH5YKXNOmF5YzBKRolY1g163UhEOsZW12QLaYKSAIhsIcLB9qwCPshJi%2FZoDXreHPzPA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RBz5Mj9duj9SjEkTg3hLyc9DhH6; SameSite=None; Secure; path=/; expires=Sat, 05-Aug-23 07:05:06 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f154b18ee519438-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"92292121fa3298ee","name":"stdout","source":"92292121fa3298ee.txt","type":"text/plain","size":2540}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az575-112"},{"name":"thread","value":"1989-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"aa30e8b7b99e412a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 04 Aug 2023 08:04:50 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=FiyLsBsXpsDmLwDkrk47sT32VzRaKUPQYaPJRWOzA%2FvGE7ShRPLsjCqdfG3Ev9RvlV041GkB2J9ya75QmBYX4PUcTeMrdzV1Vut07zUaZS9HX%2F6fGs4oQY18eSxQAn9FbEEZRw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4BhgJ59iDbYK4Q; SameSite=None; Secure; path=/; expires=Sat, 05-Aug-23 07:04:50 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f154ab73feb9828-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1691136290410,"stop":1691136290935,"duration":525}},{"uid":"aca82cc934061144","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 04 Aug 2023 08:04:35 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=UTYyoVBwzWhBpHzPDnzev%2BnJtwlP7TMTJn19j4h2dt0NCVAZFfXuZP8dIvB%2F2a2KGQ8whaMl5HroGH8OM%2FGBy5ikSWlwRaphIofsrAcawXhYqSmYspWBWq%2FIss8khyq4%2BUXjMg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3TkULSMFTwoX3A; SameSite=None; Secure; path=/; expires=Sat, 05-Aug-23 07:04:35 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f154a5508cbaaa6-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1691136274685,"stop":1691136275216,"duration":531}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":504,"unknown":0,"total":505},"items":[{"uid":"9a68b1c0df0b7621","reportUrl":"https://novasamatech.github.io/test-runner/3510//#testresult/9a68b1c0df0b7621","status":"passed","time":{"start":1691121846231,"stop":1691121846776,"duration":545}},{"uid":"fd969ff10a0156a","reportUrl":"https://novasamatech.github.io/test-runner/3509//#testresult/fd969ff10a0156a","status":"passed","time":{"start":1691108088090,"stop":1691108088640,"duration":550}},{"uid":"a9bf826da849e278","reportUrl":"https://novasamatech.github.io/test-runner/3508//#testresult/a9bf826da849e278","status":"passed","time":{"start":1691093043148,"stop":1691093043588,"duration":440}},{"uid":"ef30efdf2d46c901","reportUrl":"https://novasamatech.github.io/test-runner/3507//#testresult/ef30efdf2d46c901","status":"passed","time":{"start":1691078646148,"stop":1691078646635,"duration":487}},{"uid":"3838deb1f240c678","reportUrl":"https://novasamatech.github.io/test-runner/3506//#testresult/3838deb1f240c678","status":"passed","time":{"start":1691064309857,"stop":1691064310352,"duration":495}},{"uid":"a1c08b4acee1e6a7","reportUrl":"https://novasamatech.github.io/test-runner/3505//#testresult/a1c08b4acee1e6a7","status":"passed","time":{"start":1691049893044,"stop":1691049893550,"duration":506}},{"uid":"4108e46dcdd1df7a","reportUrl":"https://novasamatech.github.io/test-runner/3504//#testresult/4108e46dcdd1df7a","status":"passed","time":{"start":1691035436103,"stop":1691035436582,"duration":479}},{"uid":"78e89c9edfffab1b","reportUrl":"https://novasamatech.github.io/test-runner/3503//#testresult/78e89c9edfffab1b","status":"passed","time":{"start":1691021635900,"stop":1691021636397,"duration":497}},{"uid":"6a9bd18d320309be","reportUrl":"https://novasamatech.github.io/test-runner/3502//#testresult/6a9bd18d320309be","status":"passed","time":{"start":1691006660598,"stop":1691006661311,"duration":713}},{"uid":"35333f07de735ae0","reportUrl":"https://novasamatech.github.io/test-runner/3501//#testresult/35333f07de735ae0","status":"passed","time":{"start":1690992261750,"stop":1690992262259,"duration":509}},{"uid":"89e2cd8f760dc0c5","reportUrl":"https://novasamatech.github.io/test-runner/3500//#testresult/89e2cd8f760dc0c5","status":"passed","time":{"start":1690977939281,"stop":1690977939912,"duration":631}},{"uid":"6083bc4da1799c59","reportUrl":"https://novasamatech.github.io/test-runner/3499//#testresult/6083bc4da1799c59","status":"passed","time":{"start":1690963456843,"stop":1690963457333,"duration":490}},{"uid":"c1efe6b5ae661d3a","reportUrl":"https://novasamatech.github.io/test-runner/3498//#testresult/c1efe6b5ae661d3a","status":"passed","time":{"start":1690949059260,"stop":1690949059809,"duration":549}},{"uid":"a399474549a63ab1","reportUrl":"https://novasamatech.github.io/test-runner/3497//#testresult/a399474549a63ab1","status":"passed","time":{"start":1690935213040,"stop":1690935213703,"duration":663}},{"uid":"a6c28a4ee6dda56c","reportUrl":"https://novasamatech.github.io/test-runner/3496//#testresult/a6c28a4ee6dda56c","status":"passed","time":{"start":1690920263058,"stop":1690920263592,"duration":534}},{"uid":"59611d9e01ccb332","reportUrl":"https://novasamatech.github.io/test-runner/3495//#testresult/59611d9e01ccb332","status":"passed","time":{"start":1690905848954,"stop":1690905849641,"duration":687}},{"uid":"cc66f64c0347b987","reportUrl":"https://novasamatech.github.io/test-runner/3494//#testresult/cc66f64c0347b987","status":"passed","time":{"start":1690891492199,"stop":1690891492906,"duration":707}},{"uid":"b404992280d6deb7","reportUrl":"https://novasamatech.github.io/test-runner/3493//#testresult/b404992280d6deb7","status":"passed","time":{"start":1690877069630,"stop":1690877070098,"duration":468}},{"uid":"583ee6958bb26499","reportUrl":"https://novasamatech.github.io/test-runner/3492//#testresult/583ee6958bb26499","status":"passed","time":{"start":1690862653157,"stop":1690862653939,"duration":782}},{"uid":"801581e23308a5ab","reportUrl":"https://novasamatech.github.io/test-runner/3491//#testresult/801581e23308a5ab","status":"passed","time":{"start":1690848964971,"stop":1690848965451,"duration":480}}]},"tags":[]},"source":"75ac707a89d0691b.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}