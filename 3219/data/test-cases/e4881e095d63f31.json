{"uid":"e4881e095d63f31","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1686931477286,"stop":1686931477553,"duration":267},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e394f484c57dd7e","name":"stdout","source":"e394f484c57dd7e.txt","type":"text/plain","size":1002}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az365-311"},{"name":"thread","value":"2006-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b3633a7dd9d28365","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686931461909,"stop":1686931462199,"duration":290}},{"uid":"e6a20dfb291915f3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:06 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686931446415,"stop":1686931446771,"duration":356}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":240,"unknown":0,"total":260},"items":[{"uid":"cd3006df96cb0fac","reportUrl":"https://novasamatech.github.io/test-runner/3218//#testresult/cd3006df96cb0fac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 12:05:28 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686917128469,"stop":1686917128826,"duration":357}},{"uid":"bb851bec0dc7ca05","reportUrl":"https://novasamatech.github.io/test-runner/3217//#testresult/bb851bec0dc7ca05","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 08:04:39 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686902679374,"stop":1686902679993,"duration":619}},{"uid":"a7de614a6fd27b37","reportUrl":"https://novasamatech.github.io/test-runner/3216//#testresult/a7de614a6fd27b37","status":"passed","time":{"start":1686888260041,"stop":1686888260687,"duration":646}},{"uid":"45dfe3c5f85f7e4d","reportUrl":"https://novasamatech.github.io/test-runner/3215//#testresult/45dfe3c5f85f7e4d","status":"passed","time":{"start":1686874447845,"stop":1686874448218,"duration":373}},{"uid":"6f92de3d007bb139","reportUrl":"https://novasamatech.github.io/test-runner/3214//#testresult/6f92de3d007bb139","status":"passed","time":{"start":1686859442982,"stop":1686859443401,"duration":419}},{"uid":"a79f748e6cd5c22f","reportUrl":"https://novasamatech.github.io/test-runner/3213//#testresult/a79f748e6cd5c22f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Thu, 15 Jun 2023 16:04:32 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686845072711,"stop":1686845072999,"duration":288}},{"uid":"c45f5b66261d6728","reportUrl":"https://novasamatech.github.io/test-runner/3212//#testresult/c45f5b66261d6728","status":"passed","time":{"start":1686830714173,"stop":1686830714866,"duration":693}},{"uid":"c4f308fe0207b037","reportUrl":"https://novasamatech.github.io/test-runner/3211//#testresult/c4f308fe0207b037","status":"passed","time":{"start":1686816258428,"stop":1686816258785,"duration":357}},{"uid":"70f66f9584a03ff5","reportUrl":"https://novasamatech.github.io/test-runner/3210//#testresult/70f66f9584a03ff5","status":"passed","time":{"start":1686801872014,"stop":1686801872573,"duration":559}},{"uid":"39f96f909ff6a4f3","reportUrl":"https://novasamatech.github.io/test-runner/3209//#testresult/39f96f909ff6a4f3","status":"passed","time":{"start":1686788048983,"stop":1686788049388,"duration":405}},{"uid":"c36fe34a08060a93","reportUrl":"https://novasamatech.github.io/test-runner/3208//#testresult/c36fe34a08060a93","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686773077020,"stop":1686773077559,"duration":539}},{"uid":"aa5cd0dc27e7576d","reportUrl":"https://novasamatech.github.io/test-runner/3207//#testresult/aa5cd0dc27e7576d","status":"passed","time":{"start":1686758684053,"stop":1686758684461,"duration":408}},{"uid":"e7c28f62f3b1232f","reportUrl":"https://novasamatech.github.io/test-runner/3206//#testresult/e7c28f62f3b1232f","status":"passed","time":{"start":1686744313205,"stop":1686744313980,"duration":775}},{"uid":"d097e55824d94543","reportUrl":"https://novasamatech.github.io/test-runner/3205//#testresult/d097e55824d94543","status":"passed","time":{"start":1686729848782,"stop":1686729849229,"duration":447}},{"uid":"a3e71d2ffd6a370c","reportUrl":"https://novasamatech.github.io/test-runner/3204//#testresult/a3e71d2ffd6a370c","status":"passed","time":{"start":1686715446406,"stop":1686715446758,"duration":352}},{"uid":"6549dbf7a146e77c","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/6549dbf7a146e77c","status":"passed","time":{"start":1686701608559,"stop":1686701609021,"duration":462}},{"uid":"bf18e7d7563a4f2","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/bf18e7d7563a4f2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Tue, 13 Jun 2023 20:04:41 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686686681363,"stop":1686686681651,"duration":288}},{"uid":"e2bef87e85ce0abc","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/e2bef87e85ce0abc","status":"passed","time":{"start":1686672250766,"stop":1686672251304,"duration":538}},{"uid":"cce544fb6eaba5e3","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/cce544fb6eaba5e3","status":"passed","time":{"start":1686657925750,"stop":1686657926338,"duration":588}},{"uid":"97541155e6ae604b","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/97541155e6ae604b","status":"passed","time":{"start":1686643462097,"stop":1686643462677,"duration":580}}]},"tags":[]},"source":"e4881e095d63f31.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}