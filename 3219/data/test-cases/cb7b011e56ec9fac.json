{"uid":"cb7b011e56ec9fac","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1686931521143,"stop":1686931521518,"duration":375},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f661e2bbd60>\nchain = <scripts.utils.chain_model.Chain object at 0x7f661e2b8730>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f661e2bbd60>\nchain = <scripts.utils.chain_model.Chain object at 0x7f661e2b8730>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"813108904fe8959e","name":"stdout","source":"813108904fe8959e.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az792-653"},{"name":"thread","value":"1900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f661e2b8730>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f2429c1034b7c2ef","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686931505740,"stop":1686931506116,"duration":376}},{"uid":"9b4b031ae2d5c290","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686931489907,"stop":1686931490711,"duration":804}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":203,"unknown":0,"total":259},"items":[{"uid":"a25ae98b38f3e9ed","reportUrl":"https://novasamatech.github.io/test-runner/3218//#testresult/a25ae98b38f3e9ed","status":"passed","time":{"start":1686917146128,"stop":1686917148079,"duration":1951}},{"uid":"663080e655411189","reportUrl":"https://novasamatech.github.io/test-runner/3217//#testresult/663080e655411189","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686902737056,"stop":1686902737264,"duration":208}},{"uid":"85b6d058f234314d","reportUrl":"https://novasamatech.github.io/test-runner/3216//#testresult/85b6d058f234314d","status":"passed","time":{"start":1686888325415,"stop":1686888328017,"duration":2602}},{"uid":"419144cbe266b657","reportUrl":"https://novasamatech.github.io/test-runner/3215//#testresult/419144cbe266b657","status":"passed","time":{"start":1686874494856,"stop":1686874500709,"duration":5853}},{"uid":"f4cae2840baf739","reportUrl":"https://novasamatech.github.io/test-runner/3214//#testresult/f4cae2840baf739","status":"passed","time":{"start":1686859506402,"stop":1686859509446,"duration":3044}},{"uid":"4e89d9cc4a9fd8ed","reportUrl":"https://novasamatech.github.io/test-runner/3213//#testresult/4e89d9cc4a9fd8ed","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686845117433,"stop":1686845117760,"duration":327}},{"uid":"c78240751986ff3e","reportUrl":"https://novasamatech.github.io/test-runner/3212//#testresult/c78240751986ff3e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686830797813,"stop":1686830798216,"duration":403}},{"uid":"6509355c433200b","reportUrl":"https://novasamatech.github.io/test-runner/3211//#testresult/6509355c433200b","status":"passed","time":{"start":1686816293237,"stop":1686816298823,"duration":5586}},{"uid":"b9951055b2f5802a","reportUrl":"https://novasamatech.github.io/test-runner/3210//#testresult/b9951055b2f5802a","status":"passed","time":{"start":1686801949647,"stop":1686801961872,"duration":12225}},{"uid":"6918898b42c68a24","reportUrl":"https://novasamatech.github.io/test-runner/3209//#testresult/6918898b42c68a24","status":"passed","time":{"start":1686788086783,"stop":1686788090144,"duration":3361}},{"uid":"3d085259e013dc12","reportUrl":"https://novasamatech.github.io/test-runner/3208//#testresult/3d085259e013dc12","status":"passed","time":{"start":1686773109547,"stop":1686773118519,"duration":8972}},{"uid":"6a3585c7ef49918f","reportUrl":"https://novasamatech.github.io/test-runner/3207//#testresult/6a3585c7ef49918f","status":"passed","time":{"start":1686758707091,"stop":1686758709115,"duration":2024}},{"uid":"4a988a3ac1c8f745","reportUrl":"https://novasamatech.github.io/test-runner/3206//#testresult/4a988a3ac1c8f745","status":"passed","time":{"start":1686744354242,"stop":1686744361943,"duration":7701}},{"uid":"786ab03ca7e338d0","reportUrl":"https://novasamatech.github.io/test-runner/3205//#testresult/786ab03ca7e338d0","status":"passed","time":{"start":1686729891037,"stop":1686729899315,"duration":8278}},{"uid":"3eec69cba5e3cd96","reportUrl":"https://novasamatech.github.io/test-runner/3204//#testresult/3eec69cba5e3cd96","status":"passed","time":{"start":1686715474754,"stop":1686715481806,"duration":7052}},{"uid":"5a3d296102f418c9","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/5a3d296102f418c9","status":"passed","time":{"start":1686701629182,"stop":1686701635235,"duration":6053}},{"uid":"965158b0c0e2e6ce","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/965158b0c0e2e6ce","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686686738483,"stop":1686686738851,"duration":368}},{"uid":"84f9ef378cca6f71","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/84f9ef378cca6f71","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686672347511,"stop":1686672347711,"duration":200}},{"uid":"5d335bb3d3790a98","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/5d335bb3d3790a98","status":"passed","time":{"start":1686657945867,"stop":1686657951852,"duration":5985}},{"uid":"8b3f0d2d29cc416d","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/8b3f0d2d29cc416d","status":"passed","time":{"start":1686643541320,"stop":1686643544654,"duration":3334}}]},"tags":[]},"source":"cb7b011e56ec9fac.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f661e2b8730>"]}