{"uid":"89710fe0d96cfc4d","name":"testBalancesLoading[Integritee Parachain]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Integritee Parachain]","historyId":"2a121992f644cfc49e1322e26854b844","time":{"start":1697257613942,"stop":1697257693966,"duration":80024},"status":"broken","statusMessage":"Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(812233879)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=9223965b7937b81af59049a62bfe7a72, initiatorId=812233879)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(812233879)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=9223965b7937b81af59049a62bfe7a72, initiatorId=812233879)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:118)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Integritee Parachain]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(165)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":58,"unknown":0,"total":67},"items":[{"uid":"b9769318510c9868","reportUrl":"https://novasamatech.github.io/test-runner/3945//#testresult/b9769318510c9868","status":"passed","time":{"start":1697243295939,"stop":1697243296150,"duration":211}},{"uid":"7fffbfd67588cb64","reportUrl":"https://novasamatech.github.io/test-runner/3944//#testresult/7fffbfd67588cb64","status":"passed","time":{"start":1697228410430,"stop":1697228410620,"duration":190}},{"uid":"c24384d9343648e0","reportUrl":"https://novasamatech.github.io/test-runner/3943//#testresult/c24384d9343648e0","status":"passed","time":{"start":1697214575046,"stop":1697214575264,"duration":218}},{"uid":"c846da94478e7377","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/c846da94478e7377","status":"passed","time":{"start":1697199900409,"stop":1697199900676,"duration":267}},{"uid":"5a7c00eef5983e4a","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/5a7c00eef5983e4a","status":"passed","time":{"start":1697185243824,"stop":1697185244010,"duration":186}},{"uid":"299dc00ee7b046eb","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/299dc00ee7b046eb","status":"passed","time":{"start":1697170711630,"stop":1697170711895,"duration":265}},{"uid":"cbb6fd1b2a184ac4","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/cbb6fd1b2a184ac4","status":"broken","statusDetails":"Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(1412997705)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(1412997705)=0}, subscriptions=[]), error: Timed out waiting for 80000 ms","time":{"start":1697156613726,"stop":1697156693742,"duration":80016}},{"uid":"d61b2048063f4a1f","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/d61b2048063f4a1f","status":"broken","statusDetails":"Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(673098867)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(673098867)=0}, subscriptions=[]), error: Timed out waiting for 80000 ms","time":{"start":1697141692131,"stop":1697141772199,"duration":80068}},{"uid":"503e25a262977faf","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/503e25a262977faf","status":"passed","time":{"start":1697128154336,"stop":1697128154549,"duration":213}},{"uid":"48863d64c47be164","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/48863d64c47be164","status":"broken","statusDetails":"Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(446198057)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=2cfcd38a3505cde9672d40cca580d6d3, initiatorId=446198057)]), error: Timed out waiting for 80000 ms","time":{"start":1697113441324,"stop":1697113521340,"duration":80016}},{"uid":"4f58395a1c6e33f9","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/4f58395a1c6e33f9","status":"passed","time":{"start":1697099644604,"stop":1697099644813,"duration":209}},{"uid":"252e94c31ae05754","reportUrl":"https://novasamatech.github.io/test-runner/3934//#testresult/252e94c31ae05754","status":"passed","time":{"start":1697084336321,"stop":1697084336581,"duration":260}},{"uid":"a7cbc2c75028fb77","reportUrl":"https://novasamatech.github.io/test-runner/3933//#testresult/a7cbc2c75028fb77","status":"passed","time":{"start":1697069744283,"stop":1697069744496,"duration":213}},{"uid":"835d5e334b7bb255","reportUrl":"https://novasamatech.github.io/test-runner/3932//#testresult/835d5e334b7bb255","status":"passed","time":{"start":1697055673314,"stop":1697055673522,"duration":208}},{"uid":"e18fc39ee37a13fa","reportUrl":"https://novasamatech.github.io/test-runner/3931//#testresult/e18fc39ee37a13fa","status":"passed","time":{"start":1697041356573,"stop":1697041356758,"duration":185}},{"uid":"ed1be8c6b2fb3069","reportUrl":"https://novasamatech.github.io/test-runner/3930//#testresult/ed1be8c6b2fb3069","status":"passed","time":{"start":1697026825592,"stop":1697026825908,"duration":316}},{"uid":"5d7812b6573128d4","reportUrl":"https://novasamatech.github.io/test-runner/3929//#testresult/5d7812b6573128d4","status":"passed","time":{"start":1697012404620,"stop":1697012404866,"duration":246}},{"uid":"dfdc5d9452756368","reportUrl":"https://novasamatech.github.io/test-runner/3928//#testresult/dfdc5d9452756368","status":"passed","time":{"start":1696997887881,"stop":1696997888119,"duration":238}},{"uid":"e9dbdafd73785238","reportUrl":"https://novasamatech.github.io/test-runner/3927//#testresult/e9dbdafd73785238","status":"passed","time":{"start":1696983664609,"stop":1696983664791,"duration":182}},{"uid":"d5dd1b4511800957","reportUrl":"https://novasamatech.github.io/test-runner/3926//#testresult/d5dd1b4511800957","status":"passed","time":{"start":1696968980747,"stop":1696968980948,"duration":201}}]},"tags":[]},"source":"89710fe0d96cfc4d.json","parameterValues":[]}