{"uid":"77320ec429101c6f","name":"test_precision[Test for Hashed Network]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"b938ecd23295344c92378d5c05e92eee","time":{"start":1701101003186,"stop":1701101003186,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_precision[Test for Hashed Network]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1701101003186,"stop":1701101003680,"duration":494},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_precision[Test for Hashed Network]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"11b4a2903719c510","name":"stdout","source":"11b4a2903719c510.txt","type":"text/plain","size":1338}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az1272-120"},{"name":"thread","value":"2167-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f193420a830>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b7222ac3f398803e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1701100987670,"stop":1701100987670,"duration":0}},{"uid":"bf642217e948ad5d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1701100972137,"stop":1701100972137,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":547,"unknown":0,"total":569},"items":[{"uid":"4925219d044d764a","reportUrl":"https://novasamatech.github.io/test-runner/4218//#testresult/4925219d044d764a","status":"passed","time":{"start":1701086537227,"stop":1701086537227,"duration":0}},{"uid":"7df81a496843fb9b","reportUrl":"https://novasamatech.github.io/test-runner/4217//#testresult/7df81a496843fb9b","status":"passed","time":{"start":1701072140169,"stop":1701072140169,"duration":0}},{"uid":"fbbcc364fc77f1e4","reportUrl":"https://novasamatech.github.io/test-runner/4216//#testresult/fbbcc364fc77f1e4","status":"passed","time":{"start":1701067501055,"stop":1701067501055,"duration":0}},{"uid":"d378f5f63fca503f","reportUrl":"https://novasamatech.github.io/test-runner/4215//#testresult/d378f5f63fca503f","status":"passed","time":{"start":1701057738270,"stop":1701057738271,"duration":1}},{"uid":"dd70cc4a2f990d06","reportUrl":"https://novasamatech.github.io/test-runner/4214//#testresult/dd70cc4a2f990d06","status":"passed","time":{"start":1701043368621,"stop":1701043368621,"duration":0}},{"uid":"edcc93c2c3527348","reportUrl":"https://novasamatech.github.io/test-runner/4213//#testresult/edcc93c2c3527348","status":"passed","time":{"start":1701033977842,"stop":1701033977842,"duration":0}},{"uid":"62b280a84d592ff4","reportUrl":"https://novasamatech.github.io/test-runner/4212//#testresult/62b280a84d592ff4","status":"passed","time":{"start":1701032025465,"stop":1701032025466,"duration":1}},{"uid":"f79896e47c446248","reportUrl":"https://novasamatech.github.io/test-runner/4210//#testresult/f79896e47c446248","status":"passed","time":{"start":1701022319842,"stop":1701022319842,"duration":0}},{"uid":"b52460ba6386b503","reportUrl":"https://novasamatech.github.io/test-runner/4211//#testresult/b52460ba6386b503","status":"passed","time":{"start":1701028951056,"stop":1701028951056,"duration":0}},{"uid":"dc8ffe312201558b","reportUrl":"https://novasamatech.github.io/test-runner/4209//#testresult/dc8ffe312201558b","status":"passed","time":{"start":1701019688985,"stop":1701019688985,"duration":0}},{"uid":"52a71baa3f1db61e","reportUrl":"https://novasamatech.github.io/test-runner/4208//#testresult/52a71baa3f1db61e","status":"passed","time":{"start":1701014541978,"stop":1701014541978,"duration":0}},{"uid":"2eb097e035ba64ca","reportUrl":"https://novasamatech.github.io/test-runner/4207//#testresult/2eb097e035ba64ca","status":"passed","time":{"start":1701000131767,"stop":1701000131767,"duration":0}},{"uid":"27f2be4e1e9dd472","reportUrl":"https://novasamatech.github.io/test-runner/4205//#testresult/27f2be4e1e9dd472","status":"passed","time":{"start":1700971323181,"stop":1700971323181,"duration":0}},{"uid":"26a04c9e0e517f66","reportUrl":"https://novasamatech.github.io/test-runner/4206//#testresult/26a04c9e0e517f66","status":"passed","time":{"start":1700985730230,"stop":1700985730230,"duration":0}},{"uid":"7460c5f649a2b42a","reportUrl":"https://novasamatech.github.io/test-runner/4204//#testresult/7460c5f649a2b42a","status":"passed","time":{"start":1700956973431,"stop":1700956973431,"duration":0}},{"uid":"46bae4b77d0748f7","reportUrl":"https://novasamatech.github.io/test-runner/4203//#testresult/46bae4b77d0748f7","status":"passed","time":{"start":1700942547872,"stop":1700942547873,"duration":1}},{"uid":"684a29391290616f","reportUrl":"https://novasamatech.github.io/test-runner/4202//#testresult/684a29391290616f","status":"passed","time":{"start":1700928136644,"stop":1700928136644,"duration":0}},{"uid":"ab212159c12c3987","reportUrl":"https://novasamatech.github.io/test-runner/4201//#testresult/ab212159c12c3987","status":"passed","time":{"start":1700913726165,"stop":1700913726166,"duration":1}},{"uid":"a6a1a6b7eae0ac04","reportUrl":"https://novasamatech.github.io/test-runner/4200//#testresult/a6a1a6b7eae0ac04","status":"passed","time":{"start":1700899326279,"stop":1700899326279,"duration":0}},{"uid":"4a24973baefd4b4c","reportUrl":"https://novasamatech.github.io/test-runner/4199//#testresult/4a24973baefd4b4c","status":"passed","time":{"start":1700884933417,"stop":1700884933418,"duration":1}}]},"tags":[]},"source":"77320ec429101c6f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f193420a830>"]}