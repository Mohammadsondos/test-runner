{"uid":"c9d31aebdb932307","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1686571533868,"stop":1686571534143,"duration":275},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:34 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:34 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:34 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:34 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"b6001a2961ddd5b2","name":"stdout","source":"b6001a2961ddd5b2.txt","type":"text/plain","size":1101}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1135-408"},{"name":"thread","value":"1981-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d236c5b09a94b35e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686571518516,"stop":1686571518778,"duration":262}},{"uid":"8b769a472016493e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:03 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686571502877,"stop":1686571503371,"duration":494}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":221,"unknown":0,"total":235},"items":[{"uid":"e43f0f314aeb7018","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/e43f0f314aeb7018","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 08:04:58 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686557098194,"stop":1686557098491,"duration":297}},{"uid":"377273cb6da88d17","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/377273cb6da88d17","status":"passed","time":{"start":1686542643998,"stop":1686542644667,"duration":669}},{"uid":"893f11465b090dfd","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/893f11465b090dfd","status":"passed","time":{"start":1686528891463,"stop":1686528891909,"duration":446}},{"uid":"6391942f207cd3f7","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/6391942f207cd3f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 11 Jun 2023 20:04:11 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686513850994,"stop":1686513851351,"duration":357}},{"uid":"fbc6722635d1bfb4","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/fbc6722635d1bfb4","status":"passed","time":{"start":1686499448012,"stop":1686499448677,"duration":665}},{"uid":"4f3328fe471cd89e","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/4f3328fe471cd89e","status":"passed","time":{"start":1686485096208,"stop":1686485096951,"duration":743}},{"uid":"34fdd5f64a1613ca","reportUrl":"https://novasamatech.github.io/test-runner/3187//#testresult/34fdd5f64a1613ca","status":"passed","time":{"start":1686470643919,"stop":1686470644516,"duration":597}},{"uid":"29da5709c7d6e3ed","reportUrl":"https://novasamatech.github.io/test-runner/3186//#testresult/29da5709c7d6e3ed","status":"passed","time":{"start":1686456226287,"stop":1686456226736,"duration":449}},{"uid":"ecafa0ca83a85d46","reportUrl":"https://novasamatech.github.io/test-runner/3185//#testresult/ecafa0ca83a85d46","status":"passed","time":{"start":1686442522434,"stop":1686442523219,"duration":785}},{"uid":"df431b8eb9c9b58e","reportUrl":"https://novasamatech.github.io/test-runner/3184//#testresult/df431b8eb9c9b58e","status":"passed","time":{"start":1686427504291,"stop":1686427505024,"duration":733}},{"uid":"4c94bab9483a85b9","reportUrl":"https://novasamatech.github.io/test-runner/3183//#testresult/4c94bab9483a85b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 16:05:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686413101545,"stop":1686413102025,"duration":480}},{"uid":"60933e3cd8fb22c","reportUrl":"https://novasamatech.github.io/test-runner/3182//#testresult/60933e3cd8fb22c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 10 Jun 2023 12:06:08 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686398767648,"stop":1686398768130,"duration":482}},{"uid":"c001f9b356a3f32c","reportUrl":"https://novasamatech.github.io/test-runner/3181//#testresult/c001f9b356a3f32c","status":"passed","time":{"start":1686384242313,"stop":1686384242916,"duration":603}},{"uid":"b28d336e538a62fe","reportUrl":"https://novasamatech.github.io/test-runner/3180//#testresult/b28d336e538a62fe","status":"passed","time":{"start":1686369851816,"stop":1686369852234,"duration":418}},{"uid":"14f11dcf40b0b674","reportUrl":"https://novasamatech.github.io/test-runner/3179//#testresult/14f11dcf40b0b674","status":"passed","time":{"start":1686355991879,"stop":1686355992327,"duration":448}},{"uid":"3ed6845063055ec4","reportUrl":"https://novasamatech.github.io/test-runner/3178//#testresult/3ed6845063055ec4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 09 Jun 2023 20:04:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686341071390,"stop":1686341071864,"duration":474}},{"uid":"748530ef13bbe1fb","reportUrl":"https://novasamatech.github.io/test-runner/3177//#testresult/748530ef13bbe1fb","status":"passed","time":{"start":1686326644101,"stop":1686326644660,"duration":559}},{"uid":"5a4743cce385a570","reportUrl":"https://novasamatech.github.io/test-runner/3176//#testresult/5a4743cce385a570","status":"passed","time":{"start":1686312305271,"stop":1686312306070,"duration":799}},{"uid":"fc0c34b4eda7bb16","reportUrl":"https://novasamatech.github.io/test-runner/3175//#testresult/fc0c34b4eda7bb16","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 09 Jun 2023 08:05:04 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686297904594,"stop":1686297904974,"duration":380}},{"uid":"3d286421cb5a3678","reportUrl":"https://novasamatech.github.io/test-runner/3174//#testresult/3d286421cb5a3678","status":"passed","time":{"start":1686283452411,"stop":1686283452898,"duration":487}}]},"tags":[]},"source":"c9d31aebdb932307.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}