{"uid":"d25dd01367680c31","name":"test_has_new_assets[Test for Dora Factory (PAUSED)]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2618293375d61e703515aac3ceeb0de7","time":{"start":1696507367414,"stop":1696507368575,"duration":1161},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb453f54580>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb453e0ceb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb453f54580>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb453e0ceb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"1614e0e2e49dc16b","name":"stdout","source":"1614e0e2e49dc16b.txt","type":"text/plain","size":3228}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az993-360"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb453e0ceb0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4806c8e86488e668","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696507351263,"stop":1696507352386,"duration":1123}},{"uid":"5a633441ff609803","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696507335098,"stop":1696507336238,"duration":1140}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":83,"skipped":0,"passed":170,"unknown":0,"total":253},"items":[{"uid":"4cd4e714df8f5534","reportUrl":"https://novasamatech.github.io/test-runner/3893//#testresult/4cd4e714df8f5534","status":"passed","time":{"start":1696496700232,"stop":1696496705235,"duration":5003}},{"uid":"d622030ed48c55a4","reportUrl":"https://novasamatech.github.io/test-runner/3892//#testresult/d622030ed48c55a4","status":"passed","time":{"start":1696492964607,"stop":1696492969704,"duration":5097}},{"uid":"68698eb4ca6202d3","reportUrl":"https://novasamatech.github.io/test-runner/3891//#testresult/68698eb4ca6202d3","status":"passed","time":{"start":1696478541740,"stop":1696478546348,"duration":4608}},{"uid":"8e5c4aab3027f9ed","reportUrl":"https://novasamatech.github.io/test-runner/3890//#testresult/8e5c4aab3027f9ed","status":"passed","time":{"start":1696464176174,"stop":1696464180700,"duration":4526}},{"uid":"e4a0daa3a5622139","reportUrl":"https://novasamatech.github.io/test-runner/3889//#testresult/e4a0daa3a5622139","status":"passed","time":{"start":1696449724691,"stop":1696449728901,"duration":4210}},{"uid":"a0100797c4e3a76d","reportUrl":"https://novasamatech.github.io/test-runner/3888//#testresult/a0100797c4e3a76d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696435382323,"stop":1696435383693,"duration":1370}},{"uid":"22a50c8e6e69f455","reportUrl":"https://novasamatech.github.io/test-runner/3887//#testresult/22a50c8e6e69f455","status":"passed","time":{"start":1696420973118,"stop":1696420980226,"duration":7108}},{"uid":"3c89c3bc550e3e0","reportUrl":"https://novasamatech.github.io/test-runner/3886//#testresult/3c89c3bc550e3e0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696406566655,"stop":1696406568194,"duration":1539}},{"uid":"d81a4b2eb958c269","reportUrl":"https://novasamatech.github.io/test-runner/3885//#testresult/d81a4b2eb958c269","status":"passed","time":{"start":1696392123556,"stop":1696392129491,"duration":5935}},{"uid":"2fe69335a72c38d0","reportUrl":"https://novasamatech.github.io/test-runner/3884//#testresult/2fe69335a72c38d0","status":"passed","time":{"start":1696377778563,"stop":1696377785693,"duration":7130}},{"uid":"ff722a0387589688","reportUrl":"https://novasamatech.github.io/test-runner/3883//#testresult/ff722a0387589688","status":"passed","time":{"start":1696363338809,"stop":1696363345855,"duration":7046}},{"uid":"4c0b4e616d426966","reportUrl":"https://novasamatech.github.io/test-runner/3882//#testresult/4c0b4e616d426966","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696348959798,"stop":1696348960992,"duration":1194}},{"uid":"826b187ab3a273ba","reportUrl":"https://novasamatech.github.io/test-runner/3881//#testresult/826b187ab3a273ba","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696334563898,"stop":1696334565342,"duration":1444}},{"uid":"dfc61fc50b30d59c","reportUrl":"https://novasamatech.github.io/test-runner/3880//#testresult/dfc61fc50b30d59c","status":"passed","time":{"start":1696320123546,"stop":1696320130308,"duration":6762}},{"uid":"9261eda24f709599","reportUrl":"https://novasamatech.github.io/test-runner/3879//#testresult/9261eda24f709599","status":"passed","time":{"start":1696305754438,"stop":1696305759021,"duration":4583}},{"uid":"fc38a7cfb5bc1ac","reportUrl":"https://novasamatech.github.io/test-runner/3878//#testresult/fc38a7cfb5bc1ac","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696291423207,"stop":1696291424702,"duration":1495}},{"uid":"33cef70323b28ab2","reportUrl":"https://novasamatech.github.io/test-runner/3877//#testresult/33cef70323b28ab2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696276978601,"stop":1696276979678,"duration":1077}},{"uid":"938ff4019dc5ebcb","reportUrl":"https://novasamatech.github.io/test-runner/3876//#testresult/938ff4019dc5ebcb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696262558711,"stop":1696262559919,"duration":1208}},{"uid":"79cadc7f8ab7f224","reportUrl":"https://novasamatech.github.io/test-runner/3875//#testresult/79cadc7f8ab7f224","status":"passed","time":{"start":1696248185784,"stop":1696248190192,"duration":4408}},{"uid":"ef5e7a1d0bc5be8b","reportUrl":"https://novasamatech.github.io/test-runner/3874//#testresult/ef5e7a1d0bc5be8b","status":"passed","time":{"start":1696233743856,"stop":1696233750748,"duration":6892}}]},"tags":[]},"source":"d25dd01367680c31.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb453e0ceb0>"]}