{"uid":"4a444cbceea4dd3e","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1696507406287,"stop":1696507406789,"duration":502},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb29d765d80>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb29d766e00>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb29d765d80>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb29d766e00>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"93f42d5ef3dd78c6","name":"stdout","source":"93f42d5ef3dd78c6.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az993-360"},{"name":"thread","value":"2055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb29d766e00>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6857f94a787a3a49","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696507390736,"stop":1696507391260,"duration":524}},{"uid":"f3f2b9b47720b858","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696507375123,"stop":1696507375700,"duration":577}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":38,"skipped":0,"passed":215,"unknown":0,"total":253},"items":[{"uid":"db520f84da4c4a1a","reportUrl":"https://novasamatech.github.io/test-runner/3893//#testresult/db520f84da4c4a1a","status":"passed","time":{"start":1696496735996,"stop":1696496739023,"duration":3027}},{"uid":"c960b589589f02d3","reportUrl":"https://novasamatech.github.io/test-runner/3892//#testresult/c960b589589f02d3","status":"passed","time":{"start":1696492974814,"stop":1696492979418,"duration":4604}},{"uid":"10ca55392152270a","reportUrl":"https://novasamatech.github.io/test-runner/3891//#testresult/10ca55392152270a","status":"passed","time":{"start":1696478546956,"stop":1696478549456,"duration":2500}},{"uid":"838ea757785e4dd3","reportUrl":"https://novasamatech.github.io/test-runner/3890//#testresult/838ea757785e4dd3","status":"passed","time":{"start":1696464191432,"stop":1696464193815,"duration":2383}},{"uid":"dff55e3e35d500c6","reportUrl":"https://novasamatech.github.io/test-runner/3889//#testresult/dff55e3e35d500c6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696449768923,"stop":1696449769530,"duration":607}},{"uid":"cb2af3dd1ae25d1f","reportUrl":"https://novasamatech.github.io/test-runner/3888//#testresult/cb2af3dd1ae25d1f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696435395551,"stop":1696435396785,"duration":1234}},{"uid":"80dcfd6b40031992","reportUrl":"https://novasamatech.github.io/test-runner/3887//#testresult/80dcfd6b40031992","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696421009965,"stop":1696421010807,"duration":842}},{"uid":"dd98a3dee40515be","reportUrl":"https://novasamatech.github.io/test-runner/3886//#testresult/dd98a3dee40515be","status":"passed","time":{"start":1696406579705,"stop":1696406581844,"duration":2139}},{"uid":"c9e9adac684cff4d","reportUrl":"https://novasamatech.github.io/test-runner/3885//#testresult/c9e9adac684cff4d","status":"passed","time":{"start":1696392138930,"stop":1696392142376,"duration":3446}},{"uid":"f3431ce1e845f650","reportUrl":"https://novasamatech.github.io/test-runner/3884//#testresult/f3431ce1e845f650","status":"passed","time":{"start":1696377829053,"stop":1696377833759,"duration":4706}},{"uid":"2205c6130294fb17","reportUrl":"https://novasamatech.github.io/test-runner/3883//#testresult/2205c6130294fb17","status":"passed","time":{"start":1696363358456,"stop":1696363362492,"duration":4036}},{"uid":"46b9de9787a9cc0c","reportUrl":"https://novasamatech.github.io/test-runner/3882//#testresult/46b9de9787a9cc0c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696348974960,"stop":1696348975664,"duration":704}},{"uid":"25bbbb5a7e794895","reportUrl":"https://novasamatech.github.io/test-runner/3881//#testresult/25bbbb5a7e794895","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696334619311,"stop":1696334619669,"duration":358}},{"uid":"91ba23ca22f953b","reportUrl":"https://novasamatech.github.io/test-runner/3880//#testresult/91ba23ca22f953b","status":"passed","time":{"start":1696320141712,"stop":1696320143527,"duration":1815}},{"uid":"e640178d7959045c","reportUrl":"https://novasamatech.github.io/test-runner/3879//#testresult/e640178d7959045c","status":"passed","time":{"start":1696305784962,"stop":1696305790912,"duration":5950}},{"uid":"7fad951e372ac094","reportUrl":"https://novasamatech.github.io/test-runner/3878//#testresult/7fad951e372ac094","status":"passed","time":{"start":1696291441547,"stop":1696291445460,"duration":3913}},{"uid":"cb7be9af720dfc67","reportUrl":"https://novasamatech.github.io/test-runner/3877//#testresult/cb7be9af720dfc67","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696276992393,"stop":1696276993277,"duration":884}},{"uid":"f74e9beec1bab8a3","reportUrl":"https://novasamatech.github.io/test-runner/3876//#testresult/f74e9beec1bab8a3","status":"passed","time":{"start":1696262569855,"stop":1696262572430,"duration":2575}},{"uid":"7ab7a71c31bc9423","reportUrl":"https://novasamatech.github.io/test-runner/3875//#testresult/7ab7a71c31bc9423","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696248231919,"stop":1696248232818,"duration":899}},{"uid":"3bf537d76f1eefcd","reportUrl":"https://novasamatech.github.io/test-runner/3874//#testresult/3bf537d76f1eefcd","status":"passed","time":{"start":1696233763317,"stop":1696233765840,"duration":2523}}]},"tags":[]},"source":"4a444cbceea4dd3e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb29d766e00>"]}