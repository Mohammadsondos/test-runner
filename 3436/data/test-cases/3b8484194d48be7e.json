{"uid":"3b8484194d48be7e","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6c77ce47b0ce8fb3c0f86b2e90e26f67","time":{"start":1690056272602,"stop":1690056273035,"duration":433},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 22 Jul 2023 20:04:32 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 22 Jul 2023 20:04:32 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 22 Jul 2023 20:04:32 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 22 Jul 2023 20:04:32 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"f7d45f9c0a5fe249","name":"stdout","source":"f7d45f9c0a5fe249.txt","type":"text/plain","size":1056}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1125-465"},{"name":"thread","value":"1927-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc.dwellir.com', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a69122b26d72630d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 22 Jul 2023 20:04:17 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1690056257043,"stop":1690056257511,"duration":468}},{"uid":"8f6470458a60173d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Sat, 22 Jul 2023 20:04:00 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1690056241401,"stop":1690056241873,"duration":472}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":433,"unknown":0,"total":441},"items":[{"uid":"171f6546d1f2435a","reportUrl":"https://novasamatech.github.io/test-runner/3435//#testresult/171f6546d1f2435a","status":"passed","time":{"start":1690041827259,"stop":1690041827745,"duration":486}},{"uid":"b3bc4a3cb172a782","reportUrl":"https://novasamatech.github.io/test-runner/3434//#testresult/b3bc4a3cb172a782","status":"passed","time":{"start":1690027464218,"stop":1690027464683,"duration":465}},{"uid":"6173a77a69761a59","reportUrl":"https://novasamatech.github.io/test-runner/3433//#testresult/6173a77a69761a59","status":"passed","time":{"start":1690013064512,"stop":1690013065142,"duration":630}},{"uid":"395922f3e7cb7730","reportUrl":"https://novasamatech.github.io/test-runner/3432//#testresult/395922f3e7cb7730","status":"passed","time":{"start":1689998631485,"stop":1689998633056,"duration":1571}},{"uid":"b77f1ad46a05e29a","reportUrl":"https://novasamatech.github.io/test-runner/3431//#testresult/b77f1ad46a05e29a","status":"passed","time":{"start":1689984833507,"stop":1689984834016,"duration":509}},{"uid":"e61f5a8b2742a207","reportUrl":"https://novasamatech.github.io/test-runner/3430//#testresult/e61f5a8b2742a207","status":"passed","time":{"start":1689969852835,"stop":1689969862522,"duration":9687}},{"uid":"79c45b5fc66305f","reportUrl":"https://novasamatech.github.io/test-runner/3429//#testresult/79c45b5fc66305f","status":"passed","time":{"start":1689955452614,"stop":1689955453299,"duration":685}},{"uid":"34a37d17ab77e57a","reportUrl":"https://novasamatech.github.io/test-runner/3428//#testresult/34a37d17ab77e57a","status":"passed","time":{"start":1689941108558,"stop":1689941109377,"duration":819}},{"uid":"fe7cc4373f562b28","reportUrl":"https://novasamatech.github.io/test-runner/3427//#testresult/fe7cc4373f562b28","status":"passed","time":{"start":1689926662662,"stop":1689926663247,"duration":585}},{"uid":"30ad626064aae1ed","reportUrl":"https://novasamatech.github.io/test-runner/3426//#testresult/30ad626064aae1ed","status":"passed","time":{"start":1689912240871,"stop":1689912241346,"duration":475}},{"uid":"f4978794787a3aec","reportUrl":"https://novasamatech.github.io/test-runner/3425//#testresult/f4978794787a3aec","status":"passed","time":{"start":1689898447858,"stop":1689898448469,"duration":611}},{"uid":"32f7d8ad17e19797","reportUrl":"https://novasamatech.github.io/test-runner/3424//#testresult/32f7d8ad17e19797","status":"passed","time":{"start":1689883451059,"stop":1689883451617,"duration":558}},{"uid":"1302042c4db85a04","reportUrl":"https://novasamatech.github.io/test-runner/3423//#testresult/1302042c4db85a04","status":"passed","time":{"start":1689869063757,"stop":1689869064338,"duration":581}},{"uid":"fbf3817f7bfce2b1","reportUrl":"https://novasamatech.github.io/test-runner/3422//#testresult/fbf3817f7bfce2b1","status":"passed","time":{"start":1689854710595,"stop":1689854711185,"duration":590}},{"uid":"76d36bf5591d1136","reportUrl":"https://novasamatech.github.io/test-runner/3421//#testresult/76d36bf5591d1136","status":"passed","time":{"start":1689840256335,"stop":1689840256787,"duration":452}},{"uid":"d9dc92234c22da3d","reportUrl":"https://novasamatech.github.io/test-runner/3420//#testresult/d9dc92234c22da3d","status":"passed","time":{"start":1689825838645,"stop":1689825839138,"duration":493}},{"uid":"a3cbc69123234d57","reportUrl":"https://novasamatech.github.io/test-runner/3419//#testresult/a3cbc69123234d57","status":"passed","time":{"start":1689812074577,"stop":1689812075319,"duration":742}},{"uid":"e9bd6f9a35c82cea","reportUrl":"https://novasamatech.github.io/test-runner/3418//#testresult/e9bd6f9a35c82cea","status":"passed","time":{"start":1689797052799,"stop":1689797053318,"duration":519}},{"uid":"879c2b9bb28bde1d","reportUrl":"https://novasamatech.github.io/test-runner/3417//#testresult/879c2b9bb28bde1d","status":"passed","time":{"start":1689782647310,"stop":1689782647792,"duration":482}},{"uid":"62b177d80a3cc65c","reportUrl":"https://novasamatech.github.io/test-runner/3416//#testresult/62b177d80a3cc65c","status":"passed","time":{"start":1689768305579,"stop":1689768306058,"duration":479}}]},"tags":[]},"source":"3b8484194d48be7e.json","parameterValues":["{'url': 'wss://acala-rpc.dwellir.com', 'name': 'Acala'}"]}