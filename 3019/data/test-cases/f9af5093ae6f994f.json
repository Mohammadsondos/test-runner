{"uid":"f9af5093ae6f994f","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc-2.aca-api.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"27cececd4a2d1bb98a4885dc7b61b765","time":{"start":1684238791680,"stop":1684238852239,"duration":60559},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-2.aca-api.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-2.aca-api.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"627135a4a3ff87d0","name":"stdout","source":"627135a4a3ff87d0.txt","type":"text/plain","size":250}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az622-799"},{"name":"thread","value":"1955-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc-2.aca-api.network/ws', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"139afbb7a8ec6608","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","time":{"start":1684238721084,"stop":1684238781551,"duration":60467}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":113,"unknown":0,"total":114},"items":[{"uid":"83de1525a86135b3","reportUrl":"https://nova-wallet.github.io/test-runner/3017//#testresult/83de1525a86135b3","status":"passed","time":{"start":1684209931612,"stop":1684209932319,"duration":707}},{"uid":"ee59621e4f4943a5","reportUrl":"https://nova-wallet.github.io/test-runner/3016//#testresult/ee59621e4f4943a5","status":"passed","time":{"start":1684196008811,"stop":1684196009205,"duration":394}},{"uid":"f148858929ac5bf8","reportUrl":"https://nova-wallet.github.io/test-runner/3015//#testresult/f148858929ac5bf8","status":"passed","time":{"start":1684181039885,"stop":1684181040381,"duration":496}},{"uid":"b8bc5be0f28c73c0","reportUrl":"https://nova-wallet.github.io/test-runner/3013//#testresult/b8bc5be0f28c73c0","status":"passed","time":{"start":1684152311292,"stop":1684152311932,"duration":640}},{"uid":"c852331bddc36d17","reportUrl":"https://nova-wallet.github.io/test-runner/3012//#testresult/c852331bddc36d17","status":"passed","time":{"start":1684137870459,"stop":1684137870896,"duration":437}},{"uid":"766a5ce0f37b934b","reportUrl":"https://nova-wallet.github.io/test-runner/3011//#testresult/766a5ce0f37b934b","status":"passed","time":{"start":1684123440953,"stop":1684123441308,"duration":355}},{"uid":"322cdeb008bc155e","reportUrl":"https://nova-wallet.github.io/test-runner/3010//#testresult/322cdeb008bc155e","status":"passed","time":{"start":1684109623103,"stop":1684109623683,"duration":580}},{"uid":"2d75e1a8446d2758","reportUrl":"https://nova-wallet.github.io/test-runner/3009//#testresult/2d75e1a8446d2758","status":"passed","time":{"start":1684094721030,"stop":1684094721591,"duration":561}},{"uid":"c9daa5b362dfec1","reportUrl":"https://nova-wallet.github.io/test-runner/3008//#testresult/c9daa5b362dfec1","status":"passed","time":{"start":1684080268285,"stop":1684080269151,"duration":866}},{"uid":"2e162358ccfeb9d2","reportUrl":"https://nova-wallet.github.io/test-runner/3005//#testresult/2e162358ccfeb9d2","status":"passed","time":{"start":1684037081719,"stop":1684037082366,"duration":647}},{"uid":"6f9cd26c30a1702e","reportUrl":"https://nova-wallet.github.io/test-runner/3003//#testresult/6f9cd26c30a1702e","status":"passed","time":{"start":1684008262485,"stop":1684008263230,"duration":745}},{"uid":"6a06ca385d210b50","reportUrl":"https://nova-wallet.github.io/test-runner/3002//#testresult/6a06ca385d210b50","status":"passed","time":{"start":1683993834482,"stop":1683993834850,"duration":368}},{"uid":"9c159bd743a5f637","reportUrl":"https://nova-wallet.github.io/test-runner/3001//#testresult/9c159bd743a5f637","status":"passed","time":{"start":1683979482466,"stop":1683979483099,"duration":633}},{"uid":"6ca771997e60236f","reportUrl":"https://nova-wallet.github.io/test-runner/3000//#testresult/6ca771997e60236f","status":"passed","time":{"start":1683965056595,"stop":1683965057138,"duration":543}},{"uid":"bbe2a0747438dcb0","reportUrl":"https://nova-wallet.github.io/test-runner/2999//#testresult/bbe2a0747438dcb0","status":"passed","time":{"start":1683950642521,"stop":1683950643050,"duration":529}},{"uid":"3dab7347917dd8e9","reportUrl":"https://nova-wallet.github.io/test-runner/2997//#testresult/3dab7347917dd8e9","status":"passed","time":{"start":1683921841139,"stop":1683921841510,"duration":371}},{"uid":"e66bb889abc83670","reportUrl":"https://nova-wallet.github.io/test-runner/2996//#testresult/e66bb889abc83670","status":"passed","time":{"start":1683907463375,"stop":1683907464090,"duration":715}},{"uid":"ec2876de05d694c9","reportUrl":"https://nova-wallet.github.io/test-runner/2995//#testresult/ec2876de05d694c9","status":"passed","time":{"start":1683893114112,"stop":1683893114831,"duration":719}},{"uid":"4ed31f4d27384d83","reportUrl":"https://nova-wallet.github.io/test-runner/2994//#testresult/4ed31f4d27384d83","status":"passed","time":{"start":1683878680494,"stop":1683878681070,"duration":576}},{"uid":"501c7b37ae46dd98","reportUrl":"https://nova-wallet.github.io/test-runner/2991//#testresult/501c7b37ae46dd98","status":"passed","time":{"start":1683835452783,"stop":1683835453497,"duration":714}}]},"tags":[]},"source":"f9af5093ae6f994f.json","parameterValues":["{'url': 'wss://acala-rpc-2.aca-api.network/ws', 'name': 'Acala'}"]}