{"uid":"2a6c11c23b4d451a","name":"test_precision[Test for 3DPass]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"23ee790b9b841482308a355e462f0690","time":{"start":1698912177532,"stop":1698912178356,"duration":824},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f6bd14ebfa0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6bd14e8b80>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f6bd14ebfa0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6bd14e8b80>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"776c6d3bc073d9f7","name":"stdout","source":"776c6d3bc073d9f7.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az406-122"},{"name":"thread","value":"2164-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f6bd14e8b80>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7629c4caf64bbfba","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698912161536,"stop":1698912162503,"duration":967}},{"uid":"10cdd38cfed0f69b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698912145466,"stop":1698912146455,"duration":989}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":31,"skipped":0,"passed":391,"unknown":0,"total":422},"items":[{"uid":"7612869ca9caaf8a","reportUrl":"https://novasamatech.github.io/test-runner/4061//#testresult/7612869ca9caaf8a","status":"passed","time":{"start":1698897764465,"stop":1698897784282,"duration":19817}},{"uid":"330c8444a04a558c","reportUrl":"https://novasamatech.github.io/test-runner/4060//#testresult/330c8444a04a558c","status":"passed","time":{"start":1698883424179,"stop":1698883433105,"duration":8926}},{"uid":"1bd8c39e769d4354","reportUrl":"https://novasamatech.github.io/test-runner/4059//#testresult/1bd8c39e769d4354","status":"passed","time":{"start":1698868973217,"stop":1698868977898,"duration":4681}},{"uid":"2d48154a87567631","reportUrl":"https://novasamatech.github.io/test-runner/4057//#testresult/2d48154a87567631","status":"passed","time":{"start":1698840168662,"stop":1698840176431,"duration":7769}},{"uid":"a7a1282eed96804e","reportUrl":"https://novasamatech.github.io/test-runner/4058//#testresult/a7a1282eed96804e","status":"passed","time":{"start":1698854528389,"stop":1698854532605,"duration":4216}},{"uid":"2f1da363d7492161","reportUrl":"https://novasamatech.github.io/test-runner/4056//#testresult/2f1da363d7492161","status":"passed","time":{"start":1698825755368,"stop":1698825760338,"duration":4970}},{"uid":"5a97f6ab44309858","reportUrl":"https://novasamatech.github.io/test-runner/4055//#testresult/5a97f6ab44309858","status":"passed","time":{"start":1698811343104,"stop":1698811351431,"duration":8327}},{"uid":"944a5fe3d6b20cb0","reportUrl":"https://novasamatech.github.io/test-runner/4054//#testresult/944a5fe3d6b20cb0","status":"passed","time":{"start":1698797004987,"stop":1698797010631,"duration":5644}},{"uid":"17b68047c6cc7b1a","reportUrl":"https://novasamatech.github.io/test-runner/4053//#testresult/17b68047c6cc7b1a","status":"passed","time":{"start":1698782577275,"stop":1698782582408,"duration":5133}},{"uid":"5508dc1cb6994518","reportUrl":"https://novasamatech.github.io/test-runner/4052//#testresult/5508dc1cb6994518","status":"passed","time":{"start":1698768177610,"stop":1698768183998,"duration":6388}},{"uid":"3d487fe6d9c9a166","reportUrl":"https://novasamatech.github.io/test-runner/4051//#testresult/3d487fe6d9c9a166","status":"passed","time":{"start":1698753790929,"stop":1698753796418,"duration":5489}},{"uid":"ddcad41735b84a0a","reportUrl":"https://novasamatech.github.io/test-runner/4050//#testresult/ddcad41735b84a0a","status":"passed","time":{"start":1698739346496,"stop":1698739351562,"duration":5066}},{"uid":"825e73349bd1ef5d","reportUrl":"https://novasamatech.github.io/test-runner/4049//#testresult/825e73349bd1ef5d","status":"passed","time":{"start":1698724992178,"stop":1698724998375,"duration":6197}},{"uid":"b45848567789a50b","reportUrl":"https://novasamatech.github.io/test-runner/4048//#testresult/b45848567789a50b","status":"passed","time":{"start":1698710606811,"stop":1698710612363,"duration":5552}},{"uid":"3a8c8110ab3a1a60","reportUrl":"https://novasamatech.github.io/test-runner/4047//#testresult/3a8c8110ab3a1a60","status":"passed","time":{"start":1698696177033,"stop":1698696181973,"duration":4940}},{"uid":"f07825a0c27ffef0","reportUrl":"https://novasamatech.github.io/test-runner/4046//#testresult/f07825a0c27ffef0","status":"passed","time":{"start":1698681783608,"stop":1698681788349,"duration":4741}},{"uid":"22ad8267016bde3f","reportUrl":"https://novasamatech.github.io/test-runner/4045//#testresult/22ad8267016bde3f","status":"passed","time":{"start":1698667416418,"stop":1698667423074,"duration":6656}},{"uid":"2f89c532d4a053cc","reportUrl":"https://novasamatech.github.io/test-runner/4044//#testresult/2f89c532d4a053cc","status":"passed","time":{"start":1698652969431,"stop":1698652975570,"duration":6139}},{"uid":"ae6a387bc3bd349a","reportUrl":"https://novasamatech.github.io/test-runner/4043//#testresult/ae6a387bc3bd349a","status":"passed","time":{"start":1698638536284,"stop":1698638540287,"duration":4003}},{"uid":"8d37dda023103613","reportUrl":"https://novasamatech.github.io/test-runner/4042//#testresult/8d37dda023103613","status":"passed","time":{"start":1698624190416,"stop":1698624195101,"duration":4685}}]},"tags":[]},"source":"2a6c11c23b4d451a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f6bd14e8b80>"]}