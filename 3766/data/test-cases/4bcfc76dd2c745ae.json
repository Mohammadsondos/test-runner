{"uid":"4bcfc76dd2c745ae","name":"test_can_create_connection[Test for Dora Factory (PAUSED), url: wss://kusama.dorafactory.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6fae2adb1d5f7addf05621ce5972b67f","time":{"start":1694678505424,"stop":1694678506460,"duration":1036},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 14 Sep 2023 08:01:46 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; AWSALBTGCORS=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 14 Sep 2023 08:01:46 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; AWSALBTGCORS=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 14 Sep 2023 08:01:46 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; AWSALBTGCORS=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 14 Sep 2023 08:01:46 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; AWSALBTGCORS=GOKwY+VHzKLekqEb582lfA9FqL/pL8ncNN6ycWcvWlz06y53w2X0vCyQbCvL+HDaARqSNtOQNqMWCCl44LCr1gFZScCg4nehTLvcRkXbsYu48SW8672tdae486YR7uVA7mpCspJh7hXktDQNVUWfttehlZwUR02PiAZ5u1BVtt2ZNfECHCI=; Expires=Thu, 21 Sep 2023 08:01:46 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"8a9b254e8ab7830b","name":"stdout","source":"8a9b254e8ab7830b.txt","type":"text/plain","size":989}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az349-360"},{"name":"thread","value":"2057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4bcfc76dd2c745ae.json","parameterValues":["{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"]}