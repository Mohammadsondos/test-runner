{"uid":"35cac83be4dbdea7","name":"test_can_create_connection[Test for 3DPass, url: wss://rpc2.3dpass.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f5a6d4af0313219dce7fc1642cad31bd","time":{"start":1698566547934,"stop":1698566548331,"duration":397},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 08:02:28 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': '3DPass', 'url': 'wss://rpc2.3dpass.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 08:02:28 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 08:02:28 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': '3DPass', 'url': 'wss://rpc2.3dpass.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 08:02:28 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9cb7a72686ef28ff","name":"stdout","source":"9cb7a72686ef28ff.txt","type":"text/plain","size":1428}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az713-319"},{"name":"thread","value":"2114-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc2.3dpass.org', 'name': '3DPass'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4f5428e1a7364764","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 08:02:12 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698566532435,"stop":1698566532841,"duration":406}},{"uid":"d52281145e19dc70","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 08:01:57 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698566516877,"stop":1698566517285,"duration":408}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":30,"skipped":0,"passed":368,"unknown":0,"total":398},"items":[{"uid":"12e02898e9b68264","reportUrl":"https://novasamatech.github.io/test-runner/4037//#testresult/12e02898e9b68264","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 04:02:18 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698552138330,"stop":1698552138808,"duration":478}},{"uid":"2c8c8216a31063e9","reportUrl":"https://novasamatech.github.io/test-runner/4036//#testresult/2c8c8216a31063e9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sun, 29 Oct 2023 00:02:53 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698537773414,"stop":1698537773900,"duration":486}},{"uid":"ff425d02c2ca5b1a","reportUrl":"https://novasamatech.github.io/test-runner/4035//#testresult/ff425d02c2ca5b1a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sat, 28 Oct 2023 20:02:05 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698523325556,"stop":1698523325979,"duration":423}},{"uid":"98ade17df8be7dd6","reportUrl":"https://novasamatech.github.io/test-runner/4034//#testresult/98ade17df8be7dd6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sat, 28 Oct 2023 16:02:19 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698508938915,"stop":1698508939288,"duration":373}},{"uid":"d4edf89ad589b9b6","reportUrl":"https://novasamatech.github.io/test-runner/4033//#testresult/d4edf89ad589b9b6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sat, 28 Oct 2023 12:02:09 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698494529383,"stop":1698494529791,"duration":408}},{"uid":"d19f3cc1b3db1480","reportUrl":"https://novasamatech.github.io/test-runner/4032//#testresult/d19f3cc1b3db1480","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1698480381670,"stop":1698480511920,"duration":130250}},{"uid":"4af77b1ae93cea4c","reportUrl":"https://novasamatech.github.io/test-runner/4031//#testresult/4af77b1ae93cea4c","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1698466000318,"stop":1698466130523,"duration":130205}},{"uid":"e12a354af573b95f","reportUrl":"https://novasamatech.github.io/test-runner/4030//#testresult/e12a354af573b95f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.14.0 (Ubuntu)', 'date': 'Sat, 28 Oct 2023 00:02:55 GMT', 'content-type': 'text/html', 'content-length': '182', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body bgcolor=\"white\">\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.14.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698451374733,"stop":1698451375195,"duration":462}},{"uid":"c35b3b9f184d8784","reportUrl":"https://novasamatech.github.io/test-runner/4029//#testresult/c35b3b9f184d8784","status":"passed","time":{"start":1698437012414,"stop":1698437012970,"duration":556}},{"uid":"3392eae36699f807","reportUrl":"https://novasamatech.github.io/test-runner/4028//#testresult/3392eae36699f807","status":"passed","time":{"start":1698422513159,"stop":1698422513830,"duration":671}},{"uid":"7bc35999f50b139c","reportUrl":"https://novasamatech.github.io/test-runner/4027//#testresult/7bc35999f50b139c","status":"passed","time":{"start":1698408109023,"stop":1698408109753,"duration":730}},{"uid":"6f68c06765db115e","reportUrl":"https://novasamatech.github.io/test-runner/4026//#testresult/6f68c06765db115e","status":"passed","time":{"start":1698393736813,"stop":1698393737621,"duration":808}},{"uid":"142c003b00d5465b","reportUrl":"https://novasamatech.github.io/test-runner/4025//#testresult/142c003b00d5465b","status":"passed","time":{"start":1698379301514,"stop":1698379302116,"duration":602}},{"uid":"14f08eda46716ed9","reportUrl":"https://novasamatech.github.io/test-runner/4024//#testresult/14f08eda46716ed9","status":"passed","time":{"start":1698364946984,"stop":1698364947606,"duration":622}},{"uid":"51df911c2f2a8243","reportUrl":"https://novasamatech.github.io/test-runner/4023//#testresult/51df911c2f2a8243","status":"passed","time":{"start":1698350508259,"stop":1698350508892,"duration":633}},{"uid":"4ba07be7b4e6e7df","reportUrl":"https://novasamatech.github.io/test-runner/4022//#testresult/4ba07be7b4e6e7df","status":"passed","time":{"start":1698336098917,"stop":1698336099493,"duration":576}},{"uid":"45ff0fdee5f2fec4","reportUrl":"https://novasamatech.github.io/test-runner/4021//#testresult/45ff0fdee5f2fec4","status":"passed","time":{"start":1698321727856,"stop":1698321728512,"duration":656}},{"uid":"678c4f44d4d14cc1","reportUrl":"https://novasamatech.github.io/test-runner/4020//#testresult/678c4f44d4d14cc1","status":"passed","time":{"start":1698307314561,"stop":1698307315246,"duration":685}},{"uid":"75bd3899d8a81e3d","reportUrl":"https://novasamatech.github.io/test-runner/4019//#testresult/75bd3899d8a81e3d","status":"passed","time":{"start":1698292900674,"stop":1698292901186,"duration":512}},{"uid":"4d9167d0c9a1a534","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/4d9167d0c9a1a534","status":"passed","time":{"start":1698278565282,"stop":1698278565790,"duration":508}}]},"tags":[]},"source":"35cac83be4dbdea7.json","parameterValues":["{'url': 'wss://rpc2.3dpass.org', 'name': '3DPass'}"]}