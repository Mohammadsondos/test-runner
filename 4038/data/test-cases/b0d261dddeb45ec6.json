{"uid":"b0d261dddeb45ec6","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1698566601345,"stop":1698566602332,"duration":987},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa22b4eccd0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa22b65c970>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa22b4eccd0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa22b65c970>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a8467d60e10ecbef","name":"stdout","source":"a8467d60e10ecbef.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1102-951"},{"name":"thread","value":"2130-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa22b65c970>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ee2e0accab098dc0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698566585236,"stop":1698566586314,"duration":1078}},{"uid":"a70927696eb262ca","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698566568544,"stop":1698566570188,"duration":1644}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":28,"skipped":0,"passed":369,"unknown":0,"total":397},"items":[{"uid":"d6c3230696ee8402","reportUrl":"https://novasamatech.github.io/test-runner/4037//#testresult/d6c3230696ee8402","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698552182665,"stop":1698552183535,"duration":870}},{"uid":"a37d1d08834c7812","reportUrl":"https://novasamatech.github.io/test-runner/4036//#testresult/a37d1d08834c7812","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698537852276,"stop":1698537853328,"duration":1052}},{"uid":"29923dcf7d303dba","reportUrl":"https://novasamatech.github.io/test-runner/4035//#testresult/29923dcf7d303dba","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698523405294,"stop":1698523406487,"duration":1193}},{"uid":"e0c14ab6fcb274a6","reportUrl":"https://novasamatech.github.io/test-runner/4034//#testresult/e0c14ab6fcb274a6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698509005553,"stop":1698509006632,"duration":1079}},{"uid":"2587959448ce2985","reportUrl":"https://novasamatech.github.io/test-runner/4033//#testresult/2587959448ce2985","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698494584753,"stop":1698494585872,"duration":1119}},{"uid":"fe18f55320540221","reportUrl":"https://novasamatech.github.io/test-runner/4032//#testresult/fe18f55320540221","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698480451047,"stop":1698480581423,"duration":130376}},{"uid":"a9c54009c26d11","reportUrl":"https://novasamatech.github.io/test-runner/4031//#testresult/a9c54009c26d11","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698466035370,"stop":1698466165748,"duration":130378}},{"uid":"449e55bf5e9cca9a","reportUrl":"https://novasamatech.github.io/test-runner/4030//#testresult/449e55bf5e9cca9a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698451455709,"stop":1698451456685,"duration":976}},{"uid":"a24ff85dd2f48efd","reportUrl":"https://novasamatech.github.io/test-runner/4029//#testresult/a24ff85dd2f48efd","status":"passed","time":{"start":1698436974506,"stop":1698436979102,"duration":4596}},{"uid":"ff4884078c6a3260","reportUrl":"https://novasamatech.github.io/test-runner/4028//#testresult/ff4884078c6a3260","status":"passed","time":{"start":1698422579996,"stop":1698422585495,"duration":5499}},{"uid":"4369a42c93ddfd9a","reportUrl":"https://novasamatech.github.io/test-runner/4027//#testresult/4369a42c93ddfd9a","status":"passed","time":{"start":1698408159092,"stop":1698408163804,"duration":4712}},{"uid":"3f1337ed7a442565","reportUrl":"https://novasamatech.github.io/test-runner/4026//#testresult/3f1337ed7a442565","status":"passed","time":{"start":1698393746461,"stop":1698393752219,"duration":5758}},{"uid":"a109587f831473d","reportUrl":"https://novasamatech.github.io/test-runner/4025//#testresult/a109587f831473d","status":"passed","time":{"start":1698379377709,"stop":1698379386930,"duration":9221}},{"uid":"7b5dc8cb098428c","reportUrl":"https://novasamatech.github.io/test-runner/4024//#testresult/7b5dc8cb098428c","status":"passed","time":{"start":1698365015932,"stop":1698365021245,"duration":5313}},{"uid":"b074bbe77a12aaac","reportUrl":"https://novasamatech.github.io/test-runner/4023//#testresult/b074bbe77a12aaac","status":"passed","time":{"start":1698350581506,"stop":1698350589902,"duration":8396}},{"uid":"a177a782eec0a7a8","reportUrl":"https://novasamatech.github.io/test-runner/4022//#testresult/a177a782eec0a7a8","status":"passed","time":{"start":1698336174537,"stop":1698336179847,"duration":5310}},{"uid":"8914b9d4bf19fb77","reportUrl":"https://novasamatech.github.io/test-runner/4021//#testresult/8914b9d4bf19fb77","status":"passed","time":{"start":1698321771878,"stop":1698321781335,"duration":9457}},{"uid":"a79b8a8b1271f51c","reportUrl":"https://novasamatech.github.io/test-runner/4020//#testresult/a79b8a8b1271f51c","status":"passed","time":{"start":1698307397609,"stop":1698307403271,"duration":5662}},{"uid":"bac231977de1f867","reportUrl":"https://novasamatech.github.io/test-runner/4019//#testresult/bac231977de1f867","status":"passed","time":{"start":1698292968954,"stop":1698292976201,"duration":7247}},{"uid":"7728f38ceb71031d","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/7728f38ceb71031d","status":"passed","time":{"start":1698278650148,"stop":1698278656613,"duration":6465}}]},"tags":[]},"source":"b0d261dddeb45ec6.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa22b65c970>"]}