{"uid":"c36fe34a08060a93","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1686773077020,"stop":1686773077559,"duration":539},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d7db4415191b4c05","name":"stdout","source":"d7db4415191b4c05.txt","type":"text/plain","size":1002}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-204"},{"name":"thread","value":"1900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1a58c33fb1eee94","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:21 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686773061435,"stop":1686773061948,"duration":513}},{"uid":"571e512362095fde","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Wed, 14 Jun 2023 20:04:06 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686773045854,"stop":1686773046292,"duration":438}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":233,"unknown":0,"total":249},"items":[{"uid":"aa5cd0dc27e7576d","reportUrl":"https://novasamatech.github.io/test-runner/3207//#testresult/aa5cd0dc27e7576d","status":"passed","time":{"start":1686758684053,"stop":1686758684461,"duration":408}},{"uid":"e7c28f62f3b1232f","reportUrl":"https://novasamatech.github.io/test-runner/3206//#testresult/e7c28f62f3b1232f","status":"passed","time":{"start":1686744313205,"stop":1686744313980,"duration":775}},{"uid":"d097e55824d94543","reportUrl":"https://novasamatech.github.io/test-runner/3205//#testresult/d097e55824d94543","status":"passed","time":{"start":1686729848782,"stop":1686729849229,"duration":447}},{"uid":"a3e71d2ffd6a370c","reportUrl":"https://novasamatech.github.io/test-runner/3204//#testresult/a3e71d2ffd6a370c","status":"passed","time":{"start":1686715446406,"stop":1686715446758,"duration":352}},{"uid":"6549dbf7a146e77c","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/6549dbf7a146e77c","status":"passed","time":{"start":1686701608559,"stop":1686701609021,"duration":462}},{"uid":"bf18e7d7563a4f2","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/bf18e7d7563a4f2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Tue, 13 Jun 2023 20:04:41 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686686681363,"stop":1686686681651,"duration":288}},{"uid":"e2bef87e85ce0abc","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/e2bef87e85ce0abc","status":"passed","time":{"start":1686672250766,"stop":1686672251304,"duration":538}},{"uid":"cce544fb6eaba5e3","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/cce544fb6eaba5e3","status":"passed","time":{"start":1686657925750,"stop":1686657926338,"duration":588}},{"uid":"97541155e6ae604b","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/97541155e6ae604b","status":"passed","time":{"start":1686643462097,"stop":1686643462677,"duration":580}},{"uid":"38fb01f4f93909a7","reportUrl":"https://novasamatech.github.io/test-runner/3198//#testresult/38fb01f4f93909a7","status":"passed","time":{"start":1686629045195,"stop":1686629045573,"duration":378}},{"uid":"267d1bb1f06de45e","reportUrl":"https://novasamatech.github.io/test-runner/3197//#testresult/267d1bb1f06de45e","status":"passed","time":{"start":1686615262091,"stop":1686615262633,"duration":542}},{"uid":"316b34b7c389e57","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/316b34b7c389e57","status":"passed","time":{"start":1686600244025,"stop":1686600244611,"duration":586}},{"uid":"27ce9241f83ccf51","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/27ce9241f83ccf51","status":"passed","time":{"start":1686585830560,"stop":1686585830933,"duration":373}},{"uid":"c9d31aebdb932307","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/c9d31aebdb932307","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 12:05:34 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686571533868,"stop":1686571534143,"duration":275}},{"uid":"e43f0f314aeb7018","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/e43f0f314aeb7018","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Mon, 12 Jun 2023 08:04:58 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686557098194,"stop":1686557098491,"duration":297}},{"uid":"377273cb6da88d17","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/377273cb6da88d17","status":"passed","time":{"start":1686542643998,"stop":1686542644667,"duration":669}},{"uid":"893f11465b090dfd","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/893f11465b090dfd","status":"passed","time":{"start":1686528891463,"stop":1686528891909,"duration":446}},{"uid":"6391942f207cd3f7","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/6391942f207cd3f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 11 Jun 2023 20:04:11 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686513850994,"stop":1686513851351,"duration":357}},{"uid":"fbc6722635d1bfb4","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/fbc6722635d1bfb4","status":"passed","time":{"start":1686499448012,"stop":1686499448677,"duration":665}},{"uid":"4f3328fe471cd89e","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/4f3328fe471cd89e","status":"passed","time":{"start":1686485096208,"stop":1686485096951,"duration":743}}]},"tags":[]},"source":"c36fe34a08060a93.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}