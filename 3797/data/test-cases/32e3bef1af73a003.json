{"uid":"32e3bef1af73a003","name":"test_can_create_connection[Test for Kusama Asset Hub, url: wss://statemine.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a2ebf3ab717f78e26d97ae46b142c841","time":{"start":1695125373846,"stop":1695125734478,"duration":360632},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 12:15:34 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Kusama Asset Hub', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 12:15:34 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 12:15:34 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Kusama Asset Hub', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 12:15:34 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4e95ab75f4d57dba","name":"stdout","source":"4e95ab75f4d57dba.txt","type":"text/plain","size":1263}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az797-993"},{"name":"thread","value":"2066-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Kusama Asset Hub'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dc321ee8dc316a97","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Tue, 19 Sep 2023 12:09:18 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '300001', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695124998141,"stop":1695125358756,"duration":360615}},{"uid":"16581e7732fa9e7a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Tue, 19 Sep 2023 12:03:02 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '39067', 'x-kong-proxy-latency': '60001', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695124883164,"stop":1695124982938,"duration":99774}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":156,"unknown":0,"total":158},"items":[{"uid":"5e2afb1b41b303f0","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/5e2afb1b41b303f0","status":"passed","time":{"start":1695110499963,"stop":1695110500928,"duration":965}},{"uid":"239f2adadf395c74","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/239f2adadf395c74","status":"passed","time":{"start":1695096082763,"stop":1695096083903,"duration":1140}},{"uid":"d1e44727e77b3d3","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/d1e44727e77b3d3","status":"passed","time":{"start":1695081726461,"stop":1695081727755,"duration":1294}},{"uid":"58bf17004413034e","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/58bf17004413034e","status":"passed","time":{"start":1695052879052,"stop":1695052880016,"duration":964}},{"uid":"cc659faf943a4979","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/cc659faf943a4979","status":"passed","time":{"start":1695067283546,"stop":1695067285278,"duration":1732}},{"uid":"7533678f74d80a54","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/7533678f74d80a54","status":"passed","time":{"start":1695038501989,"stop":1695038502885,"duration":896}},{"uid":"1f9fc636e29fbab4","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/1f9fc636e29fbab4","status":"passed","time":{"start":1695024096436,"stop":1695024097476,"duration":1040}},{"uid":"adb11a7a9ebf741b","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/adb11a7a9ebf741b","status":"passed","time":{"start":1695009682696,"stop":1695009683470,"duration":774}},{"uid":"ceb82edfb0b54bd8","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/ceb82edfb0b54bd8","status":"passed","time":{"start":1694995326811,"stop":1694995327587,"duration":776}},{"uid":"31d43b1d8e0929bd","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/31d43b1d8e0929bd","status":"passed","time":{"start":1694980879571,"stop":1694980880590,"duration":1019}},{"uid":"48bf14dd32142f07","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/48bf14dd32142f07","status":"passed","time":{"start":1694966470275,"stop":1694966471384,"duration":1109}},{"uid":"34631b5f5eaa9ee1","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/34631b5f5eaa9ee1","status":"passed","time":{"start":1694952076024,"stop":1694952077164,"duration":1140}},{"uid":"b352ecb88525499a","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/b352ecb88525499a","status":"passed","time":{"start":1694937681344,"stop":1694937682075,"duration":731}},{"uid":"4ec90e46f37af970","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/4ec90e46f37af970","status":"passed","time":{"start":1694923269333,"stop":1694923270312,"duration":979}},{"uid":"420a315a39568d4f","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/420a315a39568d4f","status":"passed","time":{"start":1694908932090,"stop":1694908932853,"duration":763}},{"uid":"f0d074b3d338ef75","reportUrl":"https://novasamatech.github.io/test-runner/3781//#testresult/f0d074b3d338ef75","status":"passed","time":{"start":1694894476042,"stop":1694894476968,"duration":926}},{"uid":"67e562bc4b79e2eb","reportUrl":"https://novasamatech.github.io/test-runner/3780//#testresult/67e562bc4b79e2eb","status":"passed","time":{"start":1694880070038,"stop":1694880070971,"duration":933}},{"uid":"add8451ee9a083d5","reportUrl":"https://novasamatech.github.io/test-runner/3779//#testresult/add8451ee9a083d5","status":"passed","time":{"start":1694865686456,"stop":1694865687314,"duration":858}},{"uid":"edd2d1b83f5f139f","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/edd2d1b83f5f139f","status":"passed","time":{"start":1694851279234,"stop":1694851280377,"duration":1143}},{"uid":"cfd85df366cdcae4","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/cfd85df366cdcae4","status":"passed","time":{"start":1694836880497,"stop":1694836881366,"duration":869}}]},"tags":[]},"source":"32e3bef1af73a003.json","parameterValues":["{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Kusama Asset Hub'}"]}