{"uid":"bd1325d293a7767a","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1699372934565,"stop":1699372934838,"duration":273},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 07 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 07 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 07 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 07 Nov 2023 16:02:14 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3f90965652437189","name":"stdout","source":"3f90965652437189.txt","type":"text/plain","size":814}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1433-978"},{"name":"thread","value":"2170-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"38bd3c1e5950b721","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1699372919288,"stop":1699372919468,"duration":180}},{"uid":"ef496a5626039ae","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1699372903848,"stop":1699372904150,"duration":302}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":54,"skipped":0,"passed":400,"unknown":0,"total":454},"items":[{"uid":"e29311f0b05878c1","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/e29311f0b05878c1","status":"passed","time":{"start":1699358496994,"stop":1699358497488,"duration":494}},{"uid":"73538743ae51c60","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/73538743ae51c60","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 07 Nov 2023 08:02:02 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699344122005,"stop":1699344122445,"duration":440}},{"uid":"9b9adcfce4be5bfb","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/9b9adcfce4be5bfb","status":"passed","time":{"start":1699329702343,"stop":1699329703033,"duration":690}},{"uid":"2eed2e7d5a31b268","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/2eed2e7d5a31b268","status":"passed","time":{"start":1699315342265,"stop":1699315342638,"duration":373}},{"uid":"fff158f2b0924a5e","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/fff158f2b0924a5e","status":"passed","time":{"start":1699300907167,"stop":1699300907613,"duration":446}},{"uid":"970eac55908c219f","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/970eac55908c219f","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1699286544823,"stop":1699286545008,"duration":185}},{"uid":"7bbf1dffc67d3d18","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/7bbf1dffc67d3d18","status":"passed","time":{"start":1699272133071,"stop":1699272133441,"duration":370}},{"uid":"94bd4b4e5c63a9de","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/94bd4b4e5c63a9de","status":"passed","time":{"start":1699257750883,"stop":1699257751380,"duration":497}},{"uid":"f4b0e664214bf5bd","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/f4b0e664214bf5bd","status":"passed","time":{"start":1699243303539,"stop":1699243304109,"duration":570}},{"uid":"4c433040f5d2e5ed","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/4c433040f5d2e5ed","status":"passed","time":{"start":1699228929733,"stop":1699228930215,"duration":482}},{"uid":"15ef532f03e2983","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/15ef532f03e2983","status":"passed","time":{"start":1699214498113,"stop":1699214498685,"duration":572}},{"uid":"f35919ced28e4880","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/f35919ced28e4880","status":"passed","time":{"start":1699200105781,"stop":1699200106228,"duration":447}},{"uid":"fb705f8c6f4d01ee","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/fb705f8c6f4d01ee","status":"passed","time":{"start":1699185686721,"stop":1699185687219,"duration":498}},{"uid":"c66e8072e6169c62","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/c66e8072e6169c62","status":"passed","time":{"start":1699171286144,"stop":1699171286639,"duration":495}},{"uid":"f47caafc1f3740d4","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/f47caafc1f3740d4","status":"passed","time":{"start":1699156886285,"stop":1699156886656,"duration":371}},{"uid":"944f42652779cf6d","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/944f42652779cf6d","status":"passed","time":{"start":1699142544727,"stop":1699142545381,"duration":654}},{"uid":"16b581d9626679c4","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/16b581d9626679c4","status":"passed","time":{"start":1699128098115,"stop":1699128098517,"duration":402}},{"uid":"245f26d6777fe81c","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/245f26d6777fe81c","status":"passed","time":{"start":1699113697940,"stop":1699113698442,"duration":502}},{"uid":"526d9b9f17bad46c","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/526d9b9f17bad46c","status":"passed","time":{"start":1699099296048,"stop":1699099296625,"duration":577}},{"uid":"1168f073c5fb11a7","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/1168f073c5fb11a7","status":"passed","time":{"start":1699084891758,"stop":1699084892166,"duration":408}}]},"tags":[]},"source":"bd1325d293a7767a.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}