{"uid":"fe13009e5736d3e1","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1699372956737,"stop":1699372957157,"duration":420},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0f84b9cac0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0f84afa6b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0f84b9cac0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0f84afa6b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"ed5e116fb759bd34","name":"stdout","source":"ed5e116fb759bd34.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1210-362"},{"name":"thread","value":"2182-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0f84afa6b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ca53a283565e79eb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372941275,"stop":1699372941711,"duration":436}},{"uid":"e8e18f008954cd8a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372925509,"stop":1699372926247,"duration":738}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":52,"skipped":0,"passed":401,"unknown":0,"total":453},"items":[{"uid":"2c390908d6cf0f8c","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/2c390908d6cf0f8c","status":"passed","time":{"start":1699358567216,"stop":1699358570089,"duration":2873}},{"uid":"1a3f275b32ccdfde","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/1a3f275b32ccdfde","status":"passed","time":{"start":1699344168715,"stop":1699344172869,"duration":4154}},{"uid":"f398d50f37feae5b","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/f398d50f37feae5b","status":"passed","time":{"start":1699329727137,"stop":1699329730765,"duration":3628}},{"uid":"749adf0837ba44bd","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/749adf0837ba44bd","status":"passed","time":{"start":1699315365542,"stop":1699315367158,"duration":1616}},{"uid":"abcce03fbe05bb1","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/abcce03fbe05bb1","status":"passed","time":{"start":1699300923967,"stop":1699300926322,"duration":2355}},{"uid":"efc329ad48369f46","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/efc329ad48369f46","status":"passed","time":{"start":1699286575957,"stop":1699286578647,"duration":2690}},{"uid":"eaecba7fe5056e50","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/eaecba7fe5056e50","status":"passed","time":{"start":1699272158487,"stop":1699272162074,"duration":3587}},{"uid":"928a203bade711b8","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/928a203bade711b8","status":"passed","time":{"start":1699257741624,"stop":1699257743698,"duration":2074}},{"uid":"730ec9b30d8a26e3","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/730ec9b30d8a26e3","status":"passed","time":{"start":1699243337390,"stop":1699243340345,"duration":2955}},{"uid":"960fdd8508c59f9e","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/960fdd8508c59f9e","status":"passed","time":{"start":1699228979614,"stop":1699228983088,"duration":3474}},{"uid":"e4a1b9320e2b46a9","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/e4a1b9320e2b46a9","status":"passed","time":{"start":1699214567778,"stop":1699214573467,"duration":5689}},{"uid":"8fb6d511d3d0414f","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/8fb6d511d3d0414f","status":"passed","time":{"start":1699200132094,"stop":1699200134853,"duration":2759}},{"uid":"54d60ac00bb75aeb","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/54d60ac00bb75aeb","status":"passed","time":{"start":1699185710722,"stop":1699185712690,"duration":1968}},{"uid":"cf81b075b85f08a8","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/cf81b075b85f08a8","status":"passed","time":{"start":1699171337707,"stop":1699171340035,"duration":2328}},{"uid":"6f3f53b55df94a95","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/6f3f53b55df94a95","status":"passed","time":{"start":1699156930054,"stop":1699156932375,"duration":2321}},{"uid":"89eaf1093fb81834","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/89eaf1093fb81834","status":"passed","time":{"start":1699142610085,"stop":1699142614047,"duration":3962}},{"uid":"b6a0587d3a4e4ed0","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/b6a0587d3a4e4ed0","status":"passed","time":{"start":1699128150292,"stop":1699128155665,"duration":5373}},{"uid":"f8f971261e848f1","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/f8f971261e848f1","status":"passed","time":{"start":1699113743052,"stop":1699113746115,"duration":3063}},{"uid":"9b11ea32a6b42979","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/9b11ea32a6b42979","status":"passed","time":{"start":1699099312400,"stop":1699099314278,"duration":1878}},{"uid":"b176157cf93c7198","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/b176157cf93c7198","status":"passed","time":{"start":1699084934442,"stop":1699084936616,"duration":2174}}]},"tags":[]},"source":"fe13009e5736d3e1.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0f84afa6b0>"]}