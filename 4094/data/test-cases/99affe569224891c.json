{"uid":"99affe569224891c","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1699372988628,"stop":1699372989259,"duration":631},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0f84b9f160>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0f84afa530>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0f84b9f160>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0f84afa530>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"4a87ad57d883cda7","name":"stdout","source":"4a87ad57d883cda7.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1210-362"},{"name":"thread","value":"2182-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0f84afa530>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ffa0c3e9d54386b8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372972979,"stop":1699372973600,"duration":621}},{"uid":"487baa1669e6aa4f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372957167,"stop":1699372957954,"duration":787}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":27,"skipped":0,"passed":426,"unknown":0,"total":453},"items":[{"uid":"1e852996ec7bfc67","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/1e852996ec7bfc67","status":"passed","time":{"start":1699358560857,"stop":1699358567081,"duration":6224}},{"uid":"1bbd2d4ddd644d07","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/1bbd2d4ddd644d07","status":"passed","time":{"start":1699344173614,"stop":1699344179804,"duration":6190}},{"uid":"22a7d51b7ea3a3cf","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/22a7d51b7ea3a3cf","status":"passed","time":{"start":1699329730563,"stop":1699329734184,"duration":3621}},{"uid":"5070d842f709af1c","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/5070d842f709af1c","status":"passed","time":{"start":1699315371619,"stop":1699315377436,"duration":5817}},{"uid":"2749783a5ad79303","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/2749783a5ad79303","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699300962448,"stop":1699300963005,"duration":557}},{"uid":"bd4f7508fc0a0820","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/bd4f7508fc0a0820","status":"passed","time":{"start":1699286547484,"stop":1699286553909,"duration":6425}},{"uid":"2b1414b86a82a01b","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/2b1414b86a82a01b","status":"passed","time":{"start":1699272130039,"stop":1699272132503,"duration":2464}},{"uid":"7a9f4a6a7acc99b0","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/7a9f4a6a7acc99b0","status":"passed","time":{"start":1699257727768,"stop":1699257731863,"duration":4095}},{"uid":"242c93b239391614","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/242c93b239391614","status":"passed","time":{"start":1699243342567,"stop":1699243346560,"duration":3993}},{"uid":"6ee30aca1af1b59b","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/6ee30aca1af1b59b","status":"passed","time":{"start":1699228987028,"stop":1699228991475,"duration":4447}},{"uid":"e94d4014268b2fff","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/e94d4014268b2fff","status":"passed","time":{"start":1699214577167,"stop":1699214583905,"duration":6738}},{"uid":"854a1d1586bf2e65","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/854a1d1586bf2e65","status":"passed","time":{"start":1699200136245,"stop":1699200140472,"duration":4227}},{"uid":"806c271382b55946","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/806c271382b55946","status":"passed","time":{"start":1699185718973,"stop":1699185722321,"duration":3348}},{"uid":"c403b19e7f856016","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/c403b19e7f856016","status":"passed","time":{"start":1699171344893,"stop":1699171350590,"duration":5697}},{"uid":"b022b0a89aa26045","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/b022b0a89aa26045","status":"passed","time":{"start":1699156944356,"stop":1699156948291,"duration":3935}},{"uid":"d55615d3a74aac95","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/d55615d3a74aac95","status":"passed","time":{"start":1699142626445,"stop":1699142631129,"duration":4684}},{"uid":"4dff317d82fb968","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/4dff317d82fb968","status":"passed","time":{"start":1699128159371,"stop":1699128165279,"duration":5908}},{"uid":"1e2c8acb95bdcd61","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/1e2c8acb95bdcd61","status":"passed","time":{"start":1699113755768,"stop":1699113760536,"duration":4768}},{"uid":"4542d8b46c817561","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/4542d8b46c817561","status":"passed","time":{"start":1699099319484,"stop":1699099323009,"duration":3525}},{"uid":"504987a26a5cb32","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/504987a26a5cb32","status":"passed","time":{"start":1699084938250,"stop":1699084943433,"duration":5183}}]},"tags":[]},"source":"99affe569224891c.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0f84afa530>"]}