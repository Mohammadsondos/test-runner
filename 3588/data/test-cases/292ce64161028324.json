{"uid":"292ce64161028324","name":"test_address_prefix[Test for Ajuna]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"f74e2b865b624bad0cb2cad3f2206379","time":{"start":1692202050199,"stop":1692202111737,"duration":61538},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f76695ffbe0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7669bc67d0>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:2516: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:2490: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:1117: in init_runtime\n    block_hash = self.get_chain_head()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:874: in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f76695ffbe0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7669bc67d0>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:2516: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:2490: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:1117: in init_runtime\n    block_hash = self.get_chain_head()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:874: in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"104b8b15905dc9a4","name":"stdout","source":"104b8b15905dc9a4.txt","type":"text/plain","size":1447}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az1131-454"},{"name":"thread","value":"2051-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f7669bc67d0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2110d95fa7f8505d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Wed, 16 Aug 2023 16:07:14 GMT', 'content-type': 'text/html', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=vSv%2BQUZ5u7%2BgP5zNmD5OArUozlzWKELuQY%2F6XZXmbf0P6vq8x2mAC%2F29fM%2F1U0s0AKb7FtMmA7j568vP2s2pf5ldBe03R0YVWVNohvQcSmHwPFkXKAtFJ4FF1dNh0mOojmcLPoGC8wKQz9i50CLetKiTUg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7f7aeddb4d7d16a2-SJC'} -+-+- None","time":{"start":1692201999781,"stop":1692202034983,"duration":35202}},{"uid":"7ad0cf0d9aba2187","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1692201920877,"stop":1692201983767,"duration":62890}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":565,"unknown":0,"total":566},"items":[{"uid":"938e6909c359416d","reportUrl":"https://novasamatech.github.io/test-runner/3587//#testresult/938e6909c359416d","status":"passed","time":{"start":1692187538273,"stop":1692187542700,"duration":4427}},{"uid":"c901ad5f02474190","reportUrl":"https://novasamatech.github.io/test-runner/3586//#testresult/c901ad5f02474190","status":"passed","time":{"start":1692173129147,"stop":1692173139851,"duration":10704}},{"uid":"43bdd0eef5f34def","reportUrl":"https://novasamatech.github.io/test-runner/3585//#testresult/43bdd0eef5f34def","status":"passed","time":{"start":1692158707480,"stop":1692158713644,"duration":6164}},{"uid":"570e421103b40332","reportUrl":"https://novasamatech.github.io/test-runner/3584//#testresult/570e421103b40332","status":"passed","time":{"start":1692144809167,"stop":1692144817007,"duration":7840}},{"uid":"9678f2562764e4b0","reportUrl":"https://novasamatech.github.io/test-runner/3583//#testresult/9678f2562764e4b0","status":"passed","time":{"start":1692129934051,"stop":1692129937174,"duration":3123}},{"uid":"fff1b812234295d1","reportUrl":"https://novasamatech.github.io/test-runner/3582//#testresult/fff1b812234295d1","status":"passed","time":{"start":1692115616628,"stop":1692115619778,"duration":3150}},{"uid":"18cd1057d0f07f0b","reportUrl":"https://novasamatech.github.io/test-runner/3581//#testresult/18cd1057d0f07f0b","status":"passed","time":{"start":1692101120256,"stop":1692101123863,"duration":3607}},{"uid":"b73b58742d7795c0","reportUrl":"https://novasamatech.github.io/test-runner/3580//#testresult/b73b58742d7795c0","status":"passed","time":{"start":1692086731835,"stop":1692086740760,"duration":8925}},{"uid":"29fcf285ac8f46b9","reportUrl":"https://novasamatech.github.io/test-runner/3579//#testresult/29fcf285ac8f46b9","status":"passed","time":{"start":1692072290304,"stop":1692072294738,"duration":4434}},{"uid":"7b8b3de9fc432650","reportUrl":"https://novasamatech.github.io/test-runner/3578//#testresult/7b8b3de9fc432650","status":"passed","time":{"start":1692058368855,"stop":1692058373488,"duration":4633}},{"uid":"979ccb80951a5133","reportUrl":"https://novasamatech.github.io/test-runner/3577//#testresult/979ccb80951a5133","status":"passed","time":{"start":1692043520959,"stop":1692043530385,"duration":9426}},{"uid":"8c41ba588ca8a60b","reportUrl":"https://novasamatech.github.io/test-runner/3576//#testresult/8c41ba588ca8a60b","status":"passed","time":{"start":1692029100793,"stop":1692029110269,"duration":9476}},{"uid":"48f835d989b560d1","reportUrl":"https://novasamatech.github.io/test-runner/3575//#testresult/48f835d989b560d1","status":"passed","time":{"start":1692014785462,"stop":1692014792215,"duration":6753}},{"uid":"2647cf687812876d","reportUrl":"https://novasamatech.github.io/test-runner/3574//#testresult/2647cf687812876d","status":"passed","time":{"start":1692000310925,"stop":1692000316369,"duration":5444}},{"uid":"a12daf528c137625","reportUrl":"https://novasamatech.github.io/test-runner/3573//#testresult/a12daf528c137625","status":"passed","time":{"start":1691985893759,"stop":1691985898815,"duration":5056}},{"uid":"2987de43aa68020c","reportUrl":"https://novasamatech.github.io/test-runner/3572//#testresult/2987de43aa68020c","status":"passed","time":{"start":1691972019487,"stop":1691972031623,"duration":12136}},{"uid":"131896ad4bec3e0a","reportUrl":"https://novasamatech.github.io/test-runner/3571//#testresult/131896ad4bec3e0a","status":"passed","time":{"start":1691957092369,"stop":1691957096916,"duration":4547}},{"uid":"350d0b638c9befaf","reportUrl":"https://novasamatech.github.io/test-runner/3570//#testresult/350d0b638c9befaf","status":"passed","time":{"start":1691942690346,"stop":1691942695581,"duration":5235}},{"uid":"f24b896a9d1c57e6","reportUrl":"https://novasamatech.github.io/test-runner/3569//#testresult/f24b896a9d1c57e6","status":"passed","time":{"start":1691928319707,"stop":1691928325174,"duration":5467}},{"uid":"49a684e903c034ab","reportUrl":"https://novasamatech.github.io/test-runner/3568//#testresult/49a684e903c034ab","status":"passed","time":{"start":1691913898161,"stop":1691913907704,"duration":9543}}]},"tags":[]},"source":"292ce64161028324.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f7669bc67d0>"]}