{"uid":"dabf94f01120de62","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1694597354377,"stop":1694597355185,"duration":808},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9407d4d9f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f940c042c80>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9407d4d9f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f940c042c80>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f656b535bf549c96","name":"stdout","source":"f656b535bf549c96.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az354-205"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f940c042c80>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4eef200b1395b8d3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694597338093,"stop":1694597339333,"duration":1240}},{"uid":"f6d8cad56cf9daab","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694597322031,"stop":1694597323066,"duration":1035}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":109,"unknown":0,"total":120},"items":[{"uid":"3d4a5e5e49a72a64","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/3d4a5e5e49a72a64","status":"passed","time":{"start":1694592139642,"stop":1694592143455,"duration":3813}},{"uid":"3a2ea53b7d9a8d3f","reportUrl":"https://novasamatech.github.io/test-runner/3758//#testresult/3a2ea53b7d9a8d3f","status":"passed","time":{"start":1694577735662,"stop":1694577739620,"duration":3958}},{"uid":"1b792ed7c96253d8","reportUrl":"https://novasamatech.github.io/test-runner/3757//#testresult/1b792ed7c96253d8","status":"passed","time":{"start":1694563389900,"stop":1694563395980,"duration":6080}},{"uid":"3946849128e16ec7","reportUrl":"https://novasamatech.github.io/test-runner/3756//#testresult/3946849128e16ec7","status":"passed","time":{"start":1694548946326,"stop":1694548950186,"duration":3860}},{"uid":"2d2893bebf293aa8","reportUrl":"https://novasamatech.github.io/test-runner/3755//#testresult/2d2893bebf293aa8","status":"passed","time":{"start":1694534527867,"stop":1694534531553,"duration":3686}},{"uid":"abb449fb29e72fad","reportUrl":"https://novasamatech.github.io/test-runner/3754//#testresult/abb449fb29e72fad","status":"passed","time":{"start":1694520150640,"stop":1694520155139,"duration":4499}},{"uid":"6cd80c80a92ba3f1","reportUrl":"https://novasamatech.github.io/test-runner/3753//#testresult/6cd80c80a92ba3f1","status":"passed","time":{"start":1694505765253,"stop":1694505771110,"duration":5857}},{"uid":"bbf70875097a1ace","reportUrl":"https://novasamatech.github.io/test-runner/3752//#testresult/bbf70875097a1ace","status":"passed","time":{"start":1694491323825,"stop":1694491327470,"duration":3645}},{"uid":"33514185791c7f74","reportUrl":"https://novasamatech.github.io/test-runner/3751//#testresult/33514185791c7f74","status":"passed","time":{"start":1694476970326,"stop":1694476975539,"duration":5213}},{"uid":"ca7490af330b2a9b","reportUrl":"https://novasamatech.github.io/test-runner/3750//#testresult/ca7490af330b2a9b","status":"passed","time":{"start":1694462530732,"stop":1694462534588,"duration":3856}},{"uid":"5c2587c510cf73fe","reportUrl":"https://novasamatech.github.io/test-runner/3749//#testresult/5c2587c510cf73fe","status":"passed","time":{"start":1694448130900,"stop":1694448134486,"duration":3586}},{"uid":"baf8ad0f31323926","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/baf8ad0f31323926","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694433767860,"stop":1694433768607,"duration":747}},{"uid":"4713759143bbc879","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/4713759143bbc879","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694419384410,"stop":1694419385188,"duration":778}},{"uid":"f22d9989d88a0ee0","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/f22d9989d88a0ee0","status":"passed","time":{"start":1694404930365,"stop":1694404933896,"duration":3531}},{"uid":"5ac946e9d453f988","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/5ac946e9d453f988","status":"passed","time":{"start":1694390598644,"stop":1694390602714,"duration":4070}},{"uid":"f5abd97dc0e1d8a6","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/f5abd97dc0e1d8a6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694376159484,"stop":1694376160568,"duration":1084}},{"uid":"61a03591eff9f7bd","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/61a03591eff9f7bd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694361778915,"stop":1694361780210,"duration":1295}},{"uid":"2cf1ca23e6b386c5","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/2cf1ca23e6b386c5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694347363026,"stop":1694347364192,"duration":1166}},{"uid":"571e65093898cbca","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/571e65093898cbca","status":"passed","time":{"start":1694332962606,"stop":1694332969014,"duration":6408}},{"uid":"56cfddd2bc1ef33d","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/56cfddd2bc1ef33d","status":"passed","time":{"start":1694318559374,"stop":1694318568064,"duration":8690}}]},"tags":[]},"source":"dabf94f01120de62.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f940c042c80>"]}