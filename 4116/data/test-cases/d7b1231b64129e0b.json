{"uid":"d7b1231b64129e0b","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1699689752529,"stop":1699689753243,"duration":714},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fc58de38a30>\nchain = <scripts.utils.chain_model.Chain object at 0x7fc58dd74970>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fc58de38a30>\nchain = <scripts.utils.chain_model.Chain object at 0x7fc58dd74970>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"b6de6e8f6f43ef5b","name":"stdout","source":"b6de6e8f6f43ef5b.txt","type":"text/plain","size":1632}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1393-563"},{"name":"thread","value":"2228-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fc58dd74970>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e73e9d3aadaacb93","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699689737037,"stop":1699689737500,"duration":463}},{"uid":"4b07405881117f16","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699689721508,"stop":1699689722012,"duration":504}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":57,"skipped":0,"passed":418,"unknown":0,"total":475},"items":[{"uid":"e2431d3a2055c5bd","reportUrl":"https://novasamatech.github.io/test-runner/4115//#testresult/e2431d3a2055c5bd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699675358970,"stop":1699675359745,"duration":775}},{"uid":"1d02a095c27cf06f","reportUrl":"https://novasamatech.github.io/test-runner/4114//#testresult/1d02a095c27cf06f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699661021485,"stop":1699661022173,"duration":688}},{"uid":"348096251cd80afa","reportUrl":"https://novasamatech.github.io/test-runner/4113//#testresult/348096251cd80afa","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699646582750,"stop":1699646583186,"duration":436}},{"uid":"f239df48286e1a8e","reportUrl":"https://novasamatech.github.io/test-runner/4112//#testresult/f239df48286e1a8e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699632194651,"stop":1699632195778,"duration":1127}},{"uid":"18fc79b073b94140","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/18fc79b073b94140","status":"passed","time":{"start":1699617751283,"stop":1699617752853,"duration":1570}},{"uid":"6ccb6725c02d7f69","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/6ccb6725c02d7f69","status":"passed","time":{"start":1699603362779,"stop":1699603366951,"duration":4172}},{"uid":"b4c3b5e14c7d4e45","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/b4c3b5e14c7d4e45","status":"passed","time":{"start":1699588965379,"stop":1699588967828,"duration":2449}},{"uid":"ccf9e179eaf0e3f2","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/ccf9e179eaf0e3f2","status":"passed","time":{"start":1699574607805,"stop":1699574610616,"duration":2811}},{"uid":"563f9055eabc27df","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/563f9055eabc27df","status":"passed","time":{"start":1699560223208,"stop":1699560225828,"duration":2620}},{"uid":"b27f316a24b6f241","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/b27f316a24b6f241","status":"passed","time":{"start":1699545755541,"stop":1699545757542,"duration":2001}},{"uid":"de834885f8d446f2","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/de834885f8d446f2","status":"passed","time":{"start":1699531375828,"stop":1699531378267,"duration":2439}},{"uid":"6753f17fe86b1443","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/6753f17fe86b1443","status":"passed","time":{"start":1699516945644,"stop":1699516948614,"duration":2970}},{"uid":"cac33865a9596b01","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/cac33865a9596b01","status":"passed","time":{"start":1699502543108,"stop":1699502545855,"duration":2747}},{"uid":"ac8f2497d6894cf3","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/ac8f2497d6894cf3","status":"passed","time":{"start":1699488166322,"stop":1699488167267,"duration":945}},{"uid":"2a0f72a132ed7a75","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/2a0f72a132ed7a75","status":"passed","time":{"start":1699473775766,"stop":1699473778783,"duration":3017}},{"uid":"80bb3e4310aee787","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/80bb3e4310aee787","status":"passed","time":{"start":1699459331799,"stop":1699459334251,"duration":2452}},{"uid":"e56a1e797a878c3f","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/e56a1e797a878c3f","status":"passed","time":{"start":1699444965109,"stop":1699444969401,"duration":4292}},{"uid":"4662045bc6f3f916","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/4662045bc6f3f916","status":"passed","time":{"start":1699430525212,"stop":1699430527140,"duration":1928}},{"uid":"8e7b815ab37bfe92","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/8e7b815ab37bfe92","status":"passed","time":{"start":1699416166232,"stop":1699416170013,"duration":3781}},{"uid":"bc5c0d0119e15026","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/bc5c0d0119e15026","status":"passed","time":{"start":1699401794889,"stop":1699401802725,"duration":7836}}]},"tags":[]},"source":"d7b1231b64129e0b.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fc58dd74970>"]}