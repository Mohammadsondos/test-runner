{"uid":"81ec01d2fb484cce","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://1rpc.io/eth]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"9e0c16e1a7876bd51b49d655a0298c26","time":{"start":1712692867014,"stop":1712692868467,"duration":1453},"status":"broken","statusMessage":"ValueError: {'code': -32005, 'message': 'daily request count exceeded, request rate limited', 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.0333333333333334}, 'see': 'https://infura.io/dashboard'}}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f5a835016f0>\ndata = {'name': 'Ethereum', 'url': 'https://1rpc.io/eth'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n        assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Get the latest block number from nodes\n        rpc_block_number = w3_rpc.eth.block_number\n>       wss_block_number = wss_w3.eth.block_number\n\ntests/test_eth_nodes_availability.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:133: in block_number\n    return self.get_block_number()\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'error': {'code': -32005, 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.033333333333333...s://infura.io/dashboard'}, 'message': 'daily request count exceeded, request rate limited'}, 'id': 1, 'jsonrpc': '2.0'}\nparams = (), error_formatters = <cyfunction identity at 0x7f5a897468e0>\nnull_result_formatters = <cyfunction identity at 0x7f5a897468e0>\n\n    @staticmethod\n    def formatted_response(\n        response: RPCResponse,\n        params: Any,\n        error_formatters: Optional[Callable[..., Any]] = None,\n        null_result_formatters: Optional[Callable[..., Any]] = None,\n    ) -> Any:\n        if \"error\" in response:\n            apply_error_formatters(error_formatters, response)\n    \n            # guard against eth-tester case - eth-tester returns a string\n            # with no code, so can't parse what the error is.\n            if isinstance(response[\"error\"], dict):\n                resp_code = response[\"error\"].get(\"code\")\n                if resp_code == -32601:\n                    raise MethodUnavailable(response[\"error\"])\n>           raise ValueError(response[\"error\"])\nE           ValueError: {'code': -32005, 'message': 'daily request count exceeded, request rate limited', 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.0333333333333334}, 'see': 'https://infura.io/dashboard'}}\n\n.venv/lib/python3.10/site-packages/web3/manager.py:205: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1536-152"},{"name":"thread","value":"2071-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"951f4436558d2caf","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1712692861937,"stop":1712692861979,"duration":42}},{"uid":"fb5a7f608875e877","status":"broken","statusDetails":"ValueError: {'code': -32005, 'message': 'daily request count exceeded, request rate limited', 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.0333333333333334}, 'see': 'https://infura.io/dashboard'}}","time":{"start":1712692855511,"stop":1712692856840,"duration":1329}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":64,"skipped":0,"passed":1042,"unknown":0,"total":1110},"items":[{"uid":"64fc302dd7874999","reportUrl":"https://novasamatech.github.io/test-runner/5034//#testresult/64fc302dd7874999","status":"passed","time":{"start":1712678484479,"stop":1712678486587,"duration":2108}},{"uid":"5452b4264eca8b2d","reportUrl":"https://novasamatech.github.io/test-runner/5033//#testresult/5452b4264eca8b2d","status":"passed","time":{"start":1712664087040,"stop":1712664088739,"duration":1699}},{"uid":"8dcd29a6c2f0f9f6","reportUrl":"https://novasamatech.github.io/test-runner/5032//#testresult/8dcd29a6c2f0f9f6","status":"passed","time":{"start":1712649670480,"stop":1712649671256,"duration":776}},{"uid":"26020cfaa5b9d9b2","reportUrl":"https://novasamatech.github.io/test-runner/5031//#testresult/26020cfaa5b9d9b2","status":"passed","time":{"start":1712635269619,"stop":1712635271962,"duration":2343}},{"uid":"69abd1c4398ff73","reportUrl":"https://novasamatech.github.io/test-runner/5030//#testresult/69abd1c4398ff73","status":"passed","time":{"start":1712620904846,"stop":1712620905956,"duration":1110}},{"uid":"4486efd7459fc773","reportUrl":"https://novasamatech.github.io/test-runner/5029//#testresult/4486efd7459fc773","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1712606466280,"stop":1712606466363,"duration":83}},{"uid":"217f33e97ba9415f","reportUrl":"https://novasamatech.github.io/test-runner/5028//#testresult/217f33e97ba9415f","status":"passed","time":{"start":1712592062659,"stop":1712592063843,"duration":1184}},{"uid":"bd3b3dae6d931c73","reportUrl":"https://novasamatech.github.io/test-runner/5027//#testresult/bd3b3dae6d931c73","status":"passed","time":{"start":1712577670187,"stop":1712577671136,"duration":949}},{"uid":"118c0d971ffb70e2","reportUrl":"https://novasamatech.github.io/test-runner/5026//#testresult/118c0d971ffb70e2","status":"passed","time":{"start":1712563273439,"stop":1712563274843,"duration":1404}},{"uid":"b82d43715d5c39c6","reportUrl":"https://novasamatech.github.io/test-runner/5025//#testresult/b82d43715d5c39c6","status":"passed","time":{"start":1712548860914,"stop":1712548861849,"duration":935}},{"uid":"f40fceb94b80a26d","reportUrl":"https://novasamatech.github.io/test-runner/5024//#testresult/f40fceb94b80a26d","status":"passed","time":{"start":1712534511955,"stop":1712534512865,"duration":910}},{"uid":"f788ffd87c174f66","reportUrl":"https://novasamatech.github.io/test-runner/5023//#testresult/f788ffd87c174f66","status":"passed","time":{"start":1712520064029,"stop":1712520064740,"duration":711}},{"uid":"7201bc28c8f6f6f3","reportUrl":"https://novasamatech.github.io/test-runner/5022//#testresult/7201bc28c8f6f6f3","status":"passed","time":{"start":1712505664775,"stop":1712505665782,"duration":1007}},{"uid":"2cfe14b9529c827a","reportUrl":"https://novasamatech.github.io/test-runner/5021//#testresult/2cfe14b9529c827a","status":"passed","time":{"start":1712491265304,"stop":1712491266820,"duration":1516}},{"uid":"db46fbfc20c106f3","reportUrl":"https://novasamatech.github.io/test-runner/5020//#testresult/db46fbfc20c106f3","status":"passed","time":{"start":1712476861954,"stop":1712476862983,"duration":1029}},{"uid":"701b55f7194d83f1","reportUrl":"https://novasamatech.github.io/test-runner/5019//#testresult/701b55f7194d83f1","status":"passed","time":{"start":1712462467523,"stop":1712462468657,"duration":1134}},{"uid":"94b63069704ac6bd","reportUrl":"https://novasamatech.github.io/test-runner/5018//#testresult/94b63069704ac6bd","status":"passed","time":{"start":1712448108035,"stop":1712448109758,"duration":1723}},{"uid":"182160de86e50691","reportUrl":"https://novasamatech.github.io/test-runner/5017//#testresult/182160de86e50691","status":"passed","time":{"start":1712433659653,"stop":1712433661110,"duration":1457}},{"uid":"511adc5174cade40","reportUrl":"https://novasamatech.github.io/test-runner/5016//#testresult/511adc5174cade40","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1712419280045,"stop":1712419280326,"duration":281}},{"uid":"12905233cbf3c128","reportUrl":"https://novasamatech.github.io/test-runner/5015//#testresult/12905233cbf3c128","status":"passed","time":{"start":1712404870131,"stop":1712404871112,"duration":981}}]},"tags":[]},"source":"81ec01d2fb484cce.json","parameterValues":["{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"]}