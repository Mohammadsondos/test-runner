{"uid":"e6b5fb8e41e05a7d","name":"test_chainId[Test for Composable Finance]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"772a904a7b84e5177692678e454acb91","time":{"start":1696651482647,"stop":1696651544249,"duration":61602},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f9cfa04b3a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9cfa3438e0>\n\n    def test_chainId(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2516: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2490: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:1160: in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:955: in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az620-992"},{"name":"thread","value":"2098-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9cfa3438e0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fda7b9af244f49b","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1696651405836,"stop":1696651467461,"duration":61625}},{"uid":"fac5475d2c5725af","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1696651328763,"stop":1696651390473,"duration":61710}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":259,"unknown":0,"total":264},"items":[{"uid":"7d7280686f1755e6","reportUrl":"https://novasamatech.github.io/test-runner/3903//#testresult/7d7280686f1755e6","status":"passed","time":{"start":1696636957153,"stop":1696636962556,"duration":5403}},{"uid":"2577767279d7de5c","reportUrl":"https://novasamatech.github.io/test-runner/3902//#testresult/2577767279d7de5c","status":"passed","time":{"start":1696622513170,"stop":1696622521305,"duration":8135}},{"uid":"b3902680ddf59566","reportUrl":"https://novasamatech.github.io/test-runner/3901//#testresult/b3902680ddf59566","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696608185870,"stop":1696608187900,"duration":2030}},{"uid":"80c83871e431a1ac","reportUrl":"https://novasamatech.github.io/test-runner/3900//#testresult/80c83871e431a1ac","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696593838302,"stop":1696593840171,"duration":1869}},{"uid":"a4697ae0b03f8e69","reportUrl":"https://novasamatech.github.io/test-runner/3899//#testresult/a4697ae0b03f8e69","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696579375251,"stop":1696579377017,"duration":1766}},{"uid":"354934f6ec96d3d6","reportUrl":"https://novasamatech.github.io/test-runner/3898//#testresult/354934f6ec96d3d6","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32029, 'message': 'Too Many Requests, Please apply an OnFinality API key or contact us to receive a higher rate limit'}","time":{"start":1696564952530,"stop":1696564954372,"duration":1842}},{"uid":"4f8c7960fc9970df","reportUrl":"https://novasamatech.github.io/test-runner/3897//#testresult/4f8c7960fc9970df","status":"passed","time":{"start":1696550558418,"stop":1696550563800,"duration":5382}},{"uid":"c1a281d6dcc6ffb2","reportUrl":"https://novasamatech.github.io/test-runner/3896//#testresult/c1a281d6dcc6ffb2","status":"passed","time":{"start":1696536110570,"stop":1696536116610,"duration":6040}},{"uid":"c058fcadfb23e88b","reportUrl":"https://novasamatech.github.io/test-runner/3895//#testresult/c058fcadfb23e88b","status":"passed","time":{"start":1696521718991,"stop":1696521724755,"duration":5764}},{"uid":"e5c37ed3eeba5c06","reportUrl":"https://novasamatech.github.io/test-runner/3894//#testresult/e5c37ed3eeba5c06","status":"passed","time":{"start":1696507320247,"stop":1696507326869,"duration":6622}},{"uid":"925410f367d1d360","reportUrl":"https://novasamatech.github.io/test-runner/3893//#testresult/925410f367d1d360","status":"passed","time":{"start":1696496662644,"stop":1696496668377,"duration":5733}},{"uid":"df4185238fbe214","reportUrl":"https://novasamatech.github.io/test-runner/3892//#testresult/df4185238fbe214","status":"passed","time":{"start":1696492952200,"stop":1696492958831,"duration":6631}},{"uid":"37fe6df564872efd","reportUrl":"https://novasamatech.github.io/test-runner/3891//#testresult/37fe6df564872efd","status":"passed","time":{"start":1696478522218,"stop":1696478530543,"duration":8325}},{"uid":"188f2b4b50dbebf3","reportUrl":"https://novasamatech.github.io/test-runner/3890//#testresult/188f2b4b50dbebf3","status":"passed","time":{"start":1696464177205,"stop":1696464184486,"duration":7281}},{"uid":"d61795f9fc7c3d0b","reportUrl":"https://novasamatech.github.io/test-runner/3889//#testresult/d61795f9fc7c3d0b","status":"passed","time":{"start":1696449745957,"stop":1696449753129,"duration":7172}},{"uid":"8a1d79c50269ecb0","reportUrl":"https://novasamatech.github.io/test-runner/3888//#testresult/8a1d79c50269ecb0","status":"passed","time":{"start":1696435321124,"stop":1696435327752,"duration":6628}},{"uid":"780b8401fd9811a1","reportUrl":"https://novasamatech.github.io/test-runner/3887//#testresult/780b8401fd9811a1","status":"passed","time":{"start":1696420921683,"stop":1696420930235,"duration":8552}},{"uid":"236fde72b66a9945","reportUrl":"https://novasamatech.github.io/test-runner/3886//#testresult/236fde72b66a9945","status":"passed","time":{"start":1696406547145,"stop":1696406553918,"duration":6773}},{"uid":"10c178ae0aabb630","reportUrl":"https://novasamatech.github.io/test-runner/3885//#testresult/10c178ae0aabb630","status":"passed","time":{"start":1696392120416,"stop":1696392126130,"duration":5714}},{"uid":"2d9a81234014360b","reportUrl":"https://novasamatech.github.io/test-runner/3884//#testresult/2d9a81234014360b","status":"passed","time":{"start":1696377768357,"stop":1696377774411,"duration":6054}}]},"tags":[]},"source":"e6b5fb8e41e05a7d.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9cfa3438e0>"]}