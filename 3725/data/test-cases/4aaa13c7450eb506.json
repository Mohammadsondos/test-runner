{"uid":"4aaa13c7450eb506","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1694102629148,"stop":1694102630188,"duration":1040},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb0d9946740>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb0d9c3b190>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb0d9946740>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb0d9c3b190>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"7c4cd01570381c09","name":"stdout","source":"7c4cd01570381c09.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az576-586"},{"name":"thread","value":"2041-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb0d9c3b190>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a1831db8342e954d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694102612829,"stop":1694102614130,"duration":1301}},{"uid":"cc37d29c3b65af4f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694102596582,"stop":1694102597778,"duration":1196}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":82,"unknown":0,"total":85},"items":[{"uid":"a74ee3f43124cdb6","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/a74ee3f43124cdb6","status":"passed","time":{"start":1694088167830,"stop":1694088171398,"duration":3568}},{"uid":"a8a6756ebed4228d","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/a8a6756ebed4228d","status":"passed","time":{"start":1694073760965,"stop":1694073767414,"duration":6449}},{"uid":"75529743b40f0346","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/75529743b40f0346","status":"passed","time":{"start":1694059398627,"stop":1694059404323,"duration":5696}},{"uid":"9593f559726f80ed","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/9593f559726f80ed","status":"passed","time":{"start":1694045033188,"stop":1694045038753,"duration":5565}},{"uid":"8f9c6f120d18f9f4","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/8f9c6f120d18f9f4","status":"passed","time":{"start":1694030586475,"stop":1694030590300,"duration":3825}},{"uid":"15a1c7767745c658","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/15a1c7767745c658","status":"passed","time":{"start":1694016225898,"stop":1694016230980,"duration":5082}},{"uid":"bcb2c2ce016b5074","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/bcb2c2ce016b5074","status":"passed","time":{"start":1694001821029,"stop":1694001824126,"duration":3097}},{"uid":"47e846a698e25e0b","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/47e846a698e25e0b","status":"passed","time":{"start":1693987381041,"stop":1693987384282,"duration":3241}},{"uid":"c4ce24995ce0ba78","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/c4ce24995ce0ba78","status":"passed","time":{"start":1693972960614,"stop":1693972964623,"duration":4009}},{"uid":"2a647ae6ac26d1c2","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/2a647ae6ac26d1c2","status":"passed","time":{"start":1693958621835,"stop":1693958626846,"duration":5011}},{"uid":"872235c8cea5008a","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/872235c8cea5008a","status":"passed","time":{"start":1693944160332,"stop":1693944164028,"duration":3696}},{"uid":"7b07c4deae0e2142","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/7b07c4deae0e2142","status":"passed","time":{"start":1693929774038,"stop":1693929778450,"duration":4412}},{"uid":"a3dd2d4d2c18775b","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/a3dd2d4d2c18775b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693915425978,"stop":1693915427329,"duration":1351}},{"uid":"7f30b2863bff8a6a","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/7f30b2863bff8a6a","status":"passed","time":{"start":1693872230725,"stop":1693872235359,"duration":4634}},{"uid":"a571c0ee36cc601f","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/a571c0ee36cc601f","status":"passed","time":{"start":1693857801601,"stop":1693857805547,"duration":3946}},{"uid":"8d94c3cc3e6dbc60","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/8d94c3cc3e6dbc60","status":"passed","time":{"start":1693843352313,"stop":1693843355689,"duration":3376}},{"uid":"8c94383f9f63e13b","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/8c94383f9f63e13b","status":"passed","time":{"start":1693828951723,"stop":1693828954689,"duration":2966}},{"uid":"d5e423241bc6cd4","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/d5e423241bc6cd4","status":"passed","time":{"start":1693814596999,"stop":1693814601545,"duration":4546}},{"uid":"911a780cdfc236f8","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/911a780cdfc236f8","status":"passed","time":{"start":1693800149564,"stop":1693800155182,"duration":5618}},{"uid":"3cc00e2f5530cab4","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/3cc00e2f5530cab4","status":"passed","time":{"start":1693785818754,"stop":1693785824476,"duration":5722}}]},"tags":[]},"source":"4aaa13c7450eb506.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb0d9c3b190>"]}