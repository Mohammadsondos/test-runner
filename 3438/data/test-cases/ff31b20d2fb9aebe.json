{"uid":"ff31b20d2fb9aebe","name":"test_can_create_connection[Test for Dora Factory (PAUSED), url: wss://kusama.dorafactory.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6fae2adb1d5f7addf05621ce5972b67f","time":{"start":1690085078056,"stop":1690085078825,"duration":769},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 23 Jul 2023 04:04:38 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; AWSALBTGCORS=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 23 Jul 2023 04:04:38 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; AWSALBTGCORS=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 23 Jul 2023 04:04:38 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; AWSALBTGCORS=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 23 Jul 2023 04:04:38 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; AWSALBTGCORS=/4j8LTiGNyL2Q0/Lnqdhwhhz6e/6kYkuIGECJpRaocPysrjg7LWUF8BZl6ZB1eOkV4iXnXEup9dMbkZUa3AVkZPF63qxFaEscqqTd3dWsXCzxSWX/cJx0t/+znaXcICY2G6xY/UCeiuNGi3so+gWHC3Rjg2q8fhSaiNRenH9eevgtSroRwo=; Expires=Sun, 30 Jul 2023 04:04:38 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"42220526409316e3","name":"stdout","source":"42220526409316e3.txt","type":"text/plain","size":2967}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az741-370"},{"name":"thread","value":"1934-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"93575ffd4eb415ab","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 23 Jul 2023 04:04:22 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=LbW+cF3IquplbTmagnaBbi5lEmQTUvWo2QrvseCDRffjDLfS7BfFf8zOuqckjgeFXviufRtus0Qz6xMUoRUFj7PRt9esyTq1EGNqF2UCdJp/MGQCtUYO1aAXVmXzRFgDEbvo07JmwV+O+RZKEX8w4UEUF7prMmuwmL6N2DiWwsWO2MjSxeE=; Expires=Sun, 30 Jul 2023 04:04:22 GMT; Path=/; AWSALBTGCORS=LbW+cF3IquplbTmagnaBbi5lEmQTUvWo2QrvseCDRffjDLfS7BfFf8zOuqckjgeFXviufRtus0Qz6xMUoRUFj7PRt9esyTq1EGNqF2UCdJp/MGQCtUYO1aAXVmXzRFgDEbvo07JmwV+O+RZKEX8w4UEUF7prMmuwmL6N2DiWwsWO2MjSxeE=; Expires=Sun, 30 Jul 2023 04:04:22 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1690085062201,"stop":1690085062968,"duration":767}},{"uid":"aa391d92be4ddf1f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 23 Jul 2023 04:04:06 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=i7se2g37hr2B+mzI223xajzNMokLSkpf2FcIjj1TOAtuxediDRYCuUafBa04x0eqRXXrvW+S+hGVDDlrrXCHLgSDJxc8av81RVYn9VxVDomnTZVm5xXpuqecROG1VoLz/Oamv6SxVUtX/bEysVZjHGrQuGlkQQIoDQDhVsS6DSdiZAu27Yc=; Expires=Sun, 30 Jul 2023 04:04:06 GMT; Path=/; AWSALBTGCORS=i7se2g37hr2B+mzI223xajzNMokLSkpf2FcIjj1TOAtuxediDRYCuUafBa04x0eqRXXrvW+S+hGVDDlrrXCHLgSDJxc8av81RVYn9VxVDomnTZVm5xXpuqecROG1VoLz/Oamv6SxVUtX/bEysVZjHGrQuGlkQQIoDQDhVsS6DSdiZAu27Yc=; Expires=Sun, 30 Jul 2023 04:04:06 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1690085046294,"stop":1690085047078,"duration":784}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":61,"unknown":0,"total":65},"items":[{"uid":"a5161869f1f2721d","reportUrl":"https://novasamatech.github.io/test-runner/3437//#testresult/a5161869f1f2721d","status":"passed","time":{"start":1690071327602,"stop":1690071328649,"duration":1047}},{"uid":"aab063b6adcac832","reportUrl":"https://novasamatech.github.io/test-runner/3436//#testresult/aab063b6adcac832","status":"passed","time":{"start":1690056244896,"stop":1690056246050,"duration":1154}},{"uid":"52e54017f1cf22c1","reportUrl":"https://novasamatech.github.io/test-runner/3435//#testresult/52e54017f1cf22c1","status":"passed","time":{"start":1690041829556,"stop":1690041830838,"duration":1282}},{"uid":"832b3e75d98388ad","reportUrl":"https://novasamatech.github.io/test-runner/3434//#testresult/832b3e75d98388ad","status":"passed","time":{"start":1690027466260,"stop":1690027467550,"duration":1290}},{"uid":"129a9df911bfe2a7","reportUrl":"https://novasamatech.github.io/test-runner/3433//#testresult/129a9df911bfe2a7","status":"passed","time":{"start":1690013068068,"stop":1690013069294,"duration":1226}},{"uid":"e189ac54daec2bc5","reportUrl":"https://novasamatech.github.io/test-runner/3432//#testresult/e189ac54daec2bc5","status":"passed","time":{"start":1689998633809,"stop":1689998635145,"duration":1336}},{"uid":"dab3f18bfa4cdbba","reportUrl":"https://novasamatech.github.io/test-runner/3431//#testresult/dab3f18bfa4cdbba","status":"passed","time":{"start":1689984835402,"stop":1689984836568,"duration":1166}},{"uid":"4d7ab6ce71aa7386","reportUrl":"https://novasamatech.github.io/test-runner/3430//#testresult/4d7ab6ce71aa7386","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 20:04:48 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=bdLhaVE5VoQRq+YrH35xb6Jd/SMdr25UJ3pEZHI55dHThhACE0fuwEmJxQgp8X9suqK2WZu0PGGeBMty/SHEL5TlK9HivLpfIbQqTEFZMYr4RY8anhxMj0w+HdrdZz2RMn+VjdwsEnA+8eblzDFD7SwLu0TSbgeem+zQU/ju7ltyYqdMz50=; Expires=Fri, 28 Jul 2023 20:04:48 GMT; Path=/; AWSALBTGCORS=bdLhaVE5VoQRq+YrH35xb6Jd/SMdr25UJ3pEZHI55dHThhACE0fuwEmJxQgp8X9suqK2WZu0PGGeBMty/SHEL5TlK9HivLpfIbQqTEFZMYr4RY8anhxMj0w+HdrdZz2RMn+VjdwsEnA+8eblzDFD7SwLu0TSbgeem+zQU/ju7ltyYqdMz50=; Expires=Fri, 28 Jul 2023 20:04:48 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1689969888100,"stop":1689969888963,"duration":863}},{"uid":"b6943f527643cafb","reportUrl":"https://novasamatech.github.io/test-runner/3429//#testresult/b6943f527643cafb","status":"passed","time":{"start":1689955472135,"stop":1689955473189,"duration":1054}},{"uid":"d1b914bcc092100e","reportUrl":"https://novasamatech.github.io/test-runner/3428//#testresult/d1b914bcc092100e","status":"passed","time":{"start":1689941128355,"stop":1689941129392,"duration":1037}},{"uid":"81b013485b827e8e","reportUrl":"https://novasamatech.github.io/test-runner/3427//#testresult/81b013485b827e8e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Fri, 21 Jul 2023 08:04:58 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; AWSALBTGCORS=TYMLwvsz1+nw56+LkHGEWxUjIhv/XEaifaVIcV2h/hdzpTkLE1jA+6sIc2emBZxKq4tNWfryd7ssilp30dCNQPBMS7RPXhNCeepnjdjBTo5Kh2GPjo+b/TXWj4IrKJEDWEbWlCijm5f6B3oZIXzn8u6z23wYBC/fZ3NijFlNb/DtitfShGE=; Expires=Fri, 28 Jul 2023 08:04:58 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1689926698068,"stop":1689926698877,"duration":809}},{"uid":"1460756ee5b659e4","reportUrl":"https://novasamatech.github.io/test-runner/3426//#testresult/1460756ee5b659e4","status":"passed","time":{"start":1689912275578,"stop":1689912276725,"duration":1147}},{"uid":"a230fb2ea53499ae","reportUrl":"https://novasamatech.github.io/test-runner/3425//#testresult/a230fb2ea53499ae","status":"passed","time":{"start":1689898467455,"stop":1689898468561,"duration":1106}},{"uid":"3a1bb3e184c4f9ad","reportUrl":"https://novasamatech.github.io/test-runner/3424//#testresult/3a1bb3e184c4f9ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 20 Jul 2023 20:04:47 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=IdnKJ+QUReZkhyvf+9oUdzd7XyWavGMvWs6KW4LwkEXAU2y1I9hoi2bbXagYnBMa//BsP8CQY2SHhSPvDJEaaEDTQYwppm9/BfP7vjk1k1Z3fmWtBBuwpkxKqDHoS4UbD6HM/aNu/ILdNrgJ4p349uF6DYPoYR1aa6YyU9Bd8UvFhsfNRmg=; Expires=Thu, 27 Jul 2023 20:04:47 GMT; Path=/; AWSALBTGCORS=IdnKJ+QUReZkhyvf+9oUdzd7XyWavGMvWs6KW4LwkEXAU2y1I9hoi2bbXagYnBMa//BsP8CQY2SHhSPvDJEaaEDTQYwppm9/BfP7vjk1k1Z3fmWtBBuwpkxKqDHoS4UbD6HM/aNu/ILdNrgJ4p349uF6DYPoYR1aa6YyU9Bd8UvFhsfNRmg=; Expires=Thu, 27 Jul 2023 20:04:47 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1689883486417,"stop":1689883487362,"duration":945}},{"uid":"77f82220242c82fe","reportUrl":"https://novasamatech.github.io/test-runner/3423//#testresult/77f82220242c82fe","status":"passed","time":{"start":1689869067238,"stop":1689869068290,"duration":1052}},{"uid":"fa5262a0c2c1ce58","reportUrl":"https://novasamatech.github.io/test-runner/3422//#testresult/fa5262a0c2c1ce58","status":"passed","time":{"start":1689854713081,"stop":1689854714198,"duration":1117}},{"uid":"83d60571905b38c0","reportUrl":"https://novasamatech.github.io/test-runner/3421//#testresult/83d60571905b38c0","status":"passed","time":{"start":1689840258475,"stop":1689840259854,"duration":1379}},{"uid":"d6b9d20d4583ecff","reportUrl":"https://novasamatech.github.io/test-runner/3420//#testresult/d6b9d20d4583ecff","status":"passed","time":{"start":1689825841469,"stop":1689825842721,"duration":1252}},{"uid":"1af344d9f2e36249","reportUrl":"https://novasamatech.github.io/test-runner/3419//#testresult/1af344d9f2e36249","status":"passed","time":{"start":1689812077826,"stop":1689812078822,"duration":996}},{"uid":"597a779e0b9a98c5","reportUrl":"https://novasamatech.github.io/test-runner/3418//#testresult/597a779e0b9a98c5","status":"passed","time":{"start":1689797054937,"stop":1689797056227,"duration":1290}}]},"tags":[]},"source":"ff31b20d2fb9aebe.json","parameterValues":["{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"]}