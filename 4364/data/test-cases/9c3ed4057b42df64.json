{"uid":"9c3ed4057b42df64","name":"test_has_new_assets[Test for Jur]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"c600f44b5c461cc5c9495a77b796505a","time":{"start":1703160484644,"stop":1703160484644,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_has_new_assets[Test for Jur]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1703160484644,"stop":1703160485998,"duration":1354},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_has_new_assets[Test for Jur]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"7be557d923a08428","name":"stdout","source":"7be557d923a08428.txt","type":"text/plain","size":2472}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az651-518"},{"name":"thread","value":"2148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f895db3ead0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ab8ffd4bce13a758","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703160468272,"stop":1703160468272,"duration":0}},{"uid":"c88e13e42a09daa3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703160451762,"stop":1703160451762,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":648,"unknown":0,"total":651},"items":[{"uid":"a0e3c6327847054a","reportUrl":"https://novasamatech.github.io/test-runner/4363//#testresult/a0e3c6327847054a","status":"passed","time":{"start":1703146065718,"stop":1703146067894,"duration":2176}},{"uid":"8004c688127c36a7","reportUrl":"https://novasamatech.github.io/test-runner/4362//#testresult/8004c688127c36a7","status":"passed","time":{"start":1703131414641,"stop":1703131415592,"duration":951}},{"uid":"36398ae43e42df7e","reportUrl":"https://novasamatech.github.io/test-runner/4361//#testresult/36398ae43e42df7e","status":"passed","time":{"start":1703117074964,"stop":1703117075868,"duration":904}},{"uid":"4db3291e94dec2c0","reportUrl":"https://novasamatech.github.io/test-runner/4360//#testresult/4db3291e94dec2c0","status":"passed","time":{"start":1703102670510,"stop":1703102672180,"duration":1670}},{"uid":"ed486f481c4b12f6","reportUrl":"https://novasamatech.github.io/test-runner/4359//#testresult/ed486f481c4b12f6","status":"passed","time":{"start":1703088192354,"stop":1703088192860,"duration":506}},{"uid":"35d280f4a3fbc84b","reportUrl":"https://novasamatech.github.io/test-runner/4358//#testresult/35d280f4a3fbc84b","status":"passed","time":{"start":1703073782229,"stop":1703073783292,"duration":1063}},{"uid":"a88a8422ad24cfad","reportUrl":"https://novasamatech.github.io/test-runner/4357//#testresult/a88a8422ad24cfad","status":"passed","time":{"start":1703059368164,"stop":1703059369170,"duration":1006}},{"uid":"793e0078efd59a34","reportUrl":"https://novasamatech.github.io/test-runner/4356//#testresult/793e0078efd59a34","status":"passed","time":{"start":1703044963632,"stop":1703044964330,"duration":698}},{"uid":"72e3bf97ea5ffcf4","reportUrl":"https://novasamatech.github.io/test-runner/4355//#testresult/72e3bf97ea5ffcf4","status":"passed","time":{"start":1703030623025,"stop":1703030623687,"duration":662}},{"uid":"e8c2b32cfddfa4e9","reportUrl":"https://novasamatech.github.io/test-runner/4354//#testresult/e8c2b32cfddfa4e9","status":"passed","time":{"start":1703016231076,"stop":1703016231823,"duration":747}},{"uid":"cf0441b0779c2e90","reportUrl":"https://novasamatech.github.io/test-runner/4353//#testresult/cf0441b0779c2e90","status":"passed","time":{"start":1703001776659,"stop":1703001777461,"duration":802}},{"uid":"4d5b1ad9c9a2988c","reportUrl":"https://novasamatech.github.io/test-runner/4352//#testresult/4d5b1ad9c9a2988c","status":"passed","time":{"start":1702987434829,"stop":1702987435787,"duration":958}},{"uid":"7fea2c28e74bac9a","reportUrl":"https://novasamatech.github.io/test-runner/4351//#testresult/7fea2c28e74bac9a","status":"passed","time":{"start":1702972978764,"stop":1702972979554,"duration":790}},{"uid":"11e69d9017a19800","reportUrl":"https://novasamatech.github.io/test-runner/4350//#testresult/11e69d9017a19800","status":"passed","time":{"start":1702958572751,"stop":1702958573560,"duration":809}},{"uid":"e0346c239d9b2b57","reportUrl":"https://novasamatech.github.io/test-runner/4349//#testresult/e0346c239d9b2b57","status":"passed","time":{"start":1702944216765,"stop":1702944217613,"duration":848}},{"uid":"62025c2ff09f9bdd","reportUrl":"https://novasamatech.github.io/test-runner/4348//#testresult/62025c2ff09f9bdd","status":"passed","time":{"start":1702929807109,"stop":1702929807707,"duration":598}},{"uid":"76654cbeb199be45","reportUrl":"https://novasamatech.github.io/test-runner/4347//#testresult/76654cbeb199be45","status":"passed","time":{"start":1702915390280,"stop":1702915391099,"duration":819}},{"uid":"81509bac89f36ae7","reportUrl":"https://novasamatech.github.io/test-runner/4346//#testresult/81509bac89f36ae7","status":"passed","time":{"start":1702901010757,"stop":1702901011499,"duration":742}},{"uid":"e719708766a34413","reportUrl":"https://novasamatech.github.io/test-runner/4345//#testresult/e719708766a34413","status":"passed","time":{"start":1702892916300,"stop":1702892917365,"duration":1065}},{"uid":"803b9cc6b9352fc4","reportUrl":"https://novasamatech.github.io/test-runner/4327//#testresult/803b9cc6b9352fc4","status":"passed","time":{"start":1702641782867,"stop":1702641783781,"duration":914}}]},"tags":[]},"source":"9c3ed4057b42df64.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f895db3ead0>"]}