{"uid":"1953fbaa2356127d","name":"test_can_create_connection[Test for GM, url: wss://ws-node-gm.terrabiodao.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3278cac67526220f4f1c0a171e1bb018","time":{"start":1672819503248,"stop":1672819503546,"duration":298},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"70ea72433b50e4e6","name":"stdout","source":"70ea72433b50e4e6.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az572-831"},{"name":"thread","value":"1723-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d6ab6e93e5fc1338","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672819492843,"stop":1672819493138,"duration":295}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":478,"skipped":0,"passed":0,"unknown":0,"total":478},"items":[{"uid":"f62e5310a8032b2c","reportUrl":"https://nova-wallet.github.io/test-runner/2209//#testresult/f62e5310a8032b2c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672805215684,"stop":1672805216163,"duration":479}},{"uid":"16de4d244cde3da3","reportUrl":"https://nova-wallet.github.io/test-runner/2208//#testresult/16de4d244cde3da3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672791233994,"stop":1672791234513,"duration":519}},{"uid":"2fc00fec04c7d4cc","reportUrl":"https://nova-wallet.github.io/test-runner/2207//#testresult/2fc00fec04c7d4cc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672776254937,"stop":1672776255249,"duration":312}},{"uid":"479dac27ad49e05b","reportUrl":"https://nova-wallet.github.io/test-runner/2206//#testresult/479dac27ad49e05b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672761864677,"stop":1672761865184,"duration":507}},{"uid":"60a5b0665f437fba","reportUrl":"https://nova-wallet.github.io/test-runner/2205//#testresult/60a5b0665f437fba","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672747538477,"stop":1672747538980,"duration":503}},{"uid":"e6c0964c2dd6e875","reportUrl":"https://nova-wallet.github.io/test-runner/2204//#testresult/e6c0964c2dd6e875","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672733085120,"stop":1672733085524,"duration":404}},{"uid":"a0ec6b03536501c8","reportUrl":"https://nova-wallet.github.io/test-runner/2203//#testresult/a0ec6b03536501c8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672718688336,"stop":1672718688831,"duration":495}},{"uid":"fc834a3c1b17dec3","reportUrl":"https://nova-wallet.github.io/test-runner/2202//#testresult/fc834a3c1b17dec3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672704810560,"stop":1672704811213,"duration":653}},{"uid":"f6e217859da5e821","reportUrl":"https://nova-wallet.github.io/test-runner/2201//#testresult/f6e217859da5e821","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672689867843,"stop":1672689868277,"duration":434}},{"uid":"46601101d40397f6","reportUrl":"https://nova-wallet.github.io/test-runner/2200//#testresult/46601101d40397f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672675519044,"stop":1672675519561,"duration":517}},{"uid":"446a8a3c84528a4d","reportUrl":"https://nova-wallet.github.io/test-runner/2199//#testresult/446a8a3c84528a4d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672661166843,"stop":1672661167342,"duration":499}},{"uid":"1a00e1587f17e793","reportUrl":"https://nova-wallet.github.io/test-runner/2198//#testresult/1a00e1587f17e793","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672646716474,"stop":1672646716962,"duration":488}},{"uid":"469649109c5b4fb","reportUrl":"https://nova-wallet.github.io/test-runner/2197//#testresult/469649109c5b4fb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672632311124,"stop":1672632311561,"duration":437}},{"uid":"b351c59242ac8631","reportUrl":"https://nova-wallet.github.io/test-runner/2196//#testresult/b351c59242ac8631","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672618448606,"stop":1672618449100,"duration":494}},{"uid":"58401b3c616478d5","reportUrl":"https://nova-wallet.github.io/test-runner/2195//#testresult/58401b3c616478d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672603460331,"stop":1672603460641,"duration":310}},{"uid":"fad2d0b68886a282","reportUrl":"https://nova-wallet.github.io/test-runner/2194//#testresult/fad2d0b68886a282","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672589088221,"stop":1672589088870,"duration":649}},{"uid":"acc88fee0e01c9ff","reportUrl":"https://nova-wallet.github.io/test-runner/2193//#testresult/acc88fee0e01c9ff","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672574826747,"stop":1672574827080,"duration":333}},{"uid":"32239559a6ce9c0e","reportUrl":"https://nova-wallet.github.io/test-runner/2192//#testresult/32239559a6ce9c0e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672560369546,"stop":1672560369988,"duration":442}},{"uid":"41485000ae495f15","reportUrl":"https://nova-wallet.github.io/test-runner/2191//#testresult/41485000ae495f15","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672545952926,"stop":1672545953578,"duration":652}},{"uid":"1e76d1d702c8e949","reportUrl":"https://nova-wallet.github.io/test-runner/2190//#testresult/1e76d1d702c8e949","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672532176708,"stop":1672532177025,"duration":317}}]},"tags":[]},"source":"1953fbaa2356127d.json","parameterValues":["{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"]}