{"uid":"442f26c3d3ca8696","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1670702707420,"stop":1670702718321,"duration":10901},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4b1982498d549494","name":"stdout","source":"4b1982498d549494.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az573-334"},{"name":"thread","value":"1651-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bb56f496f7cb7eb4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670702684709,"stop":1670702697334,"duration":12625}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":123,"skipped":0,"passed":207,"unknown":0,"total":330},"items":[{"uid":"8ab086792573f1c1","reportUrl":"https://nova-wallet.github.io/test-runner/2060//#testresult/8ab086792573f1c1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670688343630,"stop":1670688356521,"duration":12891}},{"uid":"3736e50c62cf0cf0","reportUrl":"https://nova-wallet.github.io/test-runner/2059//#testresult/3736e50c62cf0cf0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670674000892,"stop":1670674013522,"duration":12630}},{"uid":"d2f209ae4096e8f1","reportUrl":"https://nova-wallet.github.io/test-runner/2058//#testresult/d2f209ae4096e8f1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670659603786,"stop":1670659616552,"duration":12766}},{"uid":"689de49cfe272328","reportUrl":"https://nova-wallet.github.io/test-runner/2057//#testresult/689de49cfe272328","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670645111924,"stop":1670645124715,"duration":12791}},{"uid":"92daf7eef9e5325e","reportUrl":"https://nova-wallet.github.io/test-runner/2056//#testresult/92daf7eef9e5325e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670631261011,"stop":1670631271218,"duration":10207}},{"uid":"9ffa26d686b765d9","reportUrl":"https://nova-wallet.github.io/test-runner/2054//#testresult/9ffa26d686b765d9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670601924909,"stop":1670601937701,"duration":12792}},{"uid":"18994f1e10c10b5","reportUrl":"https://nova-wallet.github.io/test-runner/2053//#testresult/18994f1e10c10b5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670587580098,"stop":1670587592796,"duration":12698}},{"uid":"5b4dd407ce79bdcd","reportUrl":"https://nova-wallet.github.io/test-runner/2052//#testresult/5b4dd407ce79bdcd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670573197868,"stop":1670573210617,"duration":12749}},{"uid":"9ef79effc823371f","reportUrl":"https://nova-wallet.github.io/test-runner/2051//#testresult/9ef79effc823371f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670558721877,"stop":1670558734654,"duration":12777}},{"uid":"9b54c527e6fb5556","reportUrl":"https://nova-wallet.github.io/test-runner/2050//#testresult/9b54c527e6fb5556","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670544957881,"stop":1670544970510,"duration":12629}},{"uid":"d3c8560098ced17a","reportUrl":"https://nova-wallet.github.io/test-runner/2049//#testresult/d3c8560098ced17a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670529942163,"stop":1670529953570,"duration":11407}},{"uid":"9602dcc016281808","reportUrl":"https://nova-wallet.github.io/test-runner/2048//#testresult/9602dcc016281808","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670515525083,"stop":1670515536520,"duration":11437}},{"uid":"6f1ae16d5aabfa9d","reportUrl":"https://nova-wallet.github.io/test-runner/2047//#testresult/6f1ae16d5aabfa9d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670501193983,"stop":1670501206602,"duration":12619}},{"uid":"c569b5f849ae1d8a","reportUrl":"https://nova-wallet.github.io/test-runner/2046//#testresult/c569b5f849ae1d8a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670486732032,"stop":1670486744708,"duration":12676}},{"uid":"f2217d3b384a3255","reportUrl":"https://nova-wallet.github.io/test-runner/2045//#testresult/f2217d3b384a3255","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670472341393,"stop":1670472354069,"duration":12676}},{"uid":"51b35623b2f8ed92","reportUrl":"https://nova-wallet.github.io/test-runner/2044//#testresult/51b35623b2f8ed92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670458482723,"stop":1670458495469,"duration":12746}},{"uid":"c6df5f474db0f3e7","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/c6df5f474db0f3e7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670443517723,"stop":1670443530463,"duration":12740}},{"uid":"251be7dd39aa9f8f","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/251be7dd39aa9f8f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670429146418,"stop":1670429159265,"duration":12847}},{"uid":"bcb724d474a1f2b0","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/bcb724d474a1f2b0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670414801586,"stop":1670414814432,"duration":12846}},{"uid":"537f0e1d44c188bd","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/537f0e1d44c188bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670400356223,"stop":1670400368848,"duration":12625}}]},"tags":[]},"source":"442f26c3d3ca8696.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}