{"uid":"f5abd97dc0e1d8a6","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1694376159484,"stop":1694376160568,"duration":1084},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa5b019c760>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa5b01a8640>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa5b019c760>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa5b01a8640>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"18391be1d6319aec","name":"stdout","source":"18391be1d6319aec.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az454-0"},{"name":"thread","value":"2060-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa5b01a8640>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"59655f33fda606ca","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694376143251,"stop":1694376144463,"duration":1212}},{"uid":"6f07eb5fc7e4c706","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694376127059,"stop":1694376128221,"duration":1162}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":96,"unknown":0,"total":104},"items":[{"uid":"61a03591eff9f7bd","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/61a03591eff9f7bd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694361778915,"stop":1694361780210,"duration":1295}},{"uid":"2cf1ca23e6b386c5","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/2cf1ca23e6b386c5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694347363026,"stop":1694347364192,"duration":1166}},{"uid":"571e65093898cbca","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/571e65093898cbca","status":"passed","time":{"start":1694332962606,"stop":1694332969014,"duration":6408}},{"uid":"56cfddd2bc1ef33d","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/56cfddd2bc1ef33d","status":"passed","time":{"start":1694318559374,"stop":1694318568064,"duration":8690}},{"uid":"5003c936bc4730e4","reportUrl":"https://novasamatech.github.io/test-runner/3739//#testresult/5003c936bc4730e4","status":"passed","time":{"start":1694304176886,"stop":1694304180606,"duration":3720}},{"uid":"f765963023f0665f","reportUrl":"https://novasamatech.github.io/test-runner/3738//#testresult/f765963023f0665f","status":"passed","time":{"start":1694289736398,"stop":1694289742670,"duration":6272}},{"uid":"50dcdb8a3acfc94f","reportUrl":"https://novasamatech.github.io/test-runner/3737//#testresult/50dcdb8a3acfc94f","status":"passed","time":{"start":1694275345002,"stop":1694275349596,"duration":4594}},{"uid":"6bb5e8b6ad28b49f","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/6bb5e8b6ad28b49f","status":"passed","time":{"start":1694260940202,"stop":1694260944261,"duration":4059}},{"uid":"87ea29c09f716125","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/87ea29c09f716125","status":"passed","time":{"start":1694246531511,"stop":1694246535458,"duration":3947}},{"uid":"b1afad4f477b3c64","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/b1afad4f477b3c64","status":"passed","time":{"start":1694232120540,"stop":1694232125523,"duration":4983}},{"uid":"956d21abc3783567","reportUrl":"https://novasamatech.github.io/test-runner/3733//#testresult/956d21abc3783567","status":"passed","time":{"start":1694217798587,"stop":1694217803641,"duration":5054}},{"uid":"1f7f5627ff09a8d1","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/1f7f5627ff09a8d1","status":"passed","time":{"start":1694203332976,"stop":1694203336904,"duration":3928}},{"uid":"42911a2c242f948a","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/42911a2c242f948a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694188976580,"stop":1694188978005,"duration":1425}},{"uid":"139ac173e05036f4","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/139ac173e05036f4","status":"passed","time":{"start":1694174565835,"stop":1694174571515,"duration":5680}},{"uid":"c1af669d6fe8bf0a","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/c1af669d6fe8bf0a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694160160061,"stop":1694160160952,"duration":891}},{"uid":"e804d50a92d1405d","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/e804d50a92d1405d","status":"passed","time":{"start":1694145728320,"stop":1694145731782,"duration":3462}},{"uid":"f2ec3e919a891ab0","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/f2ec3e919a891ab0","status":"passed","time":{"start":1694131384684,"stop":1694131390276,"duration":5592}},{"uid":"7b7593f0681f3efd","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/7b7593f0681f3efd","status":"passed","time":{"start":1694116948694,"stop":1694116955546,"duration":6852}},{"uid":"ca6b1dd8f648f738","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/ca6b1dd8f648f738","status":"passed","time":{"start":1694102559650,"stop":1694102565969,"duration":6319}},{"uid":"1c4adb6b903fe803","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/1c4adb6b903fe803","status":"passed","time":{"start":1694088123551,"stop":1694088127720,"duration":4169}}]},"tags":[]},"source":"f5abd97dc0e1d8a6.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa5b01a8640>"]}