{"uid":"105307b061beca3d","name":"test_can_create_connection[Test for Interlay, url: wss://interlay.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"61443488771014427266469478d39a64","time":{"start":1680768322663,"stop":1680768683365,"duration":360702},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","statusTrace":"data = {'name': 'Interlay', 'url': 'wss://interlay.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out","statusTrace":"data = {'name': 'Interlay', 'url': 'wss://interlay.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"7859cb21d5e13a1b","name":"stdout","source":"7859cb21d5e13a1b.txt","type":"text/plain","size":248}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az364-820"},{"name":"thread","value":"1770-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://interlay.api.onfinality.io/public-ws', 'name': 'Interlay'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f79255228e88dc1e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1680768267692,"stop":1680768312504,"duration":44812}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":69,"skipped":0,"passed":881,"unknown":0,"total":950},"items":[{"uid":"e6b613edc401cb64","reportUrl":"https://nova-wallet.github.io/test-runner/2771//#testresult/e6b613edc401cb64","status":"passed","time":{"start":1680753869641,"stop":1680753870619,"duration":978}},{"uid":"7607b00c04f09b02","reportUrl":"https://nova-wallet.github.io/test-runner/2770//#testresult/7607b00c04f09b02","status":"passed","time":{"start":1680739961550,"stop":1680739962384,"duration":834}},{"uid":"1a7e0965cf117165","reportUrl":"https://nova-wallet.github.io/test-runner/2769//#testresult/1a7e0965cf117165","status":"passed","time":{"start":1680725070949,"stop":1680725071911,"duration":962}},{"uid":"4da62f0ccf99ae08","reportUrl":"https://nova-wallet.github.io/test-runner/2768//#testresult/4da62f0ccf99ae08","status":"passed","time":{"start":1680710673890,"stop":1680710674641,"duration":751}},{"uid":"6295b4ab01577f5b","reportUrl":"https://nova-wallet.github.io/test-runner/2766//#testresult/6295b4ab01577f5b","status":"passed","time":{"start":1680681896642,"stop":1680681897579,"duration":937}},{"uid":"634e9bb1a3c32303","reportUrl":"https://nova-wallet.github.io/test-runner/2765//#testresult/634e9bb1a3c32303","status":"passed","time":{"start":1680667472281,"stop":1680667473015,"duration":734}},{"uid":"cc2ecfe102b7a4cf","reportUrl":"https://nova-wallet.github.io/test-runner/2764//#testresult/cc2ecfe102b7a4cf","status":"passed","time":{"start":1680653525201,"stop":1680653525932,"duration":731}},{"uid":"159e011fa3636291","reportUrl":"https://nova-wallet.github.io/test-runner/2763//#testresult/159e011fa3636291","status":"passed","time":{"start":1680638663307,"stop":1680638664138,"duration":831}},{"uid":"f145e259aedeaff3","reportUrl":"https://nova-wallet.github.io/test-runner/2762//#testresult/f145e259aedeaff3","status":"passed","time":{"start":1680624275947,"stop":1680624276802,"duration":855}},{"uid":"5976738f56ab6fe6","reportUrl":"https://nova-wallet.github.io/test-runner/2761//#testresult/5976738f56ab6fe6","status":"passed","time":{"start":1680609914359,"stop":1680609915266,"duration":907}},{"uid":"44105d057b5f3a45","reportUrl":"https://nova-wallet.github.io/test-runner/2759//#testresult/44105d057b5f3a45","status":"passed","time":{"start":1680581072732,"stop":1680581073466,"duration":734}},{"uid":"9066f6cbb47c0a01","reportUrl":"https://nova-wallet.github.io/test-runner/2758//#testresult/9066f6cbb47c0a01","status":"passed","time":{"start":1680567205763,"stop":1680567206726,"duration":963}},{"uid":"7d465315a44b95f","reportUrl":"https://nova-wallet.github.io/test-runner/2757//#testresult/7d465315a44b95f","status":"passed","time":{"start":1680552268169,"stop":1680552269049,"duration":880}},{"uid":"ee7fa6a320458fbf","reportUrl":"https://nova-wallet.github.io/test-runner/2756//#testresult/ee7fa6a320458fbf","status":"passed","time":{"start":1680537863538,"stop":1680537864461,"duration":923}},{"uid":"c99e833a3838f5a4","reportUrl":"https://nova-wallet.github.io/test-runner/2755//#testresult/c99e833a3838f5a4","status":"passed","time":{"start":1680523524858,"stop":1680523525640,"duration":782}},{"uid":"b1cb59470b6484c","reportUrl":"https://nova-wallet.github.io/test-runner/2754//#testresult/b1cb59470b6484c","status":"passed","time":{"start":1680509066924,"stop":1680509067885,"duration":961}},{"uid":"b0ad121991f22681","reportUrl":"https://nova-wallet.github.io/test-runner/2753//#testresult/b0ad121991f22681","status":"passed","time":{"start":1680494938344,"stop":1680494939081,"duration":737}},{"uid":"ec53ae1afde7f14b","reportUrl":"https://nova-wallet.github.io/test-runner/2752//#testresult/ec53ae1afde7f14b","status":"passed","time":{"start":1680481061117,"stop":1680481061986,"duration":869}},{"uid":"49db85dade796985","reportUrl":"https://nova-wallet.github.io/test-runner/2751//#testresult/49db85dade796985","status":"passed","time":{"start":1680465833305,"stop":1680465834267,"duration":962}},{"uid":"e2d7f272b21ad99c","reportUrl":"https://nova-wallet.github.io/test-runner/2750//#testresult/e2d7f272b21ad99c","status":"passed","time":{"start":1680451461777,"stop":1680451462542,"duration":765}}]},"tags":[]},"source":"105307b061beca3d.json","parameterValues":["{'url': 'wss://interlay.api.onfinality.io/public-ws', 'name': 'Interlay'}"]}