{"uid":"4c848bdb20065532","name":"test_can_create_connection[Test for Kintsugi, url: wss://kintsugi-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"764ca318c5eada7b509393e0fd98a29a","time":{"start":1671149761587,"stop":1671149772985,"duration":11398},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Kintsugi', 'url': 'wss://kintsugi-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Kintsugi', 'url': 'wss://kintsugi-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e576e822e04290fa","name":"stdout","source":"e576e822e04290fa.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az563-475"},{"name":"thread","value":"1714-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kintsugi-rpc.dwellir.com', 'name': 'Kintsugi'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c4843ad52aed13de","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671149741610,"stop":1671149751481,"duration":9871}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":153,"skipped":0,"passed":208,"unknown":0,"total":361},"items":[{"uid":"69997ef1ddbddd06","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/69997ef1ddbddd06","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671134795618,"stop":1671134807016,"duration":11398}},{"uid":"1d253a54e47da27d","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/1d253a54e47da27d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671120418436,"stop":1671120431146,"duration":12710}},{"uid":"9df0e20afb4d2d17","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/9df0e20afb4d2d17","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671106082219,"stop":1671106093625,"duration":11406}},{"uid":"fb63824729f241f6","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/fb63824729f241f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671091638985,"stop":1671091650374,"duration":11389}},{"uid":"b750820e02d9776","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/b750820e02d9776","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671077223610,"stop":1671077236430,"duration":12820}},{"uid":"c08d6f24405e6c3b","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/c08d6f24405e6c3b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671063387290,"stop":1671063400011,"duration":12721}},{"uid":"ef72e20daafe88f7","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/ef72e20daafe88f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671048408916,"stop":1671048420277,"duration":11361}},{"uid":"7cda7ca4b5e1125b","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/7cda7ca4b5e1125b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671034020879,"stop":1671034032293,"duration":11414}},{"uid":"abd901baa2afd39","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/abd901baa2afd39","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671019663569,"stop":1671019674971,"duration":11402}},{"uid":"576732945c6a0622","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/576732945c6a0622","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671005238998,"stop":1671005250439,"duration":11441}},{"uid":"c67ffdd2c6b9bf88","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/c67ffdd2c6b9bf88","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670990826491,"stop":1670990837882,"duration":11391}},{"uid":"d13d04eb4a5cef21","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/d13d04eb4a5cef21","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670977048809,"stop":1670977060535,"duration":11726}},{"uid":"5fc14c2baae7e7db","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/5fc14c2baae7e7db","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670962031225,"stop":1670962042725,"duration":11500}},{"uid":"fe50353e9d6c4efc","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/fe50353e9d6c4efc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670947637562,"stop":1670947648985,"duration":11423}},{"uid":"2a37da58dea55385","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/2a37da58dea55385","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670933281744,"stop":1670933293164,"duration":11420}},{"uid":"de9976c3bdadac6b","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/de9976c3bdadac6b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670918845958,"stop":1670918858187,"duration":12229}},{"uid":"e28e7edde62cce50","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/e28e7edde62cce50","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670904297748,"stop":1670904309185,"duration":11437}},{"uid":"23dc8531151920cc","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/23dc8531151920cc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670890478065,"stop":1670890489490,"duration":11425}},{"uid":"250e98d299359e9f","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/250e98d299359e9f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670875465597,"stop":1670875477017,"duration":11420}},{"uid":"93c7ddbff36197c6","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/93c7ddbff36197c6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670861095742,"stop":1670861107163,"duration":11421}}]},"tags":[]},"source":"4c848bdb20065532.json","parameterValues":["{'url': 'wss://kintsugi-rpc.dwellir.com', 'name': 'Kintsugi'}"]}