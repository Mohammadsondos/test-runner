{"uid":"ddb79b3989455351","name":"test_can_create_connection[Test for Encointer, url: wss://encointer.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"8737cc376b759fe084df17567c102feb","time":{"start":1671149680929,"stop":1671149741040,"duration":60111},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Encointer', 'url': 'wss://encointer.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Encointer', 'url': 'wss://encointer.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"ef85fb60ab59f874","name":"stdout","source":"ef85fb60ab59f874.txt","type":"text/plain","size":260}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az563-475"},{"name":"thread","value":"1714-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://encointer.api.onfinality.io/public-ws', 'name': 'Encointer'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d25ca65da7a3b388","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671149611162,"stop":1671149670812,"duration":59650}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":71,"skipped":0,"passed":290,"unknown":0,"total":361},"items":[{"uid":"9750ba3817e92def","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/9750ba3817e92def","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671134714890,"stop":1671134774796,"duration":59906}},{"uid":"5009293d94fd6501","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/5009293d94fd6501","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671120334879,"stop":1671120394795,"duration":59916}},{"uid":"cce561707101b62c","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/cce561707101b62c","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671106002166,"stop":1671106061812,"duration":59646}},{"uid":"8d216e6c09eae2d0","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/8d216e6c09eae2d0","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671091558123,"stop":1671091617782,"duration":59659}},{"uid":"5164acf48b6d0a10","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/5164acf48b6d0a10","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671077139117,"stop":1671077199030,"duration":59913}},{"uid":"2acc2a34d42fc1a4","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/2acc2a34d42fc1a4","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671063303119,"stop":1671063362797,"duration":59678}},{"uid":"4d5e0d83fb1fa655","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/4d5e0d83fb1fa655","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671048326904,"stop":1671048386776,"duration":59872}},{"uid":"45844efbfb2d7f8c","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/45844efbfb2d7f8c","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671033938879,"stop":1671033998795,"duration":59916}},{"uid":"2256aa877e726769","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/2256aa877e726769","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671019579929,"stop":1671019640043,"duration":60114}},{"uid":"1b779c6b3553cd56","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/1b779c6b3553cd56","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1671005156910,"stop":1671005217018,"duration":60108}},{"uid":"9df8a560402f4b44","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/9df8a560402f4b44","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670990742946,"stop":1670990802782,"duration":59836}},{"uid":"9565517d3521fb90","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/9565517d3521fb90","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670976965151,"stop":1670977024810,"duration":59659}},{"uid":"3a3547cfc7b383df","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/3a3547cfc7b383df","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670961948123,"stop":1670962007791,"duration":59668}},{"uid":"455447878af4d3a5","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/455447878af4d3a5","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670947555899,"stop":1670947615810,"duration":59911}},{"uid":"da2dff79375ed9ea","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/da2dff79375ed9ea","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670933197901,"stop":1670933257790,"duration":59889}},{"uid":"a02e66a885f3e031","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/a02e66a885f3e031","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1670918761802,"stop":1670918821677,"duration":59875}},{"uid":"ce056ff8f5fbbdfb","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/ce056ff8f5fbbdfb","status":"passed","time":{"start":1670904274250,"stop":1670904274932,"duration":682}},{"uid":"947308ed12306a2b","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/947308ed12306a2b","status":"passed","time":{"start":1670890455468,"stop":1670890456084,"duration":616}},{"uid":"83528b8f3fae1099","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/83528b8f3fae1099","status":"passed","time":{"start":1670875443372,"stop":1670875444038,"duration":666}},{"uid":"be7323841abb1917","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/be7323841abb1917","status":"passed","time":{"start":1670861070067,"stop":1670861070580,"duration":513}}]},"tags":[]},"source":"ddb79b3989455351.json","parameterValues":["{'url': 'wss://encointer.api.onfinality.io/public-ws', 'name': 'Encointer'}"]}