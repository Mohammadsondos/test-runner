{"uid":"cd7406070927670f","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1686686738521,"stop":1686686739188,"duration":667},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f655d733ee0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f655d730880>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f655d733ee0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f655d730880>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"70b743390105165f","name":"stdout","source":"70b743390105165f.txt","type":"text/plain","size":1353}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az616-168"},{"name":"thread","value":"1931-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f655d730880>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"aeb35384e213b800","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686686722898,"stop":1686686723490,"duration":592}},{"uid":"8e5a56ac5aa75978","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686686706576,"stop":1686686707843,"duration":1267}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":239,"unknown":0,"total":242},"items":[{"uid":"4105928bb06c7412","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/4105928bb06c7412","status":"passed","time":{"start":1686672328411,"stop":1686672333023,"duration":4612}},{"uid":"b3c7a91a33bec071","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/b3c7a91a33bec071","status":"passed","time":{"start":1686657943766,"stop":1686657949049,"duration":5283}},{"uid":"e9c3c926d05e36ac","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/e9c3c926d05e36ac","status":"passed","time":{"start":1686643517450,"stop":1686643525554,"duration":8104}},{"uid":"18729a08d20d508a","reportUrl":"https://novasamatech.github.io/test-runner/3198//#testresult/18729a08d20d508a","status":"passed","time":{"start":1686629101042,"stop":1686629107981,"duration":6939}},{"uid":"8ae26528dd68c06c","reportUrl":"https://novasamatech.github.io/test-runner/3197//#testresult/8ae26528dd68c06c","status":"passed","time":{"start":1686615299015,"stop":1686615307514,"duration":8499}},{"uid":"b26e14ab836e712d","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/b26e14ab836e712d","status":"passed","time":{"start":1686600271309,"stop":1686600278708,"duration":7399}},{"uid":"dc30715aae23fe0a","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/dc30715aae23fe0a","status":"passed","time":{"start":1686585879273,"stop":1686585884816,"duration":5543}},{"uid":"647e1409ec50fb42","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/647e1409ec50fb42","status":"passed","time":{"start":1686571555428,"stop":1686571560589,"duration":5161}},{"uid":"ffa66a9abfa32570","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/ffa66a9abfa32570","status":"passed","time":{"start":1686557098702,"stop":1686557105298,"duration":6596}},{"uid":"5f7c2e0185af0623","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/5f7c2e0185af0623","status":"passed","time":{"start":1686542700512,"stop":1686542709862,"duration":9350}},{"uid":"27bb95a745b3ecac","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/27bb95a745b3ecac","status":"passed","time":{"start":1686528945583,"stop":1686528955701,"duration":10118}},{"uid":"4c5df8fd3fbd6616","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/4c5df8fd3fbd6616","status":"passed","time":{"start":1686513862506,"stop":1686513867188,"duration":4682}},{"uid":"aa482e09b81d3f31","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/aa482e09b81d3f31","status":"passed","time":{"start":1686499507488,"stop":1686499512489,"duration":5001}},{"uid":"221b7d1a89ce8dc9","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/221b7d1a89ce8dc9","status":"passed","time":{"start":1686485125720,"stop":1686485130348,"duration":4628}},{"uid":"fafdf9db4ac8b9fe","reportUrl":"https://novasamatech.github.io/test-runner/3187//#testresult/fafdf9db4ac8b9fe","status":"passed","time":{"start":1686470687811,"stop":1686470695322,"duration":7511}},{"uid":"e3c4acf6a2f2acd4","reportUrl":"https://novasamatech.github.io/test-runner/3186//#testresult/e3c4acf6a2f2acd4","status":"passed","time":{"start":1686456270800,"stop":1686456275824,"duration":5024}},{"uid":"2062c129ccfe76c0","reportUrl":"https://novasamatech.github.io/test-runner/3185//#testresult/2062c129ccfe76c0","status":"passed","time":{"start":1686442549917,"stop":1686442555479,"duration":5562}},{"uid":"26c45b1296dffd12","reportUrl":"https://novasamatech.github.io/test-runner/3184//#testresult/26c45b1296dffd12","status":"passed","time":{"start":1686427506562,"stop":1686427512470,"duration":5908}},{"uid":"13c58afeb68f19f6","reportUrl":"https://novasamatech.github.io/test-runner/3183//#testresult/13c58afeb68f19f6","status":"passed","time":{"start":1686413096189,"stop":1686413102288,"duration":6099}},{"uid":"b783586f1c78df60","reportUrl":"https://novasamatech.github.io/test-runner/3182//#testresult/b783586f1c78df60","status":"passed","time":{"start":1686398750671,"stop":1686398753617,"duration":2946}}]},"tags":[]},"source":"cd7406070927670f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f655d730880>"]}