{"uid":"f0acaa3840312a6a","name":"test_can_create_connection[Test for Kusama Asset Hub, url: wss://statemine.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a2ebf3ab717f78e26d97ae46b142c841","time":{"start":1695960764123,"stop":1695960944846,"duration":180723},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Kusama Asset Hub', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Kusama Asset Hub', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"2c30c59893718b43","name":"stdout","source":"2c30c59893718b43.txt","type":"text/plain","size":941}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az361-616"},{"name":"thread","value":"2072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Kusama Asset Hub'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5cedcd680aa7fcd7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Fri, 29 Sep 2023 04:12:28 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '56096', 'x-kong-proxy-latency': '240000', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695960452252,"stop":1695960749043,"duration":296791}},{"uid":"2215cc858e061e50","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 29 Sep 2023 04:07:16 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300002', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695960076381,"stop":1695960437090,"duration":360709}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":17,"skipped":0,"passed":198,"unknown":0,"total":215},"items":[{"uid":"1a6288546d897786","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/1a6288546d897786","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695945975389,"stop":1695946215913,"duration":240524}},{"uid":"df051881b409ce58","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/df051881b409ce58","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695931860569,"stop":1695932221121,"duration":360552}},{"uid":"3303fcf4d063b09e","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/3303fcf4d063b09e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Thu, 28 Sep 2023 16:14:35 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '36051', 'x-kong-proxy-latency': '240003', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695917398494,"stop":1695917675100,"duration":276606}},{"uid":"5ed1f3151c21b853","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/5ed1f3151c21b853","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Thu, 28 Sep 2023 12:15:00 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60000', 'x-kong-proxy-latency': '300003', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695902940366,"stop":1695903301102,"duration":360736}},{"uid":"e60d65ff22344c5b","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/e60d65ff22344c5b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Thu, 28 Sep 2023 08:14:20 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '59999', 'x-kong-proxy-latency': '300002', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1695888500172,"stop":1695888860860,"duration":360688}},{"uid":"8e6250c888741199","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/8e6250c888741199","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695874006679,"stop":1695874247410,"duration":240731}},{"uid":"4c47c6fb50febe9d","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/4c47c6fb50febe9d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695860069132,"stop":1695860129869,"duration":60737}},{"uid":"71f80ebc8d9a11e6","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/71f80ebc8d9a11e6","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695845639104,"stop":1695845699848,"duration":60744}},{"uid":"e7b7924975567a99","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/e7b7924975567a99","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Wed, 27 Sep 2023 16:17:55 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '46100', 'x-kong-proxy-latency': '180001', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695831248459,"stop":1695831475257,"duration":226798}},{"uid":"7e5beeadfb1486b9","reportUrl":"https://novasamatech.github.io/test-runner/3845//#testresult/7e5beeadfb1486b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695816352230,"stop":1695816412773,"duration":60543}},{"uid":"952649e2c0e924f2","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/952649e2c0e924f2","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1695801889873,"stop":1695802130480,"duration":240607}},{"uid":"416e56e995ea0ebf","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/416e56e995ea0ebf","status":"passed","time":{"start":1695787282560,"stop":1695787283686,"duration":1126}},{"uid":"5b6f2c63623ca6c9","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/5b6f2c63623ca6c9","status":"passed","time":{"start":1695772930605,"stop":1695772931740,"duration":1135}},{"uid":"c6c9f373b0316c13","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/c6c9f373b0316c13","status":"passed","time":{"start":1695758483816,"stop":1695758484678,"duration":862}},{"uid":"e501504116499a10","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/e501504116499a10","status":"passed","time":{"start":1695744076385,"stop":1695744077477,"duration":1092}},{"uid":"c37a72af8d60b4d3","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/c37a72af8d60b4d3","status":"passed","time":{"start":1695729676753,"stop":1695729677846,"duration":1093}},{"uid":"b6e2f928a4a698d9","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/b6e2f928a4a698d9","status":"passed","time":{"start":1695715279863,"stop":1695715280848,"duration":985}},{"uid":"52ae777f936853e4","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/52ae777f936853e4","status":"passed","time":{"start":1695700872299,"stop":1695700873414,"duration":1115}},{"uid":"55503529baa38a4a","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/55503529baa38a4a","status":"passed","time":{"start":1695686537603,"stop":1695686538832,"duration":1229}},{"uid":"e825a45c72cffc9a","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/e825a45c72cffc9a","status":"passed","time":{"start":1695672082292,"stop":1695672083193,"duration":901}}]},"tags":[]},"source":"f0acaa3840312a6a.json","parameterValues":["{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Kusama Asset Hub'}"]}