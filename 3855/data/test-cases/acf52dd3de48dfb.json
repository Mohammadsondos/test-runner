{"uid":"acf52dd3de48dfb","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1695960189024,"stop":1695960189617,"duration":593},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f3462517610>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3462514c10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f3462517610>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3462514c10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"310e252041345e85","name":"stdout","source":"310e252041345e85.txt","type":"text/plain","size":1338}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az613-847"},{"name":"thread","value":"2343-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f3462514c10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e6b4b85a957b2259","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695960173079,"stop":1695960173984,"duration":905}},{"uid":"f63605c0327c5e4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695960157410,"stop":1695960158048,"duration":638}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":210,"unknown":0,"total":214},"items":[{"uid":"6124de1c4f709308","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/6124de1c4f709308","status":"passed","time":{"start":1695945822946,"stop":1695945826924,"duration":3978}},{"uid":"cc9ed9ef30a49e59","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/cc9ed9ef30a49e59","status":"passed","time":{"start":1695931368049,"stop":1695931371191,"duration":3142}},{"uid":"877a05972c05d0ea","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/877a05972c05d0ea","status":"passed","time":{"start":1695916972468,"stop":1695916977963,"duration":5495}},{"uid":"77fe434b58a92c89","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/77fe434b58a92c89","status":"passed","time":{"start":1695902601206,"stop":1695902608576,"duration":7370}},{"uid":"e3dd01c8dcd40c9","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/e3dd01c8dcd40c9","status":"passed","time":{"start":1695888180062,"stop":1695888183893,"duration":3831}},{"uid":"fa85ce5ccdcfadbf","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/fa85ce5ccdcfadbf","status":"passed","time":{"start":1695873767407,"stop":1695873771670,"duration":4263}},{"uid":"fa4c08337774ffdf","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/fa4c08337774ffdf","status":"passed","time":{"start":1695859403455,"stop":1695859407331,"duration":3876}},{"uid":"754adcbbc97f7c6b","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/754adcbbc97f7c6b","status":"passed","time":{"start":1695845003991,"stop":1695845007547,"duration":3556}},{"uid":"8957b5044b12cc36","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/8957b5044b12cc36","status":"passed","time":{"start":1695830600976,"stop":1695830604524,"duration":3548}},{"uid":"e6df4d5741b2b3d2","reportUrl":"https://novasamatech.github.io/test-runner/3845//#testresult/e6df4d5741b2b3d2","status":"passed","time":{"start":1695816173582,"stop":1695816176858,"duration":3276}},{"uid":"72cb4ddbd1eba1ae","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/72cb4ddbd1eba1ae","status":"passed","time":{"start":1695801756590,"stop":1695801760414,"duration":3824}},{"uid":"6c764f6d9d904dec","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/6c764f6d9d904dec","status":"passed","time":{"start":1695787381068,"stop":1695787385354,"duration":4286}},{"uid":"a4db0deea93ce97c","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/a4db0deea93ce97c","status":"passed","time":{"start":1695773017408,"stop":1695773021426,"duration":4018}},{"uid":"d07184bde4797eaf","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/d07184bde4797eaf","status":"passed","time":{"start":1695758547960,"stop":1695758550171,"duration":2211}},{"uid":"1ddbb5344a3956a6","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/1ddbb5344a3956a6","status":"passed","time":{"start":1695744155667,"stop":1695744157725,"duration":2058}},{"uid":"548da9693f990e37","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/548da9693f990e37","status":"passed","time":{"start":1695729757133,"stop":1695729759622,"duration":2489}},{"uid":"c8be93b1684862a1","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/c8be93b1684862a1","status":"passed","time":{"start":1695715409689,"stop":1695715417927,"duration":8238}},{"uid":"3d2f17975750b5f2","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/3d2f17975750b5f2","status":"passed","time":{"start":1695700953199,"stop":1695700955847,"duration":2648}},{"uid":"2a8629b5fbe99ba2","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/2a8629b5fbe99ba2","status":"passed","time":{"start":1695686608361,"stop":1695686613852,"duration":5491}},{"uid":"d12adc037105b2bd","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/d12adc037105b2bd","status":"passed","time":{"start":1695672198661,"stop":1695672203542,"duration":4881}}]},"tags":[]},"source":"acf52dd3de48dfb.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f3462514c10>"]}