{"uid":"aca772caccf9e667","name":"test_can_create_connection[Test for Efinity, url: wss://rpc.efinity.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d58f635eee82df512b24fbce219b01da","time":{"start":1669464856207,"stop":1669464856768,"duration":561},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://rpc.efinity.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az243-584"},{"name":"thread","value":"1578-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.efinity.io', 'name': 'Efinity'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2ec57fa47f0d6385","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669464845551,"stop":1669464846140,"duration":589}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":250,"unknown":0,"total":258},"items":[{"uid":"7fb95648aa0c7db9","reportUrl":"https://nova-wallet.github.io/test-runner/1970//#testresult/7fb95648aa0c7db9","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669450421407,"stop":1669450421806,"duration":399}},{"uid":"97c2bd73dfbbe80e","reportUrl":"https://nova-wallet.github.io/test-runner/1969//#testresult/97c2bd73dfbbe80e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669436062507,"stop":1669436063176,"duration":669}},{"uid":"2fda30b6fec6214d","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/2fda30b6fec6214d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669422172839,"stop":1669422173244,"duration":405}},{"uid":"ce3a0bd01f055187","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/ce3a0bd01f055187","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669407229960,"stop":1669407230587,"duration":627}},{"uid":"f37517161463d915","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/f37517161463d915","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392826392,"stop":1669392826997,"duration":605}},{"uid":"38dd23e1cc246d6d","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/38dd23e1cc246d6d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378491490,"stop":1669378491882,"duration":392}},{"uid":"80e3865bb2045a55","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/80e3865bb2045a55","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371236437,"stop":1669371237007,"duration":570}},{"uid":"9bdc9243d5321987","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/9bdc9243d5321987","status":"passed","time":{"start":1669118826687,"stop":1669118826860,"duration":173}},{"uid":"a03a1178c7302eef","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/a03a1178c7302eef","status":"passed","time":{"start":1669104412888,"stop":1669104413172,"duration":284}},{"uid":"3fb7423f09fad8d3","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/3fb7423f09fad8d3","status":"passed","time":{"start":1669089974461,"stop":1669089974833,"duration":372}},{"uid":"f1a277b1a6b2f3c4","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/f1a277b1a6b2f3c4","status":"passed","time":{"start":1669076251141,"stop":1669076251273,"duration":132}},{"uid":"a11c925de82fcbad","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/a11c925de82fcbad","status":"passed","time":{"start":1669061167587,"stop":1669061167908,"duration":321}},{"uid":"1ae531db7df7582e","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/1ae531db7df7582e","status":"passed","time":{"start":1669046806003,"stop":1669046807204,"duration":1201}},{"uid":"97f779a9f43cfe48","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/97f779a9f43cfe48","status":"passed","time":{"start":1669032447477,"stop":1669032447585,"duration":108}},{"uid":"8b5680bb396e5315","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/8b5680bb396e5315","status":"passed","time":{"start":1669017999860,"stop":1669018000172,"duration":312}},{"uid":"7b0cc204c788ea5d","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/7b0cc204c788ea5d","status":"passed","time":{"start":1669003838002,"stop":1669003838164,"duration":162}},{"uid":"4ad16df2ff3e62d2","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/4ad16df2ff3e62d2","status":"passed","time":{"start":1668989851106,"stop":1668989851261,"duration":155}},{"uid":"ad220989db056262","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/ad220989db056262","status":"passed","time":{"start":1668974746164,"stop":1668974746367,"duration":203}},{"uid":"cb47a9b7cdeedc09","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/cb47a9b7cdeedc09","status":"passed","time":{"start":1668960359947,"stop":1668960360290,"duration":343}},{"uid":"7914c8b368b529c","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/7914c8b368b529c","status":"passed","time":{"start":1668946013742,"stop":1668946014164,"duration":422}}]},"tags":[]},"source":"aca772caccf9e667.json","parameterValues":["{'url': 'wss://rpc.efinity.io', 'name': 'Efinity'}"]}