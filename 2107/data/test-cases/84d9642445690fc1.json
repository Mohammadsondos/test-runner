{"uid":"84d9642445690fc1","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1671365302153,"stop":1671365314880,"duration":12727},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e5856aedbcd2a464","name":"stdout","source":"e5856aedbcd2a464.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az587-326"},{"name":"thread","value":"1707-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6cf838ac38fc8b6f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671365279290,"stop":1671365292068,"duration":12778}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":169,"skipped":0,"passed":207,"unknown":0,"total":376},"items":[{"uid":"ae4d1cea1956e8e0","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/ae4d1cea1956e8e0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671350836315,"stop":1671350848945,"duration":12630}},{"uid":"90f1c94987201628","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/90f1c94987201628","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671336350156,"stop":1671336363055,"duration":12899}},{"uid":"306732ba60eabed3","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/306732ba60eabed3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671322469228,"stop":1671322481961,"duration":12733}},{"uid":"3f37b955f8cd0ca5","reportUrl":"https://nova-wallet.github.io/test-runner/2103//#testresult/3f37b955f8cd0ca5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671307488313,"stop":1671307500465,"duration":12152}},{"uid":"ec6250b6d2fcf3a6","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/ec6250b6d2fcf3a6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671293118424,"stop":1671293129836,"duration":11412}},{"uid":"b2cc0a6d4d28aadc","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/b2cc0a6d4d28aadc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671278726267,"stop":1671278738866,"duration":12599}},{"uid":"12625720d6b16bed","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/12625720d6b16bed","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671264367988,"stop":1671264380704,"duration":12716}},{"uid":"8b99bd499115375c","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/8b99bd499115375c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671249910317,"stop":1671249923160,"duration":12843}},{"uid":"1d69e2512b4c5b9f","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/1d69e2512b4c5b9f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671235998546,"stop":1671236011379,"duration":12833}},{"uid":"56553a886f5ed976","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/56553a886f5ed976","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671221105839,"stop":1671221118482,"duration":12643}},{"uid":"4d8031e4b242811c","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/4d8031e4b242811c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671206709552,"stop":1671206722303,"duration":12751}},{"uid":"40e0d4f6df13ae8b","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/40e0d4f6df13ae8b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671192339627,"stop":1671192352593,"duration":12966}},{"uid":"9a1bd50f185c79c7","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/9a1bd50f185c79c7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671177923219,"stop":1671177935852,"duration":12633}},{"uid":"3c3276bfbfba8f6e","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/3c3276bfbfba8f6e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671163525744,"stop":1671163537172,"duration":11428}},{"uid":"8cbaf8152defe716","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/8cbaf8152defe716","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671149664554,"stop":1671149677329,"duration":12775}},{"uid":"889f4c8ce9928a4c","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/889f4c8ce9928a4c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671134708041,"stop":1671134720807,"duration":12766}},{"uid":"118f66326865a362","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/118f66326865a362","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671120324189,"stop":1671120335613,"duration":11424}},{"uid":"48b4510c4b98b39d","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/48b4510c4b98b39d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671105980835,"stop":1671105993456,"duration":12621}},{"uid":"2ac9338e825008ab","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/2ac9338e825008ab","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671091550924,"stop":1671091563668,"duration":12744}},{"uid":"3c93019ba377dd1","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/3c93019ba377dd1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671077131204,"stop":1671077143904,"duration":12700}}]},"tags":[]},"source":"84d9642445690fc1.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}