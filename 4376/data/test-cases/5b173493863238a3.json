{"uid":"5b173493863238a3","name":"test_precision[Test for Jur]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"6c3bed029b61ca54529827de47d33d5e","time":{"start":1703318658904,"stop":1703318658904,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_precision[Test for Jur]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1703318658904,"stop":1703318660554,"duration":1650},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_precision[Test for Jur]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f9857fd82526c975","name":"stdout","source":"f9857fd82526c975.txt","type":"text/plain","size":2472}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az702-998"},{"name":"thread","value":"2068-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f35c50d2a40>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"abdc7680008120b2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703318642181,"stop":1703318642181,"duration":0}},{"uid":"a9542386e91669b0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703318625486,"stop":1703318625486,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":657,"unknown":0,"total":664},"items":[{"uid":"b5dabe59d65bd071","reportUrl":"https://novasamatech.github.io/test-runner/4375//#testresult/b5dabe59d65bd071","status":"passed","time":{"start":1703304258101,"stop":1703304258101,"duration":0}},{"uid":"541135bffc334a58","reportUrl":"https://novasamatech.github.io/test-runner/4374//#testresult/541135bffc334a58","status":"passed","time":{"start":1703289809047,"stop":1703289809047,"duration":0}},{"uid":"7d90d24d6bba392a","reportUrl":"https://novasamatech.github.io/test-runner/4373//#testresult/7d90d24d6bba392a","status":"broken","statusDetails":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","time":{"start":1703275427682,"stop":1703275427682,"duration":0}},{"uid":"f1c9f57bd0605df4","reportUrl":"https://novasamatech.github.io/test-runner/4372//#testresult/f1c9f57bd0605df4","status":"passed","time":{"start":1703261045154,"stop":1703261045154,"duration":0}},{"uid":"ec9ca6848d679299","reportUrl":"https://novasamatech.github.io/test-runner/4371//#testresult/ec9ca6848d679299","status":"passed","time":{"start":1703246749724,"stop":1703246749724,"duration":0}},{"uid":"9a386351f9cc05be","reportUrl":"https://novasamatech.github.io/test-runner/4370//#testresult/9a386351f9cc05be","status":"passed","time":{"start":1703232284408,"stop":1703232284408,"duration":0}},{"uid":"c14a67cad8f19a33","reportUrl":"https://novasamatech.github.io/test-runner/4369//#testresult/c14a67cad8f19a33","status":"passed","time":{"start":1703217850921,"stop":1703217850921,"duration":0}},{"uid":"2f9b934efcad5dcb","reportUrl":"https://novasamatech.github.io/test-runner/4368//#testresult/2f9b934efcad5dcb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703203567318,"stop":1703203567318,"duration":0}},{"uid":"59ecd149405abc23","reportUrl":"https://novasamatech.github.io/test-runner/4367//#testresult/59ecd149405abc23","status":"passed","time":{"start":1703189175803,"stop":1703189175803,"duration":0}},{"uid":"30c62f6fcc87affe","reportUrl":"https://novasamatech.github.io/test-runner/4366//#testresult/30c62f6fcc87affe","status":"passed","time":{"start":1703176362297,"stop":1703176362297,"duration":0}},{"uid":"80eac1450f9c5aec","reportUrl":"https://novasamatech.github.io/test-runner/4365//#testresult/80eac1450f9c5aec","status":"passed","time":{"start":1703174705713,"stop":1703174705714,"duration":1}},{"uid":"c1740fbc17cd7efc","reportUrl":"https://novasamatech.github.io/test-runner/4364//#testresult/c1740fbc17cd7efc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703160426081,"stop":1703160426081,"duration":0}},{"uid":"a588b931ceae206a","reportUrl":"https://novasamatech.github.io/test-runner/4363//#testresult/a588b931ceae206a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703145944931,"stop":1703145944931,"duration":0}},{"uid":"24052465a56fee61","reportUrl":"https://novasamatech.github.io/test-runner/4362//#testresult/24052465a56fee61","status":"passed","time":{"start":1703131489711,"stop":1703131489711,"duration":0}},{"uid":"12cb44367ef70497","reportUrl":"https://novasamatech.github.io/test-runner/4361//#testresult/12cb44367ef70497","status":"passed","time":{"start":1703117032364,"stop":1703117032364,"duration":0}},{"uid":"80ab2ab2f295193c","reportUrl":"https://novasamatech.github.io/test-runner/4360//#testresult/80ab2ab2f295193c","status":"passed","time":{"start":1703102652280,"stop":1703102652280,"duration":0}},{"uid":"26a65c6b5f67491f","reportUrl":"https://novasamatech.github.io/test-runner/4359//#testresult/26a65c6b5f67491f","status":"passed","time":{"start":1703088183915,"stop":1703088183916,"duration":1}},{"uid":"bf938eab8544d1f8","reportUrl":"https://novasamatech.github.io/test-runner/4358//#testresult/bf938eab8544d1f8","status":"passed","time":{"start":1703073782422,"stop":1703073782422,"duration":0}},{"uid":"7fedac903f816991","reportUrl":"https://novasamatech.github.io/test-runner/4357//#testresult/7fedac903f816991","status":"passed","time":{"start":1703059372634,"stop":1703059372634,"duration":0}},{"uid":"64af49b4008230fd","reportUrl":"https://novasamatech.github.io/test-runner/4356//#testresult/64af49b4008230fd","status":"passed","time":{"start":1703044943584,"stop":1703044943584,"duration":0}}]},"tags":[]},"source":"5b173493863238a3.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f35c50d2a40>"]}