{"uid":"fffba103dfe61174","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://centrifuge-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c61d3131e170cf9bb6fa392a1937f08b","time":{"start":1670832366329,"stop":1670832378391,"duration":12062},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3c3acc33555e1ed6","name":"stdout","source":"3c3acc33555e1ed6.txt","type":"text/plain","size":248}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az548-435"},{"name":"thread","value":"1753-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7566bce634f4cac2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670832343733,"stop":1670832356247,"duration":12514}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":131,"skipped":0,"passed":208,"unknown":0,"total":339},"items":[{"uid":"73c2a4563a693ada","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/73c2a4563a693ada","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670817987528,"stop":1670817999625,"duration":12097}},{"uid":"5f0cf174353f2baf","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/5f0cf174353f2baf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670804157225,"stop":1670804168653,"duration":11428}},{"uid":"e01c37a6d02a0ce3","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/e01c37a6d02a0ce3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670789142499,"stop":1670789153907,"duration":11408}},{"uid":"3bc2179c1826d214","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/3bc2179c1826d214","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670774726458,"stop":1670774737879,"duration":11421}},{"uid":"b55ab6cd239e2667","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/b55ab6cd239e2667","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670760415310,"stop":1670760427515,"duration":12205}},{"uid":"b19a81fad3fdf789","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/b19a81fad3fdf789","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670746029463,"stop":1670746041562,"duration":12099}},{"uid":"c5a0f769f97638b7","reportUrl":"https://nova-wallet.github.io/test-runner/2063//#testresult/c5a0f769f97638b7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670731616701,"stop":1670731628505,"duration":11804}},{"uid":"f6585db852e74f3f","reportUrl":"https://nova-wallet.github.io/test-runner/2062//#testresult/f6585db852e74f3f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670717806499,"stop":1670717818542,"duration":12043}},{"uid":"c449815f883493d8","reportUrl":"https://nova-wallet.github.io/test-runner/2061//#testresult/c449815f883493d8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670702739229,"stop":1670702750652,"duration":11423}},{"uid":"cf67874197aefdb8","reportUrl":"https://nova-wallet.github.io/test-runner/2060//#testresult/cf67874197aefdb8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670688378768,"stop":1670688390172,"duration":11404}},{"uid":"d0bfc4b9ff78f752","reportUrl":"https://nova-wallet.github.io/test-runner/2059//#testresult/d0bfc4b9ff78f752","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670674033827,"stop":1670674046201,"duration":12374}},{"uid":"3c591cfd08a630df","reportUrl":"https://nova-wallet.github.io/test-runner/2058//#testresult/3c591cfd08a630df","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670659638274,"stop":1670659650729,"duration":12455}},{"uid":"b9767a3d6cac112f","reportUrl":"https://nova-wallet.github.io/test-runner/2057//#testresult/b9767a3d6cac112f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670645147009,"stop":1670645158797,"duration":11788}},{"uid":"cf629dee914b059e","reportUrl":"https://nova-wallet.github.io/test-runner/2056//#testresult/cf629dee914b059e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670631294565,"stop":1670631305993,"duration":11428}},{"uid":"555a3f9b3c6ab9ea","reportUrl":"https://nova-wallet.github.io/test-runner/2054//#testresult/555a3f9b3c6ab9ea","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670601961190,"stop":1670601972933,"duration":11743}},{"uid":"a69c16521d9fed9","reportUrl":"https://nova-wallet.github.io/test-runner/2053//#testresult/a69c16521d9fed9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670587614248,"stop":1670587624035,"duration":9787}},{"uid":"fc02c98e75e2fd56","reportUrl":"https://nova-wallet.github.io/test-runner/2052//#testresult/fc02c98e75e2fd56","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670573232008,"stop":1670573244004,"duration":11996}},{"uid":"21e3c1e07f027554","reportUrl":"https://nova-wallet.github.io/test-runner/2051//#testresult/21e3c1e07f027554","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670558756350,"stop":1670558768300,"duration":11950}},{"uid":"68337f22100635a9","reportUrl":"https://nova-wallet.github.io/test-runner/2050//#testresult/68337f22100635a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670544993439,"stop":1670545004856,"duration":11417}},{"uid":"dc09e00a5160c4","reportUrl":"https://nova-wallet.github.io/test-runner/2049//#testresult/dc09e00a5160c4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670529977215,"stop":1670529988459,"duration":11244}}]},"tags":[]},"source":"fffba103dfe61174.json","parameterValues":["{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"]}