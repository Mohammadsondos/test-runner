{"uid":"62492ca5f7df7bfc","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1698062618973,"stop":1698062620778,"duration":1805},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb9add522c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb9ae03aec0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb9add522c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb9ae03aec0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"475584ff7a27657d","name":"stdout","source":"475584ff7a27657d.txt","type":"text/plain","size":1353}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az583-593"},{"name":"thread","value":"2083-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb9ae03aec0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4fc4fa1e8066a457","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062602695,"stop":1698062603920,"duration":1225}},{"uid":"15654dd51562aed2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062586369,"stop":1698062587662,"duration":1293}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":354,"unknown":0,"total":362},"items":[{"uid":"fe4a70a9233e242a","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/fe4a70a9233e242a","status":"passed","time":{"start":1698048167460,"stop":1698048173083,"duration":5623}},{"uid":"41a1d6aeb9decbdc","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/41a1d6aeb9decbdc","status":"passed","time":{"start":1698033738617,"stop":1698033743170,"duration":4553}},{"uid":"63997ae7d58898fd","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/63997ae7d58898fd","status":"passed","time":{"start":1698019397927,"stop":1698019402084,"duration":4157}},{"uid":"1a1d291330594dab","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/1a1d291330594dab","status":"passed","time":{"start":1698004958320,"stop":1698004964044,"duration":5724}},{"uid":"625faac8a8fc9452","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/625faac8a8fc9452","status":"passed","time":{"start":1697990540386,"stop":1697990548273,"duration":7887}},{"uid":"4255a5fba9dd5c98","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/4255a5fba9dd5c98","status":"passed","time":{"start":1697976139757,"stop":1697976144019,"duration":4262}},{"uid":"cfa79539236b5553","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/cfa79539236b5553","status":"passed","time":{"start":1697961740878,"stop":1697961748980,"duration":8102}},{"uid":"bfe7fdaf7b8647b2","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/bfe7fdaf7b8647b2","status":"passed","time":{"start":1697947340203,"stop":1697947347299,"duration":7096}},{"uid":"fe64ecd2873fb30d","reportUrl":"https://novasamatech.github.io/test-runner/3994//#testresult/fe64ecd2873fb30d","status":"passed","time":{"start":1697933001712,"stop":1697933006995,"duration":5283}},{"uid":"11568b7bfb5402c9","reportUrl":"https://novasamatech.github.io/test-runner/3993//#testresult/11568b7bfb5402c9","status":"passed","time":{"start":1697918575489,"stop":1697918581660,"duration":6171}},{"uid":"65edb1890ab8ec62","reportUrl":"https://novasamatech.github.io/test-runner/3992//#testresult/65edb1890ab8ec62","status":"passed","time":{"start":1697904149871,"stop":1697904154261,"duration":4390}},{"uid":"1db031425f90b7a2","reportUrl":"https://novasamatech.github.io/test-runner/3991//#testresult/1db031425f90b7a2","status":"passed","time":{"start":1697889746109,"stop":1697889750579,"duration":4470}},{"uid":"b36ec907270697c1","reportUrl":"https://novasamatech.github.io/test-runner/3990//#testresult/b36ec907270697c1","status":"passed","time":{"start":1697875359861,"stop":1697875364362,"duration":4501}},{"uid":"d3803457f4c40e7b","reportUrl":"https://novasamatech.github.io/test-runner/3989//#testresult/d3803457f4c40e7b","status":"passed","time":{"start":1697860953244,"stop":1697860958017,"duration":4773}},{"uid":"df5af9edb71520fe","reportUrl":"https://novasamatech.github.io/test-runner/3988//#testresult/df5af9edb71520fe","status":"passed","time":{"start":1697846636103,"stop":1697846641757,"duration":5654}},{"uid":"af8369ea7a3388c0","reportUrl":"https://novasamatech.github.io/test-runner/3987//#testresult/af8369ea7a3388c0","status":"passed","time":{"start":1697832164169,"stop":1697832169339,"duration":5170}},{"uid":"6c172d1a90e60366","reportUrl":"https://novasamatech.github.io/test-runner/3986//#testresult/6c172d1a90e60366","status":"passed","time":{"start":1697817743227,"stop":1697817748065,"duration":4838}},{"uid":"16219663a0145a52","reportUrl":"https://novasamatech.github.io/test-runner/3985//#testresult/16219663a0145a52","status":"passed","time":{"start":1697803350568,"stop":1697803354527,"duration":3959}},{"uid":"b659a0ecbc43ba01","reportUrl":"https://novasamatech.github.io/test-runner/3984//#testresult/b659a0ecbc43ba01","status":"passed","time":{"start":1697788967000,"stop":1697788972690,"duration":5690}},{"uid":"566331ae37eb0167","reportUrl":"https://novasamatech.github.io/test-runner/3983//#testresult/566331ae37eb0167","status":"passed","time":{"start":1697786815790,"stop":1697786820916,"duration":5126}}]},"tags":[]},"source":"62492ca5f7df7bfc.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb9ae03aec0>"]}