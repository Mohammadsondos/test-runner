{"uid":"7ffc9f6e297e37c4","name":"test_precision[Test for Aventus]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"2d9489df664c27ee626d51296433783b","time":{"start":1698062581020,"stop":1698062581772,"duration":752},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0ea46c8a60>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0ea44ac610>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0ea46c8a60>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0ea44ac610>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"9d6ce0dae78f08e6","name":"stdout","source":"9d6ce0dae78f08e6.txt","type":"text/plain","size":1353}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az411-822"},{"name":"thread","value":"2073-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0ea44ac610>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c61b0738a471aa26","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062564750,"stop":1698062565984,"duration":1234}},{"uid":"1bdf338f4a4c6e33","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062548467,"stop":1698062549672,"duration":1205}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":355,"unknown":0,"total":363},"items":[{"uid":"16059f9efe5f4690","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/16059f9efe5f4690","status":"passed","time":{"start":1698048155655,"stop":1698048161192,"duration":5537}},{"uid":"a1fa1655def63162","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/a1fa1655def63162","status":"passed","time":{"start":1698033746636,"stop":1698033750354,"duration":3718}},{"uid":"f94f316c40e07d30","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/f94f316c40e07d30","status":"passed","time":{"start":1698019393184,"stop":1698019396383,"duration":3199}},{"uid":"51062c0dddc64422","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/51062c0dddc64422","status":"passed","time":{"start":1698004932801,"stop":1698004936343,"duration":3542}},{"uid":"2f019a2de684de93","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/2f019a2de684de93","status":"passed","time":{"start":1697990534800,"stop":1697990539160,"duration":4360}},{"uid":"d74c305be04135ef","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/d74c305be04135ef","status":"passed","time":{"start":1697976131126,"stop":1697976136648,"duration":5522}},{"uid":"2dd5e3ee01577d10","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/2dd5e3ee01577d10","status":"passed","time":{"start":1697961735129,"stop":1697961742218,"duration":7089}},{"uid":"7fdda56d3387f643","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/7fdda56d3387f643","status":"passed","time":{"start":1697947345611,"stop":1697947349850,"duration":4239}},{"uid":"505b18c4451827bc","reportUrl":"https://novasamatech.github.io/test-runner/3994//#testresult/505b18c4451827bc","status":"passed","time":{"start":1697933021185,"stop":1697933030111,"duration":8926}},{"uid":"c7b25885898045df","reportUrl":"https://novasamatech.github.io/test-runner/3993//#testresult/c7b25885898045df","status":"passed","time":{"start":1697918538634,"stop":1697918542987,"duration":4353}},{"uid":"82bbc51523e399bf","reportUrl":"https://novasamatech.github.io/test-runner/3992//#testresult/82bbc51523e399bf","status":"passed","time":{"start":1697904140331,"stop":1697904144477,"duration":4146}},{"uid":"9e344ad7de31c74f","reportUrl":"https://novasamatech.github.io/test-runner/3991//#testresult/9e344ad7de31c74f","status":"passed","time":{"start":1697889770770,"stop":1697889776271,"duration":5501}},{"uid":"10fce38e77078f77","reportUrl":"https://novasamatech.github.io/test-runner/3990//#testresult/10fce38e77078f77","status":"passed","time":{"start":1697875341399,"stop":1697875344758,"duration":3359}},{"uid":"53ea8373774ade18","reportUrl":"https://novasamatech.github.io/test-runner/3989//#testresult/53ea8373774ade18","status":"passed","time":{"start":1697860943920,"stop":1697860950634,"duration":6714}},{"uid":"8f568ee926baa2fd","reportUrl":"https://novasamatech.github.io/test-runner/3988//#testresult/8f568ee926baa2fd","status":"passed","time":{"start":1697846617521,"stop":1697846622962,"duration":5441}},{"uid":"8d84645873d28255","reportUrl":"https://novasamatech.github.io/test-runner/3987//#testresult/8d84645873d28255","status":"passed","time":{"start":1697832147789,"stop":1697832152324,"duration":4535}},{"uid":"de725d3dc4cae60c","reportUrl":"https://novasamatech.github.io/test-runner/3986//#testresult/de725d3dc4cae60c","status":"passed","time":{"start":1697817742043,"stop":1697817745594,"duration":3551}},{"uid":"7fe592fb38145bff","reportUrl":"https://novasamatech.github.io/test-runner/3985//#testresult/7fe592fb38145bff","status":"passed","time":{"start":1697803343698,"stop":1697803347585,"duration":3887}},{"uid":"2b88822a46d87000","reportUrl":"https://novasamatech.github.io/test-runner/3984//#testresult/2b88822a46d87000","status":"passed","time":{"start":1697788940548,"stop":1697788945078,"duration":4530}},{"uid":"1272ca3f4d0fe74e","reportUrl":"https://novasamatech.github.io/test-runner/3983//#testresult/1272ca3f4d0fe74e","status":"passed","time":{"start":1697786816314,"stop":1697786819778,"duration":3464}}]},"tags":[]},"source":"7ffc9f6e297e37c4.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0ea44ac610>"]}