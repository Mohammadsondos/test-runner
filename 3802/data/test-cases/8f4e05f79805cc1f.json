{"uid":"8f4e05f79805cc1f","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1695196991499,"stop":1695196992426,"duration":927},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f01429ee5c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0142fb71f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f01429ee5c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0142fb71f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"8b42d9a8107de70","name":"stdout","source":"8b42d9a8107de70.txt","type":"text/plain","size":1361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az936-949"},{"name":"thread","value":"2038-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0142fb71f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"981b661d7d524bff","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695196975303,"stop":1695196976476,"duration":1173}},{"uid":"ac31ecb887a5de29","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695196959168,"stop":1695196960274,"duration":1106}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":143,"unknown":0,"total":162},"items":[{"uid":"610d6ed5ff4ebf48","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/610d6ed5ff4ebf48","status":"passed","time":{"start":1695182553083,"stop":1695182556490,"duration":3407}},{"uid":"945580c794c625a1","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/945580c794c625a1","status":"passed","time":{"start":1695168221991,"stop":1695168227854,"duration":5863}},{"uid":"fa79ac059170adac","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/fa79ac059170adac","status":"passed","time":{"start":1695153799653,"stop":1695153804848,"duration":5195}},{"uid":"798cf585c6443b26","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/798cf585c6443b26","status":"passed","time":{"start":1695139383623,"stop":1695139388148,"duration":4525}},{"uid":"eb5016db5ce04f9c","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/eb5016db5ce04f9c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695124981521,"stop":1695124982306,"duration":785}},{"uid":"669122bd62915de5","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/669122bd62915de5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695110585490,"stop":1695110586259,"duration":769}},{"uid":"62b7fec2645eb7b3","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/62b7fec2645eb7b3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695096172527,"stop":1695096173380,"duration":853}},{"uid":"8c18323d3c119241","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/8c18323d3c119241","status":"passed","time":{"start":1695081811852,"stop":1695081821746,"duration":9894}},{"uid":"b83c252ab8aa6336","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/b83c252ab8aa6336","status":"passed","time":{"start":1695052955047,"stop":1695052958628,"duration":3581}},{"uid":"311346cbece210f3","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/311346cbece210f3","status":"passed","time":{"start":1695067368028,"stop":1695067375378,"duration":7350}},{"uid":"e7330a9074147642","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/e7330a9074147642","status":"passed","time":{"start":1695038584310,"stop":1695038588177,"duration":3867}},{"uid":"7838f3887f0be962","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/7838f3887f0be962","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695024187809,"stop":1695024188641,"duration":832}},{"uid":"256c6dab5525cb81","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/256c6dab5525cb81","status":"passed","time":{"start":1695009786564,"stop":1695009791759,"duration":5195}},{"uid":"75aa918b4c50c009","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/75aa918b4c50c009","status":"passed","time":{"start":1694995433796,"stop":1694995445395,"duration":11599}},{"uid":"42cc52eac7c1fae5","reportUrl":"https://novasamatech.github.io/test-runner/3787//#testresult/42cc52eac7c1fae5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694980997597,"stop":1694980999165,"duration":1568}},{"uid":"4ccfbf0ddfd4f46b","reportUrl":"https://novasamatech.github.io/test-runner/3786//#testresult/4ccfbf0ddfd4f46b","status":"passed","time":{"start":1694966529838,"stop":1694966532882,"duration":3044}},{"uid":"37787ef959476c0d","reportUrl":"https://novasamatech.github.io/test-runner/3785//#testresult/37787ef959476c0d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694952217465,"stop":1694952218844,"duration":1379}},{"uid":"83a21314c4a69ca2","reportUrl":"https://novasamatech.github.io/test-runner/3784//#testresult/83a21314c4a69ca2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694937774291,"stop":1694937775068,"duration":777}},{"uid":"a92106b8a9ca6c43","reportUrl":"https://novasamatech.github.io/test-runner/3783//#testresult/a92106b8a9ca6c43","status":"passed","time":{"start":1694923384446,"stop":1694923391715,"duration":7269}},{"uid":"f66afbafc23db5e2","reportUrl":"https://novasamatech.github.io/test-runner/3782//#testresult/f66afbafc23db5e2","status":"passed","time":{"start":1694909031398,"stop":1694909037018,"duration":5620}}]},"tags":[]},"source":"8f4e05f79805cc1f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0142fb71f0>"]}