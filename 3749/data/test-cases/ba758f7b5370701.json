{"uid":"ba758f7b5370701","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1694448188004,"stop":1694448188980,"duration":976},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f12d4b55060>\nchain = <scripts.utils.chain_model.Chain object at 0x7f12d4c7f6d0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f12d4b55060>\nchain = <scripts.utils.chain_model.Chain object at 0x7f12d4c7f6d0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"e95813afbff77934","name":"stdout","source":"e95813afbff77934.txt","type":"text/plain","size":1036}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az172-828"},{"name":"thread","value":"2184-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f12d4c7f6d0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3500e018dacf842c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694448172143,"stop":1694448172966,"duration":823}},{"uid":"f24042510300f4db","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694448156017,"stop":1694448157112,"duration":1095}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":102,"unknown":0,"total":109},"items":[{"uid":"e441d6560067c83e","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/e441d6560067c83e","status":"passed","time":{"start":1694433789815,"stop":1694433793775,"duration":3960}},{"uid":"1296a11dcec95b0f","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/1296a11dcec95b0f","status":"passed","time":{"start":1694419438478,"stop":1694419442249,"duration":3771}},{"uid":"22c735ca76bcadfb","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/22c735ca76bcadfb","status":"passed","time":{"start":1694404976720,"stop":1694404980299,"duration":3579}},{"uid":"eadcf63af5d672c0","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/eadcf63af5d672c0","status":"passed","time":{"start":1694390627780,"stop":1694390633068,"duration":5288}},{"uid":"cfa82cefc603dca7","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/cfa82cefc603dca7","status":"passed","time":{"start":1694376206449,"stop":1694376210893,"duration":4444}},{"uid":"d23eb8fbc905d4c6","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/d23eb8fbc905d4c6","status":"passed","time":{"start":1694361771704,"stop":1694361775653,"duration":3949}},{"uid":"b609245a13120325","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/b609245a13120325","status":"passed","time":{"start":1694347386788,"stop":1694347395911,"duration":9123}},{"uid":"995e34ad94b78be4","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/995e34ad94b78be4","status":"passed","time":{"start":1694333003479,"stop":1694333008823,"duration":5344}},{"uid":"12302d29608026cf","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/12302d29608026cf","status":"passed","time":{"start":1694318585093,"stop":1694318590308,"duration":5215}},{"uid":"525ec09959bbbd09","reportUrl":"https://novasamatech.github.io/test-runner/3739//#testresult/525ec09959bbbd09","status":"passed","time":{"start":1694304192411,"stop":1694304195817,"duration":3406}},{"uid":"6d54bbb938b55303","reportUrl":"https://novasamatech.github.io/test-runner/3738//#testresult/6d54bbb938b55303","status":"passed","time":{"start":1694289784416,"stop":1694289791410,"duration":6994}},{"uid":"9fc003292c881021","reportUrl":"https://novasamatech.github.io/test-runner/3737//#testresult/9fc003292c881021","status":"passed","time":{"start":1694275395847,"stop":1694275402423,"duration":6576}},{"uid":"2b419a416c3c4129","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/2b419a416c3c4129","status":"passed","time":{"start":1694260999428,"stop":1694261002430,"duration":3002}},{"uid":"d32f48123c147c45","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/d32f48123c147c45","status":"passed","time":{"start":1694246586652,"stop":1694246590122,"duration":3470}},{"uid":"708da2635d5da0bb","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/708da2635d5da0bb","status":"passed","time":{"start":1694232165489,"stop":1694232171038,"duration":5549}},{"uid":"b0a11d96d489ab5c","reportUrl":"https://novasamatech.github.io/test-runner/3733//#testresult/b0a11d96d489ab5c","status":"passed","time":{"start":1694217810874,"stop":1694217817080,"duration":6206}},{"uid":"e478d9b532f2efd1","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/e478d9b532f2efd1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694203384392,"stop":1694203384999,"duration":607}},{"uid":"5220bc71cd1029f2","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/5220bc71cd1029f2","status":"passed","time":{"start":1694188980871,"stop":1694188985105,"duration":4234}},{"uid":"9113ca8fbdc5b339","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/9113ca8fbdc5b339","status":"passed","time":{"start":1694174666434,"stop":1694174671501,"duration":5067}},{"uid":"f58a0b74be883de1","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/f58a0b74be883de1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694160182412,"stop":1694160183194,"duration":782}}]},"tags":[]},"source":"ba758f7b5370701.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f12d4c7f6d0>"]}