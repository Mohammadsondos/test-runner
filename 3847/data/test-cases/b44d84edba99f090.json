{"uid":"b44d84edba99f090","name":"testBalancesLoading[Getting balance for Moonriver network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Moonriver network]","historyId":"691c9f7082fbedde7af3d6ae758eee0c","time":{"start":1695845709323,"stop":1695845789396,"duration":80073},"status":"broken","statusMessage":"Socket state: Connected(url=wss://moonriver.api.onfinality.io/ws?apikey=41935d3d-3d6c-4a90-a0e1-33c065401d05, toResendOnReconnect=[Sendable(1071623433)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(1071623433)=0}, subscriptions=[]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://moonriver.api.onfinality.io/ws?apikey=41935d3d-3d6c-4a90-a0e1-33c065401d05, toResendOnReconnect=[Sendable(1071623433)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(1071623433)=0}, subscriptions=[]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Moonriver network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(165)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":194,"unknown":0,"total":204},"items":[{"uid":"3b4607285aa90e4b","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/3b4607285aa90e4b","status":"passed","time":{"start":1695831413981,"stop":1695831414308,"duration":327}},{"uid":"53826303f5a38a23","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/53826303f5a38a23","status":"passed","time":{"start":1695802502881,"stop":1695802503134,"duration":253}},{"uid":"dcbdfda2a9b0c246","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/dcbdfda2a9b0c246","status":"passed","time":{"start":1695788039930,"stop":1695788040177,"duration":247}},{"uid":"e74e4e0fb464033a","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/e74e4e0fb464033a","status":"passed","time":{"start":1695773710109,"stop":1695773710304,"duration":195}},{"uid":"5c9a6da1624a50ee","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/5c9a6da1624a50ee","status":"passed","time":{"start":1695759302557,"stop":1695759302801,"duration":244}},{"uid":"fc865b7a33f229c9","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/fc865b7a33f229c9","status":"passed","time":{"start":1695745183950,"stop":1695745184173,"duration":223}},{"uid":"741951ea62348f7e","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/741951ea62348f7e","status":"passed","time":{"start":1695730477280,"stop":1695730477560,"duration":280}},{"uid":"b9ce68df953427d1","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/b9ce68df953427d1","status":"passed","time":{"start":1695716211780,"stop":1695716212035,"duration":255}},{"uid":"b134786d380e50c3","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/b134786d380e50c3","status":"passed","time":{"start":1695701637372,"stop":1695701637616,"duration":244}},{"uid":"580ae2e22531a6ec","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/580ae2e22531a6ec","status":"passed","time":{"start":1695687557672,"stop":1695687557926,"duration":254}},{"uid":"80b3aa7715027bac","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/80b3aa7715027bac","status":"passed","time":{"start":1695672852390,"stop":1695672852575,"duration":185}},{"uid":"a755c57ca26a0053","reportUrl":"https://novasamatech.github.io/test-runner/3834//#testresult/a755c57ca26a0053","status":"passed","time":{"start":1695658516307,"stop":1695658516570,"duration":263}},{"uid":"64bc72de8420a940","reportUrl":"https://novasamatech.github.io/test-runner/3833//#testresult/64bc72de8420a940","status":"passed","time":{"start":1695644092234,"stop":1695644092435,"duration":201}},{"uid":"c8b1bdb8538e4f0a","reportUrl":"https://novasamatech.github.io/test-runner/3832//#testresult/c8b1bdb8538e4f0a","status":"passed","time":{"start":1695629911677,"stop":1695629911876,"duration":199}},{"uid":"d8247ce49b32808c","reportUrl":"https://novasamatech.github.io/test-runner/3831//#testresult/d8247ce49b32808c","status":"passed","time":{"start":1695615289885,"stop":1695615290146,"duration":261}},{"uid":"54d89c7f8107f9ff","reportUrl":"https://novasamatech.github.io/test-runner/3830//#testresult/54d89c7f8107f9ff","status":"passed","time":{"start":1695601061716,"stop":1695601061927,"duration":211}},{"uid":"9d6205e4ef877948","reportUrl":"https://novasamatech.github.io/test-runner/3829//#testresult/9d6205e4ef877948","status":"passed","time":{"start":1695586491815,"stop":1695586492075,"duration":260}},{"uid":"b9e60924bf42d7fe","reportUrl":"https://novasamatech.github.io/test-runner/3828//#testresult/b9e60924bf42d7fe","status":"passed","time":{"start":1695572038857,"stop":1695572039591,"duration":734}},{"uid":"28a47f4e10a5aa3e","reportUrl":"https://novasamatech.github.io/test-runner/3827//#testresult/28a47f4e10a5aa3e","status":"passed","time":{"start":1695557655016,"stop":1695557655268,"duration":252}},{"uid":"2a00cfaea307a30c","reportUrl":"https://novasamatech.github.io/test-runner/3826//#testresult/2a00cfaea307a30c","status":"passed","time":{"start":1695543420648,"stop":1695543420901,"duration":253}}]},"tags":[]},"source":"b44d84edba99f090.json","parameterValues":[]}