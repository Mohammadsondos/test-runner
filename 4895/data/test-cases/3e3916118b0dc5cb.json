{"uid":"3e3916118b0dc5cb","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://eth.llamarpc.com]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"3f32f3f9affb5ea13b781953ebf105f9","time":{"start":1710705670415,"stop":1710705670686,"duration":271},"status":"broken","statusMessage":"ValueError: {'code': -32005, 'message': 'daily request count exceeded, request rate limited', 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.1}, 'see': 'https://infura.io/dashboard'}}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x75dacc501510>\ndata = {'name': 'Ethereum', 'url': 'https://eth.llamarpc.com'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n        assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Get the latest block number from nodes\n        rpc_block_number = w3_rpc.eth.block_number\n>       wss_block_number = wss_w3.eth.block_number\n\ntests/test_eth_nodes_availability.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:133: in block_number\n    return self.get_block_number()\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'error': {'code': -32005, 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.1}, 'see': 'https://infura.io/dashboard'}, 'message': 'daily request count exceeded, request rate limited'}, 'id': 1, 'jsonrpc': '2.0'}\nparams = (), error_formatters = <cyfunction identity at 0x75dace7028e0>\nnull_result_formatters = <cyfunction identity at 0x75dace7028e0>\n\n    @staticmethod\n    def formatted_response(\n        response: RPCResponse,\n        params: Any,\n        error_formatters: Optional[Callable[..., Any]] = None,\n        null_result_formatters: Optional[Callable[..., Any]] = None,\n    ) -> Any:\n        if \"error\" in response:\n            apply_error_formatters(error_formatters, response)\n    \n            # guard against eth-tester case - eth-tester returns a string\n            # with no code, so can't parse what the error is.\n            if isinstance(response[\"error\"], dict):\n                resp_code = response[\"error\"].get(\"code\")\n                if resp_code == -32601:\n                    raise MethodUnavailable(response[\"error\"])\n>           raise ValueError(response[\"error\"])\nE           ValueError: {'code': -32005, 'message': 'daily request count exceeded, request rate limited', 'data': {'rate': {'allowed_rps': 1, 'backoff_seconds': 30, 'current_rps': 1.1}, 'see': 'https://infura.io/dashboard'}}\n\n.venv/lib/python3.10/site-packages/web3/manager.py:205: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az740-762"},{"name":"thread","value":"2044-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e0fc9270e0b0e677","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1710705665354,"stop":1710705665381,"duration":27}},{"uid":"46be8583606724f5","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1710705660076,"stop":1710705660223,"duration":147}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":34,"skipped":0,"passed":971,"unknown":0,"total":1006},"items":[{"uid":"eb5379d9203e067c","reportUrl":"https://novasamatech.github.io/test-runner/4894//#testresult/eb5379d9203e067c","status":"passed","time":{"start":1710691269099,"stop":1710691269536,"duration":437}},{"uid":"d08f15a5a1d9572d","reportUrl":"https://novasamatech.github.io/test-runner/4893//#testresult/d08f15a5a1d9572d","status":"passed","time":{"start":1710676864983,"stop":1710676865546,"duration":563}},{"uid":"3d7a4f99f952be01","reportUrl":"https://novasamatech.github.io/test-runner/4892//#testresult/3d7a4f99f952be01","status":"passed","time":{"start":1710662465909,"stop":1710662466830,"duration":921}},{"uid":"80f83bcc7ae9f958","reportUrl":"https://novasamatech.github.io/test-runner/4891//#testresult/80f83bcc7ae9f958","status":"passed","time":{"start":1710648063761,"stop":1710648064564,"duration":803}},{"uid":"1c8c94ce7b578049","reportUrl":"https://novasamatech.github.io/test-runner/4890//#testresult/1c8c94ce7b578049","status":"passed","time":{"start":1710633703542,"stop":1710633704242,"duration":700}},{"uid":"11e76c3bdf7b51d3","reportUrl":"https://novasamatech.github.io/test-runner/4889//#testresult/11e76c3bdf7b51d3","status":"passed","time":{"start":1710619272442,"stop":1710619272775,"duration":333}},{"uid":"ddf054f2809ef570","reportUrl":"https://novasamatech.github.io/test-runner/4888//#testresult/ddf054f2809ef570","status":"passed","time":{"start":1710604860104,"stop":1710604860730,"duration":626}},{"uid":"e10efc8f7757e732","reportUrl":"https://novasamatech.github.io/test-runner/4887//#testresult/e10efc8f7757e732","status":"passed","time":{"start":1710590464242,"stop":1710590464617,"duration":375}},{"uid":"15bc55a0a7ee529f","reportUrl":"https://novasamatech.github.io/test-runner/4886//#testresult/15bc55a0a7ee529f","status":"passed","time":{"start":1710576067676,"stop":1710576068547,"duration":871}},{"uid":"991d94f21e25b75f","reportUrl":"https://novasamatech.github.io/test-runner/4885//#testresult/991d94f21e25b75f","status":"passed","time":{"start":1710561661162,"stop":1710561661340,"duration":178}},{"uid":"422e53d735e8e51f","reportUrl":"https://novasamatech.github.io/test-runner/4884//#testresult/422e53d735e8e51f","status":"passed","time":{"start":1710547296251,"stop":1710547296933,"duration":682}},{"uid":"db4c6774873b3f06","reportUrl":"https://novasamatech.github.io/test-runner/4883//#testresult/db4c6774873b3f06","status":"passed","time":{"start":1710532861003,"stop":1710532861166,"duration":163}},{"uid":"342bbb22c6f40234","reportUrl":"https://novasamatech.github.io/test-runner/4882//#testresult/342bbb22c6f40234","status":"passed","time":{"start":1710518460351,"stop":1710518460927,"duration":576}},{"uid":"da3046ba3f74eb1e","reportUrl":"https://novasamatech.github.io/test-runner/4881//#testresult/da3046ba3f74eb1e","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1710504076363,"stop":1710504076460,"duration":97}},{"uid":"cf2911841badf560","reportUrl":"https://novasamatech.github.io/test-runner/4880//#testresult/cf2911841badf560","status":"passed","time":{"start":1710489663446,"stop":1710489663644,"duration":198}},{"uid":"ac81a3ad343fddb3","reportUrl":"https://novasamatech.github.io/test-runner/4879//#testresult/ac81a3ad343fddb3","status":"passed","time":{"start":1710475264677,"stop":1710475265274,"duration":597}},{"uid":"39453970e170528e","reportUrl":"https://novasamatech.github.io/test-runner/4878//#testresult/39453970e170528e","status":"passed","time":{"start":1710460893471,"stop":1710460893799,"duration":328}},{"uid":"eb24d23d8da42e36","reportUrl":"https://novasamatech.github.io/test-runner/4877//#testresult/eb24d23d8da42e36","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1710446470957,"stop":1710446471019,"duration":62}},{"uid":"4811ed8905aad452","reportUrl":"https://novasamatech.github.io/test-runner/4876//#testresult/4811ed8905aad452","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1710432079021,"stop":1710432079064,"duration":43}},{"uid":"d09086f0b0e59f35","reportUrl":"https://novasamatech.github.io/test-runner/4875//#testresult/d09086f0b0e59f35","status":"passed","time":{"start":1710417691151,"stop":1710417691315,"duration":164}}]},"tags":[]},"source":"3e3916118b0dc5cb.json","parameterValues":["{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"]}