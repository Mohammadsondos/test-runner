{"uid":"85fce1c607f0553d","name":"test_address_prefix[Test for Basilisk]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"2a4a4c2e52e72c186c525268ede85dec","time":{"start":1666440336644,"stop":1666440338089,"duration":1445},"status":"broken","statusMessage":"ConnectionResetError: [Errno 104] Connection reset by peer","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f9d19803670>\nchain = <tests.utils.chain_model.Chain object at 0x7f9d19ca6850>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/chain_model.py:35: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/create_type_file.py:52: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2374: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2348: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:1136: in init_runtime\n    self.metadata_decoder = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:931: in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:655: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:359: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:382: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:403: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:442: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:352: in recv_frame\n    payload = self.recv_strict(length)\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:526: in _recv\n    return recv(self.sock, bufsize)\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:108: in recv\n    bytes_ = _recv()\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:87: in _recv\n    return sock.recv(bufsize)\n/usr/lib/python3.8/ssl.py:1226: in recv\n    return self.read(buflen)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.1.1.77', 35682)>\nlen = 16384, buffer = None\n\n    def read(self, len=1024, buffer=None):\n        \"\"\"Read up to LEN bytes and return them.\n        Return zero-length string on EOF.\"\"\"\n    \n        self._checkClosed()\n        if self._sslobj is None:\n            raise ValueError(\"Read on closed or unwrapped SSL socket.\")\n        try:\n            if buffer is not None:\n                return self._sslobj.read(len, buffer)\n            else:\n>               return self._sslobj.read(len)\nE               ConnectionResetError: [Errno 104] Connection reset by peer\n\n/usr/lib/python3.8/ssl.py:1101: ConnectionResetError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az208-550"},{"name":"thread","value":"1647-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f9d19ca6850>"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"85fce1c607f0553d.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f9d19ca6850>"]}