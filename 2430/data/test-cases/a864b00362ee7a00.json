{"uid":"a864b00362ee7a00","name":"test_can_create_connection[Test for Pichiu, url: wss://pichiu.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5d38ef88a22293e2d22b76dd74c65b9f","time":{"start":1675959649047,"stop":1675959708670,"duration":59623},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"2843f30cc1583d70","name":"stdout","source":"2843f30cc1583d70.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az262-319"},{"name":"thread","value":"1719-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"402d6d3537ac932d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1675959579102,"stop":1675959638909,"duration":59807}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":115,"skipped":0,"passed":568,"unknown":0,"total":683},"items":[{"uid":"ea77362a442fb658","reportUrl":"https://nova-wallet.github.io/test-runner/2429//#testresult/ea77362a442fb658","status":"passed","time":{"start":1675945742889,"stop":1675945743265,"duration":376}},{"uid":"9e57cfbaeff253ab","reportUrl":"https://nova-wallet.github.io/test-runner/2428//#testresult/9e57cfbaeff253ab","status":"passed","time":{"start":1675930695351,"stop":1675930695679,"duration":328}},{"uid":"5355ebb5269905ea","reportUrl":"https://nova-wallet.github.io/test-runner/2426//#testresult/5355ebb5269905ea","status":"passed","time":{"start":1675904964203,"stop":1675904964463,"duration":260}},{"uid":"270a70cb199143b","reportUrl":"https://nova-wallet.github.io/test-runner/2425//#testresult/270a70cb199143b","status":"passed","time":{"start":1675887300661,"stop":1675887300860,"duration":199}},{"uid":"29db4a3dc07a0c47","reportUrl":"https://nova-wallet.github.io/test-runner/2424//#testresult/29db4a3dc07a0c47","status":"passed","time":{"start":1675873184021,"stop":1675873184364,"duration":343}},{"uid":"d506e28356d7fed3","reportUrl":"https://nova-wallet.github.io/test-runner/2423//#testresult/d506e28356d7fed3","status":"passed","time":{"start":1675859203370,"stop":1675859203434,"duration":64}},{"uid":"cf546a8c127e8b6c","reportUrl":"https://nova-wallet.github.io/test-runner/2422//#testresult/cf546a8c127e8b6c","status":"passed","time":{"start":1675844312482,"stop":1675844312524,"duration":42}},{"uid":"e69b7129c0e9e7eb","reportUrl":"https://nova-wallet.github.io/test-runner/2421//#testresult/e69b7129c0e9e7eb","status":"passed","time":{"start":1675829831827,"stop":1675829831884,"duration":57}},{"uid":"ffda2fcc41951b00","reportUrl":"https://nova-wallet.github.io/test-runner/2420//#testresult/ffda2fcc41951b00","status":"passed","time":{"start":1675818566496,"stop":1675818566578,"duration":82}},{"uid":"8dd0a4fbde43b112","reportUrl":"https://nova-wallet.github.io/test-runner/2419//#testresult/8dd0a4fbde43b112","status":"passed","time":{"start":1675800886070,"stop":1675800886299,"duration":229}},{"uid":"9a9bd93a58ce70b6","reportUrl":"https://nova-wallet.github.io/test-runner/2417//#testresult/9a9bd93a58ce70b6","status":"passed","time":{"start":1675772841770,"stop":1675772842090,"duration":320}},{"uid":"f29d82d522d31e21","reportUrl":"https://nova-wallet.github.io/test-runner/2416//#testresult/f29d82d522d31e21","status":"passed","time":{"start":1675757885028,"stop":1675757885128,"duration":100}},{"uid":"a7e13aebc89a1523","reportUrl":"https://nova-wallet.github.io/test-runner/2415//#testresult/a7e13aebc89a1523","status":"passed","time":{"start":1675743396294,"stop":1675743396356,"duration":62}},{"uid":"dd2e42e0e020d4a2","reportUrl":"https://nova-wallet.github.io/test-runner/2414//#testresult/dd2e42e0e020d4a2","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1675732129028,"stop":1675732188909,"duration":59881}},{"uid":"15ed96733f6904ca","reportUrl":"https://nova-wallet.github.io/test-runner/2413//#testresult/15ed96733f6904ca","status":"passed","time":{"start":1675714511697,"stop":1675714512038,"duration":341}},{"uid":"c8407f0ce847e6ca","reportUrl":"https://nova-wallet.github.io/test-runner/2412//#testresult/c8407f0ce847e6ca","status":"passed","time":{"start":1675700343421,"stop":1675700343757,"duration":336}},{"uid":"7798975a4e7ec2f5","reportUrl":"https://nova-wallet.github.io/test-runner/2410//#testresult/7798975a4e7ec2f5","status":"passed","time":{"start":1675671503518,"stop":1675671503847,"duration":329}},{"uid":"d226b3071f525885","reportUrl":"https://nova-wallet.github.io/test-runner/2409//#testresult/d226b3071f525885","status":"passed","time":{"start":1675657014123,"stop":1675657014434,"duration":311}},{"uid":"617920c989242cae","reportUrl":"https://nova-wallet.github.io/test-runner/2408//#testresult/617920c989242cae","status":"passed","time":{"start":1675645567912,"stop":1675645568126,"duration":214}},{"uid":"a8cb2045e8e7428e","reportUrl":"https://nova-wallet.github.io/test-runner/2407//#testresult/a8cb2045e8e7428e","status":"passed","time":{"start":1675627995341,"stop":1675627995410,"duration":69}}]},"tags":[]},"source":"a864b00362ee7a00.json","parameterValues":["{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"]}