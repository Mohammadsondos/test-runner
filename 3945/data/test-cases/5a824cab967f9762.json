{"uid":"5a824cab967f9762","name":"test_has_new_assets[Test for Tinkernet]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"d969e3cf97286b18cdcce33aa2d558b4","time":{"start":1697242304541,"stop":1697242425399,"duration":120858},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fcc626e9e10>\nchain = <scripts.utils.chain_model.Chain object at 0x7fcc6294ae30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fcc626e9e10>\nchain = <scripts.utils.chain_model.Chain object at 0x7fcc6294ae30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"280cb16ed82e77bf","name":"stdout","source":"280cb16ed82e77bf.txt","type":"text/plain","size":639}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az166-517"},{"name":"thread","value":"2386-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fcc6294ae30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cc0a5b09968f2c40","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697242048658,"stop":1697242289516,"duration":240858}},{"uid":"b3ceecda927aada0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697241792719,"stop":1697242033627,"duration":240908}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":295,"unknown":0,"total":304},"items":[{"uid":"d5370d3b927f7ce2","reportUrl":"https://novasamatech.github.io/test-runner/3944//#testresult/d5370d3b927f7ce2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697227667695,"stop":1697227788470,"duration":120775}},{"uid":"48a8c60ad32d3253","reportUrl":"https://novasamatech.github.io/test-runner/3943//#testresult/48a8c60ad32d3253","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697213388751,"stop":1697213509561,"duration":120810}},{"uid":"945336df79835e67","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/945336df79835e67","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697198841306,"stop":1697198902262,"duration":60956}},{"uid":"5a5bc9d20e18eebd","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/5a5bc9d20e18eebd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697184838888,"stop":1697184899757,"duration":60869}},{"uid":"ee1bba83bf20961","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/ee1bba83bf20961","status":"passed","time":{"start":1697169756371,"stop":1697169762062,"duration":5691}},{"uid":"30099599a86ac3a2","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/30099599a86ac3a2","status":"passed","time":{"start":1697155380459,"stop":1697155385632,"duration":5173}},{"uid":"b0f17939340ce683","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/b0f17939340ce683","status":"passed","time":{"start":1697140934026,"stop":1697140937806,"duration":3780}},{"uid":"e6cad9980bd07eb1","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/e6cad9980bd07eb1","status":"passed","time":{"start":1697126539622,"stop":1697126543462,"duration":3840}},{"uid":"59e0957d1d7fd6e3","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/59e0957d1d7fd6e3","status":"passed","time":{"start":1697112135261,"stop":1697112139447,"duration":4186}},{"uid":"46fe8fef07cdec73","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/46fe8fef07cdec73","status":"passed","time":{"start":1697097741068,"stop":1697097745295,"duration":4227}},{"uid":"3f3721c7a8cd1bdb","reportUrl":"https://novasamatech.github.io/test-runner/3934//#testresult/3f3721c7a8cd1bdb","status":"passed","time":{"start":1697083336289,"stop":1697083345352,"duration":9063}},{"uid":"79e076938095d652","reportUrl":"https://novasamatech.github.io/test-runner/3933//#testresult/79e076938095d652","status":"passed","time":{"start":1697069012711,"stop":1697069019943,"duration":7232}},{"uid":"c4a0f72186cdd7b0","reportUrl":"https://novasamatech.github.io/test-runner/3932//#testresult/c4a0f72186cdd7b0","status":"passed","time":{"start":1697054536343,"stop":1697054540739,"duration":4396}},{"uid":"7f13e078965b2bd5","reportUrl":"https://novasamatech.github.io/test-runner/3931//#testresult/7f13e078965b2bd5","status":"passed","time":{"start":1697040157218,"stop":1697040161845,"duration":4627}},{"uid":"e5465efee4514304","reportUrl":"https://novasamatech.github.io/test-runner/3930//#testresult/e5465efee4514304","status":"passed","time":{"start":1697025738946,"stop":1697025743412,"duration":4466}},{"uid":"b1a45bb17c3504cf","reportUrl":"https://novasamatech.github.io/test-runner/3929//#testresult/b1a45bb17c3504cf","status":"passed","time":{"start":1697011353527,"stop":1697011359777,"duration":6250}},{"uid":"eb7dadec93562b47","reportUrl":"https://novasamatech.github.io/test-runner/3928//#testresult/eb7dadec93562b47","status":"passed","time":{"start":1696996952886,"stop":1696996956825,"duration":3939}},{"uid":"dd834b0b01206728","reportUrl":"https://novasamatech.github.io/test-runner/3927//#testresult/dd834b0b01206728","status":"passed","time":{"start":1696982579748,"stop":1696982584427,"duration":4679}},{"uid":"a9c868628975ebfc","reportUrl":"https://novasamatech.github.io/test-runner/3926//#testresult/a9c868628975ebfc","status":"passed","time":{"start":1696968141676,"stop":1696968146539,"duration":4863}},{"uid":"7fcb04e211393d9d","reportUrl":"https://novasamatech.github.io/test-runner/3925//#testresult/7fcb04e211393d9d","status":"passed","time":{"start":1696953746999,"stop":1696953751049,"duration":4050}}]},"tags":[]},"source":"5a824cab967f9762.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fcc6294ae30>"]}