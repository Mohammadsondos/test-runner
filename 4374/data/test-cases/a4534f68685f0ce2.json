{"uid":"a4534f68685f0ce2","name":"test_can_create_connection[Test for Frequency, url: wss://0.rpc.frequency.xyz]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"19c26034bddffc5dd1f8d98e703505a3","time":{"start":1703290059570,"stop":1703290059570,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1703290038608,"stop":1703290043784,"duration":5176},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 143, in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 316, in read_headers\n    line = recv_line(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 133, in recv_line\n    c = recv(sock, 1)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 124, in recv\n    raise WebSocketConnectionClosedException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703290058859,"stop":1703290059569,"duration":710},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"b5b056cd699bfd78","name":"stdout","source":"b5b056cd699bfd78.txt","type":"text/plain","size":112}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az775-694"},{"name":"thread","value":"2207-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://0.rpc.frequency.xyz', 'name': 'Frequency'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7de332f412c3c6fa","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1703290038607,"stop":1703290038607,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":650,"unknown":0,"total":662},"items":[{"uid":"421410c73ed14759","reportUrl":"https://novasamatech.github.io/test-runner/4373//#testresult/421410c73ed14759","status":"passed","time":{"start":1703275704986,"stop":1703275704987,"duration":1}},{"uid":"1d8b3ea86f35a0c5","reportUrl":"https://novasamatech.github.io/test-runner/4372//#testresult/1d8b3ea86f35a0c5","status":"passed","time":{"start":1703261339620,"stop":1703261339620,"duration":0}},{"uid":"33404e9bf0c26bf0","reportUrl":"https://novasamatech.github.io/test-runner/4371//#testresult/33404e9bf0c26bf0","status":"passed","time":{"start":1703246952840,"stop":1703246952840,"duration":0}},{"uid":"12d0146b982dc961","reportUrl":"https://novasamatech.github.io/test-runner/4370//#testresult/12d0146b982dc961","status":"passed","time":{"start":1703232541767,"stop":1703232541767,"duration":0}},{"uid":"fcf0c097404ec5bf","reportUrl":"https://novasamatech.github.io/test-runner/4369//#testresult/fcf0c097404ec5bf","status":"passed","time":{"start":1703218130180,"stop":1703218130180,"duration":0}},{"uid":"dd225e1de05d871","reportUrl":"https://novasamatech.github.io/test-runner/4368//#testresult/dd225e1de05d871","status":"passed","time":{"start":1703203762716,"stop":1703203762717,"duration":1}},{"uid":"96474fdd4519082b","reportUrl":"https://novasamatech.github.io/test-runner/4367//#testresult/96474fdd4519082b","status":"passed","time":{"start":1703189412589,"stop":1703189412589,"duration":0}},{"uid":"e88104099dabc5b0","reportUrl":"https://novasamatech.github.io/test-runner/4366//#testresult/e88104099dabc5b0","status":"passed","time":{"start":1703176554003,"stop":1703176554004,"duration":1}},{"uid":"831852887903fe5","reportUrl":"https://novasamatech.github.io/test-runner/4365//#testresult/831852887903fe5","status":"passed","time":{"start":1703175010651,"stop":1703175010651,"duration":0}},{"uid":"9489312fcc8bbaef","reportUrl":"https://novasamatech.github.io/test-runner/4364//#testresult/9489312fcc8bbaef","status":"passed","time":{"start":1703160621571,"stop":1703160621572,"duration":1}},{"uid":"3675c36d44fea8ec","reportUrl":"https://novasamatech.github.io/test-runner/4363//#testresult/3675c36d44fea8ec","status":"passed","time":{"start":1703146136462,"stop":1703146136462,"duration":0}},{"uid":"209b7349e39fbd38","reportUrl":"https://novasamatech.github.io/test-runner/4362//#testresult/209b7349e39fbd38","status":"passed","time":{"start":1703131657498,"stop":1703131657499,"duration":1}},{"uid":"2c89d79e64ad15e1","reportUrl":"https://novasamatech.github.io/test-runner/4361//#testresult/2c89d79e64ad15e1","status":"passed","time":{"start":1703117288830,"stop":1703117288830,"duration":0}},{"uid":"978093709f689bbc","reportUrl":"https://novasamatech.github.io/test-runner/4360//#testresult/978093709f689bbc","status":"passed","time":{"start":1703102878370,"stop":1703102878370,"duration":0}},{"uid":"20ed0afd9511853d","reportUrl":"https://novasamatech.github.io/test-runner/4359//#testresult/20ed0afd9511853d","status":"passed","time":{"start":1703088602815,"stop":1703088602815,"duration":0}},{"uid":"7f1be375bc17f571","reportUrl":"https://novasamatech.github.io/test-runner/4358//#testresult/7f1be375bc17f571","status":"passed","time":{"start":1703074021472,"stop":1703074021473,"duration":1}},{"uid":"d6c33720cc02c91d","reportUrl":"https://novasamatech.github.io/test-runner/4357//#testresult/d6c33720cc02c91d","status":"passed","time":{"start":1703059577848,"stop":1703059577848,"duration":0}},{"uid":"388c6444eaf5ec58","reportUrl":"https://novasamatech.github.io/test-runner/4356//#testresult/388c6444eaf5ec58","status":"passed","time":{"start":1703045155675,"stop":1703045155675,"duration":0}},{"uid":"28f7e2b9dd3be203","reportUrl":"https://novasamatech.github.io/test-runner/4355//#testresult/28f7e2b9dd3be203","status":"passed","time":{"start":1703030815998,"stop":1703030815998,"duration":0}},{"uid":"a45abd079c51ff9e","reportUrl":"https://novasamatech.github.io/test-runner/4354//#testresult/a45abd079c51ff9e","status":"passed","time":{"start":1703016440927,"stop":1703016440927,"duration":0}}]},"tags":[]},"source":"a4534f68685f0ce2.json","parameterValues":["{'url': 'wss://0.rpc.frequency.xyz', 'name': 'Frequency'}"]}