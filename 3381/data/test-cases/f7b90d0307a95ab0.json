{"uid":"f7b90d0307a95ab0","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1689264323315,"stop":1689264323907,"duration":592},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff162100910>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff1623f51e0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff162100910>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff1623f51e0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"214f52047b56a4c7","name":"stdout","source":"214f52047b56a4c7.txt","type":"text/plain","size":1353}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az615-218"},{"name":"thread","value":"1936-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff1623f51e0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e945183fef9e168e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689264307675,"stop":1689264308288,"duration":613}},{"uid":"7d45dc6d5d10814b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689264291583,"stop":1689264292631,"duration":1048}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":378,"unknown":0,"total":385},"items":[{"uid":"fcbfb6861e988373","reportUrl":"https://novasamatech.github.io/test-runner/3380//#testresult/fcbfb6861e988373","status":"passed","time":{"start":1689249986487,"stop":1689249994755,"duration":8268}},{"uid":"351cc1010aff82de","reportUrl":"https://novasamatech.github.io/test-runner/3379//#testresult/351cc1010aff82de","status":"passed","time":{"start":1689235529304,"stop":1689235538967,"duration":9663}},{"uid":"ff65c307cdef6d88","reportUrl":"https://novasamatech.github.io/test-runner/3378//#testresult/ff65c307cdef6d88","status":"passed","time":{"start":1689221116905,"stop":1689221128993,"duration":12088}},{"uid":"148567bafb347266","reportUrl":"https://novasamatech.github.io/test-runner/3377//#testresult/148567bafb347266","status":"passed","time":{"start":1689207359593,"stop":1689207368654,"duration":9061}},{"uid":"a89c5da7d708413d","reportUrl":"https://novasamatech.github.io/test-runner/3376//#testresult/a89c5da7d708413d","status":"passed","time":{"start":1689192331093,"stop":1689192338757,"duration":7664}},{"uid":"2e167049117dfc8e","reportUrl":"https://novasamatech.github.io/test-runner/3375//#testresult/2e167049117dfc8e","status":"passed","time":{"start":1689177931896,"stop":1689177940465,"duration":8569}},{"uid":"9ce132b7f9ed9a69","reportUrl":"https://novasamatech.github.io/test-runner/3374//#testresult/9ce132b7f9ed9a69","status":"passed","time":{"start":1689163585946,"stop":1689163595530,"duration":9584}},{"uid":"16032fce897aca0","reportUrl":"https://novasamatech.github.io/test-runner/3373//#testresult/16032fce897aca0","status":"passed","time":{"start":1689149108620,"stop":1689149119576,"duration":10956}},{"uid":"98996cda9fe7bcbd","reportUrl":"https://novasamatech.github.io/test-runner/3372//#testresult/98996cda9fe7bcbd","status":"passed","time":{"start":1689134686206,"stop":1689134696479,"duration":10273}},{"uid":"5b9613b8703fd591","reportUrl":"https://novasamatech.github.io/test-runner/3371//#testresult/5b9613b8703fd591","status":"passed","time":{"start":1689121041968,"stop":1689121048361,"duration":6393}},{"uid":"38f04dafe16a8929","reportUrl":"https://novasamatech.github.io/test-runner/3370//#testresult/38f04dafe16a8929","status":"passed","time":{"start":1689105911363,"stop":1689105917928,"duration":6565}},{"uid":"5ddb8f8d6ff7d364","reportUrl":"https://novasamatech.github.io/test-runner/3369//#testresult/5ddb8f8d6ff7d364","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689091536783,"stop":1689091537352,"duration":569}},{"uid":"41cf87ef0c2ad8fb","reportUrl":"https://novasamatech.github.io/test-runner/3368//#testresult/41cf87ef0c2ad8fb","status":"passed","time":{"start":1689077194100,"stop":1689077206147,"duration":12047}},{"uid":"9b020c879babd6f5","reportUrl":"https://novasamatech.github.io/test-runner/3366//#testresult/9b020c879babd6f5","status":"passed","time":{"start":1689048303359,"stop":1689048309442,"duration":6083}},{"uid":"966776521abf386a","reportUrl":"https://novasamatech.github.io/test-runner/3367//#testresult/966776521abf386a","status":"passed","time":{"start":1689062735122,"stop":1689062744187,"duration":9065}},{"uid":"9d4877a153f4ccbb","reportUrl":"https://novasamatech.github.io/test-runner/3365//#testresult/9d4877a153f4ccbb","status":"passed","time":{"start":1689034587949,"stop":1689034595547,"duration":7598}},{"uid":"4d25214ec4c7551e","reportUrl":"https://novasamatech.github.io/test-runner/3364//#testresult/4d25214ec4c7551e","status":"passed","time":{"start":1689019492147,"stop":1689019498278,"duration":6131}},{"uid":"16d4ffbada409a5a","reportUrl":"https://novasamatech.github.io/test-runner/3363//#testresult/16d4ffbada409a5a","status":"passed","time":{"start":1689005114558,"stop":1689005125059,"duration":10501}},{"uid":"141552886a46bd0","reportUrl":"https://novasamatech.github.io/test-runner/3362//#testresult/141552886a46bd0","status":"passed","time":{"start":1688990775330,"stop":1688990785168,"duration":9838}},{"uid":"f063a4cd2ff3d862","reportUrl":"https://novasamatech.github.io/test-runner/3361//#testresult/f063a4cd2ff3d862","status":"passed","time":{"start":1688976346688,"stop":1688976354374,"duration":7686}}]},"tags":[]},"source":"f7b90d0307a95ab0.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff1623f51e0>"]}