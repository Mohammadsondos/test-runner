{"uid":"1751229c84177087","name":"test_precision[Test for Aventus]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"2d9489df664c27ee626d51296433783b","time":{"start":1699300962084,"stop":1699300962885,"duration":801},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fa2e489bac0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa2e4802b60>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fa2e489bac0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa2e4802b60>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"775fd0f00857d253","name":"stdout","source":"775fd0f00857d253.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az1215-985"},{"name":"thread","value":"2202-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa2e4802b60>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"30344e5979d64668","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699300946279,"stop":1699300947059,"duration":780}},{"uid":"7e070ebb097b47e6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699300930352,"stop":1699300931198,"duration":846}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":26,"skipped":0,"passed":423,"unknown":0,"total":449},"items":[{"uid":"b36a3638679d7abd","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/b36a3638679d7abd","status":"passed","time":{"start":1699286573414,"stop":1699286576915,"duration":3501}},{"uid":"b0be767c6e38e215","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/b0be767c6e38e215","status":"passed","time":{"start":1699272224354,"stop":1699272231050,"duration":6696}},{"uid":"c973609a3c50d920","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/c973609a3c50d920","status":"passed","time":{"start":1699257749310,"stop":1699257754800,"duration":5490}},{"uid":"ccf9521cb4cbdf8","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/ccf9521cb4cbdf8","status":"passed","time":{"start":1699243358132,"stop":1699243363667,"duration":5535}},{"uid":"ec6ade428da628be","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/ec6ade428da628be","status":"passed","time":{"start":1699228974325,"stop":1699228977987,"duration":3662}},{"uid":"509792c54fdad29a","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/509792c54fdad29a","status":"passed","time":{"start":1699214529403,"stop":1699214533122,"duration":3719}},{"uid":"37e294b326d5d2e3","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/37e294b326d5d2e3","status":"passed","time":{"start":1699200137545,"stop":1699200141362,"duration":3817}},{"uid":"b13686dd40192905","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/b13686dd40192905","status":"passed","time":{"start":1699185731613,"stop":1699185735745,"duration":4132}},{"uid":"367a72117641984c","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/367a72117641984c","status":"passed","time":{"start":1699171332011,"stop":1699171335843,"duration":3832}},{"uid":"581a2993e4720489","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/581a2993e4720489","status":"passed","time":{"start":1699156967829,"stop":1699156973105,"duration":5276}},{"uid":"e4ca93d7fc43f557","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/e4ca93d7fc43f557","status":"passed","time":{"start":1699142576139,"stop":1699142581871,"duration":5732}},{"uid":"9d358b500da221ca","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/9d358b500da221ca","status":"passed","time":{"start":1699128174700,"stop":1699128185520,"duration":10820}},{"uid":"27d682adf758a0e6","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/27d682adf758a0e6","status":"passed","time":{"start":1699113767817,"stop":1699113774617,"duration":6800}},{"uid":"b246580a170fa256","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/b246580a170fa256","status":"passed","time":{"start":1699099322095,"stop":1699099325017,"duration":2922}},{"uid":"cc46469775be8c4","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/cc46469775be8c4","status":"passed","time":{"start":1699084967861,"stop":1699084973895,"duration":6034}},{"uid":"837e65ddf7ebb293","reportUrl":"https://novasamatech.github.io/test-runner/4073//#testresult/837e65ddf7ebb293","status":"passed","time":{"start":1699070572724,"stop":1699070579092,"duration":6368}},{"uid":"a3c913e2956e0553","reportUrl":"https://novasamatech.github.io/test-runner/4071//#testresult/a3c913e2956e0553","status":"passed","time":{"start":1699041739454,"stop":1699041744304,"duration":4850}},{"uid":"9cc2744a7c3bc309","reportUrl":"https://novasamatech.github.io/test-runner/4072//#testresult/9cc2744a7c3bc309","status":"passed","time":{"start":1699056217574,"stop":1699056222933,"duration":5359}},{"uid":"1a656ad65ccd8111","reportUrl":"https://novasamatech.github.io/test-runner/4070//#testresult/1a656ad65ccd8111","status":"passed","time":{"start":1699027361323,"stop":1699027365479,"duration":4156}},{"uid":"74718894716188d9","reportUrl":"https://novasamatech.github.io/test-runner/4069//#testresult/74718894716188d9","status":"passed","time":{"start":1699013002303,"stop":1699013007074,"duration":4771}}]},"tags":[]},"source":"1751229c84177087.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa2e4802b60>"]}