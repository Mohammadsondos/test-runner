{"uid":"e07f5256809f2142","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://eth.llamarpc.com]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"3f32f3f9affb5ea13b781953ebf105f9","time":{"start":1715472137906,"stop":1715472148077,"duration":10171},"status":"failed","statusMessage":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f69617f0970>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f69617f0970>> = <web3.main.Web3 object at 0x7f69617f0970>.is_connected","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f69628e1960>\ndata = {'name': 'Ethereum', 'url': 'https://eth.llamarpc.com'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n>       assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\nE       AssertionError: Failed to connect to Ethereum RPC node\nE       assert False\nE        +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f69617f0970>>()\nE        +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f69617f0970>> = <web3.main.Web3 object at 0x7f69617f0970>.is_connected\n\ntests/test_eth_nodes_availability.py:37: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1382-623"},{"name":"thread","value":"2153-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9d841c165c99cc3a","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f6961763c70>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f6961763c70>> = <web3.main.Web3 object at 0x7f6961763c70>.is_connected","time":{"start":1715472117771,"stop":1715472132895,"duration":15124}},{"uid":"43401e020fe39649","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f69628e2f80>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f69628e2f80>> = <web3.main.Web3 object at 0x7f69628e2f80>.is_connected","time":{"start":1715472102544,"stop":1715472112705,"duration":10161}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":57,"skipped":0,"passed":1245,"unknown":0,"total":1308},"items":[{"uid":"3797300eb9a0d2b0","reportUrl":"https://novasamatech.github.io/test-runner/5232//#testresult/3797300eb9a0d2b0","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fdb5c4f0940>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fdb5c4f0940>> = <web3.main.Web3 object at 0x7fdb5c4f0940>.is_connected","time":{"start":1715486487891,"stop":1715486498130,"duration":10239}},{"uid":"acd67ebcc8b1673","reportUrl":"https://novasamatech.github.io/test-runner/5230//#testresult/acd67ebcc8b1673","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1715457678806,"stop":1715457678867,"duration":61}},{"uid":"e3cf642e28a509","reportUrl":"https://novasamatech.github.io/test-runner/5229//#testresult/e3cf642e28a509","status":"passed","time":{"start":1715443266298,"stop":1715443267000,"duration":702}},{"uid":"24d801f848d6fddc","reportUrl":"https://novasamatech.github.io/test-runner/5228//#testresult/24d801f848d6fddc","status":"passed","time":{"start":1715428907967,"stop":1715428908232,"duration":265}},{"uid":"726c7c01631c859d","reportUrl":"https://novasamatech.github.io/test-runner/5226//#testresult/726c7c01631c859d","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f9413480a30>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f9413480a30>> = <web3.main.Web3 object at 0x7f9413480a30>.is_connected","time":{"start":1715400089917,"stop":1715400100142,"duration":10225}},{"uid":"e8e6aa906b8a0cfc","reportUrl":"https://novasamatech.github.io/test-runner/5227//#testresult/e8e6aa906b8a0cfc","status":"passed","time":{"start":1715414458935,"stop":1715414459297,"duration":362}},{"uid":"94bde2b9c707eb3d","reportUrl":"https://novasamatech.github.io/test-runner/5225//#testresult/94bde2b9c707eb3d","status":"passed","time":{"start":1715385696613,"stop":1715385697003,"duration":390}},{"uid":"c33375fd019d7a72","reportUrl":"https://novasamatech.github.io/test-runner/5224//#testresult/c33375fd019d7a72","status":"passed","time":{"start":1715371274624,"stop":1715371274969,"duration":345}},{"uid":"9d69f986241e0700","reportUrl":"https://novasamatech.github.io/test-runner/5223//#testresult/9d69f986241e0700","status":"broken","statusDetails":"requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='eth.llamarpc.com', port=443): Read timed out. (read timeout=10)","time":{"start":1715356894971,"stop":1715356945824,"duration":50853}},{"uid":"104b7101e69c52d6","reportUrl":"https://novasamatech.github.io/test-runner/5221//#testresult/104b7101e69c52d6","status":"passed","time":{"start":1715328101370,"stop":1715328101577,"duration":207}},{"uid":"830c9dccf707eb6e","reportUrl":"https://novasamatech.github.io/test-runner/5222//#testresult/830c9dccf707eb6e","status":"passed","time":{"start":1715342480056,"stop":1715342480263,"duration":207}},{"uid":"8d30c294ddc4e29e","reportUrl":"https://novasamatech.github.io/test-runner/5220//#testresult/8d30c294ddc4e29e","status":"passed","time":{"start":1715313663484,"stop":1715313663694,"duration":210}},{"uid":"45d296cbadbd73e5","reportUrl":"https://novasamatech.github.io/test-runner/5219//#testresult/45d296cbadbd73e5","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f7028a00a90>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f7028a00a90>> = <web3.main.Web3 object at 0x7f7028a00a90>.is_connected","time":{"start":1715299345855,"stop":1715299356304,"duration":10449}},{"uid":"8b5a7bda6d89e8ff","reportUrl":"https://novasamatech.github.io/test-runner/5217//#testresult/8b5a7bda6d89e8ff","status":"passed","time":{"start":1715270458091,"stop":1715270458580,"duration":489}},{"uid":"54bd0b130c428458","reportUrl":"https://novasamatech.github.io/test-runner/5218//#testresult/54bd0b130c428458","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f83997d1a80>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f83997d1a80>> = <web3.main.Web3 object at 0x7f83997d1a80>.is_connected","time":{"start":1715284881476,"stop":1715284891687,"duration":10211}},{"uid":"45f71a612af1e13c","reportUrl":"https://novasamatech.github.io/test-runner/5216//#testresult/45f71a612af1e13c","status":"passed","time":{"start":1715256062675,"stop":1715256063044,"duration":369}},{"uid":"fb416d394d392211","reportUrl":"https://novasamatech.github.io/test-runner/5215//#testresult/fb416d394d392211","status":"passed","time":{"start":1715241664373,"stop":1715241664903,"duration":530}},{"uid":"7303fa1520bc0918","reportUrl":"https://novasamatech.github.io/test-runner/5213//#testresult/7303fa1520bc0918","status":"passed","time":{"start":1715212914648,"stop":1715212915483,"duration":835}},{"uid":"aa161553024f9d55","reportUrl":"https://novasamatech.github.io/test-runner/5214//#testresult/aa161553024f9d55","status":"passed","time":{"start":1715227259108,"stop":1715227259954,"duration":846}},{"uid":"694c006d8cbc61be","reportUrl":"https://novasamatech.github.io/test-runner/5212//#testresult/694c006d8cbc61be","status":"passed","time":{"start":1715198459902,"stop":1715198460158,"duration":256}}]},"tags":[]},"source":"e07f5256809f2142.json","parameterValues":["{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"]}