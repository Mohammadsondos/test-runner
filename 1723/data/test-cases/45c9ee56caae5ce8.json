{"uid":"45c9ee56caae5ce8","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1665936291165,"stop":1665936291545,"duration":380},"status":"broken","statusMessage":"ValueError: scheme https is invalid","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:605: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:255: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:117: in connect\n    hostname, port_from_url, resource, is_secure = parse_url(url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nurl = '//basilisk.hydration.cloud/'\n\n    def parse_url(url):\n        \"\"\"\n        parse url and the result is tuple of\n        (hostname, port, resource path and the flag of secure mode)\n    \n        Parameters\n        ----------\n        url: str\n            url string.\n        \"\"\"\n        if \":\" not in url:\n            raise ValueError(\"url is invalid\")\n    \n        scheme, url = url.split(\":\", 1)\n    \n        parsed = urlparse(url, scheme=\"http\")\n        if parsed.hostname:\n            hostname = parsed.hostname\n        else:\n            raise ValueError(\"hostname is invalid\")\n        port = 0\n        if parsed.port:\n            port = parsed.port\n    \n        is_secure = False\n        if scheme == \"ws\":\n            if not port:\n                port = 80\n        elif scheme == \"wss\":\n            is_secure = True\n            if not port:\n                port = 443\n        else:\n>           raise ValueError(\"scheme %s is invalid\" % scheme)\nE           ValueError: scheme https is invalid\n\n../../../../.local/lib/python3.8/site-packages/websocket/_url.py:62: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az375-969"},{"name":"thread","value":"1648-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a51c249a46a2c813","status":"broken","statusDetails":"ValueError: scheme https is invalid","time":{"start":1665936280638,"stop":1665936281024,"duration":386}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":44,"unknown":0,"total":45},"items":[{"uid":"dbc2fc8131cfd132","reportUrl":"https://nova-wallet.github.io/test-runner/1722//#testresult/dbc2fc8131cfd132","status":"passed","time":{"start":1665921934716,"stop":1665921935008,"duration":292}},{"uid":"122f9168bb396e71","reportUrl":"https://nova-wallet.github.io/test-runner/1721//#testresult/122f9168bb396e71","status":"passed","time":{"start":1665907506273,"stop":1665907506742,"duration":469}},{"uid":"3320c0dc936be2cc","reportUrl":"https://nova-wallet.github.io/test-runner/1720//#testresult/3320c0dc936be2cc","status":"passed","time":{"start":1665894733767,"stop":1665894734364,"duration":597}},{"uid":"7994bb2ea6f834f2","reportUrl":"https://nova-wallet.github.io/test-runner/1719//#testresult/7994bb2ea6f834f2","status":"passed","time":{"start":1665879714844,"stop":1665879715236,"duration":392}},{"uid":"5aef59505420ec8d","reportUrl":"https://nova-wallet.github.io/test-runner/1718//#testresult/5aef59505420ec8d","status":"passed","time":{"start":1665864228224,"stop":1665864228776,"duration":552}},{"uid":"85aa11bc0a8ed7ef","reportUrl":"https://nova-wallet.github.io/test-runner/1717//#testresult/85aa11bc0a8ed7ef","status":"passed","time":{"start":1665849874795,"stop":1665849875425,"duration":630}},{"uid":"4dae59cb55b933f2","reportUrl":"https://nova-wallet.github.io/test-runner/1716//#testresult/4dae59cb55b933f2","status":"passed","time":{"start":1665835535428,"stop":1665835535752,"duration":324}},{"uid":"d39019626443a1f2","reportUrl":"https://nova-wallet.github.io/test-runner/1715//#testresult/d39019626443a1f2","status":"passed","time":{"start":1665821101024,"stop":1665821101524,"duration":500}},{"uid":"664e3c950d65ba30","reportUrl":"https://nova-wallet.github.io/test-runner/1714//#testresult/664e3c950d65ba30","status":"passed","time":{"start":1665808378694,"stop":1665808379163,"duration":469}},{"uid":"413686310b520f3","reportUrl":"https://nova-wallet.github.io/test-runner/1713//#testresult/413686310b520f3","status":"passed","time":{"start":1665793191115,"stop":1665793191620,"duration":505}},{"uid":"a9fcbc22386ce8c5","reportUrl":"https://nova-wallet.github.io/test-runner/1712//#testresult/a9fcbc22386ce8c5","status":"passed","time":{"start":1665777851538,"stop":1665777852078,"duration":540}},{"uid":"56827168916e6109","reportUrl":"https://nova-wallet.github.io/test-runner/1711//#testresult/56827168916e6109","status":"passed","time":{"start":1665763597390,"stop":1665763597890,"duration":500}},{"uid":"9317a67d096b8f8e","reportUrl":"https://nova-wallet.github.io/test-runner/1710//#testresult/9317a67d096b8f8e","status":"passed","time":{"start":1665749160957,"stop":1665749161267,"duration":310}},{"uid":"15e5002cb94af319","reportUrl":"https://nova-wallet.github.io/test-runner/1709//#testresult/15e5002cb94af319","status":"passed","time":{"start":1665734792286,"stop":1665734792758,"duration":472}},{"uid":"809f2083e2be3012","reportUrl":"https://nova-wallet.github.io/test-runner/1708//#testresult/809f2083e2be3012","status":"passed","time":{"start":1665732052584,"stop":1665732052931,"duration":347}},{"uid":"7b796e892e5d0caf","reportUrl":"https://nova-wallet.github.io/test-runner/1707//#testresult/7b796e892e5d0caf","status":"passed","time":{"start":1665691436596,"stop":1665691436984,"duration":388}},{"uid":"9821e8a9b72776f9","reportUrl":"https://nova-wallet.github.io/test-runner/1706//#testresult/9821e8a9b72776f9","status":"passed","time":{"start":1665677154549,"stop":1665677154932,"duration":383}},{"uid":"5402c4cc6cb10da3","reportUrl":"https://nova-wallet.github.io/test-runner/1705//#testresult/5402c4cc6cb10da3","status":"passed","time":{"start":1665671244154,"stop":1665671244696,"duration":542}},{"uid":"f0c3be1ace2b87c4","reportUrl":"https://nova-wallet.github.io/test-runner/1704//#testresult/f0c3be1ace2b87c4","status":"passed","time":{"start":1665662766680,"stop":1665662767128,"duration":448}},{"uid":"2ceef1f5c6856414","reportUrl":"https://nova-wallet.github.io/test-runner/1703//#testresult/2ceef1f5c6856414","status":"passed","time":{"start":1665648327889,"stop":1665648328368,"duration":479}}]},"tags":[]},"source":"45c9ee56caae5ce8.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}