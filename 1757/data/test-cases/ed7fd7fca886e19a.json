{"uid":"ed7fd7fca886e19a","name":"test_xcm_parameters[Check XCM data for Litentry]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"4584258c69ee830cb26b192df94a10a8","time":{"start":1666426116782,"stop":1666426118098,"duration":1316},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7f32aa4bbe80>\nchain = <tests.utils.chain_model.Chain object at 0x7f32aa4943d0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az183-529"},{"name":"thread","value":"1667-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f32aa4943d0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1e4ceb1901ed6f3","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666426099460,"stop":1666426106771,"duration":7311}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":68,"unknown":0,"total":79},"items":[{"uid":"34c610bbdeaa9d9f","reportUrl":"https://nova-wallet.github.io/test-runner/1756//#testresult/34c610bbdeaa9d9f","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666413101109,"stop":1666413102476,"duration":1367}},{"uid":"644695a7c2a6db6c","reportUrl":"https://nova-wallet.github.io/test-runner/1755//#testresult/644695a7c2a6db6c","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666398300248,"stop":1666398301434,"duration":1186}},{"uid":"da0110f79510eaa2","reportUrl":"https://nova-wallet.github.io/test-runner/1754//#testresult/da0110f79510eaa2","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666382848946,"stop":1666382850341,"duration":1395}},{"uid":"7234e7aace14ccf0","reportUrl":"https://nova-wallet.github.io/test-runner/1753//#testresult/7234e7aace14ccf0","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666368689399,"stop":1666368690434,"duration":1035}},{"uid":"8a0fd84c890e98c0","reportUrl":"https://nova-wallet.github.io/test-runner/1752//#testresult/8a0fd84c890e98c0","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666354166175,"stop":1666354167517,"duration":1342}},{"uid":"a1db4ced8f396abd","reportUrl":"https://nova-wallet.github.io/test-runner/1751//#testresult/a1db4ced8f396abd","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666339772802,"stop":1666339773846,"duration":1044}},{"uid":"ddacba6788a161cf","reportUrl":"https://nova-wallet.github.io/test-runner/1750//#testresult/ddacba6788a161cf","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666326657323,"stop":1666326658697,"duration":1374}},{"uid":"45888b82361caede","reportUrl":"https://nova-wallet.github.io/test-runner/1749//#testresult/45888b82361caede","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666311813877,"stop":1666311814911,"duration":1034}},{"uid":"8b4e4df02b960adc","reportUrl":"https://nova-wallet.github.io/test-runner/1748//#testresult/8b4e4df02b960adc","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666296501376,"stop":1666296502413,"duration":1037}},{"uid":"f319d5939655ce03","reportUrl":"https://nova-wallet.github.io/test-runner/1747//#testresult/f319d5939655ce03","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5346284000>, <root['max_block'] t1:{'ref_time':...}, t2:...ref_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:86298000>]})","time":{"start":1666282239893,"stop":1666282241270,"duration":1377}},{"uid":"f77bd4194ae95062","reportUrl":"https://nova-wallet.github.io/test-runner/1746//#testresult/f77bd4194ae95062","status":"passed","time":{"start":1666267775233,"stop":1666267785175,"duration":9942}},{"uid":"91aa324288e2e041","reportUrl":"https://nova-wallet.github.io/test-runner/1745//#testresult/91aa324288e2e041","status":"passed","time":{"start":1666253294240,"stop":1666253303126,"duration":8886}},{"uid":"fc85da04c1e53750","reportUrl":"https://nova-wallet.github.io/test-runner/1744//#testresult/fc85da04c1e53750","status":"passed","time":{"start":1666240367215,"stop":1666240377717,"duration":10502}},{"uid":"9feb94a65e67359","reportUrl":"https://nova-wallet.github.io/test-runner/1743//#testresult/9feb94a65e67359","status":"passed","time":{"start":1666225512827,"stop":1666225522220,"duration":9393}},{"uid":"aa1a4ad452a745c7","reportUrl":"https://nova-wallet.github.io/test-runner/1742//#testresult/aa1a4ad452a745c7","status":"passed","time":{"start":1666210037700,"stop":1666210048049,"duration":10349}},{"uid":"ec956602b874df6","reportUrl":"https://nova-wallet.github.io/test-runner/1741//#testresult/ec956602b874df6","status":"passed","time":{"start":1666195831100,"stop":1666195838295,"duration":7195}},{"uid":"599ec5fa4a15187e","reportUrl":"https://nova-wallet.github.io/test-runner/1740//#testresult/599ec5fa4a15187e","status":"passed","time":{"start":1666181376075,"stop":1666181383151,"duration":7076}},{"uid":"dd142bfffa5d4592","reportUrl":"https://nova-wallet.github.io/test-runner/1739//#testresult/dd142bfffa5d4592","status":"passed","time":{"start":1666167231736,"stop":1666167238940,"duration":7204}},{"uid":"3866feb12107a58b","reportUrl":"https://nova-wallet.github.io/test-runner/1738//#testresult/3866feb12107a58b","status":"passed","time":{"start":1666154572003,"stop":1666154582350,"duration":10347}},{"uid":"6f4eac719a67518d","reportUrl":"https://nova-wallet.github.io/test-runner/1737//#testresult/6f4eac719a67518d","status":"passed","time":{"start":1666139084557,"stop":1666139091311,"duration":6754}}]},"tags":[]},"source":"ed7fd7fca886e19a.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f32aa4943d0>"]}