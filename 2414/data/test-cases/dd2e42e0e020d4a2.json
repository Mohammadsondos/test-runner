{"uid":"dd2e42e0e020d4a2","name":"test_can_create_connection[Test for Pichiu, url: wss://pichiu.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5d38ef88a22293e2d22b76dd74c65b9f","time":{"start":1675732129028,"stop":1675732188909,"duration":59881},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"d38bb311ab0a5721","name":"stdout","source":"d38bb311ab0a5721.txt","type":"text/plain","size":254}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az262-561"},{"name":"thread","value":"1718-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c712f85144f6f64f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1675732059045,"stop":1675732118905,"duration":59860}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":114,"skipped":0,"passed":555,"unknown":0,"total":669},"items":[{"uid":"15ed96733f6904ca","reportUrl":"https://nova-wallet.github.io/test-runner/2413//#testresult/15ed96733f6904ca","status":"passed","time":{"start":1675714511697,"stop":1675714512038,"duration":341}},{"uid":"c8407f0ce847e6ca","reportUrl":"https://nova-wallet.github.io/test-runner/2412//#testresult/c8407f0ce847e6ca","status":"passed","time":{"start":1675700343421,"stop":1675700343757,"duration":336}},{"uid":"7798975a4e7ec2f5","reportUrl":"https://nova-wallet.github.io/test-runner/2410//#testresult/7798975a4e7ec2f5","status":"passed","time":{"start":1675671503518,"stop":1675671503847,"duration":329}},{"uid":"d226b3071f525885","reportUrl":"https://nova-wallet.github.io/test-runner/2409//#testresult/d226b3071f525885","status":"passed","time":{"start":1675657014123,"stop":1675657014434,"duration":311}},{"uid":"617920c989242cae","reportUrl":"https://nova-wallet.github.io/test-runner/2408//#testresult/617920c989242cae","status":"passed","time":{"start":1675645567912,"stop":1675645568126,"duration":214}},{"uid":"a8cb2045e8e7428e","reportUrl":"https://nova-wallet.github.io/test-runner/2407//#testresult/a8cb2045e8e7428e","status":"passed","time":{"start":1675627995341,"stop":1675627995410,"duration":69}},{"uid":"28b68ec42aeb9fb4","reportUrl":"https://nova-wallet.github.io/test-runner/2406//#testresult/28b68ec42aeb9fb4","status":"passed","time":{"start":1675613815713,"stop":1675613815805,"duration":92}},{"uid":"f13f333d1bf7dba1","reportUrl":"https://nova-wallet.github.io/test-runner/2405//#testresult/f13f333d1bf7dba1","status":"passed","time":{"start":1675599836580,"stop":1675599836873,"duration":293}},{"uid":"2421125fa65c89d9","reportUrl":"https://nova-wallet.github.io/test-runner/2404//#testresult/2421125fa65c89d9","status":"passed","time":{"start":1675584981259,"stop":1675584981309,"duration":50}},{"uid":"a2278bb7f2b15da5","reportUrl":"https://nova-wallet.github.io/test-runner/2403//#testresult/a2278bb7f2b15da5","status":"passed","time":{"start":1675570572358,"stop":1675570572584,"duration":226}},{"uid":"3a759f1470a91f1c","reportUrl":"https://nova-wallet.github.io/test-runner/2402//#testresult/3a759f1470a91f1c","status":"passed","time":{"start":1675559591536,"stop":1675559591760,"duration":224}},{"uid":"36c1e019683724cc","reportUrl":"https://nova-wallet.github.io/test-runner/2401//#testresult/36c1e019683724cc","status":"passed","time":{"start":1675541591138,"stop":1675541591204,"duration":66}},{"uid":"8a19ab26b388a384","reportUrl":"https://nova-wallet.github.io/test-runner/2400//#testresult/8a19ab26b388a384","status":"passed","time":{"start":1675527453560,"stop":1675527453871,"duration":311}},{"uid":"c77d22c3fdd72f9c","reportUrl":"https://nova-wallet.github.io/test-runner/2399//#testresult/c77d22c3fdd72f9c","status":"passed","time":{"start":1675513412500,"stop":1675513412899,"duration":399}},{"uid":"aac08d65c29d22ce","reportUrl":"https://nova-wallet.github.io/test-runner/2398//#testresult/aac08d65c29d22ce","status":"passed","time":{"start":1675498565320,"stop":1675498565383,"duration":63}},{"uid":"766079d89e05ce39","reportUrl":"https://nova-wallet.github.io/test-runner/2397//#testresult/766079d89e05ce39","status":"passed","time":{"start":1675484156028,"stop":1675484156091,"duration":63}},{"uid":"81bd9dead11c41d1","reportUrl":"https://nova-wallet.github.io/test-runner/2396//#testresult/81bd9dead11c41d1","status":"passed","time":{"start":1675472930296,"stop":1675472930367,"duration":71}},{"uid":"463d720493871a19","reportUrl":"https://nova-wallet.github.io/test-runner/2395//#testresult/463d720493871a19","status":"passed","time":{"start":1675455287240,"stop":1675455287538,"duration":298}},{"uid":"289b293a91bae592","reportUrl":"https://nova-wallet.github.io/test-runner/2394//#testresult/289b293a91bae592","status":"passed","time":{"start":1675441110357,"stop":1675441110635,"duration":278}},{"uid":"14d4f780dc4a3c05","reportUrl":"https://nova-wallet.github.io/test-runner/2393//#testresult/14d4f780dc4a3c05","status":"passed","time":{"start":1675427158902,"stop":1675427159173,"duration":271}}]},"tags":[]},"source":"dd2e42e0e020d4a2.json","parameterValues":["{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"]}