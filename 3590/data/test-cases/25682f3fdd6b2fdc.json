{"uid":"25682f3fdd6b2fdc","name":"test_has_new_assets[Test for krest]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"3d67617994964329092e8a296bddf514","time":{"start":1692231209594,"stop":1692231210641,"duration":1047},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9f61716560>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9f61966aa0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9f61716560>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9f61966aa0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"bcb7a073ad99b7a7","name":"stdout","source":"bcb7a073ad99b7a7.txt","type":"text/plain","size":1029}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1111-46"},{"name":"thread","value":"1961-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9f61966aa0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f758e2c3f5f1cee2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692231193682,"stop":1692231194579,"duration":897}},{"uid":"36bee30c2fe205b3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692231177277,"stop":1692231178637,"duration":1360}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":40,"unknown":0,"total":54},"items":[{"uid":"a104f3330b8a2ae3","reportUrl":"https://novasamatech.github.io/test-runner/3589//#testresult/a104f3330b8a2ae3","status":"passed","time":{"start":1692216341425,"stop":1692216350984,"duration":9559}},{"uid":"6024079b13832de1","reportUrl":"https://novasamatech.github.io/test-runner/3588//#testresult/6024079b13832de1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692201974661,"stop":1692201975591,"duration":930}},{"uid":"8907e6d55b8d3c48","reportUrl":"https://novasamatech.github.io/test-runner/3587//#testresult/8907e6d55b8d3c48","status":"passed","time":{"start":1692187593976,"stop":1692187599555,"duration":5579}},{"uid":"c3fefe77bb36c0a9","reportUrl":"https://novasamatech.github.io/test-runner/3586//#testresult/c3fefe77bb36c0a9","status":"passed","time":{"start":1692173170279,"stop":1692173173690,"duration":3411}},{"uid":"f7b884247c21d175","reportUrl":"https://novasamatech.github.io/test-runner/3585//#testresult/f7b884247c21d175","status":"passed","time":{"start":1692158705561,"stop":1692158710683,"duration":5122}},{"uid":"affe8ece2cea4065","reportUrl":"https://novasamatech.github.io/test-runner/3584//#testresult/affe8ece2cea4065","status":"passed","time":{"start":1692144856703,"stop":1692144860682,"duration":3979}},{"uid":"c8f9c03c450acce5","reportUrl":"https://novasamatech.github.io/test-runner/3583//#testresult/c8f9c03c450acce5","status":"passed","time":{"start":1692129912613,"stop":1692129916358,"duration":3745}},{"uid":"36551a390a23753c","reportUrl":"https://novasamatech.github.io/test-runner/3582//#testresult/36551a390a23753c","status":"passed","time":{"start":1692115518795,"stop":1692115522545,"duration":3750}},{"uid":"8b0773ad8c58ab7","reportUrl":"https://novasamatech.github.io/test-runner/3581//#testresult/8b0773ad8c58ab7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692101168197,"stop":1692101168788,"duration":591}},{"uid":"268efde3dbb3dd48","reportUrl":"https://novasamatech.github.io/test-runner/3580//#testresult/268efde3dbb3dd48","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692087196659,"stop":1692087197506,"duration":847}},{"uid":"88b1e6b19ba35ee1","reportUrl":"https://novasamatech.github.io/test-runner/3579//#testresult/88b1e6b19ba35ee1","status":"passed","time":{"start":1692072346279,"stop":1692072350626,"duration":4347}},{"uid":"294889b8357d08df","reportUrl":"https://novasamatech.github.io/test-runner/3578//#testresult/294889b8357d08df","status":"passed","time":{"start":1692058424971,"stop":1692058428188,"duration":3217}},{"uid":"46c2a2e4fc180d5c","reportUrl":"https://novasamatech.github.io/test-runner/3577//#testresult/46c2a2e4fc180d5c","status":"passed","time":{"start":1692043587480,"stop":1692043592414,"duration":4934}},{"uid":"8ff0c88847a14f8a","reportUrl":"https://novasamatech.github.io/test-runner/3576//#testresult/8ff0c88847a14f8a","status":"passed","time":{"start":1692029127174,"stop":1692029134483,"duration":7309}},{"uid":"3b158f5b8969a346","reportUrl":"https://novasamatech.github.io/test-runner/3575//#testresult/3b158f5b8969a346","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692014832525,"stop":1692014833398,"duration":873}},{"uid":"d3627f8b6bf3af0","reportUrl":"https://novasamatech.github.io/test-runner/3574//#testresult/d3627f8b6bf3af0","status":"passed","time":{"start":1692000317206,"stop":1692000322544,"duration":5338}},{"uid":"3d79d31c4f35776a","reportUrl":"https://novasamatech.github.io/test-runner/3573//#testresult/3d79d31c4f35776a","status":"passed","time":{"start":1691985948040,"stop":1691985953790,"duration":5750}},{"uid":"57a2b374389f50cc","reportUrl":"https://novasamatech.github.io/test-runner/3572//#testresult/57a2b374389f50cc","status":"passed","time":{"start":1691971995388,"stop":1691972000894,"duration":5506}},{"uid":"76e4ff8e06f3b775","reportUrl":"https://novasamatech.github.io/test-runner/3571//#testresult/76e4ff8e06f3b775","status":"passed","time":{"start":1691957157837,"stop":1691957162413,"duration":4576}},{"uid":"78625c198b05e32c","reportUrl":"https://novasamatech.github.io/test-runner/3570//#testresult/78625c198b05e32c","status":"passed","time":{"start":1691942730870,"stop":1691942735897,"duration":5027}}]},"tags":[]},"source":"25682f3fdd6b2fdc.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9f61966aa0>"]}