{"uid":"197fb623036a132c","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1694433805055,"stop":1694433805378,"duration":323},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","steps":[],"attachments":[{"uid":"58314c2649a1e53e","name":"stdout","source":"58314c2649a1e53e.txt","type":"text/plain","size":519}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az177-554"},{"name":"thread","value":"2056-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c7b103264798445b","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694433789591,"stop":1694433789915,"duration":324}},{"uid":"cad32f3558d2b00a","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694433774113,"stop":1694433774456,"duration":343}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":93,"unknown":0,"total":109},"items":[{"uid":"4e63e0ebed4150b3","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/4e63e0ebed4150b3","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694419771751,"stop":1694419771961,"duration":210}},{"uid":"2518f2a38517a06","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/2518f2a38517a06","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694404952828,"stop":1694404953004,"duration":176}},{"uid":"56f37b470dd4e480","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/56f37b470dd4e480","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694390600038,"stop":1694390600363,"duration":325}},{"uid":"321ab1177e068408","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/321ab1177e068408","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694376152440,"stop":1694376152650,"duration":210}},{"uid":"cc1e5bc79d97577b","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/cc1e5bc79d97577b","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1007)","time":{"start":1694361756034,"stop":1694361756455,"duration":421}},{"uid":"3bcd4fad266b3edf","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/3bcd4fad266b3edf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 10 Sep 2023 12:02:33 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694347353260,"stop":1694347353552,"duration":292}},{"uid":"fc187007292f2505","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/fc187007292f2505","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 10 Sep 2023 08:02:34 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694332953708,"stop":1694332954151,"duration":443}},{"uid":"15939cd2974ad6c7","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/15939cd2974ad6c7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 10 Sep 2023 04:02:25 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694318545675,"stop":1694318545942,"duration":267}},{"uid":"ba10ed11088b156c","reportUrl":"https://novasamatech.github.io/test-runner/3739//#testresult/ba10ed11088b156c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 10 Sep 2023 00:03:21 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694304200820,"stop":1694304201256,"duration":436}},{"uid":"2296cfe9c1202f24","reportUrl":"https://novasamatech.github.io/test-runner/3738//#testresult/2296cfe9c1202f24","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 09 Sep 2023 20:02:31 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694289751073,"stop":1694289751347,"duration":274}},{"uid":"7a7a6697ffe86359","reportUrl":"https://novasamatech.github.io/test-runner/3737//#testresult/7a7a6697ffe86359","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 09 Sep 2023 16:02:34 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694275354588,"stop":1694275354884,"duration":296}},{"uid":"26308eb1e57e563f","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/26308eb1e57e563f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 09 Sep 2023 12:02:54 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694260974234,"stop":1694260974502,"duration":268}},{"uid":"ddcca5874d92d84e","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/ddcca5874d92d84e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 09 Sep 2023 08:02:39 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694246559582,"stop":1694246559920,"duration":338}},{"uid":"8726f1bd6147f821","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/8726f1bd6147f821","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 09 Sep 2023 04:02:22 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694232142653,"stop":1694232142982,"duration":329}},{"uid":"3eb4ba64376d1e7d","reportUrl":"https://novasamatech.github.io/test-runner/3733//#testresult/3eb4ba64376d1e7d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 09 Sep 2023 00:03:36 GMT', 'content-type': 'text/html', 'content-length': '166', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.22.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694217815761,"stop":1694217816056,"duration":295}},{"uid":"25b41168aba9a51d","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/25b41168aba9a51d","status":"passed","time":{"start":1694203337442,"stop":1694203338003,"duration":561}},{"uid":"7041b2627d39e643","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/7041b2627d39e643","status":"passed","time":{"start":1694188983215,"stop":1694188983866,"duration":651}},{"uid":"2252d9ac75a432c9","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/2252d9ac75a432c9","status":"passed","time":{"start":1694174542717,"stop":1694174543101,"duration":384}},{"uid":"cc44633f894e0381","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/cc44633f894e0381","status":"passed","time":{"start":1694160113122,"stop":1694160113488,"duration":366}},{"uid":"6dc8c48c06d7c689","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/6dc8c48c06d7c689","status":"passed","time":{"start":1694145724023,"stop":1694145724497,"duration":474}}]},"tags":[]},"source":"197fb623036a132c.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}