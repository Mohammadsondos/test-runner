{"uid":"5b6cdcc41382ffe8","name":"test_can_create_connection[Test for GM, url: wss://ws.gm.bldnodes.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c295c99978ffa56afd8f2cb1fcd6fca8","time":{"start":1694433774634,"stop":1694433775278,"duration":644},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws.gm.bldnodes.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:143: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n.venv/lib/python3.10/site-packages/websocket/_http.py:316: in read_headers\n    line = recv_line(sock)\n.venv/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws.gm.bldnodes.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:143: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n.venv/lib/python3.10/site-packages/websocket/_http.py:316: in read_headers\n    line = recv_line(sock)\n.venv/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"13c3dd8ee3875906","name":"stdout","source":"13c3dd8ee3875906.txt","type":"text/plain","size":437}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az177-554"},{"name":"thread","value":"2059-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws.gm.bldnodes.org', 'name': 'GM'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1b52a6afbeedcdeb","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1694433759122,"stop":1694433759486,"duration":364}},{"uid":"2cbf34c6a8999ddb","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1694433743562,"stop":1694433743945,"duration":383}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":108,"unknown":0,"total":109},"items":[{"uid":"e418572edc23061e","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/e418572edc23061e","status":"passed","time":{"start":1694419709201,"stop":1694419709951,"duration":750}},{"uid":"395e4622b41856d2","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/395e4622b41856d2","status":"passed","time":{"start":1694404920554,"stop":1694404921315,"duration":761}},{"uid":"1431ef151f819dd4","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/1431ef151f819dd4","status":"passed","time":{"start":1694390599919,"stop":1694390600803,"duration":884}},{"uid":"d97ffb6f948e8393","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/d97ffb6f948e8393","status":"passed","time":{"start":1694376121632,"stop":1694376122405,"duration":773}},{"uid":"80369221ab3f2dc","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/80369221ab3f2dc","status":"passed","time":{"start":1694361726164,"stop":1694361727071,"duration":907}},{"uid":"40ee47ae48ec6ee3","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/40ee47ae48ec6ee3","status":"passed","time":{"start":1694347321920,"stop":1694347322664,"duration":744}},{"uid":"a5a48d9c13ea43e0","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/a5a48d9c13ea43e0","status":"passed","time":{"start":1694332922771,"stop":1694332923666,"duration":895}},{"uid":"e173cf371f4ae850","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/e173cf371f4ae850","status":"passed","time":{"start":1694318513382,"stop":1694318514142,"duration":760}},{"uid":"2564d236d7ee7165","reportUrl":"https://novasamatech.github.io/test-runner/3739//#testresult/2564d236d7ee7165","status":"passed","time":{"start":1694304168726,"stop":1694304169608,"duration":882}},{"uid":"9411ce6f096ef25f","reportUrl":"https://novasamatech.github.io/test-runner/3738//#testresult/9411ce6f096ef25f","status":"passed","time":{"start":1694289719336,"stop":1694289720170,"duration":834}},{"uid":"eded04b041c3ad87","reportUrl":"https://novasamatech.github.io/test-runner/3737//#testresult/eded04b041c3ad87","status":"passed","time":{"start":1694275322296,"stop":1694275323049,"duration":753}},{"uid":"6a81be67599d4f3","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/6a81be67599d4f3","status":"passed","time":{"start":1694260926709,"stop":1694260927443,"duration":734}},{"uid":"8522fb671775aff8","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/8522fb671775aff8","status":"passed","time":{"start":1694246527475,"stop":1694246528219,"duration":744}},{"uid":"733e30b801bc3a93","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/733e30b801bc3a93","status":"passed","time":{"start":1694232110678,"stop":1694232111403,"duration":725}},{"uid":"93467b99298cd43f","reportUrl":"https://novasamatech.github.io/test-runner/3733//#testresult/93467b99298cd43f","status":"passed","time":{"start":1694217783410,"stop":1694217784127,"duration":717}},{"uid":"47f6664514319d47","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/47f6664514319d47","status":"passed","time":{"start":1694203336826,"stop":1694203337757,"duration":931}},{"uid":"39b43dbdff204f71","reportUrl":"https://novasamatech.github.io/test-runner/3731//#testresult/39b43dbdff204f71","status":"passed","time":{"start":1694188983459,"stop":1694188984511,"duration":1052}},{"uid":"3441105e4c8f3121","reportUrl":"https://novasamatech.github.io/test-runner/3730//#testresult/3441105e4c8f3121","status":"passed","time":{"start":1694174541347,"stop":1694174542047,"duration":700}},{"uid":"9be4b68dea19aa66","reportUrl":"https://novasamatech.github.io/test-runner/3729//#testresult/9be4b68dea19aa66","status":"passed","time":{"start":1694160111478,"stop":1694160112192,"duration":714}},{"uid":"e039938cbca7e734","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/e039938cbca7e734","status":"passed","time":{"start":1694145722779,"stop":1694145723483,"duration":704}}]},"tags":[]},"source":"5b6cdcc41382ffe8.json","parameterValues":["{'url': 'wss://ws.gm.bldnodes.org', 'name': 'GM'}"]}