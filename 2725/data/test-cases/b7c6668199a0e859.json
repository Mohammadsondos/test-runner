{"uid":"b7c6668199a0e859","name":"test_can_create_connection[Test for Westend, url: wss://westend.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"069699d857f75062eec2c2e7a6900f83","time":{"start":1680091521150,"stop":1680091521505,"duration":355},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)","statusTrace":"data = {'name': 'Westend', 'url': 'wss://westend.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)","statusTrace":"data = {'name': 'Westend', 'url': 'wss://westend.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","steps":[],"attachments":[{"uid":"49e57e027e069509","name":"stdout","source":"49e57e027e069509.txt","type":"text/plain","size":378}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az586-247"},{"name":"thread","value":"1775-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://westend.api.onfinality.io/public-ws', 'name': 'Westend'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"afc5129394fc078e","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)","time":{"start":1680091510608,"stop":1680091511009,"duration":401}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":851,"unknown":0,"total":906},"items":[{"uid":"c4cc44f8a3ee079a","reportUrl":"https://nova-wallet.github.io/test-runner/2724//#testresult/c4cc44f8a3ee079a","status":"passed","time":{"start":1680077085045,"stop":1680077086159,"duration":1114}},{"uid":"4e8ce64b78af2c13","reportUrl":"https://nova-wallet.github.io/test-runner/2723//#testresult/4e8ce64b78af2c13","status":"passed","time":{"start":1680062652586,"stop":1680062653346,"duration":760}},{"uid":"c9e8ba32df32e4df","reportUrl":"https://nova-wallet.github.io/test-runner/2722//#testresult/c9e8ba32df32e4df","status":"passed","time":{"start":1680052270620,"stop":1680052271575,"duration":955}},{"uid":"76d56cecf38eaa8f","reportUrl":"https://nova-wallet.github.io/test-runner/2721//#testresult/76d56cecf38eaa8f","status":"passed","time":{"start":1680034444019,"stop":1680034444975,"duration":956}},{"uid":"9604df3f77173fb2","reportUrl":"https://nova-wallet.github.io/test-runner/2720//#testresult/9604df3f77173fb2","status":"passed","time":{"start":1680020701528,"stop":1680020702663,"duration":1135}},{"uid":"b17665cb1b360c65","reportUrl":"https://nova-wallet.github.io/test-runner/2718//#testresult/b17665cb1b360c65","status":"passed","time":{"start":1679991470301,"stop":1679991471273,"duration":972}},{"uid":"a1ace331d9f79d96","reportUrl":"https://nova-wallet.github.io/test-runner/2717//#testresult/a1ace331d9f79d96","status":"passed","time":{"start":1679976943129,"stop":1679976944078,"duration":949}},{"uid":"951ced7b7a968d23","reportUrl":"https://nova-wallet.github.io/test-runner/2716//#testresult/951ced7b7a968d23","status":"passed","time":{"start":1679965598497,"stop":1679965599430,"duration":933}},{"uid":"3a6377c80f043db3","reportUrl":"https://nova-wallet.github.io/test-runner/2715//#testresult/3a6377c80f043db3","status":"passed","time":{"start":1679948113188,"stop":1679948114137,"duration":949}},{"uid":"b8a07066c5b14612","reportUrl":"https://nova-wallet.github.io/test-runner/2714//#testresult/b8a07066c5b14612","status":"passed","time":{"start":1679933831362,"stop":1679933832327,"duration":965}},{"uid":"4748e7b1f71a90d9","reportUrl":"https://nova-wallet.github.io/test-runner/2713//#testresult/4748e7b1f71a90d9","status":"passed","time":{"start":1679923503242,"stop":1679923504143,"duration":901}},{"uid":"5cef7646841ee514","reportUrl":"https://nova-wallet.github.io/test-runner/2712//#testresult/5cef7646841ee514","status":"passed","time":{"start":1679905058050,"stop":1679905058851,"duration":801}},{"uid":"1ee45b4c0bcc54fc","reportUrl":"https://nova-wallet.github.io/test-runner/2710//#testresult/1ee45b4c0bcc54fc","status":"passed","time":{"start":1679879006870,"stop":1679879007655,"duration":785}},{"uid":"d7a1ac47f49c93eb","reportUrl":"https://nova-wallet.github.io/test-runner/2709//#testresult/d7a1ac47f49c93eb","status":"passed","time":{"start":1679861557079,"stop":1679861558038,"duration":959}},{"uid":"7561750ba8415584","reportUrl":"https://nova-wallet.github.io/test-runner/2708//#testresult/7561750ba8415584","status":"passed","time":{"start":1679847336849,"stop":1679847337600,"duration":751}},{"uid":"9d77ef863cd84492","reportUrl":"https://nova-wallet.github.io/test-runner/2707//#testresult/9d77ef863cd84492","status":"passed","time":{"start":1679833374635,"stop":1679833375410,"duration":775}},{"uid":"338aaa7175798d5d","reportUrl":"https://nova-wallet.github.io/test-runner/2706//#testresult/338aaa7175798d5d","status":"passed","time":{"start":1679818493727,"stop":1679818494558,"duration":831}},{"uid":"ae5e3980b3179a9c","reportUrl":"https://nova-wallet.github.io/test-runner/2705//#testresult/ae5e3980b3179a9c","status":"passed","time":{"start":1679804101237,"stop":1679804102127,"duration":890}},{"uid":"f2209f8870f88769","reportUrl":"https://nova-wallet.github.io/test-runner/2704//#testresult/f2209f8870f88769","status":"passed","time":{"start":1679792966010,"stop":1679792966766,"duration":756}},{"uid":"c08fccca404da6a4","reportUrl":"https://nova-wallet.github.io/test-runner/2703//#testresult/c08fccca404da6a4","status":"passed","time":{"start":1679775155720,"stop":1679775156861,"duration":1141}}]},"tags":[]},"source":"b7c6668199a0e859.json","parameterValues":["{'url': 'wss://westend.api.onfinality.io/public-ws', 'name': 'Westend'}"]}