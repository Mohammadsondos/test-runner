{"uid":"6df3012c798d2dc2","name":"test_can_create_connection[Test for GM, url: wss://ws-node-gm.terrabiodao.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3278cac67526220f4f1c0a171e1bb018","time":{"start":1672171478403,"stop":1672171478907,"duration":504},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","statusTrace":"data = {'name': 'GM', 'url': 'wss://ws-node-gm.terrabiodao.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"53e71fc4776d3d6b","name":"stdout","source":"53e71fc4776d3d6b.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az256-280"},{"name":"thread","value":"1765-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eb928e60f6002079","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672171467626,"stop":1672171468272,"duration":646}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":431,"skipped":0,"passed":0,"unknown":0,"total":431},"items":[{"uid":"8d15be73601568a3","reportUrl":"https://nova-wallet.github.io/test-runner/2162//#testresult/8d15be73601568a3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672157098416,"stop":1672157098730,"duration":314}},{"uid":"7b4caf65c7d5a70d","reportUrl":"https://nova-wallet.github.io/test-runner/2161//#testresult/7b4caf65c7d5a70d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672142733683,"stop":1672142734130,"duration":447}},{"uid":"7326f195742cff35","reportUrl":"https://nova-wallet.github.io/test-runner/2160//#testresult/7326f195742cff35","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672128300325,"stop":1672128300647,"duration":322}},{"uid":"32a7d61dc6ec0aa0","reportUrl":"https://nova-wallet.github.io/test-runner/2159//#testresult/32a7d61dc6ec0aa0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672113880805,"stop":1672113881112,"duration":307}},{"uid":"8742e8bff0702add","reportUrl":"https://nova-wallet.github.io/test-runner/2158//#testresult/8742e8bff0702add","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672100072199,"stop":1672100072726,"duration":527}},{"uid":"94188a56aa83e60f","reportUrl":"https://nova-wallet.github.io/test-runner/2157//#testresult/94188a56aa83e60f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672085085692,"stop":1672085086315,"duration":623}},{"uid":"78b6bc083eb3aa07","reportUrl":"https://nova-wallet.github.io/test-runner/2156//#testresult/78b6bc083eb3aa07","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672070720920,"stop":1672070721539,"duration":619}},{"uid":"8870bcaf8760be91","reportUrl":"https://nova-wallet.github.io/test-runner/2155//#testresult/8870bcaf8760be91","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672056322734,"stop":1672056323061,"duration":327}},{"uid":"9e0bf423f4d91b5b","reportUrl":"https://nova-wallet.github.io/test-runner/2154//#testresult/9e0bf423f4d91b5b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672041959623,"stop":1672041960251,"duration":628}},{"uid":"f03aead7dd583207","reportUrl":"https://nova-wallet.github.io/test-runner/2153//#testresult/f03aead7dd583207","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672027572028,"stop":1672027572594,"duration":566}},{"uid":"b206d685ccfc551f","reportUrl":"https://nova-wallet.github.io/test-runner/2152//#testresult/b206d685ccfc551f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1672013701078,"stop":1672013701370,"duration":292}},{"uid":"5d947b69f73958c7","reportUrl":"https://nova-wallet.github.io/test-runner/2151//#testresult/5d947b69f73958c7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671998759680,"stop":1671998760211,"duration":531}},{"uid":"788b577b884a3882","reportUrl":"https://nova-wallet.github.io/test-runner/2150//#testresult/788b577b884a3882","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671984347996,"stop":1671984348420,"duration":424}},{"uid":"5019d5b9e5e620f7","reportUrl":"https://nova-wallet.github.io/test-runner/2149//#testresult/5019d5b9e5e620f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671970057430,"stop":1671970057956,"duration":526}},{"uid":"e8a49e1d0f9280b0","reportUrl":"https://nova-wallet.github.io/test-runner/2148//#testresult/e8a49e1d0f9280b0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671955540375,"stop":1671955540856,"duration":481}},{"uid":"c271a8be6e79a372","reportUrl":"https://nova-wallet.github.io/test-runner/2147//#testresult/c271a8be6e79a372","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671941129848,"stop":1671941130145,"duration":297}},{"uid":"493c25a404a33be4","reportUrl":"https://nova-wallet.github.io/test-runner/2146//#testresult/493c25a404a33be4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671927310342,"stop":1671927310996,"duration":654}},{"uid":"16cb66e5a74e0b32","reportUrl":"https://nova-wallet.github.io/test-runner/2145//#testresult/16cb66e5a74e0b32","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671912338305,"stop":1671912338739,"duration":434}},{"uid":"c050d60731394cc5","reportUrl":"https://nova-wallet.github.io/test-runner/2144//#testresult/c050d60731394cc5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671897915041,"stop":1671897915357,"duration":316}},{"uid":"68fe931600b4a75b","reportUrl":"https://nova-wallet.github.io/test-runner/2143//#testresult/68fe931600b4a75b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden","time":{"start":1671883589425,"stop":1671883589721,"duration":296}}]},"tags":[]},"source":"6df3012c798d2dc2.json","parameterValues":["{'url': 'wss://ws-node-gm.terrabiodao.org', 'name': 'GM'}"]}