{"uid":"6cf07d7afd3c3569","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1697112178279,"stop":1697112178854,"duration":575},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa2793e2080>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa279642e60>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa2793e2080>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa279642e60>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"e8770dff64c8978f","name":"stdout","source":"e8770dff64c8978f.txt","type":"text/plain","size":711}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az567-241"},{"name":"thread","value":"2091-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa279642e60>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e5963f912bdec8bd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697112162620,"stop":1697112163243,"duration":623}},{"uid":"d004964aadec0a69","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697112146567,"stop":1697112147575,"duration":1008}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":43,"skipped":0,"passed":252,"unknown":0,"total":295},"items":[{"uid":"2b1aa73e89c134d3","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/2b1aa73e89c134d3","status":"passed","time":{"start":1697097745978,"stop":1697097750337,"duration":4359}},{"uid":"6d66c6c19033fdf8","reportUrl":"https://novasamatech.github.io/test-runner/3934//#testresult/6d66c6c19033fdf8","status":"passed","time":{"start":1697083337581,"stop":1697083341943,"duration":4362}},{"uid":"cbcb8e0e876feb2b","reportUrl":"https://novasamatech.github.io/test-runner/3933//#testresult/cbcb8e0e876feb2b","status":"passed","time":{"start":1697069024696,"stop":1697069029647,"duration":4951}},{"uid":"5ed4766bcc1442f7","reportUrl":"https://novasamatech.github.io/test-runner/3932//#testresult/5ed4766bcc1442f7","status":"passed","time":{"start":1697054548130,"stop":1697054552145,"duration":4015}},{"uid":"56d3b20d13948146","reportUrl":"https://novasamatech.github.io/test-runner/3931//#testresult/56d3b20d13948146","status":"passed","time":{"start":1697040166128,"stop":1697040170593,"duration":4465}},{"uid":"a33a34979ea00753","reportUrl":"https://novasamatech.github.io/test-runner/3930//#testresult/a33a34979ea00753","status":"passed","time":{"start":1697025744848,"stop":1697025748972,"duration":4124}},{"uid":"cfa9f27a05cffa58","reportUrl":"https://novasamatech.github.io/test-runner/3929//#testresult/cfa9f27a05cffa58","status":"passed","time":{"start":1697011363127,"stop":1697011367874,"duration":4747}},{"uid":"f13a85b433b78952","reportUrl":"https://novasamatech.github.io/test-runner/3928//#testresult/f13a85b433b78952","status":"passed","time":{"start":1696996962585,"stop":1696996968392,"duration":5807}},{"uid":"640fd070d822981f","reportUrl":"https://novasamatech.github.io/test-runner/3927//#testresult/640fd070d822981f","status":"passed","time":{"start":1696982588114,"stop":1696982593384,"duration":5270}},{"uid":"2cd1e93264941377","reportUrl":"https://novasamatech.github.io/test-runner/3926//#testresult/2cd1e93264941377","status":"passed","time":{"start":1696968150074,"stop":1696968156793,"duration":6719}},{"uid":"73aef95fff5dd9d1","reportUrl":"https://novasamatech.github.io/test-runner/3925//#testresult/73aef95fff5dd9d1","status":"passed","time":{"start":1696953751502,"stop":1696953758023,"duration":6521}},{"uid":"2396729a9a83ca4a","reportUrl":"https://novasamatech.github.io/test-runner/3924//#testresult/2396729a9a83ca4a","status":"passed","time":{"start":1696939351357,"stop":1696939355349,"duration":3992}},{"uid":"7cde1e1d931b33c7","reportUrl":"https://novasamatech.github.io/test-runner/3923//#testresult/7cde1e1d931b33c7","status":"passed","time":{"start":1696924956089,"stop":1696924961107,"duration":5018}},{"uid":"51ba5d7a254deac0","reportUrl":"https://novasamatech.github.io/test-runner/3922//#testresult/51ba5d7a254deac0","status":"passed","time":{"start":1696910557938,"stop":1696910562923,"duration":4985}},{"uid":"c3e39f89105448a7","reportUrl":"https://novasamatech.github.io/test-runner/3921//#testresult/c3e39f89105448a7","status":"passed","time":{"start":1696896213899,"stop":1696896218463,"duration":4564}},{"uid":"480bfa04f322ffb","reportUrl":"https://novasamatech.github.io/test-runner/3920//#testresult/480bfa04f322ffb","status":"passed","time":{"start":1696881759148,"stop":1696881764328,"duration":5180}},{"uid":"5eae5e9fc2874b40","reportUrl":"https://novasamatech.github.io/test-runner/3919//#testresult/5eae5e9fc2874b40","status":"passed","time":{"start":1696867404282,"stop":1696867414875,"duration":10593}},{"uid":"830c948d866142bb","reportUrl":"https://novasamatech.github.io/test-runner/3918//#testresult/830c948d866142bb","status":"passed","time":{"start":1696852943506,"stop":1696852947005,"duration":3499}},{"uid":"93007087ebdbcdc5","reportUrl":"https://novasamatech.github.io/test-runner/3917//#testresult/93007087ebdbcdc5","status":"passed","time":{"start":1696838545930,"stop":1696838549791,"duration":3861}},{"uid":"30722b1625cc8a1","reportUrl":"https://novasamatech.github.io/test-runner/3916//#testresult/30722b1625cc8a1","status":"passed","time":{"start":1696824162443,"stop":1696824166872,"duration":4429}}]},"tags":[]},"source":"6cf07d7afd3c3569.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa279642e60>"]}