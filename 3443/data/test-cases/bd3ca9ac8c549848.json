{"uid":"bd3ca9ac8c549848","name":"test_has_new_assets[Test for Calamari]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"8edafafb0910af574e27cf9f6c595286","time":{"start":1690157846228,"stop":1690157846392,"duration":164},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f44809cd7b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4480f7b280>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f44809cd7b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4480f7b280>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c8184f14933caa7a","name":"stdout","source":"c8184f14933caa7a.txt","type":"text/plain","size":756}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az592-683"},{"name":"thread","value":"1949-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f4480f7b280>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e8f018edaa06d87","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690157830817,"stop":1690157831201,"duration":384}},{"uid":"acacc8de13ccd38a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690157685076,"stop":1690157815745,"duration":130669}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":405,"unknown":0,"total":412},"items":[{"uid":"1a79b9413fcbcfe1","reportUrl":"https://novasamatech.github.io/test-runner/3442//#testresult/1a79b9413fcbcfe1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690142800053,"stop":1690142800427,"duration":374}},{"uid":"456fc59f55fafcd7","reportUrl":"https://novasamatech.github.io/test-runner/3441//#testresult/456fc59f55fafcd7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690128315783,"stop":1690128315850,"duration":67}},{"uid":"37ccdee06ef51cc3","reportUrl":"https://novasamatech.github.io/test-runner/3440//#testresult/37ccdee06ef51cc3","status":"passed","time":{"start":1690113878388,"stop":1690113884104,"duration":5716}},{"uid":"23224be4266c8218","reportUrl":"https://novasamatech.github.io/test-runner/3439//#testresult/23224be4266c8218","status":"passed","time":{"start":1690099458036,"stop":1690099465561,"duration":7525}},{"uid":"f683f395b2650ab2","reportUrl":"https://novasamatech.github.io/test-runner/3438//#testresult/f683f395b2650ab2","status":"passed","time":{"start":1690085035458,"stop":1690085045691,"duration":10233}},{"uid":"9acfdbf58d7fc42b","reportUrl":"https://novasamatech.github.io/test-runner/3437//#testresult/9acfdbf58d7fc42b","status":"passed","time":{"start":1690071320113,"stop":1690071329580,"duration":9467}},{"uid":"9700d6fcc88fc815","reportUrl":"https://novasamatech.github.io/test-runner/3436//#testresult/9700d6fcc88fc815","status":"passed","time":{"start":1690056233161,"stop":1690056236062,"duration":2901}},{"uid":"9cda11130435e3d2","reportUrl":"https://novasamatech.github.io/test-runner/3435//#testresult/9cda11130435e3d2","status":"passed","time":{"start":1690041824433,"stop":1690041834827,"duration":10394}},{"uid":"ab89cac36849232b","reportUrl":"https://novasamatech.github.io/test-runner/3434//#testresult/ab89cac36849232b","status":"passed","time":{"start":1690027475522,"stop":1690027486394,"duration":10872}},{"uid":"da3a34817cb650d8","reportUrl":"https://novasamatech.github.io/test-runner/3433//#testresult/da3a34817cb650d8","status":"passed","time":{"start":1690013064369,"stop":1690013071283,"duration":6914}},{"uid":"e771884d7b96a122","reportUrl":"https://novasamatech.github.io/test-runner/3432//#testresult/e771884d7b96a122","status":"passed","time":{"start":1689998628245,"stop":1689998637521,"duration":9276}},{"uid":"324256c8814bfc88","reportUrl":"https://novasamatech.github.io/test-runner/3431//#testresult/324256c8814bfc88","status":"passed","time":{"start":1689984832159,"stop":1689984837347,"duration":5188}},{"uid":"75655ca1e9908943","reportUrl":"https://novasamatech.github.io/test-runner/3430//#testresult/75655ca1e9908943","status":"passed","time":{"start":1689969847653,"stop":1689969852204,"duration":4551}},{"uid":"c58f64db69af8149","reportUrl":"https://novasamatech.github.io/test-runner/3429//#testresult/c58f64db69af8149","status":"passed","time":{"start":1689955444664,"stop":1689955451837,"duration":7173}},{"uid":"e3565d3a75b4bace","reportUrl":"https://novasamatech.github.io/test-runner/3428//#testresult/e3565d3a75b4bace","status":"passed","time":{"start":1689941099147,"stop":1689941108452,"duration":9305}},{"uid":"629cd9dcb7077b96","reportUrl":"https://novasamatech.github.io/test-runner/3427//#testresult/629cd9dcb7077b96","status":"passed","time":{"start":1689926667575,"stop":1689926671190,"duration":3615}},{"uid":"eb37dd1a630fd244","reportUrl":"https://novasamatech.github.io/test-runner/3426//#testresult/eb37dd1a630fd244","status":"passed","time":{"start":1689912236364,"stop":1689912245711,"duration":9347}},{"uid":"f90121cda04feb48","reportUrl":"https://novasamatech.github.io/test-runner/3425//#testresult/f90121cda04feb48","status":"passed","time":{"start":1689898442231,"stop":1689898452450,"duration":10219}},{"uid":"dc2ee43962c9d4e8","reportUrl":"https://novasamatech.github.io/test-runner/3424//#testresult/dc2ee43962c9d4e8","status":"passed","time":{"start":1689883452274,"stop":1689883461742,"duration":9468}},{"uid":"671bc5c6cacfee4e","reportUrl":"https://novasamatech.github.io/test-runner/3423//#testresult/671bc5c6cacfee4e","status":"passed","time":{"start":1689869056813,"stop":1689869065673,"duration":8860}}]},"tags":[]},"source":"bd3ca9ac8c549848.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f4480f7b280>"]}