{"uid":"770bc348f70e8cba","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1690157713860,"stop":1690157714568,"duration":708},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 24 Jul 2023 00:15:14 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 24 Jul 2023 00:15:14 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 24 Jul 2023 00:15:14 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 24 Jul 2023 00:15:14 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"dfdb82df4581da02","name":"stdout","source":"dfdb82df4581da02.txt","type":"text/plain","size":2889}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az437-249"},{"name":"thread","value":"1935-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b8cecbf2b915a631","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 24 Jul 2023 00:14:58 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1690157698073,"stop":1690157698766,"duration":693}},{"uid":"e1ed04590a25861d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Mon, 24 Jul 2023 00:14:42 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1690157682188,"stop":1690157682904,"duration":716}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":439,"unknown":0,"total":448},"items":[{"uid":"dd2c5f98ba9108a1","reportUrl":"https://novasamatech.github.io/test-runner/3442//#testresult/dd2c5f98ba9108a1","status":"passed","time":{"start":1690142639996,"stop":1690142641282,"duration":1286}},{"uid":"50639aa4455a0e92","reportUrl":"https://novasamatech.github.io/test-runner/3441//#testresult/50639aa4455a0e92","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Sun, 23 Jul 2023 16:04:55 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1690128294984,"stop":1690128295554,"duration":570}},{"uid":"dece23f15b9b5f32","reportUrl":"https://novasamatech.github.io/test-runner/3440//#testresult/dece23f15b9b5f32","status":"passed","time":{"start":1690113884703,"stop":1690113885952,"duration":1249}},{"uid":"6b99564899e995aa","reportUrl":"https://novasamatech.github.io/test-runner/3439//#testresult/6b99564899e995aa","status":"passed","time":{"start":1690099458973,"stop":1690099460456,"duration":1483}},{"uid":"5d870f5d057c94a","reportUrl":"https://novasamatech.github.io/test-runner/3438//#testresult/5d870f5d057c94a","status":"passed","time":{"start":1690085041471,"stop":1690085042700,"duration":1229}},{"uid":"6d21031547cff45a","reportUrl":"https://novasamatech.github.io/test-runner/3437//#testresult/6d21031547cff45a","status":"passed","time":{"start":1690071323458,"stop":1690071324793,"duration":1335}},{"uid":"d0ff6b6ea5d53d54","reportUrl":"https://novasamatech.github.io/test-runner/3436//#testresult/d0ff6b6ea5d53d54","status":"passed","time":{"start":1690056450802,"stop":1690056451975,"duration":1173}},{"uid":"6a666f7a1c0c4d3f","reportUrl":"https://novasamatech.github.io/test-runner/3435//#testresult/6a666f7a1c0c4d3f","status":"passed","time":{"start":1690041856738,"stop":1690041858046,"duration":1308}},{"uid":"42a29977448bc06b","reportUrl":"https://novasamatech.github.io/test-runner/3434//#testresult/42a29977448bc06b","status":"passed","time":{"start":1690027462336,"stop":1690027463678,"duration":1342}},{"uid":"354d67611a44d94b","reportUrl":"https://novasamatech.github.io/test-runner/3433//#testresult/354d67611a44d94b","status":"passed","time":{"start":1690013080304,"stop":1690013081537,"duration":1233}},{"uid":"6ed0aa9468cbe13d","reportUrl":"https://novasamatech.github.io/test-runner/3432//#testresult/6ed0aa9468cbe13d","status":"passed","time":{"start":1689998646425,"stop":1689998647849,"duration":1424}},{"uid":"baf840d82c3989f4","reportUrl":"https://novasamatech.github.io/test-runner/3431//#testresult/baf840d82c3989f4","status":"passed","time":{"start":1689984830750,"stop":1689984832139,"duration":1389}},{"uid":"9eb529b60e406d08","reportUrl":"https://novasamatech.github.io/test-runner/3430//#testresult/9eb529b60e406d08","status":"passed","time":{"start":1689969883881,"stop":1689969884970,"duration":1089}},{"uid":"a870ce75aa15c652","reportUrl":"https://novasamatech.github.io/test-runner/3429//#testresult/a870ce75aa15c652","status":"passed","time":{"start":1689955452489,"stop":1689955453718,"duration":1229}},{"uid":"3201a70f9b4a37e7","reportUrl":"https://novasamatech.github.io/test-runner/3428//#testresult/3201a70f9b4a37e7","status":"passed","time":{"start":1689941124665,"stop":1689941125892,"duration":1227}},{"uid":"ec8622489b211b55","reportUrl":"https://novasamatech.github.io/test-runner/3427//#testresult/ec8622489b211b55","status":"passed","time":{"start":1689926662173,"stop":1689926663373,"duration":1200}},{"uid":"9dd1e9369ddd6a1b","reportUrl":"https://novasamatech.github.io/test-runner/3426//#testresult/9dd1e9369ddd6a1b","status":"passed","time":{"start":1689912254821,"stop":1689912256277,"duration":1456}},{"uid":"b4d6931d616c78e3","reportUrl":"https://novasamatech.github.io/test-runner/3425//#testresult/b4d6931d616c78e3","status":"passed","time":{"start":1689898447299,"stop":1689898448574,"duration":1275}},{"uid":"674d6caedb7f9364","reportUrl":"https://novasamatech.github.io/test-runner/3424//#testresult/674d6caedb7f9364","status":"passed","time":{"start":1689883482543,"stop":1689883483698,"duration":1155}},{"uid":"d1eb5d4ea06cb9b1","reportUrl":"https://novasamatech.github.io/test-runner/3423//#testresult/d1eb5d4ea06cb9b1","status":"passed","time":{"start":1689869062966,"stop":1689869064221,"duration":1255}}]},"tags":[]},"source":"770bc348f70e8cba.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}