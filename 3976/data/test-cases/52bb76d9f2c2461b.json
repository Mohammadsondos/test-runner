{"uid":"52bb76d9f2c2461b","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1697688124039,"stop":1697688124760,"duration":721},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 19 Oct 2023 04:02:04 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 19 Oct 2023 04:02:04 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 19 Oct 2023 04:02:04 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 19 Oct 2023 04:02:04 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9a3be823c82132c","name":"stdout","source":"9a3be823c82132c.txt","type":"text/plain","size":2889}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az175-36"},{"name":"thread","value":"2106-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e0aebb68b13d170b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 19 Oct 2023 04:01:48 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1697688108366,"stop":1697688108938,"duration":572}},{"uid":"10b47e9d399c6afd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Thu, 19 Oct 2023 04:01:33 GMT', 'content-type': 'text/html', 'content-length': '635', 'connection': 'keep-alive', 'cache-control': 'no-cache'} -+-+- b'<html>\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"textml;charset=UTF-8\" />\\n   <style>body{background-color:#FFFFFF}</style> \\n<title>Non-compliance ICP Filing</title>\\n  <script language=\"javascript\" type=\"text/javascript\">\\n         window.onload = function () { \\n           document.getElementById(\"mainFrame\").src= \"http://batit.aliyun.com/alww.html?id=00000000003718849282\"; \\n            }\\n</script>   \\n</head>\\n  <body>\\n    <iframe style=\"width:860px; height:500px;position:absolute;margin-left:-430px;margin-top:-250px;top:50%;left:50%;\" id=\"mainFrame\" src=\"\" frameborder=\"0\" scrolling=\"no\"></iframe>\\n    </body>\\n      </html>\\n\\n'","time":{"start":1697688092608,"stop":1697688093189,"duration":581}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":31,"skipped":0,"passed":305,"unknown":0,"total":336},"items":[{"uid":"2d1d7fdc312089ed","reportUrl":"https://novasamatech.github.io/test-runner/3975//#testresult/2d1d7fdc312089ed","status":"passed","time":{"start":1697673756850,"stop":1697673758152,"duration":1302}},{"uid":"98835c7f02e1833b","reportUrl":"https://novasamatech.github.io/test-runner/3974//#testresult/98835c7f02e1833b","status":"passed","time":{"start":1697659317871,"stop":1697659319167,"duration":1296}},{"uid":"d488ebd662bd5192","reportUrl":"https://novasamatech.github.io/test-runner/3973//#testresult/d488ebd662bd5192","status":"passed","time":{"start":1697644919024,"stop":1697644920346,"duration":1322}},{"uid":"49a16c37338770f","reportUrl":"https://novasamatech.github.io/test-runner/3972//#testresult/49a16c37338770f","status":"passed","time":{"start":1697630529535,"stop":1697630530630,"duration":1095}},{"uid":"b184030c066d795d","reportUrl":"https://novasamatech.github.io/test-runner/3971//#testresult/b184030c066d795d","status":"passed","time":{"start":1697616115401,"stop":1697616116656,"duration":1255}},{"uid":"8c8e947104f582f3","reportUrl":"https://novasamatech.github.io/test-runner/3970//#testresult/8c8e947104f582f3","status":"passed","time":{"start":1697601690084,"stop":1697601691557,"duration":1473}},{"uid":"2e918f1a357a5345","reportUrl":"https://novasamatech.github.io/test-runner/3969//#testresult/2e918f1a357a5345","status":"passed","time":{"start":1697587340765,"stop":1697587341869,"duration":1104}},{"uid":"9ce66d1bbbf3abf8","reportUrl":"https://novasamatech.github.io/test-runner/3968//#testresult/9ce66d1bbbf3abf8","status":"passed","time":{"start":1697572917562,"stop":1697572918982,"duration":1420}},{"uid":"4d1e1dbe8f237ba7","reportUrl":"https://novasamatech.github.io/test-runner/3967//#testresult/4d1e1dbe8f237ba7","status":"passed","time":{"start":1697558496073,"stop":1697558497499,"duration":1426}},{"uid":"4573f6bdc78661d","reportUrl":"https://novasamatech.github.io/test-runner/3966//#testresult/4573f6bdc78661d","status":"passed","time":{"start":1697544099198,"stop":1697544100508,"duration":1310}},{"uid":"43a54bc468c0be3d","reportUrl":"https://novasamatech.github.io/test-runner/3965//#testresult/43a54bc468c0be3d","status":"passed","time":{"start":1697529716381,"stop":1697529717858,"duration":1477}},{"uid":"ac72a8d2c2f95977","reportUrl":"https://novasamatech.github.io/test-runner/3964//#testresult/ac72a8d2c2f95977","status":"passed","time":{"start":1697515277618,"stop":1697515278987,"duration":1369}},{"uid":"c22ce2e3649c8180","reportUrl":"https://novasamatech.github.io/test-runner/3963//#testresult/c22ce2e3649c8180","status":"passed","time":{"start":1697501199179,"stop":1697501200454,"duration":1275}},{"uid":"9dc3aa641e2edf56","reportUrl":"https://novasamatech.github.io/test-runner/3962//#testresult/9dc3aa641e2edf56","status":"passed","time":{"start":1697486486329,"stop":1697486487811,"duration":1482}},{"uid":"44258fa4a2b9e957","reportUrl":"https://novasamatech.github.io/test-runner/3961//#testresult/44258fa4a2b9e957","status":"passed","time":{"start":1697472456371,"stop":1697472457558,"duration":1187}},{"uid":"77666e6f3519e86f","reportUrl":"https://novasamatech.github.io/test-runner/3960//#testresult/77666e6f3519e86f","status":"passed","time":{"start":1697458052651,"stop":1697458053829,"duration":1178}},{"uid":"25719798896585bd","reportUrl":"https://novasamatech.github.io/test-runner/3959//#testresult/25719798896585bd","status":"passed","time":{"start":1697443997733,"stop":1697444003957,"duration":6224}},{"uid":"f8103d607b0439df","reportUrl":"https://novasamatech.github.io/test-runner/3958//#testresult/f8103d607b0439df","status":"passed","time":{"start":1697428880898,"stop":1697428882220,"duration":1322}},{"uid":"920dc2ffc0f51ac6","reportUrl":"https://novasamatech.github.io/test-runner/3957//#testresult/920dc2ffc0f51ac6","status":"passed","time":{"start":1697415377633,"stop":1697415378768,"duration":1135}},{"uid":"2293396892cee321","reportUrl":"https://novasamatech.github.io/test-runner/3956//#testresult/2293396892cee321","status":"passed","time":{"start":1697400838520,"stop":1697400839616,"duration":1096}}]},"tags":[]},"source":"52bb76d9f2c2461b.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}