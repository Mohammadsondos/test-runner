{"uid":"63ff6a2603d89cf","name":"test_can_create_connection[Test for Equilibrium, url: wss://equilibrium-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f40d393a2004b4ab9fba62244d213349","time":{"start":1693916085915,"stop":1693916216153,"duration":130238},"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Equilibrium', 'url': 'wss://equilibrium-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('217.27.190.107', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Equilibrium', 'url': 'wss://equilibrium-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('217.27.190.107', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","steps":[],"attachments":[{"uid":"c2b32d9d9ac3167c","name":"stdout","source":"c2b32d9d9ac3167c.txt","type":"text/plain","size":351}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az799-205"},{"name":"thread","value":"2018-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e6cf54780ab5b7b2","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1693915940460,"stop":1693916070745,"duration":130285}},{"uid":"e6c3dbda77b315d4","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1693915795414,"stop":1693915925336,"duration":129922}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":72,"unknown":0,"total":73},"items":[{"uid":"49a9625cac50d4b","reportUrl":"https://novasamatech.github.io/test-runner/3711//#testresult/49a9625cac50d4b","status":"passed","time":{"start":1693900998966,"stop":1693900999719,"duration":753}},{"uid":"6bcaa6939ecfc9e9","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/6bcaa6939ecfc9e9","status":"passed","time":{"start":1693872169191,"stop":1693872169754,"duration":563}},{"uid":"f7de9d6c5ef6fe4f","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/f7de9d6c5ef6fe4f","status":"passed","time":{"start":1693857719348,"stop":1693857719826,"duration":478}},{"uid":"41a4545911375c2a","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/41a4545911375c2a","status":"passed","time":{"start":1693843340292,"stop":1693843340850,"duration":558}},{"uid":"c64de7988011f42","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/c64de7988011f42","status":"passed","time":{"start":1693828934149,"stop":1693828934758,"duration":609}},{"uid":"75dc4730c85100de","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/75dc4730c85100de","status":"passed","time":{"start":1693814544396,"stop":1693814545152,"duration":756}},{"uid":"bbeb7a18d013404","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/bbeb7a18d013404","status":"passed","time":{"start":1693800103899,"stop":1693800104504,"duration":605}},{"uid":"af5eb31b7ca83a80","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/af5eb31b7ca83a80","status":"passed","time":{"start":1693785768810,"stop":1693785769563,"duration":753}},{"uid":"7ccba303bdadf13b","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/7ccba303bdadf13b","status":"passed","time":{"start":1693771356422,"stop":1693771357025,"duration":603}},{"uid":"b2af00fa99142d62","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/b2af00fa99142d62","status":"passed","time":{"start":1693756917533,"stop":1693756918290,"duration":757}},{"uid":"9f80a9055cf0f1ce","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/9f80a9055cf0f1ce","status":"passed","time":{"start":1693742542511,"stop":1693742543120,"duration":609}},{"uid":"13db1d7780d2778c","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/13db1d7780d2778c","status":"passed","time":{"start":1693728130980,"stop":1693728131441,"duration":461}},{"uid":"eb78b10ed70cd69d","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/eb78b10ed70cd69d","status":"passed","time":{"start":1693713723814,"stop":1693713724385,"duration":571}},{"uid":"1ef93240ebc02fbf","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/1ef93240ebc02fbf","status":"passed","time":{"start":1693699353804,"stop":1693699354315,"duration":511}},{"uid":"e9b0dcfec096e7c","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/e9b0dcfec096e7c","status":"passed","time":{"start":1693684916562,"stop":1693684917169,"duration":607}},{"uid":"856251bac994ef21","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/856251bac994ef21","status":"passed","time":{"start":1693670507296,"stop":1693670507784,"duration":488}},{"uid":"aee138b4e7007d97","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/aee138b4e7007d97","status":"passed","time":{"start":1693656109090,"stop":1693656109535,"duration":445}},{"uid":"e5d5166bbec82b2c","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/e5d5166bbec82b2c","status":"passed","time":{"start":1693641700127,"stop":1693641700610,"duration":483}},{"uid":"963b94b740aa1a57","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/963b94b740aa1a57","status":"passed","time":{"start":1693627310822,"stop":1693627311398,"duration":576}},{"uid":"e5e1190509f53511","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/e5e1190509f53511","status":"passed","time":{"start":1693612965060,"stop":1693612965531,"duration":471}}]},"tags":[]},"source":"63ff6a2603d89cf.json","parameterValues":["{'url': 'wss://equilibrium-rpc.dwellir.com', 'name': 'Equilibrium'}"]}