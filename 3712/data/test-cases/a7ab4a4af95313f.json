{"uid":"a7ab4a4af95313f","name":"test_can_create_connection[Test for Efinity, url: wss://efinity-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f0d671d9a2a539de5bff43146ab75e98","time":{"start":1693915633257,"stop":1693915763544,"duration":130287},"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://efinity-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('217.27.190.107', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://efinity-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('217.27.190.107', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","steps":[],"attachments":[{"uid":"b82798c6a5fe4d13","name":"stdout","source":"b82798c6a5fe4d13.txt","type":"text/plain","size":339}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az799-205"},{"name":"thread","value":"2015-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://efinity-rpc.dwellir.com', 'name': 'Efinity'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c447ff046dba4ee5","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1693915487851,"stop":1693915618137,"duration":130286}},{"uid":"ab68c0b9a814ea94","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1693915342457,"stop":1693915472728,"duration":130271}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":72,"unknown":0,"total":73},"items":[{"uid":"35b94902f4b8b340","reportUrl":"https://novasamatech.github.io/test-runner/3711//#testresult/35b94902f4b8b340","status":"passed","time":{"start":1693900947776,"stop":1693900948547,"duration":771}},{"uid":"c6175906cedeb0ed","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/c6175906cedeb0ed","status":"passed","time":{"start":1693872149416,"stop":1693872150033,"duration":617}},{"uid":"64e2770d2c19f803","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/64e2770d2c19f803","status":"passed","time":{"start":1693857698192,"stop":1693857698689,"duration":497}},{"uid":"823c417e8dd9e270","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/823c417e8dd9e270","status":"passed","time":{"start":1693843295168,"stop":1693843295747,"duration":579}},{"uid":"5a8d92fbf67fb9ff","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/5a8d92fbf67fb9ff","status":"passed","time":{"start":1693828915943,"stop":1693828916558,"duration":615}},{"uid":"2eb6d500cc504fba","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/2eb6d500cc504fba","status":"passed","time":{"start":1693814512145,"stop":1693814512926,"duration":781}},{"uid":"68cfeb953a678b8b","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/68cfeb953a678b8b","status":"passed","time":{"start":1693800092918,"stop":1693800093499,"duration":581}},{"uid":"68e57223117f72","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/68e57223117f72","status":"passed","time":{"start":1693785749429,"stop":1693785750205,"duration":776}},{"uid":"453c82d7b4d108cf","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/453c82d7b4d108cf","status":"passed","time":{"start":1693771303228,"stop":1693771303881,"duration":653}},{"uid":"956b3f0a374da1be","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/956b3f0a374da1be","status":"passed","time":{"start":1693756907917,"stop":1693756908669,"duration":752}},{"uid":"734f14a7c0f5df27","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/734f14a7c0f5df27","status":"passed","time":{"start":1693742508653,"stop":1693742509260,"duration":607}},{"uid":"70b5f491c253bff0","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/70b5f491c253bff0","status":"passed","time":{"start":1693728103642,"stop":1693728104117,"duration":475}},{"uid":"3718b442f7a96d55","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/3718b442f7a96d55","status":"passed","time":{"start":1693713711378,"stop":1693713711965,"duration":587}},{"uid":"54de9f1562a3242a","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/54de9f1562a3242a","status":"passed","time":{"start":1693699340754,"stop":1693699341237,"duration":483}},{"uid":"a394971ea447fee4","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/a394971ea447fee4","status":"passed","time":{"start":1693684900735,"stop":1693684901314,"duration":579}},{"uid":"bfd69ddb1c2fe5a0","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/bfd69ddb1c2fe5a0","status":"passed","time":{"start":1693670488794,"stop":1693670489268,"duration":474}},{"uid":"2a0fa814a95c5162","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/2a0fa814a95c5162","status":"passed","time":{"start":1693656090026,"stop":1693656090468,"duration":442}},{"uid":"8721eb8237abfd15","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/8721eb8237abfd15","status":"passed","time":{"start":1693641696959,"stop":1693641697409,"duration":450}},{"uid":"3dcb23120c9521","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/3dcb23120c9521","status":"passed","time":{"start":1693627301311,"stop":1693627301949,"duration":638}},{"uid":"caf8b8f879e8d508","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/caf8b8f879e8d508","status":"passed","time":{"start":1693612944297,"stop":1693612944759,"duration":462}}]},"tags":[]},"source":"a7ab4a4af95313f.json","parameterValues":["{'url': 'wss://efinity-rpc.dwellir.com', 'name': 'Efinity'}"]}