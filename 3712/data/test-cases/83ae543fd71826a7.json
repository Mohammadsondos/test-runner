{"uid":"83ae543fd71826a7","name":"test_can_create_connection[Test for Phala, url: wss://phala-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"082c4bd86ae3ad2d4d748c49022013e8","time":{"start":1693915657850,"stop":1693915788120,"duration":130270},"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Phala', 'url': 'wss://phala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('217.27.190.107', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Phala', 'url': 'wss://phala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('217.27.190.107', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","steps":[],"attachments":[{"uid":"d63393ed553cc72e","name":"stdout","source":"d63393ed553cc72e.txt","type":"text/plain","size":333}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az799-205"},{"name":"thread","value":"2018-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://phala-rpc.dwellir.com', 'name': 'Phala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"904e8e98df2cdacb","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1693915512427,"stop":1693915642712,"duration":130285}},{"uid":"a00159f062314911","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1693915367934,"stop":1693915497305,"duration":129371}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":71,"unknown":0,"total":73},"items":[{"uid":"2028863a489f4aeb","reportUrl":"https://novasamatech.github.io/test-runner/3711//#testresult/2028863a489f4aeb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1693901004331,"stop":1693901016872,"duration":12541}},{"uid":"d0c78309ed5a94d","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/d0c78309ed5a94d","status":"passed","time":{"start":1693872154661,"stop":1693872155250,"duration":589}},{"uid":"75fa3a455f56fe5f","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/75fa3a455f56fe5f","status":"passed","time":{"start":1693857702659,"stop":1693857703179,"duration":520}},{"uid":"e7e53e580d0d6c87","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/e7e53e580d0d6c87","status":"passed","time":{"start":1693843300174,"stop":1693843300755,"duration":581}},{"uid":"6d0cf721669cee63","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/6d0cf721669cee63","status":"passed","time":{"start":1693828921427,"stop":1693828922031,"duration":604}},{"uid":"fc0646f9b134a5e5","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/fc0646f9b134a5e5","status":"passed","time":{"start":1693814520404,"stop":1693814521184,"duration":780}},{"uid":"6d806b0c8dec2ff","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/6d806b0c8dec2ff","status":"passed","time":{"start":1693800095050,"stop":1693800095647,"duration":597}},{"uid":"8d750bf893310c97","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/8d750bf893310c97","status":"passed","time":{"start":1693785753014,"stop":1693785753760,"duration":746}},{"uid":"c5f8b47403fcf45a","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/c5f8b47403fcf45a","status":"passed","time":{"start":1693771303489,"stop":1693771304111,"duration":622}},{"uid":"570c3b8a9446f970","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/570c3b8a9446f970","status":"passed","time":{"start":1693756905380,"stop":1693756906127,"duration":747}},{"uid":"d15de24bde484261","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/d15de24bde484261","status":"passed","time":{"start":1693742512843,"stop":1693742513437,"duration":594}},{"uid":"ecd22c1033042d27","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/ecd22c1033042d27","status":"passed","time":{"start":1693728108123,"stop":1693728108642,"duration":519}},{"uid":"13f78e9d7e85481d","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/13f78e9d7e85481d","status":"passed","time":{"start":1693713710756,"stop":1693713711342,"duration":586}},{"uid":"168f882bf5225d1","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/168f882bf5225d1","status":"passed","time":{"start":1693699342936,"stop":1693699343405,"duration":469}},{"uid":"a9590a1c8de3b5fa","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/a9590a1c8de3b5fa","status":"passed","time":{"start":1693684905816,"stop":1693684906415,"duration":599}},{"uid":"9e414fa3fb9981d0","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/9e414fa3fb9981d0","status":"passed","time":{"start":1693670491386,"stop":1693670491857,"duration":471}},{"uid":"115c15a56c1499f8","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/115c15a56c1499f8","status":"passed","time":{"start":1693656094498,"stop":1693656094982,"duration":484}},{"uid":"3dc2458ccacd2bae","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/3dc2458ccacd2bae","status":"passed","time":{"start":1693641689713,"stop":1693641690230,"duration":517}},{"uid":"f95be0c69d862874","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/f95be0c69d862874","status":"passed","time":{"start":1693627301306,"stop":1693627301879,"duration":573}},{"uid":"897e1d3342e79fbc","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/897e1d3342e79fbc","status":"passed","time":{"start":1693612948615,"stop":1693612949105,"duration":490}}]},"tags":[]},"source":"83ae543fd71826a7.json","parameterValues":["{'url': 'wss://phala-rpc.dwellir.com', 'name': 'Phala'}"]}