{"uid":"a3dd2d4d2c18775b","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1693915425978,"stop":1693915427329,"duration":1351},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f309eba4850>\nchain = <scripts.utils.chain_model.Chain object at 0x7f309e743580>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f309eba4850>\nchain = <scripts.utils.chain_model.Chain object at 0x7f309e743580>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c687c9742a327ac1","name":"stdout","source":"c687c9742a327ac1.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1246-521"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f309e743580>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"25bceaebef0d858f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693915409539,"stop":1693915410948,"duration":1409}},{"uid":"9e51f9f7c9ddda37","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693915393417,"stop":1693915394499,"duration":1082}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":70,"unknown":0,"total":72},"items":[{"uid":"7f30b2863bff8a6a","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/7f30b2863bff8a6a","status":"passed","time":{"start":1693872230725,"stop":1693872235359,"duration":4634}},{"uid":"a571c0ee36cc601f","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/a571c0ee36cc601f","status":"passed","time":{"start":1693857801601,"stop":1693857805547,"duration":3946}},{"uid":"8d94c3cc3e6dbc60","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/8d94c3cc3e6dbc60","status":"passed","time":{"start":1693843352313,"stop":1693843355689,"duration":3376}},{"uid":"8c94383f9f63e13b","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/8c94383f9f63e13b","status":"passed","time":{"start":1693828951723,"stop":1693828954689,"duration":2966}},{"uid":"d5e423241bc6cd4","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/d5e423241bc6cd4","status":"passed","time":{"start":1693814596999,"stop":1693814601545,"duration":4546}},{"uid":"911a780cdfc236f8","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/911a780cdfc236f8","status":"passed","time":{"start":1693800149564,"stop":1693800155182,"duration":5618}},{"uid":"3cc00e2f5530cab4","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/3cc00e2f5530cab4","status":"passed","time":{"start":1693785818754,"stop":1693785824476,"duration":5722}},{"uid":"50799962122684f0","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/50799962122684f0","status":"passed","time":{"start":1693771356315,"stop":1693771359945,"duration":3630}},{"uid":"da11edfdb859a90b","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/da11edfdb859a90b","status":"passed","time":{"start":1693756976404,"stop":1693756981692,"duration":5288}},{"uid":"624e8e0cbdb363d4","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/624e8e0cbdb363d4","status":"passed","time":{"start":1693742551900,"stop":1693742554591,"duration":2691}},{"uid":"da4f21ec154d5b21","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/da4f21ec154d5b21","status":"passed","time":{"start":1693728189180,"stop":1693728196128,"duration":6948}},{"uid":"354935308930bf81","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/354935308930bf81","status":"passed","time":{"start":1693713753883,"stop":1693713757912,"duration":4029}},{"uid":"a593baac757389a3","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/a593baac757389a3","status":"passed","time":{"start":1693699421704,"stop":1693699427477,"duration":5773}},{"uid":"2689ff7c8df4558e","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/2689ff7c8df4558e","status":"passed","time":{"start":1693684968518,"stop":1693684973363,"duration":4845}},{"uid":"44cc06f88258d2d2","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/44cc06f88258d2d2","status":"passed","time":{"start":1693670565332,"stop":1693670570709,"duration":5377}},{"uid":"f0c5c02769decb2d","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/f0c5c02769decb2d","status":"passed","time":{"start":1693656188821,"stop":1693656193917,"duration":5096}},{"uid":"2d9fd1ca582e20a7","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/2d9fd1ca582e20a7","status":"passed","time":{"start":1693641758487,"stop":1693641762898,"duration":4411}},{"uid":"5923eb951ab711fa","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/5923eb951ab711fa","status":"passed","time":{"start":1693627377354,"stop":1693627382063,"duration":4709}},{"uid":"bad7cf9b7422975a","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/bad7cf9b7422975a","status":"passed","time":{"start":1693613039970,"stop":1693613045763,"duration":5793}},{"uid":"c3af48b43484950c","reportUrl":"https://novasamatech.github.io/test-runner/3690//#testresult/c3af48b43484950c","status":"passed","time":{"start":1693598570808,"stop":1693598578381,"duration":7573}}]},"tags":[]},"source":"a3dd2d4d2c18775b.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f309e743580>"]}