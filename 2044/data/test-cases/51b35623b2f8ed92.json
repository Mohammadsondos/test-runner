{"uid":"51b35623b2f8ed92","name":"test_can_create_connection[Test for Integritee Parachain, url: wss://integritee-ksm-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d6121d1fa27457c08d8b6a4316112d","time":{"start":1670458482723,"stop":1670458495469,"duration":12746},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Integritee Parachain', 'url': 'wss://integritee-ksm-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e8b97d8c51ec4ffa","name":"stdout","source":"e8b97d8c51ec4ffa.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az565-345"},{"name":"thread","value":"1668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"53b952e45dcf8d06","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670458459930,"stop":1670458472644,"duration":12714}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":107,"skipped":0,"passed":207,"unknown":0,"total":314},"items":[{"uid":"c6df5f474db0f3e7","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/c6df5f474db0f3e7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670443517723,"stop":1670443530463,"duration":12740}},{"uid":"251be7dd39aa9f8f","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/251be7dd39aa9f8f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670429146418,"stop":1670429159265,"duration":12847}},{"uid":"bcb724d474a1f2b0","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/bcb724d474a1f2b0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670414801586,"stop":1670414814432,"duration":12846}},{"uid":"537f0e1d44c188bd","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/537f0e1d44c188bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670400356223,"stop":1670400368848,"duration":12625}},{"uid":"10c592b27215bf3b","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/10c592b27215bf3b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670385919898,"stop":1670385932638,"duration":12740}},{"uid":"daeb6a72fa4a99d3","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/daeb6a72fa4a99d3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670372127366,"stop":1670372140156,"duration":12790}},{"uid":"1ee6ec44b6a2d00b","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/1ee6ec44b6a2d00b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670357119768,"stop":1670357132499,"duration":12731}},{"uid":"eee6d07668956a0e","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/eee6d07668956a0e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670342733002,"stop":1670342742721,"duration":9719}},{"uid":"da891b681e532180","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/da891b681e532180","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670333494575,"stop":1670333507296,"duration":12721}},{"uid":"662b2fbc78ab57cc","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/662b2fbc78ab57cc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670242442279,"stop":1670242454982,"duration":12703}},{"uid":"b72e235d94c61c42","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/b72e235d94c61c42","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670227988133,"stop":1670227998247,"duration":10114}},{"uid":"2a7646be25c43907","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/2a7646be25c43907","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670213568052,"stop":1670213580692,"duration":12640}},{"uid":"68a8260e7fdcc786","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/68a8260e7fdcc786","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670199764704,"stop":1670199777438,"duration":12734}},{"uid":"546519b670f8c4cd","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/546519b670f8c4cd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670184759803,"stop":1670184771225,"duration":11422}},{"uid":"35da39d9ea42c27b","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/35da39d9ea42c27b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670170350182,"stop":1670170362868,"duration":12686}},{"uid":"7314d7294cb00201","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/7314d7294cb00201","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670157281425,"stop":1670157294171,"duration":12746}},{"uid":"700ab244cdf7db7a","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/700ab244cdf7db7a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670142337648,"stop":1670142348280,"duration":10632}},{"uid":"6b0d3929f5015b52","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/6b0d3929f5015b52","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670127899157,"stop":1670127912068,"duration":12911}},{"uid":"2aa16cb44d875f66","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/2aa16cb44d875f66","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670116658422,"stop":1670116671285,"duration":12863}},{"uid":"374a34b354b9dcfc","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/374a34b354b9dcfc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670098920333,"stop":1670098932930,"duration":12597}}]},"tags":[]},"source":"51b35623b2f8ed92.json","parameterValues":["{'url': 'wss://integritee-ksm-rpc.dwellir.com', 'name': 'Integritee Parachain'}"]}