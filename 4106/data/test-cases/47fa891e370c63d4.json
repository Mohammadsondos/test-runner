{"uid":"47fa891e370c63d4","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1699545796693,"stop":1699545797446,"duration":753},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fdb5a3b9d20>\nchain = <scripts.utils.chain_model.Chain object at 0x7fdb5a333910>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fdb5a3b9d20>\nchain = <scripts.utils.chain_model.Chain object at 0x7fdb5a333910>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"1b8cc24275872c10","name":"stdout","source":"1b8cc24275872c10.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1106-228"},{"name":"thread","value":"2168-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fdb5a333910>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ddb5d5b143fa4cb5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699545781026,"stop":1699545781667,"duration":641}},{"uid":"fa2831619cb16754","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699545763051,"stop":1699545766010,"duration":2959}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":430,"unknown":0,"total":465},"items":[{"uid":"f106730e6adbba43","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/f106730e6adbba43","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699531436961,"stop":1699531437727,"duration":766}},{"uid":"66bdca324684e831","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/66bdca324684e831","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699516987397,"stop":1699516988329,"duration":932}},{"uid":"784546a6b7d79b12","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/784546a6b7d79b12","status":"passed","time":{"start":1699502553656,"stop":1699502558192,"duration":4536}},{"uid":"a75b0e49cab320a4","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/a75b0e49cab320a4","status":"passed","time":{"start":1699488178040,"stop":1699488182013,"duration":3973}},{"uid":"2c020b788b9d6f4d","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/2c020b788b9d6f4d","status":"passed","time":{"start":1699473791716,"stop":1699473797202,"duration":5486}},{"uid":"6e992ce0604b35e3","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/6e992ce0604b35e3","status":"passed","time":{"start":1699459355255,"stop":1699459359555,"duration":4300}},{"uid":"3a11adbeb215b047","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/3a11adbeb215b047","status":"passed","time":{"start":1699445169063,"stop":1699445174047,"duration":4984}},{"uid":"1af8a4093c70ed5c","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/1af8a4093c70ed5c","status":"passed","time":{"start":1699430535029,"stop":1699430538647,"duration":3618}},{"uid":"fd71d721e130a186","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/fd71d721e130a186","status":"passed","time":{"start":1699416184556,"stop":1699416190140,"duration":5584}},{"uid":"23041cf083141587","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/23041cf083141587","status":"passed","time":{"start":1699401811099,"stop":1699401816503,"duration":5404}},{"uid":"bb594d87af1ec087","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/bb594d87af1ec087","status":"passed","time":{"start":1699387357714,"stop":1699387362458,"duration":4744}},{"uid":"d389c2f4aa369682","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/d389c2f4aa369682","status":"passed","time":{"start":1699372964877,"stop":1699372968451,"duration":3574}},{"uid":"9816bfa560152532","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/9816bfa560152532","status":"passed","time":{"start":1699358568729,"stop":1699358574239,"duration":5510}},{"uid":"ab67968e01fd7e7d","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/ab67968e01fd7e7d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699344343313,"stop":1699344344433,"duration":1120}},{"uid":"6d01a1db5421dfc1","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/6d01a1db5421dfc1","status":"passed","time":{"start":1699329734187,"stop":1699329740321,"duration":6134}},{"uid":"5189357c07dc2299","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/5189357c07dc2299","status":"passed","time":{"start":1699315376685,"stop":1699315380024,"duration":3339}},{"uid":"e2f374bbcc8c7e6c","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/e2f374bbcc8c7e6c","status":"passed","time":{"start":1699300942718,"stop":1699300946438,"duration":3720}},{"uid":"20e37eed47c98cdd","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/20e37eed47c98cdd","status":"passed","time":{"start":1699286556518,"stop":1699286560879,"duration":4361}},{"uid":"9787fa5fb0929d1e","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/9787fa5fb0929d1e","status":"passed","time":{"start":1699272135765,"stop":1699272140232,"duration":4467}},{"uid":"301b75a5322dfa4c","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/301b75a5322dfa4c","status":"passed","time":{"start":1699257734830,"stop":1699257737934,"duration":3104}}]},"tags":[]},"source":"47fa891e370c63d4.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fdb5a333910>"]}