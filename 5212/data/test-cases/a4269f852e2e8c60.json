{"uid":"a4269f852e2e8c60","name":"test_can_create_connection[Test for Darwinia, url: wss://parachain-rpc.darwinia.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"4001fe03ac55414385ead6c59c2ad970","time":{"start":1715198682489,"stop":1715198682489,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:42 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f769c18081a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Darwinia, url: wss://parachain-rpc.darwinia.network]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:42 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f769c18081a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1715198682489,"stop":1715198682989,"duration":500},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:42 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f769c18081a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:42 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f769c18081a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Darwinia, url: wss://parachain-rpc.darwinia.network]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:261: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:65: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get(\"content-length\")\n            if content_len:\n                response_body = sock.recv(\n                    int(content_len)\n                )  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\n                f\"Handshake status {status} {status_message} -+-+- {resp_headers} -+-+- {response_body}\",\n                status,\n                status_message,\n                resp_headers,\n                response_body,\n            )\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:42 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f769c18081a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a8a8c22021eb97a","name":"stdout","source":"a8a8c22021eb97a.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1215-377"},{"name":"thread","value":"2131-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://parachain-rpc.darwinia.network', 'name': 'Darwinia'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fa6a32aa1898a596","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:37 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f53b9e20a07-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","time":{"start":1715198676894,"stop":1715198676894,"duration":0}},{"uid":"d15bdb9b96a99b2e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 20:04:31 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880c0f30de00083a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","time":{"start":1715198671195,"stop":1715198671195,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":44,"skipped":0,"passed":1243,"unknown":0,"total":1288},"items":[{"uid":"6f21fa2aa1dc6f1","reportUrl":"https://novasamatech.github.io/test-runner/5210//#testresult/6f21fa2aa1dc6f1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 12:04:28 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '88094ff9bb5b986c-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","time":{"start":1715169867653,"stop":1715169867653,"duration":0}},{"uid":"1cbb00e2783a74ea","reportUrl":"https://novasamatech.github.io/test-runner/5211//#testresult/1cbb00e2783a74ea","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 16:04:04 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '880aaef33bc18123-ORD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","time":{"start":1715184243521,"stop":1715184243521,"duration":0}},{"uid":"64860a54d2781e6c","reportUrl":"https://novasamatech.github.io/test-runner/5208//#testresult/64860a54d2781e6c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 04:04:15 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '88069086f87f6423-SJC', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","time":{"start":1715141054208,"stop":1715141054208,"duration":0}},{"uid":"175017bc58ea5d5d","reportUrl":"https://novasamatech.github.io/test-runner/5209//#testresult/175017bc58ea5d5d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found -+-+- {'date': 'Wed, 08 May 2024 08:03:51 GMT', 'content-length': '0', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8807ef8549f68848-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b''","time":{"start":1715155431019,"stop":1715155431019,"duration":0}},{"uid":"a67f544998ce27ee","reportUrl":"https://novasamatech.github.io/test-runner/5207//#testresult/a67f544998ce27ee","status":"passed","time":{"start":1715126715162,"stop":1715126715162,"duration":0}},{"uid":"3d60d924735db817","reportUrl":"https://novasamatech.github.io/test-runner/5205//#testresult/3d60d924735db817","status":"broken","statusDetails":"tests.conftest.FixtureTimeoutError: Timeout 15 when creating connection: wss://parachain-rpc.darwinia.network","time":{"start":1715097921872,"stop":1715097921872,"duration":0}},{"uid":"4351882b82ced36d","reportUrl":"https://novasamatech.github.io/test-runner/5206//#testresult/4351882b82ced36d","status":"passed","time":{"start":1715112247998,"stop":1715112247998,"duration":0}},{"uid":"b74b54c00f1e9248","reportUrl":"https://novasamatech.github.io/test-runner/5204//#testresult/b74b54c00f1e9248","status":"broken","statusDetails":"tests.conftest.FixtureTimeoutError: Timeout 15 when creating connection: wss://parachain-rpc.darwinia.network","time":{"start":1715083534521,"stop":1715083534521,"duration":0}},{"uid":"5f32c75f85bdb715","reportUrl":"https://novasamatech.github.io/test-runner/5203//#testresult/5f32c75f85bdb715","status":"passed","time":{"start":1715069086488,"stop":1715069086488,"duration":0}},{"uid":"d8016d07cea6df4a","reportUrl":"https://novasamatech.github.io/test-runner/5202//#testresult/d8016d07cea6df4a","status":"passed","time":{"start":1715054709500,"stop":1715054709500,"duration":0}},{"uid":"37008403ed20606d","reportUrl":"https://novasamatech.github.io/test-runner/5201//#testresult/37008403ed20606d","status":"passed","time":{"start":1715040290286,"stop":1715040290286,"duration":0}},{"uid":"add7018dc7035c21","reportUrl":"https://novasamatech.github.io/test-runner/5199//#testresult/add7018dc7035c21","status":"passed","time":{"start":1715011485982,"stop":1715011485982,"duration":0}},{"uid":"e8893be9ded1d8cb","reportUrl":"https://novasamatech.github.io/test-runner/5200//#testresult/e8893be9ded1d8cb","status":"passed","time":{"start":1715025868353,"stop":1715025868353,"duration":0}},{"uid":"d868528218b90d93","reportUrl":"https://novasamatech.github.io/test-runner/5197//#testresult/d868528218b90d93","status":"passed","time":{"start":1714982701677,"stop":1714982701678,"duration":1}},{"uid":"4b85c19dbf2f0a3f","reportUrl":"https://novasamatech.github.io/test-runner/5198//#testresult/4b85c19dbf2f0a3f","status":"passed","time":{"start":1714997064713,"stop":1714997064713,"duration":0}},{"uid":"12e81e0190ffbddc","reportUrl":"https://novasamatech.github.io/test-runner/5195//#testresult/12e81e0190ffbddc","status":"passed","time":{"start":1714953903269,"stop":1714953903270,"duration":1}},{"uid":"1323ac617d90d2f7","reportUrl":"https://novasamatech.github.io/test-runner/5196//#testresult/1323ac617d90d2f7","status":"passed","time":{"start":1714968257984,"stop":1714968257984,"duration":0}},{"uid":"a259ac243003cb","reportUrl":"https://novasamatech.github.io/test-runner/5194//#testresult/a259ac243003cb","status":"passed","time":{"start":1714939460784,"stop":1714939460785,"duration":1}},{"uid":"6c3de7561a4397f1","reportUrl":"https://novasamatech.github.io/test-runner/5192//#testresult/6c3de7561a4397f1","status":"passed","time":{"start":1714910702621,"stop":1714910702621,"duration":0}},{"uid":"8e3bbccbae0e6a7e","reportUrl":"https://novasamatech.github.io/test-runner/5193//#testresult/8e3bbccbae0e6a7e","status":"broken","statusDetails":"tests.conftest.FixtureTimeoutError: Timeout 15 when creating connection: wss://parachain-rpc.darwinia.network","time":{"start":1714925139228,"stop":1714925139228,"duration":0}}]},"tags":[]},"source":"a4269f852e2e8c60.json","parameterValues":["{'url': 'wss://parachain-rpc.darwinia.network', 'name': 'Darwinia'}"]}