{"uid":"5ddb8f8d6ff7d364","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1689091536783,"stop":1689091537352,"duration":569},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f403b978c70>\nchain = <scripts.utils.chain_model.Chain object at 0x7f403bbed540>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f403b978c70>\nchain = <scripts.utils.chain_model.Chain object at 0x7f403bbed540>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f51c0d9631d209ce","name":"stdout","source":"f51c0d9631d209ce.txt","type":"text/plain","size":1353}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az247-691"},{"name":"thread","value":"1942-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f403bbed540>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"43b1b0d858c10c0d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689091521222,"stop":1689091521756,"duration":534}},{"uid":"1b4d6b26aeb5d37d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689091505167,"stop":1689091506178,"duration":1011}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":367,"unknown":0,"total":373},"items":[{"uid":"41cf87ef0c2ad8fb","reportUrl":"https://novasamatech.github.io/test-runner/3368//#testresult/41cf87ef0c2ad8fb","status":"passed","time":{"start":1689077194100,"stop":1689077206147,"duration":12047}},{"uid":"9b020c879babd6f5","reportUrl":"https://novasamatech.github.io/test-runner/3366//#testresult/9b020c879babd6f5","status":"passed","time":{"start":1689048303359,"stop":1689048309442,"duration":6083}},{"uid":"966776521abf386a","reportUrl":"https://novasamatech.github.io/test-runner/3367//#testresult/966776521abf386a","status":"passed","time":{"start":1689062735122,"stop":1689062744187,"duration":9065}},{"uid":"9d4877a153f4ccbb","reportUrl":"https://novasamatech.github.io/test-runner/3365//#testresult/9d4877a153f4ccbb","status":"passed","time":{"start":1689034587949,"stop":1689034595547,"duration":7598}},{"uid":"4d25214ec4c7551e","reportUrl":"https://novasamatech.github.io/test-runner/3364//#testresult/4d25214ec4c7551e","status":"passed","time":{"start":1689019492147,"stop":1689019498278,"duration":6131}},{"uid":"16d4ffbada409a5a","reportUrl":"https://novasamatech.github.io/test-runner/3363//#testresult/16d4ffbada409a5a","status":"passed","time":{"start":1689005114558,"stop":1689005125059,"duration":10501}},{"uid":"141552886a46bd0","reportUrl":"https://novasamatech.github.io/test-runner/3362//#testresult/141552886a46bd0","status":"passed","time":{"start":1688990775330,"stop":1688990785168,"duration":9838}},{"uid":"f063a4cd2ff3d862","reportUrl":"https://novasamatech.github.io/test-runner/3361//#testresult/f063a4cd2ff3d862","status":"passed","time":{"start":1688976346688,"stop":1688976354374,"duration":7686}},{"uid":"25f3526301265b6e","reportUrl":"https://novasamatech.github.io/test-runner/3360//#testresult/25f3526301265b6e","status":"passed","time":{"start":1688961908551,"stop":1688961921808,"duration":13257}},{"uid":"c221f8f8f06e2a19","reportUrl":"https://novasamatech.github.io/test-runner/3359//#testresult/c221f8f8f06e2a19","status":"passed","time":{"start":1688948214050,"stop":1688948225014,"duration":10964}},{"uid":"24b8b86feeb64429","reportUrl":"https://novasamatech.github.io/test-runner/3358//#testresult/24b8b86feeb64429","status":"passed","time":{"start":1688933079177,"stop":1688933086308,"duration":7131}},{"uid":"b402dd7d5e39662","reportUrl":"https://novasamatech.github.io/test-runner/3357//#testresult/b402dd7d5e39662","status":"passed","time":{"start":1688918686033,"stop":1688918694678,"duration":8645}},{"uid":"e00f02aee5de97ff","reportUrl":"https://novasamatech.github.io/test-runner/3355//#testresult/e00f02aee5de97ff","status":"passed","time":{"start":1688889919465,"stop":1688889931909,"duration":12444}},{"uid":"c887b23e18cbe43","reportUrl":"https://novasamatech.github.io/test-runner/3356//#testresult/c887b23e18cbe43","status":"passed","time":{"start":1688904337842,"stop":1688904342665,"duration":4823}},{"uid":"74a2bb9fcaa7e57","reportUrl":"https://novasamatech.github.io/test-runner/3354//#testresult/74a2bb9fcaa7e57","status":"passed","time":{"start":1688875490471,"stop":1688875496759,"duration":6288}},{"uid":"98b1f43786a2692","reportUrl":"https://novasamatech.github.io/test-runner/3353//#testresult/98b1f43786a2692","status":"passed","time":{"start":1688861901105,"stop":1688861911705,"duration":10600}},{"uid":"a82195889cfe3d2f","reportUrl":"https://novasamatech.github.io/test-runner/3352//#testresult/a82195889cfe3d2f","status":"passed","time":{"start":1688846682342,"stop":1688846688094,"duration":5752}},{"uid":"337a531f3f370e7c","reportUrl":"https://novasamatech.github.io/test-runner/3351//#testresult/337a531f3f370e7c","status":"passed","time":{"start":1688832294182,"stop":1688832301512,"duration":7330}},{"uid":"753a029ebdcb202b","reportUrl":"https://novasamatech.github.io/test-runner/3349//#testresult/753a029ebdcb202b","status":"passed","time":{"start":1688803502485,"stop":1688803510784,"duration":8299}},{"uid":"94338277916aa05a","reportUrl":"https://novasamatech.github.io/test-runner/3350//#testresult/94338277916aa05a","status":"passed","time":{"start":1688817949697,"stop":1688817958929,"duration":9232}}]},"tags":[]},"source":"5ddb8f8d6ff7d364.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f403bbed540>"]}