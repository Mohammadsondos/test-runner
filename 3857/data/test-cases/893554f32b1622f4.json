{"uid":"893554f32b1622f4","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1695988983888,"stop":1695988984924,"duration":1036},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f30acaaba60>\nchain = <scripts.utils.chain_model.Chain object at 0x7f30aca82a10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f30acaaba60>\nchain = <scripts.utils.chain_model.Chain object at 0x7f30aca82a10>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"8635645e0b3beb11","name":"stdout","source":"8635645e0b3beb11.txt","type":"text/plain","size":1361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az341-750"},{"name":"thread","value":"2174-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f30aca82a10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d721bf5f079496e2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695988967974,"stop":1695988968861,"duration":887}},{"uid":"3f78d634a390bb23","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695988951611,"stop":1695988952935,"duration":1324}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":34,"skipped":0,"passed":182,"unknown":0,"total":216},"items":[{"uid":"1e81b48e909f94dc","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/1e81b48e909f94dc","status":"passed","time":{"start":1695974585375,"stop":1695974590996,"duration":5621}},{"uid":"a6d37d21d1983804","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/a6d37d21d1983804","status":"passed","time":{"start":1695960165165,"stop":1695960168373,"duration":3208}},{"uid":"5a449ecb87f827e9","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/5a449ecb87f827e9","status":"passed","time":{"start":1695945845828,"stop":1695945854968,"duration":9140}},{"uid":"d5745eadce5bae3","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/d5745eadce5bae3","status":"passed","time":{"start":1695931376043,"stop":1695931380073,"duration":4030}},{"uid":"10e88bf4f88f58c1","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/10e88bf4f88f58c1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695917000416,"stop":1695917001163,"duration":747}},{"uid":"9e3155a9e8d482e5","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/9e3155a9e8d482e5","status":"passed","time":{"start":1695902640874,"stop":1695902645419,"duration":4545}},{"uid":"4155f66a3000d54d","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/4155f66a3000d54d","status":"passed","time":{"start":1695888164465,"stop":1695888171827,"duration":7362}},{"uid":"8c46a59fbad7af1f","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/8c46a59fbad7af1f","status":"passed","time":{"start":1695873775265,"stop":1695873783787,"duration":8522}},{"uid":"d2b73468ba8a496c","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/d2b73468ba8a496c","status":"passed","time":{"start":1695859392916,"stop":1695859397416,"duration":4500}},{"uid":"d3c266b0b5ce50c4","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/d3c266b0b5ce50c4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695845020972,"stop":1695845022012,"duration":1040}},{"uid":"55aa52619f7302fd","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/55aa52619f7302fd","status":"passed","time":{"start":1695830574802,"stop":1695830580688,"duration":5886}},{"uid":"f58b0950bdce2eb4","reportUrl":"https://novasamatech.github.io/test-runner/3845//#testresult/f58b0950bdce2eb4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695816216304,"stop":1695816217181,"duration":877}},{"uid":"74c5a535a6af4e8c","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/74c5a535a6af4e8c","status":"passed","time":{"start":1695801743527,"stop":1695801748443,"duration":4916}},{"uid":"59945d18c1284f48","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/59945d18c1284f48","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695787402432,"stop":1695787403915,"duration":1483}},{"uid":"6176b741f0989285","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/6176b741f0989285","status":"passed","time":{"start":1695773006208,"stop":1695773010292,"duration":4084}},{"uid":"2ad718b3ac439a9","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/2ad718b3ac439a9","status":"passed","time":{"start":1695758540483,"stop":1695758544436,"duration":3953}},{"uid":"5eb9f749e4572d43","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/5eb9f749e4572d43","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695744176756,"stop":1695744177792,"duration":1036}},{"uid":"15a255bcb97bfa68","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/15a255bcb97bfa68","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695729777717,"stop":1695729778681,"duration":964}},{"uid":"bd5d40319018e54c","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/bd5d40319018e54c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695715420075,"stop":1695715420888,"duration":813}},{"uid":"b3f7d0ddecbe2c7a","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/b3f7d0ddecbe2c7a","status":"passed","time":{"start":1695700943205,"stop":1695700946983,"duration":3778}}]},"tags":[]},"source":"893554f32b1622f4.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f30aca82a10>"]}