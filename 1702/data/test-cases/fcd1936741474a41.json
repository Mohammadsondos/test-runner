{"uid":"fcd1936741474a41","name":"test_can_create_connection[Test for Kusama, url: wss://kusama.public.curie.radiumblock.co/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b564b7d4051f40db4dc163323edd6d7d","time":{"start":1665635712212,"stop":1665635712357,"duration":145},"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","statusTrace":"hostname = 'kusama.public.curie.radiumblock.co', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7fdb1f0697f0>\n\n    def _get_addrinfo_list(hostname, port, is_secure, proxy):\n        phost, pport, pauth = get_proxy_info(\n            hostname, is_secure, proxy.proxy_host, proxy.proxy_port, proxy.auth, proxy.no_proxy)\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n>               addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhost = 'kusama.public.curie.radiumblock.co', port = 443, family = 0\ntype = <SocketKind.SOCK_STREAM: 1>, proto = 6, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       socket.gaierror: [Errno -2] Name or service not known\n\n/usr/lib/python3.8/socket.py:918: gaierror\n\nDuring handling of the above exception, another exception occurred:\n\ndata = {'name': 'Kusama', 'url': 'wss://kusama.public.curie.radiumblock.co/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:605: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:246: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:122: in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhostname = 'kusama.public.curie.radiumblock.co', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7fdb1f0697f0>\n\n    def _get_addrinfo_list(hostname, port, is_secure, proxy):\n        phost, pport, pauth = get_proxy_info(\n            hostname, is_secure, proxy.proxy_host, proxy.proxy_port, proxy.auth, proxy.no_proxy)\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n                addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n                return addrinfo_list, False, None\n            else:\n                pport = pport and pport or 80\n                # when running on windows 10, the getaddrinfo used above\n                # returns a socktype 0. This generates an error exception:\n                # _on_error: exception Socket type must be stream or datagram, not 0\n                # Force the socket type to SOCK_STREAM\n                addrinfo_list = socket.getaddrinfo(phost, pport, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n                return addrinfo_list, True, pauth\n        except socket.gaierror as e:\n>           raise WebSocketAddressException(e)\nE           websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known\n\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:167: WebSocketAddressException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az626-275"},{"name":"thread","value":"1672-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.public.curie.radiumblock.co/ws', 'name': 'Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"94433530c769a72a","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665635701953,"stop":1665635702059,"duration":106}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":24,"skipped":0,"passed":0,"unknown":0,"total":24},"items":[{"uid":"d5913e48812820c7","reportUrl":"https://nova-wallet.github.io/test-runner/1701//#testresult/d5913e48812820c7","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665620378285,"stop":1665620378316,"duration":31}},{"uid":"1f9a85056c5360ad","reportUrl":"https://nova-wallet.github.io/test-runner/1700//#testresult/1f9a85056c5360ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665605074253,"stop":1665605074364,"duration":111}},{"uid":"17b24b0ca7fe0ae8","reportUrl":"https://nova-wallet.github.io/test-runner/1699//#testresult/17b24b0ca7fe0ae8","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665590884291,"stop":1665590884349,"duration":58}},{"uid":"3ebb5782227c833","reportUrl":"https://nova-wallet.github.io/test-runner/1698//#testresult/3ebb5782227c833","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665576377606,"stop":1665576377680,"duration":74}},{"uid":"aa340b26cd6c13d6","reportUrl":"https://nova-wallet.github.io/test-runner/1697//#testresult/aa340b26cd6c13d6","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665561872002,"stop":1665561872031,"duration":29}},{"uid":"1e69abf5902c50dc","reportUrl":"https://nova-wallet.github.io/test-runner/1696//#testresult/1e69abf5902c50dc","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665549062689,"stop":1665549062791,"duration":102}},{"uid":"86231e780d4826fc","reportUrl":"https://nova-wallet.github.io/test-runner/1695//#testresult/86231e780d4826fc","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665534164484,"stop":1665534164509,"duration":25}},{"uid":"c8d10c425c87ea0b","reportUrl":"https://nova-wallet.github.io/test-runner/1694//#testresult/c8d10c425c87ea0b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665518708314,"stop":1665518708417,"duration":103}},{"uid":"99f0ef7ee82ba8b1","reportUrl":"https://nova-wallet.github.io/test-runner/1693//#testresult/99f0ef7ee82ba8b1","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665504399903,"stop":1665504399925,"duration":22}},{"uid":"3c540bbd3d7c092a","reportUrl":"https://nova-wallet.github.io/test-runner/1692//#testresult/3c540bbd3d7c092a","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665489955578,"stop":1665489955665,"duration":87}},{"uid":"6d40a77a652e3798","reportUrl":"https://nova-wallet.github.io/test-runner/1691//#testresult/6d40a77a652e3798","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665475731486,"stop":1665475731509,"duration":23}},{"uid":"2d80a29218eb9ca8","reportUrl":"https://nova-wallet.github.io/test-runner/1690//#testresult/2d80a29218eb9ca8","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665462843683,"stop":1665462843756,"duration":73}},{"uid":"268153d7b53f2a","reportUrl":"https://nova-wallet.github.io/test-runner/1689//#testresult/268153d7b53f2a","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665447645237,"stop":1665447645263,"duration":26}},{"uid":"dea68fa48fc87202","reportUrl":"https://nova-wallet.github.io/test-runner/1688//#testresult/dea68fa48fc87202","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665432253997,"stop":1665432254110,"duration":113}},{"uid":"842f0b33d3d6da7f","reportUrl":"https://nova-wallet.github.io/test-runner/1687//#testresult/842f0b33d3d6da7f","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665417989435,"stop":1665417989452,"duration":17}},{"uid":"6647d8b82c15ad48","reportUrl":"https://nova-wallet.github.io/test-runner/1686//#testresult/6647d8b82c15ad48","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665403574034,"stop":1665403574058,"duration":24}},{"uid":"26f6e15a06796304","reportUrl":"https://nova-wallet.github.io/test-runner/1685//#testresult/26f6e15a06796304","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665389256861,"stop":1665389256898,"duration":37}},{"uid":"3dbfd3d70f6c7c92","reportUrl":"https://nova-wallet.github.io/test-runner/1684//#testresult/3dbfd3d70f6c7c92","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665386966481,"stop":1665386966592,"duration":111}},{"uid":"ba30789f7c0a8670","reportUrl":"https://nova-wallet.github.io/test-runner/1683//#testresult/ba30789f7c0a8670","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665385314122,"stop":1665385314167,"duration":45}},{"uid":"415763a7d2607814","reportUrl":"https://nova-wallet.github.io/test-runner/1682//#testresult/415763a7d2607814","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1665383547724,"stop":1665383547749,"duration":25}}]},"tags":[]},"source":"fcd1936741474a41.json","parameterValues":["{'url': 'wss://kusama.public.curie.radiumblock.co/ws', 'name': 'Kusama'}"]}