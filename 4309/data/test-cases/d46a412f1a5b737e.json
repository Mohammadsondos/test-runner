{"uid":"d46a412f1a5b737e","name":"test_address_prefix[Test for OriginTrail Parachain]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"77eaa4e11647f845cf29f8de95b0eed1","time":{"start":1702397163355,"stop":1702397163355,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_address_prefix[Test for OriginTrail Parachain]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1702397163356,"stop":1702397164444,"duration":1088},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_address_prefix[Test for OriginTrail Parachain]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"1f7cd9db17e66283","name":"stdout","source":"1f7cd9db17e66283.txt","type":"text/plain","size":1296}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az773-122"},{"name":"thread","value":"2172-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f65b57ea440>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"795ebbe93af539a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1702397147480,"stop":1702397147480,"duration":0}},{"uid":"f2829c086540e40c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1702397131569,"stop":1702397131569,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":611,"unknown":0,"total":613},"items":[{"uid":"35a2f716d896d440","reportUrl":"https://novasamatech.github.io/test-runner/4308//#testresult/35a2f716d896d440","status":"passed","time":{"start":1702382766249,"stop":1702382766249,"duration":0}},{"uid":"395fd116aa6661ac","reportUrl":"https://novasamatech.github.io/test-runner/4307//#testresult/395fd116aa6661ac","status":"passed","time":{"start":1702368329521,"stop":1702368329521,"duration":0}},{"uid":"c3128563a6cfd00b","reportUrl":"https://novasamatech.github.io/test-runner/4306//#testresult/c3128563a6cfd00b","status":"passed","time":{"start":1702353870956,"stop":1702353870956,"duration":0}},{"uid":"2c1b811d25bc6cd2","reportUrl":"https://novasamatech.github.io/test-runner/4305//#testresult/2c1b811d25bc6cd2","status":"passed","time":{"start":1702339539442,"stop":1702339539442,"duration":0}},{"uid":"8c91523a95d0042c","reportUrl":"https://novasamatech.github.io/test-runner/4304//#testresult/8c91523a95d0042c","status":"passed","time":{"start":1702325138055,"stop":1702325138055,"duration":0}},{"uid":"2dd185520948b480","reportUrl":"https://novasamatech.github.io/test-runner/4303//#testresult/2dd185520948b480","status":"passed","time":{"start":1702310729852,"stop":1702310729852,"duration":0}},{"uid":"8100bbbbbef9bb53","reportUrl":"https://novasamatech.github.io/test-runner/4302//#testresult/8100bbbbbef9bb53","status":"passed","time":{"start":1702296111922,"stop":1702296111922,"duration":0}},{"uid":"ebc00e50bd0cb71b","reportUrl":"https://novasamatech.github.io/test-runner/4301//#testresult/ebc00e50bd0cb71b","status":"passed","time":{"start":1702281719137,"stop":1702281719137,"duration":0}},{"uid":"20cf8338abb5223a","reportUrl":"https://novasamatech.github.io/test-runner/4300//#testresult/20cf8338abb5223a","status":"passed","time":{"start":1702267297608,"stop":1702267297609,"duration":1}},{"uid":"14c0839ade556d93","reportUrl":"https://novasamatech.github.io/test-runner/4299//#testresult/14c0839ade556d93","status":"passed","time":{"start":1702252954738,"stop":1702252954738,"duration":0}},{"uid":"cf9403aa60268b0d","reportUrl":"https://novasamatech.github.io/test-runner/4298//#testresult/cf9403aa60268b0d","status":"passed","time":{"start":1702238505704,"stop":1702238505704,"duration":0}},{"uid":"9745249e14549429","reportUrl":"https://novasamatech.github.io/test-runner/4297//#testresult/9745249e14549429","status":"passed","time":{"start":1702224116277,"stop":1702224116277,"duration":0}},{"uid":"cd940ecb6d98e0e5","reportUrl":"https://novasamatech.github.io/test-runner/4296//#testresult/cd940ecb6d98e0e5","status":"passed","time":{"start":1702209711807,"stop":1702209711807,"duration":0}},{"uid":"80a6ed55ad26568","reportUrl":"https://novasamatech.github.io/test-runner/4295//#testresult/80a6ed55ad26568","status":"passed","time":{"start":1702195311590,"stop":1702195311590,"duration":0}},{"uid":"7803cbbac6b3092e","reportUrl":"https://novasamatech.github.io/test-runner/4294//#testresult/7803cbbac6b3092e","status":"passed","time":{"start":1702180908900,"stop":1702180908901,"duration":1}},{"uid":"3c0c170231020307","reportUrl":"https://novasamatech.github.io/test-runner/4293//#testresult/3c0c170231020307","status":"passed","time":{"start":1702166556635,"stop":1702166556635,"duration":0}},{"uid":"eb92b1c611ab4960","reportUrl":"https://novasamatech.github.io/test-runner/4292//#testresult/eb92b1c611ab4960","status":"passed","time":{"start":1702152102726,"stop":1702152102726,"duration":0}},{"uid":"3407d2aee1c83ed","reportUrl":"https://novasamatech.github.io/test-runner/4291//#testresult/3407d2aee1c83ed","status":"passed","time":{"start":1702137727338,"stop":1702137727339,"duration":1}},{"uid":"18e8065a6872c417","reportUrl":"https://novasamatech.github.io/test-runner/4290//#testresult/18e8065a6872c417","status":"passed","time":{"start":1702123308559,"stop":1702123308559,"duration":0}},{"uid":"6324a250fb8b1803","reportUrl":"https://novasamatech.github.io/test-runner/4289//#testresult/6324a250fb8b1803","status":"passed","time":{"start":1702108906264,"stop":1702108906264,"duration":0}}]},"tags":[]},"source":"d46a412f1a5b737e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f65b57ea440>"]}