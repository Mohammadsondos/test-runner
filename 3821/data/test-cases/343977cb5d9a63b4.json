{"uid":"343977cb5d9a63b4","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1695470576456,"stop":1695470577578,"duration":1122},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f4e63843280>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4e6370f760>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f4e63843280>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4e6370f760>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f693013de1cd7cbb","name":"stdout","source":"f693013de1cd7cbb.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az389-73"},{"name":"thread","value":"2042-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f4e6370f760>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b933b193556acd19","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695470560707,"stop":1695470561431,"duration":724}},{"uid":"64c7515a1dd77121","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695470544864,"stop":1695470545669,"duration":805}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":157,"unknown":0,"total":180},"items":[{"uid":"437c40f2048af62d","reportUrl":"https://novasamatech.github.io/test-runner/3820//#testresult/437c40f2048af62d","status":"passed","time":{"start":1695456148384,"stop":1695456152743,"duration":4359}},{"uid":"86736271923532d6","reportUrl":"https://novasamatech.github.io/test-runner/3819//#testresult/86736271923532d6","status":"passed","time":{"start":1695441733625,"stop":1695441739233,"duration":5608}},{"uid":"53624f7bfc7025b1","reportUrl":"https://novasamatech.github.io/test-runner/3818//#testresult/53624f7bfc7025b1","status":"passed","time":{"start":1695427404651,"stop":1695427409726,"duration":5075}},{"uid":"a80092c574206060","reportUrl":"https://novasamatech.github.io/test-runner/3817//#testresult/a80092c574206060","status":"passed","time":{"start":1695412934035,"stop":1695412938907,"duration":4872}},{"uid":"b97c11d17b1f948d","reportUrl":"https://novasamatech.github.io/test-runner/3816//#testresult/b97c11d17b1f948d","status":"passed","time":{"start":1695398601660,"stop":1695398610001,"duration":8341}},{"uid":"d4cafd2d65d1238a","reportUrl":"https://novasamatech.github.io/test-runner/3815//#testresult/d4cafd2d65d1238a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695384184393,"stop":1695384185133,"duration":740}},{"uid":"ba41cff7a7ac9baa","reportUrl":"https://novasamatech.github.io/test-runner/3814//#testresult/ba41cff7a7ac9baa","status":"passed","time":{"start":1695369790873,"stop":1695369796444,"duration":5571}},{"uid":"591455dbf03fd627","reportUrl":"https://novasamatech.github.io/test-runner/3813//#testresult/591455dbf03fd627","status":"passed","time":{"start":1695355361690,"stop":1695355369896,"duration":8206}},{"uid":"9a196e11940d4c25","reportUrl":"https://novasamatech.github.io/test-runner/3812//#testresult/9a196e11940d4c25","status":"passed","time":{"start":1695341030471,"stop":1695341036267,"duration":5796}},{"uid":"4a23a6fe4853627d","reportUrl":"https://novasamatech.github.io/test-runner/3810//#testresult/4a23a6fe4853627d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695312217599,"stop":1695312218578,"duration":979}},{"uid":"8ce73c24a2f42f52","reportUrl":"https://novasamatech.github.io/test-runner/3809//#testresult/8ce73c24a2f42f52","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695297809002,"stop":1695297809849,"duration":847}},{"uid":"b7bdb4deb1c4c5ed","reportUrl":"https://novasamatech.github.io/test-runner/3808//#testresult/b7bdb4deb1c4c5ed","status":"passed","time":{"start":1695283359799,"stop":1695283364574,"duration":4775}},{"uid":"bd1179c2b91bfba9","reportUrl":"https://novasamatech.github.io/test-runner/3807//#testresult/bd1179c2b91bfba9","status":"passed","time":{"start":1695268966441,"stop":1695268970845,"duration":4404}},{"uid":"e36137d2b76176c9","reportUrl":"https://novasamatech.github.io/test-runner/3806//#testresult/e36137d2b76176c9","status":"passed","time":{"start":1695254640895,"stop":1695254645714,"duration":4819}},{"uid":"45732a4b8e4a1ad4","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/45732a4b8e4a1ad4","status":"passed","time":{"start":1695240158251,"stop":1695240162380,"duration":4129}},{"uid":"8f46f5c0a4aca9b","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/8f46f5c0a4aca9b","status":"passed","time":{"start":1695225757513,"stop":1695225760920,"duration":3407}},{"uid":"afd7da07b1e11d0e","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/afd7da07b1e11d0e","status":"passed","time":{"start":1695211343209,"stop":1695211347900,"duration":4691}},{"uid":"8f4e05f79805cc1f","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/8f4e05f79805cc1f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695196991499,"stop":1695196992426,"duration":927}},{"uid":"610d6ed5ff4ebf48","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/610d6ed5ff4ebf48","status":"passed","time":{"start":1695182553083,"stop":1695182556490,"duration":3407}},{"uid":"945580c794c625a1","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/945580c794c625a1","status":"passed","time":{"start":1695168221991,"stop":1695168227854,"duration":5863}}]},"tags":[]},"source":"343977cb5d9a63b4.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f4e6370f760>"]}