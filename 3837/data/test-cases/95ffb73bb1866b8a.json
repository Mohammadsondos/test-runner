{"uid":"95ffb73bb1866b8a","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1695700959005,"stop":1695700960217,"duration":1212},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb587ab9a50>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb58c0bed40>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb587ab9a50>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb58c0bed40>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"59587970e34464f8","name":"stdout","source":"59587970e34464f8.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az396-74"},{"name":"thread","value":"2077-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb58c0bed40>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ce5e3a6c94601b94","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695700943072,"stop":1695700943977,"duration":905}},{"uid":"e4bd2fad62a42375","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695700927015,"stop":1695700928043,"duration":1028}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":178,"unknown":0,"total":196},"items":[{"uid":"f66340c89d0b2248","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/f66340c89d0b2248","status":"passed","time":{"start":1695686586529,"stop":1695686590106,"duration":3577}},{"uid":"be6b0a0f1122ea66","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/be6b0a0f1122ea66","status":"passed","time":{"start":1695672182697,"stop":1695672188458,"duration":5761}},{"uid":"13f0e7d19476b1f4","reportUrl":"https://novasamatech.github.io/test-runner/3834//#testresult/13f0e7d19476b1f4","status":"passed","time":{"start":1695657738303,"stop":1695657742540,"duration":4237}},{"uid":"19f47a44565a0a90","reportUrl":"https://novasamatech.github.io/test-runner/3833//#testresult/19f47a44565a0a90","status":"passed","time":{"start":1695643378064,"stop":1695643383519,"duration":5455}},{"uid":"51330c790e1c805","reportUrl":"https://novasamatech.github.io/test-runner/3832//#testresult/51330c790e1c805","status":"passed","time":{"start":1695628930645,"stop":1695628934215,"duration":3570}},{"uid":"ba6c341dfa26895b","reportUrl":"https://novasamatech.github.io/test-runner/3831//#testresult/ba6c341dfa26895b","status":"passed","time":{"start":1695614531410,"stop":1695614536453,"duration":5043}},{"uid":"eb1b4ddfbf8e6971","reportUrl":"https://novasamatech.github.io/test-runner/3830//#testresult/eb1b4ddfbf8e6971","status":"passed","time":{"start":1695600170056,"stop":1695600173716,"duration":3660}},{"uid":"49513a3e441977b9","reportUrl":"https://novasamatech.github.io/test-runner/3829//#testresult/49513a3e441977b9","status":"passed","time":{"start":1695585721408,"stop":1695585724666,"duration":3258}},{"uid":"8d9004a7a80ce56d","reportUrl":"https://novasamatech.github.io/test-runner/3828//#testresult/8d9004a7a80ce56d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695571371711,"stop":1695571372609,"duration":898}},{"uid":"4358d2fa292a42bd","reportUrl":"https://novasamatech.github.io/test-runner/3827//#testresult/4358d2fa292a42bd","status":"passed","time":{"start":1695556926198,"stop":1695556930391,"duration":4193}},{"uid":"5831f297235deb39","reportUrl":"https://novasamatech.github.io/test-runner/3826//#testresult/5831f297235deb39","status":"passed","time":{"start":1695542565774,"stop":1695542572722,"duration":6948}},{"uid":"5c35a92fec0bc570","reportUrl":"https://novasamatech.github.io/test-runner/3825//#testresult/5c35a92fec0bc570","status":"passed","time":{"start":1695528128005,"stop":1695528131618,"duration":3613}},{"uid":"931f2af46ca8d52b","reportUrl":"https://novasamatech.github.io/test-runner/3824//#testresult/931f2af46ca8d52b","status":"passed","time":{"start":1695513769340,"stop":1695513772794,"duration":3454}},{"uid":"e119c3d4dc0014b2","reportUrl":"https://novasamatech.github.io/test-runner/3823//#testresult/e119c3d4dc0014b2","status":"passed","time":{"start":1695499341031,"stop":1695499345706,"duration":4675}},{"uid":"d0f8ab01a31fc337","reportUrl":"https://novasamatech.github.io/test-runner/3822//#testresult/d0f8ab01a31fc337","status":"passed","time":{"start":1695484921417,"stop":1695484924872,"duration":3455}},{"uid":"e935484a8a6bf4ea","reportUrl":"https://novasamatech.github.io/test-runner/3821//#testresult/e935484a8a6bf4ea","status":"passed","time":{"start":1695470534989,"stop":1695470538938,"duration":3949}},{"uid":"e30131f959bfc77","reportUrl":"https://novasamatech.github.io/test-runner/3820//#testresult/e30131f959bfc77","status":"passed","time":{"start":1695456129645,"stop":1695456133697,"duration":4052}},{"uid":"c949d9e441deda58","reportUrl":"https://novasamatech.github.io/test-runner/3819//#testresult/c949d9e441deda58","status":"passed","time":{"start":1695441720186,"stop":1695441724962,"duration":4776}},{"uid":"70b4b87e709dd2c9","reportUrl":"https://novasamatech.github.io/test-runner/3818//#testresult/70b4b87e709dd2c9","status":"passed","time":{"start":1695427383254,"stop":1695427388333,"duration":5079}},{"uid":"2dce0350ac85bb8","reportUrl":"https://novasamatech.github.io/test-runner/3817//#testresult/2dce0350ac85bb8","status":"passed","time":{"start":1695412918453,"stop":1695412922701,"duration":4248}}]},"tags":[]},"source":"95ffb73bb1866b8a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb58c0bed40>"]}