{"uid":"5a5bb5cd43754c04","name":"test_has_new_assets[Test for Picasso]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"fd38998ee9aa3169204e8146f2eb032a","time":{"start":1699617727039,"stop":1699617728324,"duration":1285},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9662ce6f50>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9662ce4250>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9662ce6f50>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9662ce4250>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"d00577ccec579da8","name":"stdout","source":"d00577ccec579da8.txt","type":"text/plain","size":4742}],"parameters":[],"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az439-922"},{"name":"thread","value":"2115-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9662ce4250>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"452f7d6799dc8f90","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699617710915,"stop":1699617712021,"duration":1106}},{"uid":"12ea7c1f7fcc52e9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699617694485,"stop":1699617695888,"duration":1403}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":466,"unknown":0,"total":470},"items":[{"uid":"42d56338a43ba5b3","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/42d56338a43ba5b3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699603324688,"stop":1699603326149,"duration":1461}},{"uid":"b3fa31f1f355f1ba","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/b3fa31f1f355f1ba","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699588923904,"stop":1699588924741,"duration":837}},{"uid":"3f4d7186aa88069a","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/3f4d7186aa88069a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699574593064,"stop":1699574594107,"duration":1043}},{"uid":"41a3aae3489c4524","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/41a3aae3489c4524","status":"passed","time":{"start":1699560098715,"stop":1699560104441,"duration":5726}},{"uid":"5c342f56da76efeb","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/5c342f56da76efeb","status":"passed","time":{"start":1699545691080,"stop":1699545695709,"duration":4629}},{"uid":"a5b297c3da00e1f8","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/a5b297c3da00e1f8","status":"passed","time":{"start":1699531316387,"stop":1699531324475,"duration":8088}},{"uid":"13733919fb452307","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/13733919fb452307","status":"passed","time":{"start":1699516909254,"stop":1699516913219,"duration":3965}},{"uid":"9d1e5c5f95156faa","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/9d1e5c5f95156faa","status":"passed","time":{"start":1699502507909,"stop":1699502513296,"duration":5387}},{"uid":"253a9cc883489a3","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/253a9cc883489a3","status":"passed","time":{"start":1699488134765,"stop":1699488138011,"duration":3246}},{"uid":"185531237ee59159","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/185531237ee59159","status":"passed","time":{"start":1699473711278,"stop":1699473719138,"duration":7860}},{"uid":"b6ce987473398610","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/b6ce987473398610","status":"passed","time":{"start":1699459292374,"stop":1699459297711,"duration":5337}},{"uid":"188691f6673af829","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/188691f6673af829","status":"passed","time":{"start":1699444917386,"stop":1699444925250,"duration":7864}},{"uid":"a61b2698c2c62f8d","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/a61b2698c2c62f8d","status":"passed","time":{"start":1699430487305,"stop":1699430491771,"duration":4466}},{"uid":"218896926586a02b","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/218896926586a02b","status":"passed","time":{"start":1699416122043,"stop":1699416129438,"duration":7395}},{"uid":"681382f71318bc39","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/681382f71318bc39","status":"passed","time":{"start":1699401751549,"stop":1699401758263,"duration":6714}},{"uid":"c51c6a651579a827","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/c51c6a651579a827","status":"passed","time":{"start":1699387301962,"stop":1699387308205,"duration":6243}},{"uid":"a98253c91260a2ec","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/a98253c91260a2ec","status":"passed","time":{"start":1699372890056,"stop":1699372894578,"duration":4522}},{"uid":"648c958f4d7f7480","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/648c958f4d7f7480","status":"passed","time":{"start":1699358505370,"stop":1699358511722,"duration":6352}},{"uid":"fcefaca18c167c6c","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/fcefaca18c167c6c","status":"passed","time":{"start":1699344114708,"stop":1699344121480,"duration":6772}},{"uid":"d0766bb7568883c8","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/d0766bb7568883c8","status":"passed","time":{"start":1699329686216,"stop":1699329690144,"duration":3928}}]},"tags":[]},"source":"5a5bb5cd43754c04.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9662ce4250>"]}