{"uid":"47ef88e184dac37","name":"test_address_prefix[Test for Bittensor]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"d3e9ec515582b58b1880ba7eb2e4ffa1","time":{"start":1706961761643,"stop":1706961761643,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1706961753252,"stop":1706961754464,"duration":1212},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1706961759556,"stop":1706961761642,"duration":2086},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az1198-835"},{"name":"thread","value":"2046-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f067b353460>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"da47c1ccfbc1c488","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1706961753251,"stop":1706961753251,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":822,"unknown":0,"total":822},"items":[{"uid":"fbb37106b5c75c2b","reportUrl":"https://novasamatech.github.io/test-runner/4631//#testresult/fbb37106b5c75c2b","status":"passed","time":{"start":1706947327718,"stop":1706947327718,"duration":0}},{"uid":"85e9a1cc39717f16","reportUrl":"https://novasamatech.github.io/test-runner/4630//#testresult/85e9a1cc39717f16","status":"passed","time":{"start":1706932953812,"stop":1706932953812,"duration":0}},{"uid":"f89852017b01d4a9","reportUrl":"https://novasamatech.github.io/test-runner/4629//#testresult/f89852017b01d4a9","status":"passed","time":{"start":1706918589067,"stop":1706918589067,"duration":0}},{"uid":"863e8053b50a3d6c","reportUrl":"https://novasamatech.github.io/test-runner/4628//#testresult/863e8053b50a3d6c","status":"passed","time":{"start":1706904153004,"stop":1706904153005,"duration":1}},{"uid":"8b56c99f60e716dc","reportUrl":"https://novasamatech.github.io/test-runner/4627//#testresult/8b56c99f60e716dc","status":"passed","time":{"start":1706889746394,"stop":1706889746394,"duration":0}},{"uid":"36ba906ca58a9cd5","reportUrl":"https://novasamatech.github.io/test-runner/4626//#testresult/36ba906ca58a9cd5","status":"passed","time":{"start":1706875334589,"stop":1706875334589,"duration":0}},{"uid":"8cd5cff81fd3e052","reportUrl":"https://novasamatech.github.io/test-runner/4625//#testresult/8cd5cff81fd3e052","status":"passed","time":{"start":1706860929959,"stop":1706860929959,"duration":0}},{"uid":"aa0e73d7d10d700c","reportUrl":"https://novasamatech.github.io/test-runner/4624//#testresult/aa0e73d7d10d700c","status":"passed","time":{"start":1706846538076,"stop":1706846538077,"duration":1}},{"uid":"6f468ad5acc72c17","reportUrl":"https://novasamatech.github.io/test-runner/4623//#testresult/6f468ad5acc72c17","status":"passed","time":{"start":1706832190288,"stop":1706832190288,"duration":0}},{"uid":"8814820f2e566ce5","reportUrl":"https://novasamatech.github.io/test-runner/4622//#testresult/8814820f2e566ce5","status":"passed","time":{"start":1706817740669,"stop":1706817740669,"duration":0}},{"uid":"1d231764a873f77d","reportUrl":"https://novasamatech.github.io/test-runner/4621//#testresult/1d231764a873f77d","status":"passed","time":{"start":1706803337793,"stop":1706803337793,"duration":0}},{"uid":"d24ef13125a72b99","reportUrl":"https://novasamatech.github.io/test-runner/4620//#testresult/d24ef13125a72b99","status":"passed","time":{"start":1706788940249,"stop":1706788940250,"duration":1}},{"uid":"26549334e5c9443","reportUrl":"https://novasamatech.github.io/test-runner/4619//#testresult/26549334e5c9443","status":"passed","time":{"start":1706774540475,"stop":1706774540475,"duration":0}},{"uid":"905c192a0a3a0863","reportUrl":"https://novasamatech.github.io/test-runner/4618//#testresult/905c192a0a3a0863","status":"passed","time":{"start":1706760130969,"stop":1706760130969,"duration":0}},{"uid":"d0a3447fb4a3c731","reportUrl":"https://novasamatech.github.io/test-runner/4617//#testresult/d0a3447fb4a3c731","status":"passed","time":{"start":1706745789585,"stop":1706745789585,"duration":0}},{"uid":"89cba400f8ed239e","reportUrl":"https://novasamatech.github.io/test-runner/4616//#testresult/89cba400f8ed239e","status":"passed","time":{"start":1706731336980,"stop":1706731336980,"duration":0}},{"uid":"e47c8c02af63ff19","reportUrl":"https://novasamatech.github.io/test-runner/4615//#testresult/e47c8c02af63ff19","status":"passed","time":{"start":1706716946884,"stop":1706716946884,"duration":0}},{"uid":"18148cc39b3ee9ae","reportUrl":"https://novasamatech.github.io/test-runner/4614//#testresult/18148cc39b3ee9ae","status":"passed","time":{"start":1706702550329,"stop":1706702550330,"duration":1}},{"uid":"51f4809c6206125b","reportUrl":"https://novasamatech.github.io/test-runner/4613//#testresult/51f4809c6206125b","status":"passed","time":{"start":1706688139847,"stop":1706688139847,"duration":0}},{"uid":"fa0961c2e7c5a31c","reportUrl":"https://novasamatech.github.io/test-runner/4612//#testresult/fa0961c2e7c5a31c","status":"passed","time":{"start":1706673742979,"stop":1706673742979,"duration":0}}]},"tags":[]},"source":"47ef88e184dac37.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f067b353460>"]}