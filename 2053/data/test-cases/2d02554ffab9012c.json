{"uid":"2d02554ffab9012c","name":"test_can_create_connection[Test for Tinkernet, url: wss://tinker.invarch.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d05bfdf1289b5d816007efa824eb7e47","time":{"start":1670587582157,"stop":1670587582348,"duration":191},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://tinker.invarch.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://tinker.invarch.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"14e36eb8ebc64325","name":"stdout","source":"14e36eb8ebc64325.txt","type":"text/plain","size":236}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az344-550"},{"name":"thread","value":"1731-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://tinker.invarch.network', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"aaeece1f057c9866","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670587571825,"stop":1670587572048,"duration":223}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":100,"skipped":0,"passed":223,"unknown":0,"total":323},"items":[{"uid":"a2b0dc772a2ac559","reportUrl":"https://nova-wallet.github.io/test-runner/2052//#testresult/a2b0dc772a2ac559","status":"passed","time":{"start":1670573208243,"stop":1670573208492,"duration":249}},{"uid":"b920886af6d920c1","reportUrl":"https://nova-wallet.github.io/test-runner/2051//#testresult/b920886af6d920c1","status":"passed","time":{"start":1670558733847,"stop":1670558734163,"duration":316}},{"uid":"6a2884640194d729","reportUrl":"https://nova-wallet.github.io/test-runner/2050//#testresult/6a2884640194d729","status":"passed","time":{"start":1670544971783,"stop":1670544971855,"duration":72}},{"uid":"95b5f55916026a4f","reportUrl":"https://nova-wallet.github.io/test-runner/2049//#testresult/95b5f55916026a4f","status":"passed","time":{"start":1670529979694,"stop":1670529980061,"duration":367}},{"uid":"bf290d6d7a254dc0","reportUrl":"https://nova-wallet.github.io/test-runner/2048//#testresult/bf290d6d7a254dc0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670515557009,"stop":1670515557060,"duration":51}},{"uid":"f45c6f02474d56e5","reportUrl":"https://nova-wallet.github.io/test-runner/2047//#testresult/f45c6f02474d56e5","status":"passed","time":{"start":1670501214683,"stop":1670501214740,"duration":57}},{"uid":"a9d6cfdb9d5c3298","reportUrl":"https://nova-wallet.github.io/test-runner/2046//#testresult/a9d6cfdb9d5c3298","status":"passed","time":{"start":1670486750558,"stop":1670486750635,"duration":77}},{"uid":"e076b152e92b846b","reportUrl":"https://nova-wallet.github.io/test-runner/2045//#testresult/e076b152e92b846b","status":"passed","time":{"start":1670472375346,"stop":1670472375459,"duration":113}},{"uid":"139681e9811bf901","reportUrl":"https://nova-wallet.github.io/test-runner/2044//#testresult/139681e9811bf901","status":"passed","time":{"start":1670458480135,"stop":1670458480428,"duration":293}},{"uid":"35e6c3556c387f0a","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/35e6c3556c387f0a","status":"passed","time":{"start":1670443528443,"stop":1670443528770,"duration":327}},{"uid":"f52853c2dd6a6332","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/f52853c2dd6a6332","status":"passed","time":{"start":1670429175421,"stop":1670429175712,"duration":291}},{"uid":"57fce072369cc07b","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/57fce072369cc07b","status":"passed","time":{"start":1670414832569,"stop":1670414832920,"duration":351}},{"uid":"d450e67062c2a2e7","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/d450e67062c2a2e7","status":"passed","time":{"start":1670400363413,"stop":1670400363496,"duration":83}},{"uid":"d1c2a53c61affd34","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/d1c2a53c61affd34","status":"passed","time":{"start":1670385940724,"stop":1670385941076,"duration":352}},{"uid":"19043bcefc551ee8","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/19043bcefc551ee8","status":"passed","time":{"start":1670372130775,"stop":1670372131066,"duration":291}},{"uid":"36c2cd3997dc516","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/36c2cd3997dc516","status":"passed","time":{"start":1670357141476,"stop":1670357142823,"duration":1347}},{"uid":"f616cbe6f090c58b","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/f616cbe6f090c58b","status":"passed","time":{"start":1670342764337,"stop":1670342764642,"duration":305}},{"uid":"b61e6a529c43e842","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/b61e6a529c43e842","status":"passed","time":{"start":1670333486115,"stop":1670333486374,"duration":259}},{"uid":"eb0a09047e3df15a","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/eb0a09047e3df15a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670242621501,"stop":1670242621675,"duration":174}},{"uid":"7bc66fc662b9a49d","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/7bc66fc662b9a49d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670228164806,"stop":1670228164974,"duration":168}}]},"tags":[]},"source":"2d02554ffab9012c.json","parameterValues":["{'url': 'wss://tinker.invarch.network', 'name': 'Tinkernet'}"]}