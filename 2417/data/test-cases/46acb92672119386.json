{"uid":"46acb92672119386","name":"test_can_create_connection[Test for Pichiu, url: wss://kusama.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"43f9a3f242d3a4a5d24c7320862b4e4b","time":{"start":1675772852578,"stop":1675772852874,"duration":296},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://kusama.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://kusama.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"bed7435af7ecc14b","name":"stdout","source":"bed7435af7ecc14b.txt","type":"text/plain","size":238}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az564-314"},{"name":"thread","value":"1697-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.kylin-node.co.uk', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ea0b8a9a85d939b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675772842105,"stop":1675772842445,"duration":340}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":100,"skipped":0,"passed":572,"unknown":0,"total":672},"items":[{"uid":"5e29024e5c7f5b8","reportUrl":"https://nova-wallet.github.io/test-runner/2416//#testresult/5e29024e5c7f5b8","status":"passed","time":{"start":1675757884875,"stop":1675757885025,"duration":150}},{"uid":"e871c30f95b79e16","reportUrl":"https://nova-wallet.github.io/test-runner/2415//#testresult/e871c30f95b79e16","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675743396152,"stop":1675743396225,"duration":73}},{"uid":"149e8130acc9afb1","reportUrl":"https://nova-wallet.github.io/test-runner/2414//#testresult/149e8130acc9afb1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675732073518,"stop":1675732073812,"duration":294}},{"uid":"fcff68a342640207","reportUrl":"https://nova-wallet.github.io/test-runner/2413//#testresult/fcff68a342640207","status":"passed","time":{"start":1675714513108,"stop":1675714513491,"duration":383}},{"uid":"bee10fa04065c089","reportUrl":"https://nova-wallet.github.io/test-runner/2412//#testresult/bee10fa04065c089","status":"passed","time":{"start":1675700342999,"stop":1675700343418,"duration":419}},{"uid":"9fd5279a39bc428","reportUrl":"https://nova-wallet.github.io/test-runner/2410//#testresult/9fd5279a39bc428","status":"passed","time":{"start":1675671513738,"stop":1675671514116,"duration":378}},{"uid":"7c8e96f0778505f","reportUrl":"https://nova-wallet.github.io/test-runner/2409//#testresult/7c8e96f0778505f","status":"passed","time":{"start":1675657013822,"stop":1675657014192,"duration":370}},{"uid":"7b0fdd82e49f2070","reportUrl":"https://nova-wallet.github.io/test-runner/2408//#testresult/7b0fdd82e49f2070","status":"passed","time":{"start":1675645567919,"stop":1675645568147,"duration":228}},{"uid":"5746febf7dc99f48","reportUrl":"https://nova-wallet.github.io/test-runner/2407//#testresult/5746febf7dc99f48","status":"passed","time":{"start":1675627995184,"stop":1675627995338,"duration":154}},{"uid":"1c11b4c2338aa67d","reportUrl":"https://nova-wallet.github.io/test-runner/2406//#testresult/1c11b4c2338aa67d","status":"passed","time":{"start":1675613829415,"stop":1675613829488,"duration":73}},{"uid":"3eb64b0f78b5bee6","reportUrl":"https://nova-wallet.github.io/test-runner/2405//#testresult/3eb64b0f78b5bee6","status":"passed","time":{"start":1675599859742,"stop":1675599860058,"duration":316}},{"uid":"48c9388041c51a28","reportUrl":"https://nova-wallet.github.io/test-runner/2404//#testresult/48c9388041c51a28","status":"passed","time":{"start":1675584987630,"stop":1675584987675,"duration":45}},{"uid":"39450a76247ff4ab","reportUrl":"https://nova-wallet.github.io/test-runner/2403//#testresult/39450a76247ff4ab","status":"passed","time":{"start":1675570575135,"stop":1675570575473,"duration":338}},{"uid":"ba82cef9937410ec","reportUrl":"https://nova-wallet.github.io/test-runner/2402//#testresult/ba82cef9937410ec","status":"passed","time":{"start":1675559591883,"stop":1675559592228,"duration":345}},{"uid":"a50726ce254035aa","reportUrl":"https://nova-wallet.github.io/test-runner/2401//#testresult/a50726ce254035aa","status":"passed","time":{"start":1675541590986,"stop":1675541591136,"duration":150}},{"uid":"686fef39a4f40486","reportUrl":"https://nova-wallet.github.io/test-runner/2400//#testresult/686fef39a4f40486","status":"passed","time":{"start":1675527456029,"stop":1675527456436,"duration":407}},{"uid":"994fa0c47185b87a","reportUrl":"https://nova-wallet.github.io/test-runner/2399//#testresult/994fa0c47185b87a","status":"passed","time":{"start":1675513412034,"stop":1675513412498,"duration":464}},{"uid":"2145b6adf950b49b","reportUrl":"https://nova-wallet.github.io/test-runner/2398//#testresult/2145b6adf950b49b","status":"passed","time":{"start":1675498565197,"stop":1675498565317,"duration":120}},{"uid":"c209244594ece460","reportUrl":"https://nova-wallet.github.io/test-runner/2397//#testresult/c209244594ece460","status":"passed","time":{"start":1675484155911,"stop":1675484156024,"duration":113}},{"uid":"63b7bb2f6d3b390f","reportUrl":"https://nova-wallet.github.io/test-runner/2396//#testresult/63b7bb2f6d3b390f","status":"passed","time":{"start":1675472930215,"stop":1675472930292,"duration":77}}]},"tags":[]},"source":"46acb92672119386.json","parameterValues":["{'url': 'wss://kusama.kylin-node.co.uk', 'name': 'Pichiu'}"]}