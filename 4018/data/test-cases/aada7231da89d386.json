{"uid":"aada7231da89d386","name":"test_can_create_connection[Test for Parallel, url: wss://parallel-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"eb01a842e9f4db2331d6fb5679792085","time":{"start":1698278641660,"stop":1698278643923,"duration":2263},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 26 Oct 2023 00:04:03 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Parallel', 'url': 'wss://parallel-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 26 Oct 2023 00:04:03 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 26 Oct 2023 00:04:03 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Parallel', 'url': 'wss://parallel-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 26 Oct 2023 00:04:03 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"6f872d6806bd4eaa","name":"stdout","source":"6f872d6806bd4eaa.txt","type":"text/plain","size":1065}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az405-11"},{"name":"thread","value":"2287-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://parallel-rpc.dwellir.com', 'name': 'Parallel'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ad84f62cdbfb7b9b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 26 Oct 2023 00:03:46 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1698278617944,"stop":1698278626571,"duration":8627}},{"uid":"73e841332315696a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Thu, 26 Oct 2023 00:03:22 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1698278591825,"stop":1698278602852,"duration":11027}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":44,"unknown":0,"total":47},"items":[{"uid":"a041e33fb16fac9e","reportUrl":"https://novasamatech.github.io/test-runner/4017//#testresult/a041e33fb16fac9e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 25 Oct 2023 20:03:11 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1698264189086,"stop":1698264191560,"duration":2474}},{"uid":"f9b28d7f87a15b5","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/f9b28d7f87a15b5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 25 Oct 2023 16:03:43 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1698249823699,"stop":1698249824033,"duration":334}},{"uid":"965a97c687583355","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/965a97c687583355","status":"passed","time":{"start":1698235338503,"stop":1698235339303,"duration":800}},{"uid":"c702b6528fb80c4d","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/c702b6528fb80c4d","status":"passed","time":{"start":1698220920882,"stop":1698220921456,"duration":574}},{"uid":"53720aac831582fd","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/53720aac831582fd","status":"passed","time":{"start":1698206479163,"stop":1698206479623,"duration":460}},{"uid":"815401613eb49934","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/815401613eb49934","status":"passed","time":{"start":1698192314532,"stop":1698192315216,"duration":684}},{"uid":"fe693d588b779066","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/fe693d588b779066","status":"passed","time":{"start":1698177701682,"stop":1698177702335,"duration":653}},{"uid":"c506c249210b1746","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/c506c249210b1746","status":"passed","time":{"start":1698163326418,"stop":1698163326883,"duration":465}},{"uid":"4d760f6643f0eea3","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/4d760f6643f0eea3","status":"passed","time":{"start":1698148887197,"stop":1698148887698,"duration":501}},{"uid":"5d7fdaaea70e9c47","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/5d7fdaaea70e9c47","status":"passed","time":{"start":1698120083542,"stop":1698120084011,"duration":469}},{"uid":"f9c2b293d4961c06","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/f9c2b293d4961c06","status":"passed","time":{"start":1698134501813,"stop":1698134502286,"duration":473}},{"uid":"cd78010bc2c6376b","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/cd78010bc2c6376b","status":"passed","time":{"start":1698105727280,"stop":1698105728008,"duration":728}},{"uid":"df1b59a598335b7","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/df1b59a598335b7","status":"passed","time":{"start":1698091323202,"stop":1698091323796,"duration":594}},{"uid":"91515a9ec9ea3df4","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/91515a9ec9ea3df4","status":"passed","time":{"start":1698076880471,"stop":1698076880938,"duration":467}},{"uid":"e90f116bcf0f4504","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/e90f116bcf0f4504","status":"passed","time":{"start":1698062494003,"stop":1698062494465,"duration":462}},{"uid":"c6431a439bbf4da3","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/c6431a439bbf4da3","status":"passed","time":{"start":1698048081219,"stop":1698048081721,"duration":502}},{"uid":"e026d91f810aefaa","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/e026d91f810aefaa","status":"passed","time":{"start":1698033706479,"stop":1698033707072,"duration":593}},{"uid":"fd4de2902621b885","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/fd4de2902621b885","status":"passed","time":{"start":1698019339011,"stop":1698019339490,"duration":479}},{"uid":"a53943aaeb21aef0","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/a53943aaeb21aef0","status":"passed","time":{"start":1698004890604,"stop":1698004891308,"duration":704}},{"uid":"d79b12d9454a2917","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/d79b12d9454a2917","status":"passed","time":{"start":1697990494827,"stop":1697990495413,"duration":586}}]},"tags":[]},"source":"aada7231da89d386.json","parameterValues":["{'url': 'wss://parallel-rpc.dwellir.com', 'name': 'Parallel'}"]}