{"uid":"732ab09cd86911c8","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1676909119490,"stop":1676909119785,"duration":295},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"242673f71f53bee2","name":"stdout","source":"242673f71f53bee2.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az407-646"},{"name":"thread","value":"1740-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e4db60732e99e197","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1676909109008,"stop":1676909109418,"duration":410}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":684,"unknown":0,"total":739},"items":[{"uid":"5a673592011d799c","reportUrl":"https://nova-wallet.github.io/test-runner/2501//#testresult/5a673592011d799c","status":"passed","time":{"start":1676894806081,"stop":1676894806784,"duration":703}},{"uid":"d2d58e239845e094","reportUrl":"https://nova-wallet.github.io/test-runner/2500//#testresult/d2d58e239845e094","status":"passed","time":{"start":1676880346379,"stop":1676880346803,"duration":424}},{"uid":"2f7f5184edbf4b50","reportUrl":"https://nova-wallet.github.io/test-runner/2499//#testresult/2f7f5184edbf4b50","status":"passed","time":{"start":1676877294765,"stop":1676877295457,"duration":692}},{"uid":"e55cb388cd94f269","reportUrl":"https://nova-wallet.github.io/test-runner/2493//#testresult/e55cb388cd94f269","status":"passed","time":{"start":1676865920188,"stop":1676865920906,"duration":718}},{"uid":"ded0f7fa60f731de","reportUrl":"https://nova-wallet.github.io/test-runner/2492//#testresult/ded0f7fa60f731de","status":"passed","time":{"start":1676852179536,"stop":1676852180051,"duration":515}},{"uid":"2bb33852f4b62708","reportUrl":"https://nova-wallet.github.io/test-runner/2491//#testresult/2bb33852f4b62708","status":"passed","time":{"start":1676837095268,"stop":1676837095999,"duration":731}},{"uid":"58863743c5726766","reportUrl":"https://nova-wallet.github.io/test-runner/2490//#testresult/58863743c5726766","status":"passed","time":{"start":1676822834276,"stop":1676822834850,"duration":574}},{"uid":"848cabaddcce56f8","reportUrl":"https://nova-wallet.github.io/test-runner/2489//#testresult/848cabaddcce56f8","status":"passed","time":{"start":1676808341883,"stop":1676808342618,"duration":735}},{"uid":"a48f1a5947e9a6fc","reportUrl":"https://nova-wallet.github.io/test-runner/2488//#testresult/a48f1a5947e9a6fc","status":"passed","time":{"start":1676793890939,"stop":1676793891598,"duration":659}},{"uid":"f7d48227cb56a7b5","reportUrl":"https://nova-wallet.github.io/test-runner/2487//#testresult/f7d48227cb56a7b5","status":"passed","time":{"start":1676779480064,"stop":1676779480792,"duration":728}},{"uid":"197ec3956abda204","reportUrl":"https://nova-wallet.github.io/test-runner/2485//#testresult/197ec3956abda204","status":"passed","time":{"start":1676750681767,"stop":1676750682271,"duration":504}},{"uid":"f4f5a97f2e457de","reportUrl":"https://nova-wallet.github.io/test-runner/2484//#testresult/f4f5a97f2e457de","status":"passed","time":{"start":1676736307346,"stop":1676736308009,"duration":663}},{"uid":"e101eb80684785fe","reportUrl":"https://nova-wallet.github.io/test-runner/2483//#testresult/e101eb80684785fe","status":"passed","time":{"start":1676721924608,"stop":1676721925062,"duration":454}},{"uid":"e3c07cdcbf17b6a1","reportUrl":"https://nova-wallet.github.io/test-runner/2482//#testresult/e3c07cdcbf17b6a1","status":"passed","time":{"start":1676707509477,"stop":1676707510168,"duration":691}},{"uid":"a8d1037d56c7b2a9","reportUrl":"https://nova-wallet.github.io/test-runner/2480//#testresult/a8d1037d56c7b2a9","status":"passed","time":{"start":1676679280411,"stop":1676679281073,"duration":662}},{"uid":"f2e9bfbdd6c9aff7","reportUrl":"https://nova-wallet.github.io/test-runner/2479//#testresult/f2e9bfbdd6c9aff7","status":"passed","time":{"start":1676664311971,"stop":1676664312400,"duration":429}},{"uid":"a99142315227be29","reportUrl":"https://nova-wallet.github.io/test-runner/2478//#testresult/a99142315227be29","status":"passed","time":{"start":1676649912908,"stop":1676649913551,"duration":643}},{"uid":"1e7518526d748c53","reportUrl":"https://nova-wallet.github.io/test-runner/2477//#testresult/1e7518526d748c53","status":"passed","time":{"start":1676635573474,"stop":1676635574217,"duration":743}},{"uid":"f0aaba79ca0c625f","reportUrl":"https://nova-wallet.github.io/test-runner/2476//#testresult/f0aaba79ca0c625f","status":"passed","time":{"start":1676621107855,"stop":1676621108291,"duration":436}},{"uid":"bb2914e02ab32e84","reportUrl":"https://nova-wallet.github.io/test-runner/2475//#testresult/bb2914e02ab32e84","status":"passed","time":{"start":1676606688105,"stop":1676606688549,"duration":444}}]},"tags":[]},"source":"732ab09cd86911c8.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}