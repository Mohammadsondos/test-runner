{"uid":"5a841a20174fd115","name":"test_can_create_connection[Test for Dora Factory (PAUSED), url: wss://kusama.dorafactory.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6fae2adb1d5f7addf05621ce5972b67f","time":{"start":1691481907292,"stop":1691481907994,"duration":702},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 08:05:07 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; AWSALBTGCORS=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 08:05:07 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; AWSALBTGCORS=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 08:05:07 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; AWSALBTGCORS=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Dora Factory (PAUSED)', 'url': 'wss://kusama.dorafactory.org'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 08:05:07 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; AWSALBTGCORS=MVn7NITkJc8CKN0Zg5mIqR5IBT5NxCFRBoLnUQmLTHEyOQjbwQN76SEvBtXFLYyoiXUVRT6QqbSj2zBDdyAywbTDnEduaV1TFseammy+lC3y5YSGrW3QENwmCFwBbhty494SPRla3BlQlGQGV7OL4anNLOOkI1sXgv74hTM77rlixjUOVbk=; Expires=Tue, 15 Aug 2023 08:05:07 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"ed88fc7fcb19ab23","name":"stdout","source":"ed88fc7fcb19ab23.txt","type":"text/plain","size":2967}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az615-471"},{"name":"thread","value":"1962-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7c577b4564393366","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 08:04:52 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=8OhNNnSnSQsFlpE3XYjh1buqGlbTbjSRO+gydRDh01sAt5SeGZeJLxLAhwGAv1SxOdje73qRjZT3aJStQpFTt9+ZYoBWmaErCq+7MaMlwNkfXAEFreH64wwN3H7wCfTp87I5J3OErTQmigjpr467HHELXxGaDJoozAARu82LzQIWj6SERAI=; Expires=Tue, 15 Aug 2023 08:04:52 GMT; Path=/; AWSALBTGCORS=8OhNNnSnSQsFlpE3XYjh1buqGlbTbjSRO+gydRDh01sAt5SeGZeJLxLAhwGAv1SxOdje73qRjZT3aJStQpFTt9+ZYoBWmaErCq+7MaMlwNkfXAEFreH64wwN3H7wCfTp87I5J3OErTQmigjpr467HHELXxGaDJoozAARu82LzQIWj6SERAI=; Expires=Tue, 15 Aug 2023 08:04:52 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691481891459,"stop":1691481892179,"duration":720}},{"uid":"7b49f64f609ddee6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 08:04:36 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=hnl/6tsuSSOVsEwehqpAXfugxmYuq11Ud0xyN1UmxsE7Y+0zumBrzWkuA9kKAh4xdWZFQpNHTmhMIMQwuqpcEXW7qjKTsUAuYjMXNU67fXOzy8fGaWL5QV/wPRnML8r4BvJ9N84g+ZyVY5DHr8sJqEzTM3RqNg/JOz4PUp0SByPX5QggH6A=; Expires=Tue, 15 Aug 2023 08:04:36 GMT; Path=/; AWSALBTGCORS=hnl/6tsuSSOVsEwehqpAXfugxmYuq11Ud0xyN1UmxsE7Y+0zumBrzWkuA9kKAh4xdWZFQpNHTmhMIMQwuqpcEXW7qjKTsUAuYjMXNU67fXOzy8fGaWL5QV/wPRnML8r4BvJ9N84g+ZyVY5DHr8sJqEzTM3RqNg/JOz4PUp0SByPX5QggH6A=; Expires=Tue, 15 Aug 2023 08:04:36 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691481875429,"stop":1691481876299,"duration":870}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":127,"unknown":0,"total":162},"items":[{"uid":"158944bf5ff605d4","reportUrl":"https://novasamatech.github.io/test-runner/3534//#testresult/158944bf5ff605d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Tue, 08 Aug 2023 04:04:51 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=XhvJFGD62AlTvZLoJF5YzaGqpKeEgPoChWCqwP30pwZm2/ZBwAQTMGtAKqQF5xznokG1wvO5Qlamwd31nr39KWH/Pm7ybrE/twAVGzXERMHEIdJTl1ahVjh2FF2GOBUMdDGnw9kC2RQooBAYUz4eCo2aJfeAPQmaxmoXTlLXoTQ3Hwu4EEs=; Expires=Tue, 15 Aug 2023 04:04:51 GMT; Path=/; AWSALBTGCORS=XhvJFGD62AlTvZLoJF5YzaGqpKeEgPoChWCqwP30pwZm2/ZBwAQTMGtAKqQF5xznokG1wvO5Qlamwd31nr39KWH/Pm7ybrE/twAVGzXERMHEIdJTl1ahVjh2FF2GOBUMdDGnw9kC2RQooBAYUz4eCo2aJfeAPQmaxmoXTlLXoTQ3Hwu4EEs=; Expires=Tue, 15 Aug 2023 04:04:51 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691467490517,"stop":1691467491469,"duration":952}},{"uid":"262ef50a610023c3","reportUrl":"https://novasamatech.github.io/test-runner/3533//#testresult/262ef50a610023c3","status":"passed","time":{"start":1691453688778,"stop":1691453689679,"duration":901}},{"uid":"41e2fde16597f31d","reportUrl":"https://novasamatech.github.io/test-runner/3532//#testresult/41e2fde16597f31d","status":"passed","time":{"start":1691438659783,"stop":1691438660682,"duration":899}},{"uid":"b73f5c9889661dc","reportUrl":"https://novasamatech.github.io/test-runner/3531//#testresult/b73f5c9889661dc","status":"passed","time":{"start":1691424282652,"stop":1691424283955,"duration":1303}},{"uid":"d9239b18cdad1703","reportUrl":"https://novasamatech.github.io/test-runner/3530//#testresult/d9239b18cdad1703","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Mon, 07 Aug 2023 12:05:30 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=UJNkDEBDMU5UJ64pe20b+Y8GTXV3HgB3BMk/pUQl5AQLdrFrGIErMpwXcUwqjjFbCIJatzLTL0FWyFhyYfS82FKGya0MIrjNqX2GEkNVh1lZJoY441sjzO3fVGlYObd1Bse7oZdMVmJrITaZeMpgGVYC8MZuFM52gxE7sgtDc/307qdxWqc=; Expires=Mon, 14 Aug 2023 12:05:30 GMT; Path=/; AWSALBTGCORS=UJNkDEBDMU5UJ64pe20b+Y8GTXV3HgB3BMk/pUQl5AQLdrFrGIErMpwXcUwqjjFbCIJatzLTL0FWyFhyYfS82FKGya0MIrjNqX2GEkNVh1lZJoY441sjzO3fVGlYObd1Bse7oZdMVmJrITaZeMpgGVYC8MZuFM52gxE7sgtDc/307qdxWqc=; Expires=Mon, 14 Aug 2023 12:05:30 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691409929083,"stop":1691409930204,"duration":1121}},{"uid":"7aacacddcf2de6c5","reportUrl":"https://novasamatech.github.io/test-runner/3529//#testresult/7aacacddcf2de6c5","status":"passed","time":{"start":1691395516909,"stop":1691395518274,"duration":1365}},{"uid":"a64d1fbf18d55016","reportUrl":"https://novasamatech.github.io/test-runner/3528//#testresult/a64d1fbf18d55016","status":"passed","time":{"start":1691381081344,"stop":1691381082671,"duration":1327}},{"uid":"928e4d5ab4c2b840","reportUrl":"https://novasamatech.github.io/test-runner/3527//#testresult/928e4d5ab4c2b840","status":"passed","time":{"start":1691367287915,"stop":1691367289072,"duration":1157}},{"uid":"cf283de90c17eda9","reportUrl":"https://novasamatech.github.io/test-runner/3526//#testresult/cf283de90c17eda9","status":"passed","time":{"start":1691352236968,"stop":1691352238114,"duration":1146}},{"uid":"9df07d6202bbeb46","reportUrl":"https://novasamatech.github.io/test-runner/3525//#testresult/9df07d6202bbeb46","status":"passed","time":{"start":1691337898147,"stop":1691337899146,"duration":999}},{"uid":"f3e78610d6decad9","reportUrl":"https://novasamatech.github.io/test-runner/3524//#testresult/f3e78610d6decad9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 06 Aug 2023 12:05:03 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=kiNmHr3RN8/CG5hiEEO8by0A+5K576khYf8VYjWO4He5SZPvq82hYLxj5MaVVEc7OlEeRP5WJ5XnnBKVi9xCi/iDzj9qwkY+dRkfpaOYE4YsfoIXlJF4m+PCuvKZPNNRqAiG7Xec42iZwckLzdYTJB3LSNu0BPacYyUXMGLvJovYn3Ie89E=; Expires=Sun, 13 Aug 2023 12:05:03 GMT; Path=/; AWSALBTGCORS=kiNmHr3RN8/CG5hiEEO8by0A+5K576khYf8VYjWO4He5SZPvq82hYLxj5MaVVEc7OlEeRP5WJ5XnnBKVi9xCi/iDzj9qwkY+dRkfpaOYE4YsfoIXlJF4m+PCuvKZPNNRqAiG7Xec42iZwckLzdYTJB3LSNu0BPacYyUXMGLvJovYn3Ie89E=; Expires=Sun, 13 Aug 2023 12:05:03 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691323502538,"stop":1691323503238,"duration":700}},{"uid":"f09226d2c424f0a7","reportUrl":"https://novasamatech.github.io/test-runner/3523//#testresult/f09226d2c424f0a7","status":"passed","time":{"start":1691309060345,"stop":1691309061509,"duration":1164}},{"uid":"e265e99dff199e8f","reportUrl":"https://novasamatech.github.io/test-runner/3522//#testresult/e265e99dff199e8f","status":"passed","time":{"start":1691294639706,"stop":1691294641092,"duration":1386}},{"uid":"3efefd05fea4e853","reportUrl":"https://novasamatech.github.io/test-runner/3521//#testresult/3efefd05fea4e853","status":"passed","time":{"start":1691280845237,"stop":1691280846348,"duration":1111}},{"uid":"1d5dba393308a70d","reportUrl":"https://novasamatech.github.io/test-runner/3520//#testresult/1d5dba393308a70d","status":"passed","time":{"start":1691265860698,"stop":1691265861569,"duration":871}},{"uid":"4df1334e9ffe4e","reportUrl":"https://novasamatech.github.io/test-runner/3519//#testresult/4df1334e9ffe4e","status":"passed","time":{"start":1691251513482,"stop":1691251514803,"duration":1321}},{"uid":"721b96be574ec39b","reportUrl":"https://novasamatech.github.io/test-runner/3518//#testresult/721b96be574ec39b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sat, 05 Aug 2023 12:05:04 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=dsYfAKNMW7PiYOxaBhnXhS7bnS72Bf4picxlv0NO7nX/TH0CRl/9PKHxcW45NpTlaf+ulI9olA1pStJGOi9SY718cIm4jlWSvtxqcrwOXjfJuhumWwVOsnq4as05pZfxFgCmW1JjvAAWYvJ8Awb8rQwb3f9vZ0Yi2Cs365HK7SeN8zdVQGo=; Expires=Sat, 12 Aug 2023 12:05:04 GMT; Path=/; AWSALBTGCORS=dsYfAKNMW7PiYOxaBhnXhS7bnS72Bf4picxlv0NO7nX/TH0CRl/9PKHxcW45NpTlaf+ulI9olA1pStJGOi9SY718cIm4jlWSvtxqcrwOXjfJuhumWwVOsnq4as05pZfxFgCmW1JjvAAWYvJ8Awb8rQwb3f9vZ0Yi2Cs365HK7SeN8zdVQGo=; Expires=Sat, 12 Aug 2023 12:05:04 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691237103586,"stop":1691237104401,"duration":815}},{"uid":"b8a3f885cab1144f","reportUrl":"https://novasamatech.github.io/test-runner/3517//#testresult/b8a3f885cab1144f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Sat, 05 Aug 2023 08:04:52 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive', 'set-cookie': 'AWSALBTG=Zl8c9J48iCkBfBBXZQQk1R5QVjXr6Hi6Q7JylM4/Y9ehc3No6i2Y18Br98lAekCmEWn9fs8w7lvBNlS7ILfoMoleGJljS6cC1Yj1MpftF2iJLgWk2jGVm7ckRzUeaHjnAonrvJzJaTxjTllyvq1NqdXERaS7ALmWAMzH2SQGw5nyLcqYqaY=; Expires=Sat, 12 Aug 2023 08:04:52 GMT; Path=/; AWSALBTGCORS=Zl8c9J48iCkBfBBXZQQk1R5QVjXr6Hi6Q7JylM4/Y9ehc3No6i2Y18Br98lAekCmEWn9fs8w7lvBNlS7ILfoMoleGJljS6cC1Yj1MpftF2iJLgWk2jGVm7ckRzUeaHjnAonrvJzJaTxjTllyvq1NqdXERaS7ALmWAMzH2SQGw5nyLcqYqaY=; Expires=Sat, 12 Aug 2023 08:04:52 GMT; Path=/; SameSite=None; Secure'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1691222691718,"stop":1691222692563,"duration":845}},{"uid":"9bb82b5fe0b9343d","reportUrl":"https://novasamatech.github.io/test-runner/3516//#testresult/9bb82b5fe0b9343d","status":"passed","time":{"start":1691208246799,"stop":1691208248156,"duration":1357}},{"uid":"24c980ea3573a833","reportUrl":"https://novasamatech.github.io/test-runner/3515//#testresult/24c980ea3573a833","status":"passed","time":{"start":1691194410139,"stop":1691194411434,"duration":1295}}]},"tags":[]},"source":"5a841a20174fd115.json","parameterValues":["{'url': 'wss://kusama.dorafactory.org', 'name': 'Dora Factory (PAUSED)'}"]}