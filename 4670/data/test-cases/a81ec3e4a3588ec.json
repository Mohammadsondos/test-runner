{"uid":"a81ec3e4a3588ec","name":"test_precision[Test for Bittensor]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"3c12ea931b4fcd65868d09c1ec1e610d","time":{"start":1707508949516,"stop":1707508949516,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1707508940446,"stop":1707508941989,"duration":1543},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1707508947083,"stop":1707508949515,"duration":2432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az1493-579"},{"name":"thread","value":"2128-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7fe044b5f1f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4f856df4d8d51ad5","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1707508940444,"stop":1707508940444,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":860,"unknown":0,"total":861},"items":[{"uid":"1e30cf13dd0fd447","reportUrl":"https://novasamatech.github.io/test-runner/4669//#testresult/1e30cf13dd0fd447","status":"passed","time":{"start":1707494526607,"stop":1707494526607,"duration":0}},{"uid":"8c1d5eb6eed3ab5f","reportUrl":"https://novasamatech.github.io/test-runner/4668//#testresult/8c1d5eb6eed3ab5f","status":"passed","time":{"start":1707480128749,"stop":1707480128749,"duration":0}},{"uid":"4ae3c2cdf39d53c0","reportUrl":"https://novasamatech.github.io/test-runner/4667//#testresult/4ae3c2cdf39d53c0","status":"passed","time":{"start":1707465740744,"stop":1707465740744,"duration":0}},{"uid":"b82bc0c3e75acc0","reportUrl":"https://novasamatech.github.io/test-runner/4666//#testresult/b82bc0c3e75acc0","status":"passed","time":{"start":1707451327369,"stop":1707451327369,"duration":0}},{"uid":"2c0adc63094c0f84","reportUrl":"https://novasamatech.github.io/test-runner/4665//#testresult/2c0adc63094c0f84","status":"passed","time":{"start":1707436967619,"stop":1707436967619,"duration":0}},{"uid":"dd1df4bbeb6ae1cd","reportUrl":"https://novasamatech.github.io/test-runner/4664//#testresult/dd1df4bbeb6ae1cd","status":"passed","time":{"start":1707422531109,"stop":1707422531109,"duration":0}},{"uid":"39f196b9049a8d18","reportUrl":"https://novasamatech.github.io/test-runner/4663//#testresult/39f196b9049a8d18","status":"passed","time":{"start":1707408131956,"stop":1707408131956,"duration":0}},{"uid":"fb79619e8d36ca3f","reportUrl":"https://novasamatech.github.io/test-runner/4662//#testresult/fb79619e8d36ca3f","status":"passed","time":{"start":1707393728876,"stop":1707393728877,"duration":1}},{"uid":"d3d68edebc9665d2","reportUrl":"https://novasamatech.github.io/test-runner/4661//#testresult/d3d68edebc9665d2","status":"passed","time":{"start":1707379326319,"stop":1707379326319,"duration":0}},{"uid":"e9ec8e2fc2e6026b","reportUrl":"https://novasamatech.github.io/test-runner/4660//#testresult/e9ec8e2fc2e6026b","status":"passed","time":{"start":1707364933147,"stop":1707364933147,"duration":0}},{"uid":"5db9141819ec82ff","reportUrl":"https://novasamatech.github.io/test-runner/4659//#testresult/5db9141819ec82ff","status":"passed","time":{"start":1707350558707,"stop":1707350558707,"duration":0}},{"uid":"db948ecf0655a15","reportUrl":"https://novasamatech.github.io/test-runner/4658//#testresult/db948ecf0655a15","status":"passed","time":{"start":1707336154299,"stop":1707336154299,"duration":0}},{"uid":"1c8513171ef0881e","reportUrl":"https://novasamatech.github.io/test-runner/4657//#testresult/1c8513171ef0881e","status":"passed","time":{"start":1707321729693,"stop":1707321729693,"duration":0}},{"uid":"af74eaae9341113f","reportUrl":"https://novasamatech.github.io/test-runner/4656//#testresult/af74eaae9341113f","status":"passed","time":{"start":1707307341646,"stop":1707307341647,"duration":1}},{"uid":"5d46079d883e387b","reportUrl":"https://novasamatech.github.io/test-runner/4655//#testresult/5d46079d883e387b","status":"passed","time":{"start":1707292927896,"stop":1707292927896,"duration":0}},{"uid":"f9e72c44b215a4f","reportUrl":"https://novasamatech.github.io/test-runner/4654//#testresult/f9e72c44b215a4f","status":"passed","time":{"start":1707278526539,"stop":1707278526539,"duration":0}},{"uid":"74077420c48dfa3b","reportUrl":"https://novasamatech.github.io/test-runner/4653//#testresult/74077420c48dfa3b","status":"passed","time":{"start":1707264159502,"stop":1707264159502,"duration":0}},{"uid":"92415861ef9a2d9d","reportUrl":"https://novasamatech.github.io/test-runner/4652//#testresult/92415861ef9a2d9d","status":"passed","time":{"start":1707249738552,"stop":1707249738552,"duration":0}},{"uid":"d17880c0987936dc","reportUrl":"https://novasamatech.github.io/test-runner/4651//#testresult/d17880c0987936dc","status":"passed","time":{"start":1707235336990,"stop":1707235336990,"duration":0}},{"uid":"74c1b0e1b548f3f3","reportUrl":"https://novasamatech.github.io/test-runner/4650//#testresult/74c1b0e1b548f3f3","status":"passed","time":{"start":1707220928435,"stop":1707220928436,"duration":1}}]},"tags":[]},"source":"a81ec3e4a3588ec.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fe044b5f1f0>"]}