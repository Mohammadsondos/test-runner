{"uid":"4ee92fba645991a1","name":"test_precision[Test for Composable Finance]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"d509d66f8aae8d37ee667169b62aafd3","time":{"start":1674591000493,"stop":1674591001689,"duration":1196},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f32dc269c30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f32dc561c30>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f32dc269c30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f32dc561c30>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"91d3e300b41eb2a9","name":"stdout","source":"91d3e300b41eb2a9.txt","type":"text/plain","size":374}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az413-362"},{"name":"thread","value":"1696-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f32dc561c30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a25b532c46a5c9a2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1674590989283,"stop":1674590990476,"duration":1193}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":540,"unknown":0,"total":596},"items":[{"uid":"5511664b228d7480","reportUrl":"https://nova-wallet.github.io/test-runner/2334//#testresult/5511664b228d7480","status":"passed","time":{"start":1674576794995,"stop":1674576797675,"duration":2680}},{"uid":"a25474882305cb89","reportUrl":"https://nova-wallet.github.io/test-runner/2333//#testresult/a25474882305cb89","status":"passed","time":{"start":1674562338109,"stop":1674562340689,"duration":2580}},{"uid":"cacb7924a4758cb2","reportUrl":"https://nova-wallet.github.io/test-runner/2332//#testresult/cacb7924a4758cb2","status":"passed","time":{"start":1674547909437,"stop":1674547912301,"duration":2864}},{"uid":"5e10966b28748826","reportUrl":"https://nova-wallet.github.io/test-runner/2331//#testresult/5e10966b28748826","status":"passed","time":{"start":1674533420899,"stop":1674533423157,"duration":2258}},{"uid":"3a41433a9de2eedd","reportUrl":"https://nova-wallet.github.io/test-runner/2330//#testresult/3a41433a9de2eedd","status":"passed","time":{"start":1674519567853,"stop":1674519569886,"duration":2033}},{"uid":"7f8d9b6405916050","reportUrl":"https://nova-wallet.github.io/test-runner/2329//#testresult/7f8d9b6405916050","status":"passed","time":{"start":1674504616823,"stop":1674504617986,"duration":1163}},{"uid":"8ce1dc234515c759","reportUrl":"https://nova-wallet.github.io/test-runner/2328//#testresult/8ce1dc234515c759","status":"passed","time":{"start":1674490328702,"stop":1674490331396,"duration":2694}},{"uid":"b4654d1918312f9","reportUrl":"https://nova-wallet.github.io/test-runner/2327//#testresult/b4654d1918312f9","status":"passed","time":{"start":1674475863542,"stop":1674475865447,"duration":1905}},{"uid":"7d54055318fe30c0","reportUrl":"https://nova-wallet.github.io/test-runner/2326//#testresult/7d54055318fe30c0","status":"passed","time":{"start":1674461517318,"stop":1674461519941,"duration":2623}},{"uid":"4db465edd6bb5c5f","reportUrl":"https://nova-wallet.github.io/test-runner/2325//#testresult/4db465edd6bb5c5f","status":"passed","time":{"start":1674447001660,"stop":1674447003710,"duration":2050}},{"uid":"185ced31409dba77","reportUrl":"https://nova-wallet.github.io/test-runner/2324//#testresult/185ced31409dba77","status":"passed","time":{"start":1674433092952,"stop":1674433094255,"duration":1303}},{"uid":"3ceab261b9df2be4","reportUrl":"https://nova-wallet.github.io/test-runner/2323//#testresult/3ceab261b9df2be4","status":"passed","time":{"start":1674418283784,"stop":1674418285804,"duration":2020}},{"uid":"fdb128d3e3b57826","reportUrl":"https://nova-wallet.github.io/test-runner/2322//#testresult/fdb128d3e3b57826","status":"passed","time":{"start":1674403843943,"stop":1674403846010,"duration":2067}},{"uid":"92a30d38f46ce890","reportUrl":"https://nova-wallet.github.io/test-runner/2321//#testresult/92a30d38f46ce890","status":"passed","time":{"start":1674389503626,"stop":1674389506633,"duration":3007}},{"uid":"f3fb5a762266d43e","reportUrl":"https://nova-wallet.github.io/test-runner/2320//#testresult/f3fb5a762266d43e","status":"passed","time":{"start":1674375106178,"stop":1674375108844,"duration":2666}},{"uid":"a6332bf3b2c0baeb","reportUrl":"https://nova-wallet.github.io/test-runner/2319//#testresult/a6332bf3b2c0baeb","status":"passed","time":{"start":1674360590562,"stop":1674360592716,"duration":2154}},{"uid":"359239c4587fdc58","reportUrl":"https://nova-wallet.github.io/test-runner/2318//#testresult/359239c4587fdc58","status":"passed","time":{"start":1674346735986,"stop":1674346737205,"duration":1219}},{"uid":"1dd26a74f2ff0bdc","reportUrl":"https://nova-wallet.github.io/test-runner/2317//#testresult/1dd26a74f2ff0bdc","status":"passed","time":{"start":1674331866104,"stop":1674331868172,"duration":2068}},{"uid":"bb9df3c54ccbc433","reportUrl":"https://nova-wallet.github.io/test-runner/2316//#testresult/bb9df3c54ccbc433","status":"passed","time":{"start":1674317458966,"stop":1674317461430,"duration":2464}},{"uid":"c309a56192150932","reportUrl":"https://nova-wallet.github.io/test-runner/2315//#testresult/c309a56192150932","status":"passed","time":{"start":1674302995594,"stop":1674302997644,"duration":2050}}]},"tags":[]},"source":"4ee92fba645991a1.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f32dc561c30>"]}