{"uid":"cf682234c11b21b0","name":"test_can_create_connection[Test for Crab, url: wss://crab-parachain-rpc.darwinia.network/]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"ccf77dc619fe1e503d43df857f41185c","time":{"start":1678291465057,"stop":1678291465550,"duration":493},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab-parachain-rpc.darwinia.network/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab-parachain-rpc.darwinia.network/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"ac8d9c58ceec431b","name":"stdout","source":"ac8d9c58ceec431b.txt","type":"text/plain","size":264}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az167-443"},{"name":"thread","value":"1726-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://crab-parachain-rpc.darwinia.network/', 'name': 'Crab'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4025696ba56c6c48","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1678291454374,"stop":1678291454909,"duration":535}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":57,"skipped":0,"passed":777,"unknown":0,"total":834},"items":[{"uid":"1e536e955325bfee","reportUrl":"https://nova-wallet.github.io/test-runner/2597//#testresult/1e536e955325bfee","status":"passed","time":{"start":1678277133632,"stop":1678277134424,"duration":792}},{"uid":"1d1793c9fdaab43d","reportUrl":"https://nova-wallet.github.io/test-runner/2596//#testresult/1d1793c9fdaab43d","status":"passed","time":{"start":1678262698576,"stop":1678262699266,"duration":690}},{"uid":"296ed1b4512559e0","reportUrl":"https://nova-wallet.github.io/test-runner/2595//#testresult/296ed1b4512559e0","status":"passed","time":{"start":1678248268099,"stop":1678248268750,"duration":651}},{"uid":"8c675e1b267c45b7","reportUrl":"https://nova-wallet.github.io/test-runner/2594//#testresult/8c675e1b267c45b7","status":"passed","time":{"start":1678234485753,"stop":1678234486501,"duration":748}},{"uid":"1291fc5d082d3b4f","reportUrl":"https://nova-wallet.github.io/test-runner/2593//#testresult/1291fc5d082d3b4f","status":"passed","time":{"start":1678219440511,"stop":1678219441255,"duration":744}},{"uid":"aa7b296912578568","reportUrl":"https://nova-wallet.github.io/test-runner/2592//#testresult/aa7b296912578568","status":"passed","time":{"start":1678205074032,"stop":1678205074778,"duration":746}},{"uid":"119c87c5c940595","reportUrl":"https://nova-wallet.github.io/test-runner/2591//#testresult/119c87c5c940595","status":"passed","time":{"start":1678190727692,"stop":1678190728464,"duration":772}},{"uid":"34eac4d1074b96bb","reportUrl":"https://nova-wallet.github.io/test-runner/2590//#testresult/34eac4d1074b96bb","status":"passed","time":{"start":1678176306171,"stop":1678176306862,"duration":691}},{"uid":"a6f0fe5d4141c79e","reportUrl":"https://nova-wallet.github.io/test-runner/2589//#testresult/a6f0fe5d4141c79e","status":"passed","time":{"start":1678161848957,"stop":1678161858335,"duration":9378}},{"uid":"a569d00dcd0922f7","reportUrl":"https://nova-wallet.github.io/test-runner/2588//#testresult/a569d00dcd0922f7","status":"passed","time":{"start":1678148125945,"stop":1678148126716,"duration":771}},{"uid":"5554825a2568e918","reportUrl":"https://nova-wallet.github.io/test-runner/2586//#testresult/5554825a2568e918","status":"passed","time":{"start":1678118660473,"stop":1678118661251,"duration":778}},{"uid":"7a55c3099d18b4a3","reportUrl":"https://nova-wallet.github.io/test-runner/2585//#testresult/7a55c3099d18b4a3","status":"passed","time":{"start":1678104339941,"stop":1678104340701,"duration":760}},{"uid":"2dc074d1efa35947","reportUrl":"https://nova-wallet.github.io/test-runner/2584//#testresult/2dc074d1efa35947","status":"passed","time":{"start":1678089898059,"stop":1678089898790,"duration":731}},{"uid":"f405c0474d2938d8","reportUrl":"https://nova-wallet.github.io/test-runner/2583//#testresult/f405c0474d2938d8","status":"passed","time":{"start":1678075474684,"stop":1678075475372,"duration":688}},{"uid":"26f425c09ff7a346","reportUrl":"https://nova-wallet.github.io/test-runner/2582//#testresult/26f425c09ff7a346","status":"passed","time":{"start":1678061682728,"stop":1678061683468,"duration":740}},{"uid":"4387d3ae9c317d","reportUrl":"https://nova-wallet.github.io/test-runner/2581//#testresult/4387d3ae9c317d","status":"passed","time":{"start":1678046634499,"stop":1678046635240,"duration":741}},{"uid":"38e69fb17dfbe057","reportUrl":"https://nova-wallet.github.io/test-runner/2580//#testresult/38e69fb17dfbe057","status":"passed","time":{"start":1678032255016,"stop":1678032255765,"duration":749}},{"uid":"a2a08586bf7c1acb","reportUrl":"https://nova-wallet.github.io/test-runner/2579//#testresult/a2a08586bf7c1acb","status":"passed","time":{"start":1678017880269,"stop":1678017881007,"duration":738}},{"uid":"ee1e00f18fc88d13","reportUrl":"https://nova-wallet.github.io/test-runner/2578//#testresult/ee1e00f18fc88d13","status":"passed","time":{"start":1678003461367,"stop":1678003462075,"duration":708}},{"uid":"e7c89c8c182d9ef3","reportUrl":"https://nova-wallet.github.io/test-runner/2577//#testresult/e7c89c8c182d9ef3","status":"passed","time":{"start":1677989050239,"stop":1677989051009,"duration":770}}]},"tags":[]},"source":"cf682234c11b21b0.json","parameterValues":["{'url': 'wss://crab-parachain-rpc.darwinia.network/', 'name': 'Crab'}"]}