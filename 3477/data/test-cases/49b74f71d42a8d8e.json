{"uid":"49b74f71d42a8d8e","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1690646755458,"stop":1690646755894,"duration":436},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fad26a63490>\nchain = <scripts.utils.chain_model.Chain object at 0x7fad2700bd00>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fad26a63490>\nchain = <scripts.utils.chain_model.Chain object at 0x7fad2700bd00>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"db9361244263ea1","name":"stdout","source":"db9361244263ea1.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az574-512"},{"name":"thread","value":"1969-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fad2700bd00>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7751b660f3c42da2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690646739976,"stop":1690646740427,"duration":451}},{"uid":"9a8042736cac624d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690646723859,"stop":1690646724930,"duration":1071}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":106,"skipped":0,"passed":375,"unknown":0,"total":481},"items":[{"uid":"34e9f3c0ed5bc85e","reportUrl":"https://novasamatech.github.io/test-runner/3476//#testresult/34e9f3c0ed5bc85e","status":"passed","time":{"start":1690632353705,"stop":1690632367888,"duration":14183}},{"uid":"f2b1e726de8f5220","reportUrl":"https://novasamatech.github.io/test-runner/3475//#testresult/f2b1e726de8f5220","status":"passed","time":{"start":1690617889119,"stop":1690617895737,"duration":6618}},{"uid":"2f29e8dd5e0d01a9","reportUrl":"https://novasamatech.github.io/test-runner/3474//#testresult/2f29e8dd5e0d01a9","status":"passed","time":{"start":1690603512991,"stop":1690603527503,"duration":14512}},{"uid":"2356184ad96bd7b2","reportUrl":"https://novasamatech.github.io/test-runner/3473//#testresult/2356184ad96bd7b2","status":"passed","time":{"start":1690589668839,"stop":1690589679649,"duration":10810}},{"uid":"9e80b740e99bc8e4","reportUrl":"https://novasamatech.github.io/test-runner/3472//#testresult/9e80b740e99bc8e4","status":"passed","time":{"start":1690574682042,"stop":1690574687550,"duration":5508}},{"uid":"3f8a51d59641eb8d","reportUrl":"https://novasamatech.github.io/test-runner/3471//#testresult/3f8a51d59641eb8d","status":"passed","time":{"start":1690560322228,"stop":1690560333539,"duration":11311}},{"uid":"c5d0aba0c35013f","reportUrl":"https://novasamatech.github.io/test-runner/3470//#testresult/c5d0aba0c35013f","status":"passed","time":{"start":1690545951326,"stop":1690545958515,"duration":7189}},{"uid":"70ee211b3643784a","reportUrl":"https://novasamatech.github.io/test-runner/3469//#testresult/70ee211b3643784a","status":"passed","time":{"start":1690531517309,"stop":1690531528142,"duration":10833}},{"uid":"e86deff22f2c545f","reportUrl":"https://novasamatech.github.io/test-runner/3468//#testresult/e86deff22f2c545f","status":"passed","time":{"start":1690517109230,"stop":1690517120984,"duration":11754}},{"uid":"1d1a3486af28a0f3","reportUrl":"https://novasamatech.github.io/test-runner/3467//#testresult/1d1a3486af28a0f3","status":"passed","time":{"start":1690503257923,"stop":1690503270909,"duration":12986}},{"uid":"11d71ac200f3baf4","reportUrl":"https://novasamatech.github.io/test-runner/3466//#testresult/11d71ac200f3baf4","status":"passed","time":{"start":1690488296550,"stop":1690488304684,"duration":8134}},{"uid":"1b5b7af8de3b6ece","reportUrl":"https://novasamatech.github.io/test-runner/3465//#testresult/1b5b7af8de3b6ece","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690473960767,"stop":1690473961196,"duration":429}},{"uid":"bf8ec1cbcce77cfa","reportUrl":"https://novasamatech.github.io/test-runner/3464//#testresult/bf8ec1cbcce77cfa","status":"passed","time":{"start":1690459551319,"stop":1690459560934,"duration":9615}},{"uid":"10f937aec4995fc7","reportUrl":"https://novasamatech.github.io/test-runner/3463//#testresult/10f937aec4995fc7","status":"passed","time":{"start":1690445130633,"stop":1690445138697,"duration":8064}},{"uid":"4960023bc88284b0","reportUrl":"https://novasamatech.github.io/test-runner/3461//#testresult/4960023bc88284b0","status":"passed","time":{"start":1690416847105,"stop":1690416857296,"duration":10191}},{"uid":"a201fc34f7dd1704","reportUrl":"https://novasamatech.github.io/test-runner/3462//#testresult/a201fc34f7dd1704","status":"passed","time":{"start":1690430693265,"stop":1690430700807,"duration":7542}},{"uid":"2f4b5414b46896bb","reportUrl":"https://novasamatech.github.io/test-runner/3460//#testresult/2f4b5414b46896bb","status":"passed","time":{"start":1690401865115,"stop":1690401873040,"duration":7925}},{"uid":"82082e6ab6e06bbf","reportUrl":"https://novasamatech.github.io/test-runner/3459//#testresult/82082e6ab6e06bbf","status":"passed","time":{"start":1690387513032,"stop":1690387515185,"duration":2153}},{"uid":"9db46406dd4c478d","reportUrl":"https://novasamatech.github.io/test-runner/3458//#testresult/9db46406dd4c478d","status":"passed","time":{"start":1690373139411,"stop":1690373147106,"duration":7695}},{"uid":"3317fe5ca8534e42","reportUrl":"https://novasamatech.github.io/test-runner/3457//#testresult/3317fe5ca8534e42","status":"passed","time":{"start":1690358751458,"stop":1690358762163,"duration":10705}}]},"tags":[]},"source":"49b74f71d42a8d8e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fad2700bd00>"]}