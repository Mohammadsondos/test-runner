{"uid":"1304db8bf7016df3","name":"test_can_create_connection[Test for Encointer, url: wss://encointer.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"8737cc376b759fe084df17567c102feb","time":{"start":1680109576876,"stop":1680109577234,"duration":358},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)","statusTrace":"data = {'name': 'Encointer', 'url': 'wss://encointer.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)","statusTrace":"data = {'name': 'Encointer', 'url': 'wss://encointer.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLCertVerificationError","steps":[],"attachments":[{"uid":"3bce5e04126e79e6","name":"stdout","source":"3bce5e04126e79e6.txt","type":"text/plain","size":382}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az796-857"},{"name":"thread","value":"1767-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://encointer.api.onfinality.io/public-ws', 'name': 'Encointer'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7ac878477eae1188","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:997)","time":{"start":1680109566363,"stop":1680109566753,"duration":390}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":81,"skipped":0,"passed":826,"unknown":0,"total":907},"items":[{"uid":"53a1c7c6cac30ce3","reportUrl":"https://nova-wallet.github.io/test-runner/2725//#testresult/53a1c7c6cac30ce3","status":"passed","time":{"start":1680091541921,"stop":1680091542667,"duration":746}},{"uid":"8131d715a9ae73a4","reportUrl":"https://nova-wallet.github.io/test-runner/2724//#testresult/8131d715a9ae73a4","status":"passed","time":{"start":1680077106630,"stop":1680077107571,"duration":941}},{"uid":"b703363064c10bc2","reportUrl":"https://nova-wallet.github.io/test-runner/2723//#testresult/b703363064c10bc2","status":"passed","time":{"start":1680062665249,"stop":1680062665989,"duration":740}},{"uid":"933427f74cbb4115","reportUrl":"https://nova-wallet.github.io/test-runner/2722//#testresult/933427f74cbb4115","status":"passed","time":{"start":1680052285662,"stop":1680052286770,"duration":1108}},{"uid":"70cb025de5517a8c","reportUrl":"https://nova-wallet.github.io/test-runner/2721//#testresult/70cb025de5517a8c","status":"passed","time":{"start":1680034457583,"stop":1680034458521,"duration":938}},{"uid":"cb81111eeee5a557","reportUrl":"https://nova-wallet.github.io/test-runner/2720//#testresult/cb81111eeee5a557","status":"passed","time":{"start":1680020715039,"stop":1680020716014,"duration":975}},{"uid":"fc42c2feef2f3433","reportUrl":"https://nova-wallet.github.io/test-runner/2718//#testresult/fc42c2feef2f3433","status":"passed","time":{"start":1679991482150,"stop":1679991483104,"duration":954}},{"uid":"bcda7c774c0693f","reportUrl":"https://nova-wallet.github.io/test-runner/2717//#testresult/bcda7c774c0693f","status":"passed","time":{"start":1679976960091,"stop":1679976961037,"duration":946}},{"uid":"60432c1c122d14a","reportUrl":"https://nova-wallet.github.io/test-runner/2716//#testresult/60432c1c122d14a","status":"passed","time":{"start":1679965616828,"stop":1679965617768,"duration":940}},{"uid":"ef7426b4d45feaee","reportUrl":"https://nova-wallet.github.io/test-runner/2715//#testresult/ef7426b4d45feaee","status":"passed","time":{"start":1679948128775,"stop":1679948129750,"duration":975}},{"uid":"7baebe3cb2c07c77","reportUrl":"https://nova-wallet.github.io/test-runner/2714//#testresult/7baebe3cb2c07c77","status":"passed","time":{"start":1679933847063,"stop":1679933848060,"duration":997}},{"uid":"a2bde563426f055d","reportUrl":"https://nova-wallet.github.io/test-runner/2713//#testresult/a2bde563426f055d","status":"passed","time":{"start":1679923526476,"stop":1679923527330,"duration":854}},{"uid":"465171db22b562b2","reportUrl":"https://nova-wallet.github.io/test-runner/2712//#testresult/465171db22b562b2","status":"passed","time":{"start":1679905081347,"stop":1679905082100,"duration":753}},{"uid":"97aa922bba869bfd","reportUrl":"https://nova-wallet.github.io/test-runner/2710//#testresult/97aa922bba869bfd","status":"passed","time":{"start":1679879030772,"stop":1679879031523,"duration":751}},{"uid":"a75d7121c0c6c3ac","reportUrl":"https://nova-wallet.github.io/test-runner/2709//#testresult/a75d7121c0c6c3ac","status":"passed","time":{"start":1679861571274,"stop":1679861572109,"duration":835}},{"uid":"a6f5727fc887b4c1","reportUrl":"https://nova-wallet.github.io/test-runner/2708//#testresult/a6f5727fc887b4c1","status":"passed","time":{"start":1679847363841,"stop":1679847364329,"duration":488}},{"uid":"bae119bd7963ea1f","reportUrl":"https://nova-wallet.github.io/test-runner/2707//#testresult/bae119bd7963ea1f","status":"passed","time":{"start":1679833413220,"stop":1679833413704,"duration":484}},{"uid":"f2ecf7c43026100e","reportUrl":"https://nova-wallet.github.io/test-runner/2706//#testresult/f2ecf7c43026100e","status":"passed","time":{"start":1679818516284,"stop":1679818516778,"duration":494}},{"uid":"898727657d6a16ee","reportUrl":"https://nova-wallet.github.io/test-runner/2705//#testresult/898727657d6a16ee","status":"passed","time":{"start":1679804123852,"stop":1679804124405,"duration":553}},{"uid":"8ecaa8eb11eb4f4a","reportUrl":"https://nova-wallet.github.io/test-runner/2704//#testresult/8ecaa8eb11eb4f4a","status":"passed","time":{"start":1679792989296,"stop":1679792989770,"duration":474}}]},"tags":[]},"source":"1304db8bf7016df3.json","parameterValues":["{'url': 'wss://encointer.api.onfinality.io/public-ws', 'name': 'Encointer'}"]}