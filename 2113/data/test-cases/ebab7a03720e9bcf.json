{"uid":"ebab7a03720e9bcf","name":"test_can_create_connection[Test for Altair, url: wss://altair-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"abcba6d159bf02fac13745bbd963686a","time":{"start":1671451517644,"stop":1671451527919,"duration":10275},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"f55f1473c0e5757d","name":"stdout","source":"f55f1473c0e5757d.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az562-983"},{"name":"thread","value":"1705-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b18d77c8ef32e7ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671451494796,"stop":1671451507535,"duration":12739}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":174,"skipped":0,"passed":208,"unknown":0,"total":382},"items":[{"uid":"97ba4e8fea65b88e","reportUrl":"https://nova-wallet.github.io/test-runner/2112//#testresult/97ba4e8fea65b88e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671437080266,"stop":1671437092918,"duration":12652}},{"uid":"f21242f3f3f94d52","reportUrl":"https://nova-wallet.github.io/test-runner/2111//#testresult/f21242f3f3f94d52","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671422683802,"stop":1671422696408,"duration":12606}},{"uid":"3f6ded13bbd5ac44","reportUrl":"https://nova-wallet.github.io/test-runner/2110//#testresult/3f6ded13bbd5ac44","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671408779350,"stop":1671408792220,"duration":12870}},{"uid":"12086ae5a8af5d43","reportUrl":"https://nova-wallet.github.io/test-runner/2109//#testresult/12086ae5a8af5d43","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671393843394,"stop":1671393856042,"duration":12648}},{"uid":"d4e4b0e58a4fc3af","reportUrl":"https://nova-wallet.github.io/test-runner/2108//#testresult/d4e4b0e58a4fc3af","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671379478044,"stop":1671379490902,"duration":12858}},{"uid":"5d2b23bfc51d3285","reportUrl":"https://nova-wallet.github.io/test-runner/2107//#testresult/5d2b23bfc51d3285","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671365247238,"stop":1671365259974,"duration":12736}},{"uid":"403f9a3d437604a6","reportUrl":"https://nova-wallet.github.io/test-runner/2106//#testresult/403f9a3d437604a6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671350789877,"stop":1671350802520,"duration":12643}},{"uid":"6b0429287d89fc32","reportUrl":"https://nova-wallet.github.io/test-runner/2105//#testresult/6b0429287d89fc32","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671336292720,"stop":1671336305566,"duration":12846}},{"uid":"50650655694ee616","reportUrl":"https://nova-wallet.github.io/test-runner/2104//#testresult/50650655694ee616","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671322414256,"stop":1671322426998,"duration":12742}},{"uid":"468bfaf9b053f90c","reportUrl":"https://nova-wallet.github.io/test-runner/2103//#testresult/468bfaf9b053f90c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671307441875,"stop":1671307454559,"duration":12684}},{"uid":"38ee9aa90a7f285","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/38ee9aa90a7f285","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671293064239,"stop":1671293076345,"duration":12106}},{"uid":"2ebb2c23c2783791","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/2ebb2c23c2783791","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671278678460,"stop":1671278690839,"duration":12379}},{"uid":"278cf574ac666084","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/278cf574ac666084","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671264302624,"stop":1671264315371,"duration":12747}},{"uid":"945d5521b8e884b","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/945d5521b8e884b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671249854561,"stop":1671249867421,"duration":12860}},{"uid":"a672b0305c36776e","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/a672b0305c36776e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671235956382,"stop":1671235967781,"duration":11399}},{"uid":"559a2babe7a8e40c","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/559a2babe7a8e40c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671221050711,"stop":1671221063325,"duration":12614}},{"uid":"b7c49e70390ac5d4","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/b7c49e70390ac5d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671206653233,"stop":1671206665960,"duration":12727}},{"uid":"c9405579bdfc990a","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/c9405579bdfc990a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671192288527,"stop":1671192301111,"duration":12584}},{"uid":"f2a5bee8d7bbfc7f","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/f2a5bee8d7bbfc7f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671177874834,"stop":1671177887541,"duration":12707}},{"uid":"6cd089eda74dfa71","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/6cd089eda74dfa71","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671163468888,"stop":1671163481530,"duration":12642}}]},"tags":[]},"source":"ebab7a03720e9bcf.json","parameterValues":["{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"]}