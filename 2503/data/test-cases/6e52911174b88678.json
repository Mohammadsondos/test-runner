{"uid":"6e52911174b88678","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1676923439409,"stop":1676923439878,"duration":469},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a0ba9d267f4cd6a","name":"stdout","source":"a0ba9d267f4cd6a.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az343-573"},{"name":"thread","value":"1772-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cb57c845f344a637","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1676923428807,"stop":1676923429284,"duration":477}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":82,"skipped":0,"passed":658,"unknown":0,"total":740},"items":[{"uid":"f6c7609e8808ebe2","reportUrl":"https://nova-wallet.github.io/test-runner/2502//#testresult/f6c7609e8808ebe2","status":"passed","time":{"start":1676909054572,"stop":1676909054959,"duration":387}},{"uid":"3b455d3f20d301e5","reportUrl":"https://nova-wallet.github.io/test-runner/2501//#testresult/3b455d3f20d301e5","status":"passed","time":{"start":1676894718690,"stop":1676894719444,"duration":754}},{"uid":"1135ebefdf40ab71","reportUrl":"https://nova-wallet.github.io/test-runner/2500//#testresult/1135ebefdf40ab71","status":"passed","time":{"start":1676880274176,"stop":1676880274720,"duration":544}},{"uid":"510c83b52af691e4","reportUrl":"https://nova-wallet.github.io/test-runner/2499//#testresult/510c83b52af691e4","status":"passed","time":{"start":1676877212769,"stop":1676877213492,"duration":723}},{"uid":"13ef3228d22533bc","reportUrl":"https://nova-wallet.github.io/test-runner/2493//#testresult/13ef3228d22533bc","status":"passed","time":{"start":1676865849912,"stop":1676865850636,"duration":724}},{"uid":"6ef34f8bc1fa8e68","reportUrl":"https://nova-wallet.github.io/test-runner/2492//#testresult/6ef34f8bc1fa8e68","status":"passed","time":{"start":1676852141542,"stop":1676852142256,"duration":714}},{"uid":"7323ae334869627c","reportUrl":"https://nova-wallet.github.io/test-runner/2491//#testresult/7323ae334869627c","status":"passed","time":{"start":1676837029231,"stop":1676837030004,"duration":773}},{"uid":"ee80533de97b3197","reportUrl":"https://nova-wallet.github.io/test-runner/2490//#testresult/ee80533de97b3197","status":"passed","time":{"start":1676822662223,"stop":1676822662862,"duration":639}},{"uid":"a133999232511462","reportUrl":"https://nova-wallet.github.io/test-runner/2489//#testresult/a133999232511462","status":"passed","time":{"start":1676808280728,"stop":1676808281465,"duration":737}},{"uid":"38247dd6a51eb808","reportUrl":"https://nova-wallet.github.io/test-runner/2488//#testresult/38247dd6a51eb808","status":"passed","time":{"start":1676793843161,"stop":1676793843802,"duration":641}},{"uid":"a669eb315d48574d","reportUrl":"https://nova-wallet.github.io/test-runner/2487//#testresult/a669eb315d48574d","status":"passed","time":{"start":1676779439324,"stop":1676779440049,"duration":725}},{"uid":"67f52743b12b4d0","reportUrl":"https://nova-wallet.github.io/test-runner/2485//#testresult/67f52743b12b4d0","status":"passed","time":{"start":1676750628689,"stop":1676750629137,"duration":448}},{"uid":"d01d8fbd973492d0","reportUrl":"https://nova-wallet.github.io/test-runner/2484//#testresult/d01d8fbd973492d0","status":"passed","time":{"start":1676736253592,"stop":1676736254316,"duration":724}},{"uid":"657163e167f7537","reportUrl":"https://nova-wallet.github.io/test-runner/2483//#testresult/657163e167f7537","status":"passed","time":{"start":1676721870994,"stop":1676721871371,"duration":377}},{"uid":"7327e8e43b1d4f0a","reportUrl":"https://nova-wallet.github.io/test-runner/2482//#testresult/7327e8e43b1d4f0a","status":"passed","time":{"start":1676707448272,"stop":1676707448836,"duration":564}},{"uid":"4d1570e8aed239b6","reportUrl":"https://nova-wallet.github.io/test-runner/2480//#testresult/4d1570e8aed239b6","status":"passed","time":{"start":1676679240060,"stop":1676679240751,"duration":691}},{"uid":"51d30f69843dae3c","reportUrl":"https://nova-wallet.github.io/test-runner/2479//#testresult/51d30f69843dae3c","status":"passed","time":{"start":1676664293186,"stop":1676664293784,"duration":598}},{"uid":"a8f79dd46c39ef59","reportUrl":"https://nova-wallet.github.io/test-runner/2478//#testresult/a8f79dd46c39ef59","status":"passed","time":{"start":1676649855174,"stop":1676649855930,"duration":756}},{"uid":"d7162b5efbc82d3b","reportUrl":"https://nova-wallet.github.io/test-runner/2477//#testresult/d7162b5efbc82d3b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1676635515998,"stop":1676635516586,"duration":588}},{"uid":"d316c8d31c1082f5","reportUrl":"https://nova-wallet.github.io/test-runner/2476//#testresult/d316c8d31c1082f5","status":"passed","time":{"start":1676621054659,"stop":1676621055056,"duration":397}}]},"tags":[]},"source":"6e52911174b88678.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}