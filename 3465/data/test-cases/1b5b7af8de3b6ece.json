{"uid":"1b5b7af8de3b6ece","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1690473960767,"stop":1690473961196,"duration":429},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fcbc42cb340>\nchain = <scripts.utils.chain_model.Chain object at 0x7fcbc45cbbb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fcbc42cb340>\nchain = <scripts.utils.chain_model.Chain object at 0x7fcbc45cbbb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"daed57ca0e8c4079","name":"stdout","source":"daed57ca0e8c4079.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1232-792"},{"name":"thread","value":"1967-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fcbc45cbbb0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"44111899c542ce7a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690473945056,"stop":1690473945731,"duration":675}},{"uid":"b5a9cac91d5839a6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690473929012,"stop":1690473930005,"duration":993}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":105,"skipped":0,"passed":364,"unknown":0,"total":469},"items":[{"uid":"bf8ec1cbcce77cfa","reportUrl":"https://novasamatech.github.io/test-runner/3464//#testresult/bf8ec1cbcce77cfa","status":"passed","time":{"start":1690459551319,"stop":1690459560934,"duration":9615}},{"uid":"10f937aec4995fc7","reportUrl":"https://novasamatech.github.io/test-runner/3463//#testresult/10f937aec4995fc7","status":"passed","time":{"start":1690445130633,"stop":1690445138697,"duration":8064}},{"uid":"4960023bc88284b0","reportUrl":"https://novasamatech.github.io/test-runner/3461//#testresult/4960023bc88284b0","status":"passed","time":{"start":1690416847105,"stop":1690416857296,"duration":10191}},{"uid":"a201fc34f7dd1704","reportUrl":"https://novasamatech.github.io/test-runner/3462//#testresult/a201fc34f7dd1704","status":"passed","time":{"start":1690430693265,"stop":1690430700807,"duration":7542}},{"uid":"2f4b5414b46896bb","reportUrl":"https://novasamatech.github.io/test-runner/3460//#testresult/2f4b5414b46896bb","status":"passed","time":{"start":1690401865115,"stop":1690401873040,"duration":7925}},{"uid":"82082e6ab6e06bbf","reportUrl":"https://novasamatech.github.io/test-runner/3459//#testresult/82082e6ab6e06bbf","status":"passed","time":{"start":1690387513032,"stop":1690387515185,"duration":2153}},{"uid":"9db46406dd4c478d","reportUrl":"https://novasamatech.github.io/test-runner/3458//#testresult/9db46406dd4c478d","status":"passed","time":{"start":1690373139411,"stop":1690373147106,"duration":7695}},{"uid":"3317fe5ca8534e42","reportUrl":"https://novasamatech.github.io/test-runner/3457//#testresult/3317fe5ca8534e42","status":"passed","time":{"start":1690358751458,"stop":1690358762163,"duration":10705}},{"uid":"beab8d46caa606aa","reportUrl":"https://novasamatech.github.io/test-runner/3456//#testresult/beab8d46caa606aa","status":"passed","time":{"start":1690344287677,"stop":1690344295915,"duration":8238}},{"uid":"39b1ac5ab470eb38","reportUrl":"https://novasamatech.github.io/test-runner/3455//#testresult/39b1ac5ab470eb38","status":"passed","time":{"start":1690330502759,"stop":1690330509242,"duration":6483}},{"uid":"1eaed50cb697978f","reportUrl":"https://novasamatech.github.io/test-runner/3454//#testresult/1eaed50cb697978f","status":"passed","time":{"start":1690315484817,"stop":1690315494479,"duration":9662}},{"uid":"8a26dce52babcda","reportUrl":"https://novasamatech.github.io/test-runner/3453//#testresult/8a26dce52babcda","status":"passed","time":{"start":1690301110924,"stop":1690301117106,"duration":6182}},{"uid":"76e08d5d4e1aea50","reportUrl":"https://novasamatech.github.io/test-runner/3452//#testresult/76e08d5d4e1aea50","status":"passed","time":{"start":1690286753742,"stop":1690286763333,"duration":9591}},{"uid":"af851910042d7c47","reportUrl":"https://novasamatech.github.io/test-runner/3451//#testresult/af851910042d7c47","status":"passed","time":{"start":1690272321224,"stop":1690272327117,"duration":5893}},{"uid":"2ae2d1a8a36f0fa6","reportUrl":"https://novasamatech.github.io/test-runner/3450//#testresult/2ae2d1a8a36f0fa6","status":"passed","time":{"start":1690257940932,"stop":1690257954137,"duration":13205}},{"uid":"dcdedf9906f573e4","reportUrl":"https://novasamatech.github.io/test-runner/3449//#testresult/dcdedf9906f573e4","status":"passed","time":{"start":1690244149433,"stop":1690244163392,"duration":13959}},{"uid":"72d1938c6db4034f","reportUrl":"https://novasamatech.github.io/test-runner/3448//#testresult/72d1938c6db4034f","status":"passed","time":{"start":1690229087765,"stop":1690229094403,"duration":6638}},{"uid":"948744691f5f87f","reportUrl":"https://novasamatech.github.io/test-runner/3447//#testresult/948744691f5f87f","status":"passed","time":{"start":1690214705306,"stop":1690214712596,"duration":7290}},{"uid":"8878b5c4f4e4687c","reportUrl":"https://novasamatech.github.io/test-runner/3446//#testresult/8878b5c4f4e4687c","status":"passed","time":{"start":1690200394839,"stop":1690200402477,"duration":7638}},{"uid":"f4a7833dd2199240","reportUrl":"https://novasamatech.github.io/test-runner/3445//#testresult/f4a7833dd2199240","status":"passed","time":{"start":1690185930535,"stop":1690185942495,"duration":11960}}]},"tags":[]},"source":"1b5b7af8de3b6ece.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fcbc45cbbb0>"]}