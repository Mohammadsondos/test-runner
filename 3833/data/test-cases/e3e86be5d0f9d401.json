{"uid":"e3e86be5d0f9d401","name":"test_has_new_assets[Test for GM]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"62ee7bb69b65341fcec5408426fb51f1","time":{"start":1695643406268,"stop":1695643407556,"duration":1288},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f600e2b17b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f600e44ab90>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f600e2b17b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f600e44ab90>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"9d04e06fe0a0bdde","name":"stdout","source":"9d04e06fe0a0bdde.txt","type":"text/plain","size":693}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az343-52"},{"name":"thread","value":"2067-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f600e44ab90>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"188eec544995ddc6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695643390057,"stop":1695643391236,"duration":1179}},{"uid":"f4dc99112a4d0be6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695643374049,"stop":1695643375024,"duration":975}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":188,"unknown":0,"total":192},"items":[{"uid":"fe2e3e0399d6d073","reportUrl":"https://novasamatech.github.io/test-runner/3832//#testresult/fe2e3e0399d6d073","status":"passed","time":{"start":1695628942334,"stop":1695628945951,"duration":3617}},{"uid":"4972553c733866c7","reportUrl":"https://novasamatech.github.io/test-runner/3831//#testresult/4972553c733866c7","status":"passed","time":{"start":1695614583823,"stop":1695614587444,"duration":3621}},{"uid":"710604117f3ef3d8","reportUrl":"https://novasamatech.github.io/test-runner/3830//#testresult/710604117f3ef3d8","status":"passed","time":{"start":1695600219225,"stop":1695600222953,"duration":3728}},{"uid":"1e84a98f6ecc4e28","reportUrl":"https://novasamatech.github.io/test-runner/3829//#testresult/1e84a98f6ecc4e28","status":"passed","time":{"start":1695585732077,"stop":1695585735503,"duration":3426}},{"uid":"3142e078a607640b","reportUrl":"https://novasamatech.github.io/test-runner/3828//#testresult/3142e078a607640b","status":"passed","time":{"start":1695571392613,"stop":1695571396498,"duration":3885}},{"uid":"7f86544309573514","reportUrl":"https://novasamatech.github.io/test-runner/3827//#testresult/7f86544309573514","status":"passed","time":{"start":1695556979993,"stop":1695556984830,"duration":4837}},{"uid":"1fd973e858258927","reportUrl":"https://novasamatech.github.io/test-runner/3826//#testresult/1fd973e858258927","status":"passed","time":{"start":1695542588650,"stop":1695542593954,"duration":5304}},{"uid":"b722d3d12df7a827","reportUrl":"https://novasamatech.github.io/test-runner/3825//#testresult/b722d3d12df7a827","status":"passed","time":{"start":1695528179119,"stop":1695528182303,"duration":3184}},{"uid":"f101ad0abf19406f","reportUrl":"https://novasamatech.github.io/test-runner/3824//#testresult/f101ad0abf19406f","status":"passed","time":{"start":1695513820387,"stop":1695513823703,"duration":3316}},{"uid":"668de495d73b9fbc","reportUrl":"https://novasamatech.github.io/test-runner/3823//#testresult/668de495d73b9fbc","status":"passed","time":{"start":1695499388958,"stop":1695499393695,"duration":4737}},{"uid":"2deb32172128ba96","reportUrl":"https://novasamatech.github.io/test-runner/3822//#testresult/2deb32172128ba96","status":"passed","time":{"start":1695484932238,"stop":1695484935628,"duration":3390}},{"uid":"540df93e2ab29188","reportUrl":"https://novasamatech.github.io/test-runner/3821//#testresult/540df93e2ab29188","status":"passed","time":{"start":1695470574134,"stop":1695470578416,"duration":4282}},{"uid":"e95cf25b3b87518f","reportUrl":"https://novasamatech.github.io/test-runner/3820//#testresult/e95cf25b3b87518f","status":"passed","time":{"start":1695456138304,"stop":1695456143459,"duration":5155}},{"uid":"bb7821ff6e03114c","reportUrl":"https://novasamatech.github.io/test-runner/3819//#testresult/bb7821ff6e03114c","status":"passed","time":{"start":1695441722423,"stop":1695441727055,"duration":4632}},{"uid":"d6123cd7befdce93","reportUrl":"https://novasamatech.github.io/test-runner/3818//#testresult/d6123cd7befdce93","status":"passed","time":{"start":1695427397084,"stop":1695427404884,"duration":7800}},{"uid":"488a30980874c781","reportUrl":"https://novasamatech.github.io/test-runner/3817//#testresult/488a30980874c781","status":"passed","time":{"start":1695412929709,"stop":1695412934391,"duration":4682}},{"uid":"6ffdb106edc790c5","reportUrl":"https://novasamatech.github.io/test-runner/3816//#testresult/6ffdb106edc790c5","status":"passed","time":{"start":1695398561923,"stop":1695398565721,"duration":3798}},{"uid":"74db665516bc1bb9","reportUrl":"https://novasamatech.github.io/test-runner/3815//#testresult/74db665516bc1bb9","status":"passed","time":{"start":1695384147545,"stop":1695384152288,"duration":4743}},{"uid":"5fa8e8219d8686ae","reportUrl":"https://novasamatech.github.io/test-runner/3814//#testresult/5fa8e8219d8686ae","status":"passed","time":{"start":1695369780255,"stop":1695369786163,"duration":5908}},{"uid":"3458b62bac867553","reportUrl":"https://novasamatech.github.io/test-runner/3813//#testresult/3458b62bac867553","status":"passed","time":{"start":1695355353134,"stop":1695355357372,"duration":4238}}]},"tags":[]},"source":"e3e86be5d0f9d401.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f600e44ab90>"]}