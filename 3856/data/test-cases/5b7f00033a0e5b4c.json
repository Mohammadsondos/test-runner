{"uid":"5b7f00033a0e5b4c","name":"testBalancesLoading[Getting balance for DAO IPCI network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for DAO IPCI network]","historyId":"16b6e31987a6cae9bc3d606222bfb675","time":{"start":1695975379774,"stop":1695975459803,"duration":80029},"status":"broken","statusMessage":"Socket state: WaitingForReconnect(url=wss://kusama.rpc.ipci.io, attempt=10, pendingSendables=[Sendable(1293606544)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: WaitingForReconnect(url=wss://kusama.rpc.ipci.io, attempt=10, pendingSendables=[Sendable(1293606544)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for DAO IPCI network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(164)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":207,"unknown":0,"total":213},"items":[{"uid":"564c7e1d359c56d0","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/564c7e1d359c56d0","status":"passed","time":{"start":1695960876727,"stop":1695960876833,"duration":106}},{"uid":"f4c43080136458b1","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/f4c43080136458b1","status":"passed","time":{"start":1695946725195,"stop":1695946725387,"duration":192}},{"uid":"b67cab44e334703","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/b67cab44e334703","status":"passed","time":{"start":1695932379415,"stop":1695932379586,"duration":171}},{"uid":"838050354a6ef0ea","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/838050354a6ef0ea","status":"passed","time":{"start":1695917854364,"stop":1695917854479,"duration":115}},{"uid":"d553715041689f6a","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/d553715041689f6a","status":"passed","time":{"start":1695903441131,"stop":1695903441302,"duration":171}},{"uid":"324d7ba5c2d24d3d","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/324d7ba5c2d24d3d","status":"passed","time":{"start":1695889099596,"stop":1695889099705,"duration":109}},{"uid":"a1966eb8c7c8dbe","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/a1966eb8c7c8dbe","status":"passed","time":{"start":1695874468541,"stop":1695874468742,"duration":201}},{"uid":"a339d96f98141268","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/a339d96f98141268","status":"passed","time":{"start":1695860201863,"stop":1695860202040,"duration":177}},{"uid":"a0224e2f24f74d3f","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/a0224e2f24f74d3f","status":"passed","time":{"start":1695845958428,"stop":1695845958535,"duration":107}},{"uid":"f6ae01669592111a","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/f6ae01669592111a","status":"passed","time":{"start":1695831505101,"stop":1695831505228,"duration":127}},{"uid":"3d77514de10b1b4d","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/3d77514de10b1b4d","status":"passed","time":{"start":1695802514442,"stop":1695802514547,"duration":105}},{"uid":"6a28784f8df47335","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/6a28784f8df47335","status":"passed","time":{"start":1695788126803,"stop":1695788126907,"duration":104}},{"uid":"25a00b044174ad52","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/25a00b044174ad52","status":"passed","time":{"start":1695773722371,"stop":1695773722562,"duration":191}},{"uid":"457e00857edd9a54","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/457e00857edd9a54","status":"passed","time":{"start":1695759310080,"stop":1695759310184,"duration":104}},{"uid":"e5706b59dddc077f","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/e5706b59dddc077f","status":"passed","time":{"start":1695745193309,"stop":1695745193460,"duration":151}},{"uid":"d5818f9c0175cdb8","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/d5818f9c0175cdb8","status":"passed","time":{"start":1695730491094,"stop":1695730491210,"duration":116}},{"uid":"95b3ab776af0445c","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/95b3ab776af0445c","status":"passed","time":{"start":1695716222133,"stop":1695716258177,"duration":36044}},{"uid":"629c6e2118131fa7","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/629c6e2118131fa7","status":"passed","time":{"start":1695701644987,"stop":1695701645145,"duration":158}},{"uid":"dd56ce9e457df9b8","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/dd56ce9e457df9b8","status":"passed","time":{"start":1695687645019,"stop":1695687645122,"duration":103}},{"uid":"6881391760f0acda","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/6881391760f0acda","status":"passed","time":{"start":1695672861376,"stop":1695672861546,"duration":170}}]},"tags":[]},"source":"5b7f00033a0e5b4c.json","parameterValues":[]}