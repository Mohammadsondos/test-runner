{"uid":"ad8dc2af89dd5f12","name":"test_precision[Test for Amplitude]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"8fe4ad90f62b23168a07f2cdc9331270","time":{"start":1669393494677,"stop":1669393494861,"duration":184},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Amplitude","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f6e6def0940>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6dfea820>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6dfea820>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Amplitude\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Amplitude","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f6e6def0940>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6dfea820>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6dfea820>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Amplitude\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"cc4c5db874f0993e","name":"stdout","source":"cc4c5db874f0993e.txt","type":"text/plain","size":54}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f6e6dfea820>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e8e6799899251e4f","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Amplitude","time":{"start":1669393484441,"stop":1669393484661,"duration":220}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":241,"unknown":0,"total":251},"items":[{"uid":"69c029498f673403","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/69c029498f673403","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Amplitude","time":{"start":1669379165924,"stop":1669379166131,"duration":207}},{"uid":"ea307e4fb660e729","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/ea307e4fb660e729","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Amplitude","time":{"start":1669371950100,"stop":1669371950423,"duration":323}},{"uid":"56e38a4c640dbd3a","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/56e38a4c640dbd3a","status":"passed","time":{"start":1669119195466,"stop":1669119195466,"duration":0}},{"uid":"4b115d1570dd4312","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/4b115d1570dd4312","status":"passed","time":{"start":1669104740024,"stop":1669104740024,"duration":0}},{"uid":"7700e87c9fb8f61e","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/7700e87c9fb8f61e","status":"passed","time":{"start":1669090389804,"stop":1669090389804,"duration":0}},{"uid":"c443abe4d9ceeed0","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/c443abe4d9ceeed0","status":"passed","time":{"start":1669076578173,"stop":1669076578173,"duration":0}},{"uid":"515c1c9c3a2c7e4e","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/515c1c9c3a2c7e4e","status":"passed","time":{"start":1669061550788,"stop":1669061550789,"duration":1}},{"uid":"e2da68e7697f9b52","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/e2da68e7697f9b52","status":"passed","time":{"start":1669047159034,"stop":1669047159034,"duration":0}},{"uid":"3294777124dad4c3","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/3294777124dad4c3","status":"passed","time":{"start":1669032858987,"stop":1669032858988,"duration":1}},{"uid":"2b67d53c1829a238","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/2b67d53c1829a238","status":"passed","time":{"start":1669018344497,"stop":1669018344497,"duration":0}},{"uid":"1cee9e5b7cdf577e","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/1cee9e5b7cdf577e","status":"passed","time":{"start":1669004189476,"stop":1669004189476,"duration":0}},{"uid":"5302bc6ae5dc201f","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/5302bc6ae5dc201f","status":"passed","time":{"start":1668990040527,"stop":1668990040527,"duration":0}},{"uid":"59accc31673a5ae7","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/59accc31673a5ae7","status":"passed","time":{"start":1668974904085,"stop":1668974904085,"duration":0}},{"uid":"86633638533a3938","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/86633638533a3938","status":"passed","time":{"start":1668960495028,"stop":1668960495028,"duration":0}},{"uid":"fd3389d2daa04ff2","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/fd3389d2daa04ff2","status":"passed","time":{"start":1668946167269,"stop":1668946167269,"duration":0}},{"uid":"407753f11d31eef5","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/407753f11d31eef5","status":"passed","time":{"start":1668931780089,"stop":1668931780089,"duration":0}},{"uid":"992ce859421fb076","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/992ce859421fb076","status":"passed","time":{"start":1668917465225,"stop":1668917465225,"duration":0}},{"uid":"14dcae74ccbad23c","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/14dcae74ccbad23c","status":"passed","time":{"start":1668903618272,"stop":1668903618272,"duration":0}},{"uid":"cba11232246c12c5","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/cba11232246c12c5","status":"passed","time":{"start":1668888493482,"stop":1668888493482,"duration":0}},{"uid":"c7c82ac5511ce1","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/c7c82ac5511ce1","status":"passed","time":{"start":1668874095763,"stop":1668874095763,"duration":0}}]},"tags":[]},"source":"ad8dc2af89dd5f12.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f6e6dfea820>"]}