{"uid":"4d89ef6ff79e102e","name":"test_precision[Test for Parallel Heiko]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"87258a07f0082df28aae32a2f444aa6a","time":{"start":1669393179799,"stop":1669393180987,"duration":1188},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fb6c291efa0>\nchain = <tests.utils.chain_model.Chain object at 0x7fb6c2e3cf10>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fb6c2e3cf10>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fb6c291efa0>\nchain = <tests.utils.chain_model.Chain object at 0x7fb6c2e3cf10>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fb6c2e3cf10>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"f78dc117ff0fe0bb","name":"stdout","source":"f78dc117ff0fe0bb.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1641-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fb6c2e3cf10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d9920cae50bcf204","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko","time":{"start":1669393168544,"stop":1669393169782,"duration":1238}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":248,"unknown":0,"total":251},"items":[{"uid":"bf00f22fc733fd57","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/bf00f22fc733fd57","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko","time":{"start":1669378827949,"stop":1669378829355,"duration":1406}},{"uid":"71d4b7a5d9507ca5","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/71d4b7a5d9507ca5","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel Heiko","time":{"start":1669371605836,"stop":1669371607028,"duration":1192}},{"uid":"9feacd5ffbdf2390","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/9feacd5ffbdf2390","status":"passed","time":{"start":1669119096488,"stop":1669119096488,"duration":0}},{"uid":"ccc835157148a904","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/ccc835157148a904","status":"passed","time":{"start":1669104642810,"stop":1669104642810,"duration":0}},{"uid":"a61ac6e39c848bc","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/a61ac6e39c848bc","status":"passed","time":{"start":1669090329908,"stop":1669090329908,"duration":0}},{"uid":"cc43fb04d0431281","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/cc43fb04d0431281","status":"passed","time":{"start":1669076505859,"stop":1669076505859,"duration":0}},{"uid":"e0974a6e76547325","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/e0974a6e76547325","status":"passed","time":{"start":1669061439345,"stop":1669061439345,"duration":0}},{"uid":"92f1eae43f635d3b","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/92f1eae43f635d3b","status":"passed","time":{"start":1669047107397,"stop":1669047107398,"duration":1}},{"uid":"260caff2f276b452","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/260caff2f276b452","status":"passed","time":{"start":1669032745584,"stop":1669032745585,"duration":1}},{"uid":"29b1b2eedd1e6340","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/29b1b2eedd1e6340","status":"passed","time":{"start":1669018324288,"stop":1669018324288,"duration":0}},{"uid":"9038b181b816cd8","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/9038b181b816cd8","status":"passed","time":{"start":1669004062392,"stop":1669004062392,"duration":0}},{"uid":"b5de2de19720184d","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/b5de2de19720184d","status":"passed","time":{"start":1668990017559,"stop":1668990017559,"duration":0}},{"uid":"a710ce5de83b861","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/a710ce5de83b861","status":"passed","time":{"start":1668974881701,"stop":1668974881701,"duration":0}},{"uid":"1efb84cf44fc5d2e","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/1efb84cf44fc5d2e","status":"passed","time":{"start":1668960475192,"stop":1668960481852,"duration":6660}},{"uid":"b2f79a7dc135c6cd","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/b2f79a7dc135c6cd","status":"passed","time":{"start":1668946147025,"stop":1668946153305,"duration":6280}},{"uid":"b7093a2bef8cc3e6","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/b7093a2bef8cc3e6","status":"passed","time":{"start":1668931754602,"stop":1668931754602,"duration":0}},{"uid":"ab3cb6c3f8da969d","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/ab3cb6c3f8da969d","status":"passed","time":{"start":1668917445106,"stop":1668917445106,"duration":0}},{"uid":"2410ecd2ea40ebbb","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/2410ecd2ea40ebbb","status":"passed","time":{"start":1668903595643,"stop":1668903595643,"duration":0}},{"uid":"50844ffa38b31ccd","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/50844ffa38b31ccd","status":"passed","time":{"start":1668888464348,"stop":1668888464348,"duration":0}},{"uid":"7ccca5ba6f986d72","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/7ccca5ba6f986d72","status":"passed","time":{"start":1668874078011,"stop":1668874083446,"duration":5435}}]},"tags":[]},"source":"4d89ef6ff79e102e.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fb6c2e3cf10>"]}