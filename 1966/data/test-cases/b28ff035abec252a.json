{"uid":"b28ff035abec252a","name":"test_can_create_connection[Test for Tinkernet, url: wss://invarch-tinkernet.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa04c589555648ef054595cb3e43047c","time":{"start":1669392947781,"stop":1669392948105,"duration":324},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bb3dd14fbf202998","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392937356,"stop":1669392937712,"duration":356}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":191,"unknown":0,"total":196},"items":[{"uid":"a6c3f2e7324bcf4","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/a6c3f2e7324bcf4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378610915,"stop":1669378611137,"duration":222}},{"uid":"76d523f27643cc95","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/76d523f27643cc95","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371357599,"stop":1669371357922,"duration":323}},{"uid":"51c63b3134d189a0","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/51c63b3134d189a0","status":"passed","time":{"start":1669118782285,"stop":1669118782601,"duration":316}},{"uid":"485923278efca64a","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/485923278efca64a","status":"passed","time":{"start":1669104354682,"stop":1669104355142,"duration":460}},{"uid":"be4f51f5f506a718","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/be4f51f5f506a718","status":"passed","time":{"start":1669089923467,"stop":1669089923926,"duration":459}},{"uid":"e8cf5a8814bf5600","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/e8cf5a8814bf5600","status":"passed","time":{"start":1669076202926,"stop":1669076203230,"duration":304}},{"uid":"b810dcaee6b37777","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/b810dcaee6b37777","status":"passed","time":{"start":1669061138516,"stop":1669061139003,"duration":487}},{"uid":"4cd05dddddf754a0","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/4cd05dddddf754a0","status":"passed","time":{"start":1669046797889,"stop":1669046798427,"duration":538}},{"uid":"4777444745d43d7","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/4777444745d43d7","status":"passed","time":{"start":1669032405249,"stop":1669032405567,"duration":318}},{"uid":"43a932b47b1da170","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/43a932b47b1da170","status":"passed","time":{"start":1669017944155,"stop":1669017944618,"duration":463}},{"uid":"e5bede99dfb07f40","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/e5bede99dfb07f40","status":"passed","time":{"start":1669003781872,"stop":1669003782187,"duration":315}},{"uid":"53b6f990d7b03d8f","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/53b6f990d7b03d8f","status":"passed","time":{"start":1668989812094,"stop":1668989812448,"duration":354}},{"uid":"22490e4085bbf5b","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/22490e4085bbf5b","status":"passed","time":{"start":1668974696417,"stop":1668974696756,"duration":339}},{"uid":"3f1c84e7f15d537d","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/3f1c84e7f15d537d","status":"passed","time":{"start":1668960304692,"stop":1668960305183,"duration":491}},{"uid":"be4d28dfa01dbc0f","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/be4d28dfa01dbc0f","status":"passed","time":{"start":1668945963651,"stop":1668945964341,"duration":690}},{"uid":"92dbc189ee71b8ca","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/92dbc189ee71b8ca","status":"passed","time":{"start":1668931515868,"stop":1668931516212,"duration":344}},{"uid":"21d49abff163180f","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/21d49abff163180f","status":"passed","time":{"start":1668917267914,"stop":1668917268363,"duration":449}},{"uid":"a81a7bbca9d0f608","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/a81a7bbca9d0f608","status":"passed","time":{"start":1668903403285,"stop":1668903403629,"duration":344}},{"uid":"bee88790f1b4d968","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/bee88790f1b4d968","status":"passed","time":{"start":1668888286903,"stop":1668888287259,"duration":356}},{"uid":"664fd98093e9b356","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/664fd98093e9b356","status":"passed","time":{"start":1668873920616,"stop":1668873920961,"duration":345}}]},"tags":[]},"source":"b28ff035abec252a.json","parameterValues":["{'url': 'wss://invarch-tinkernet.api.onfinality.io/public-ws', 'name': 'Tinkernet'}"]}