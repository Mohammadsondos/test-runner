{"uid":"42d7be277a0651b0","name":"test_can_create_connection[Test for Khala, url: wss://khala.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c77a3f91088c1c6601fcbdb29ee4c9ec","time":{"start":1669392552118,"stop":1669392552564,"duration":446},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Khala', 'url': 'wss://khala.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://khala.api.onfinality.io/public-ws', 'name': 'Khala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e3d6e6084cbdc1b6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392541581,"stop":1669392542048,"duration":467}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":250,"unknown":0,"total":253},"items":[{"uid":"3ca4f7824ce2b3b1","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/3ca4f7824ce2b3b1","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378201886,"stop":1669378202395,"duration":509}},{"uid":"ed047c1d728bc0a5","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/ed047c1d728bc0a5","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370958259,"stop":1669370958674,"duration":415}},{"uid":"7cad602541e0aa0e","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/7cad602541e0aa0e","status":"passed","time":{"start":1669118739735,"stop":1669118741375,"duration":1640}},{"uid":"1ed016688b33d84e","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/1ed016688b33d84e","status":"passed","time":{"start":1669104317104,"stop":1669104317678,"duration":574}},{"uid":"a8af134b7c0f4b9f","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/a8af134b7c0f4b9f","status":"passed","time":{"start":1669089884519,"stop":1669089885114,"duration":595}},{"uid":"d5f6777baae02843","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/d5f6777baae02843","status":"passed","time":{"start":1669076165051,"stop":1669076165753,"duration":702}},{"uid":"5ecfa30bc9a1ddc5","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/5ecfa30bc9a1ddc5","status":"passed","time":{"start":1669061078200,"stop":1669061078820,"duration":620}},{"uid":"7fd327dc1619de3a","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/7fd327dc1619de3a","status":"passed","time":{"start":1669046709952,"stop":1669046710677,"duration":725}},{"uid":"12614a481fc9829","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/12614a481fc9829","status":"passed","time":{"start":1669032358380,"stop":1669032359074,"duration":694}},{"uid":"2353d27078605de","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/2353d27078605de","status":"passed","time":{"start":1669017913003,"stop":1669017913616,"duration":613}},{"uid":"fe007348df91d9df","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/fe007348df91d9df","status":"passed","time":{"start":1669003754082,"stop":1669003754774,"duration":692}},{"uid":"71a9e9928d95c159","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/71a9e9928d95c159","status":"passed","time":{"start":1668989766305,"stop":1668989767027,"duration":722}},{"uid":"6515f920739d3d96","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/6515f920739d3d96","status":"passed","time":{"start":1668974663081,"stop":1668974663769,"duration":688}},{"uid":"5279ee34b241fb27","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/5279ee34b241fb27","status":"passed","time":{"start":1668960267283,"stop":1668960267907,"duration":624}},{"uid":"ab100827eaa6c180","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/ab100827eaa6c180","status":"passed","time":{"start":1668945930724,"stop":1668945931245,"duration":521}},{"uid":"3daa77cda374564e","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/3daa77cda374564e","status":"passed","time":{"start":1668931486070,"stop":1668931486764,"duration":694}},{"uid":"bcc5573af8b66408","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/bcc5573af8b66408","status":"passed","time":{"start":1668917241408,"stop":1668917242000,"duration":592}},{"uid":"820dcd3709fb8040","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/820dcd3709fb8040","status":"passed","time":{"start":1668903376581,"stop":1668903377281,"duration":700}},{"uid":"7090f4027bf08156","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/7090f4027bf08156","status":"passed","time":{"start":1668888258431,"stop":1668888259166,"duration":735}},{"uid":"dc8c9b541b38c8b0","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/dc8c9b541b38c8b0","status":"passed","time":{"start":1668873872012,"stop":1668873872691,"duration":679}}]},"tags":[]},"source":"42d7be277a0651b0.json","parameterValues":["{'url': 'wss://khala.api.onfinality.io/public-ws', 'name': 'Khala'}"]}