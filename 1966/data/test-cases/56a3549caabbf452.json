{"uid":"56a3549caabbf452","name":"test_address_prefix[Test for Calamari]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"4c679c8eda6e9e69bf1b48cf2f0ddd7d","time":{"start":1669392357179,"stop":1669392358512,"duration":1333},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f6e6df77310>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6e472e80>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6e472e80>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Calamari\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f6e6df77310>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6e472e80>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6e472e80>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Calamari\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"648f68bab38828a7","name":"stdout","source":"648f68bab38828a7.txt","type":"text/plain","size":54}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f6e6e472e80>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a68b8ab8b2073711","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669392346423,"stop":1669392347162,"duration":739}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":248,"unknown":0,"total":251},"items":[{"uid":"70e6ed7a8926b301","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/70e6ed7a8926b301","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669378012940,"stop":1669378013118,"duration":178}},{"uid":"2f887f8f64042e5e","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/2f887f8f64042e5e","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669370762584,"stop":1669370763069,"duration":485}},{"uid":"fce0ec6989d616e8","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/fce0ec6989d616e8","status":"passed","time":{"start":1669118729657,"stop":1669118733570,"duration":3913}},{"uid":"e41fe66a4c5f79fa","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/e41fe66a4c5f79fa","status":"passed","time":{"start":1669104296795,"stop":1669104302027,"duration":5232}},{"uid":"979068cc95222e51","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/979068cc95222e51","status":"passed","time":{"start":1669089868910,"stop":1669089873692,"duration":4782}},{"uid":"7f330b5f72e7c543","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7f330b5f72e7c543","status":"passed","time":{"start":1669076140637,"stop":1669076145737,"duration":5100}},{"uid":"e083c2e777a64d11","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/e083c2e777a64d11","status":"passed","time":{"start":1669061065199,"stop":1669061070725,"duration":5526}},{"uid":"2d84e6273a19fe10","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/2d84e6273a19fe10","status":"passed","time":{"start":1669046668184,"stop":1669046673201,"duration":5017}},{"uid":"380ebf20be00dda8","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/380ebf20be00dda8","status":"passed","time":{"start":1669032345758,"stop":1669032350919,"duration":5161}},{"uid":"76a101d3b766965c","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/76a101d3b766965c","status":"passed","time":{"start":1669017891947,"stop":1669017896521,"duration":4574}},{"uid":"81fc88081d9722d5","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/81fc88081d9722d5","status":"passed","time":{"start":1669003736233,"stop":1669003741429,"duration":5196}},{"uid":"17f36162358ca3fb","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/17f36162358ca3fb","status":"passed","time":{"start":1668989757414,"stop":1668989763531,"duration":6117}},{"uid":"610c2925546d06c2","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/610c2925546d06c2","status":"passed","time":{"start":1668974648063,"stop":1668974651884,"duration":3821}},{"uid":"d424aed4f70f085c","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/d424aed4f70f085c","status":"passed","time":{"start":1668960246848,"stop":1668960251723,"duration":4875}},{"uid":"1acc68e1e7a8cbea","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/1acc68e1e7a8cbea","status":"passed","time":{"start":1668945904700,"stop":1668945908221,"duration":3521}},{"uid":"2ab616a74d679f29","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/2ab616a74d679f29","status":"passed","time":{"start":1668931485370,"stop":1668931490301,"duration":4931}},{"uid":"bc4dc64c2f47c330","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/bc4dc64c2f47c330","status":"passed","time":{"start":1668917218801,"stop":1668917221437,"duration":2636}},{"uid":"e760e0df45e18dbe","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/e760e0df45e18dbe","status":"passed","time":{"start":1668903358800,"stop":1668903362977,"duration":4177}},{"uid":"ad1b52036cdd8df4","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/ad1b52036cdd8df4","status":"passed","time":{"start":1668888244050,"stop":1668888248060,"duration":4010}},{"uid":"c530cba0cded4b01","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/c530cba0cded4b01","status":"passed","time":{"start":1668873868525,"stop":1668873873847,"duration":5322}}]},"tags":[]},"source":"56a3549caabbf452.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f6e6e472e80>"]}