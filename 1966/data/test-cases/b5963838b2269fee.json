{"uid":"b5963838b2269fee","name":"test_precision[Test for Subsocial]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"f90aab6720febe770894df7b45dabf90","time":{"start":1669393272731,"stop":1669393273718,"duration":987},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Subsocial","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fb6c293da90>\nchain = <tests.utils.chain_model.Chain object at 0x7fb6c29b22e0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fb6c29b22e0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Subsocial\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Subsocial","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7fb6c293da90>\nchain = <tests.utils.chain_model.Chain object at 0x7fb6c29b22e0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fb6c29b22e0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Subsocial\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"67a07947a63b209","name":"stdout","source":"67a07947a63b209.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1641-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fb6c29b22e0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9a4982d9072b53ca","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Subsocial","time":{"start":1669393261516,"stop":1669393262719,"duration":1203}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":225,"skipped":0,"passed":26,"unknown":0,"total":251},"items":[{"uid":"6f450f2e9f5076fc","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/6f450f2e9f5076fc","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Subsocial","time":{"start":1669378943191,"stop":1669378944127,"duration":936}},{"uid":"e84bab076dbb2131","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/e84bab076dbb2131","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Subsocial","time":{"start":1669371699727,"stop":1669371700811,"duration":1084}},{"uid":"31e499b94dd149e1","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/31e499b94dd149e1","status":"passed","time":{"start":1669119125922,"stop":1669119125922,"duration":0}},{"uid":"5c24a8dbabbd470d","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/5c24a8dbabbd470d","status":"passed","time":{"start":1669104681380,"stop":1669104681380,"duration":0}},{"uid":"91fd8d2ca5fbad19","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/91fd8d2ca5fbad19","status":"passed","time":{"start":1669090325505,"stop":1669090325505,"duration":0}},{"uid":"6c2b101c010f9b44","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/6c2b101c010f9b44","status":"passed","time":{"start":1669076515257,"stop":1669076515257,"duration":0}},{"uid":"7e9e36f485c16df5","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/7e9e36f485c16df5","status":"passed","time":{"start":1669061475744,"stop":1669061475744,"duration":0}},{"uid":"86da564484252157","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/86da564484252157","status":"passed","time":{"start":1669047101150,"stop":1669047101151,"duration":1}},{"uid":"32e9982a7116442","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/32e9982a7116442","status":"passed","time":{"start":1669032779107,"stop":1669032779107,"duration":0}},{"uid":"4719a80377e40b1e","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/4719a80377e40b1e","status":"passed","time":{"start":1669018299637,"stop":1669018299637,"duration":0}},{"uid":"e34390ce3b0a93a4","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/e34390ce3b0a93a4","status":"passed","time":{"start":1669004140659,"stop":1669004140660,"duration":1}},{"uid":"593ff646cb68633e","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/593ff646cb68633e","status":"passed","time":{"start":1668990040584,"stop":1668990040584,"duration":0}},{"uid":"c149152447320fb3","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/c149152447320fb3","status":"passed","time":{"start":1668974904850,"stop":1668974904850,"duration":0}},{"uid":"4c959041e19f5a3f","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/4c959041e19f5a3f","status":"passed","time":{"start":1668960494103,"stop":1668960494104,"duration":1}},{"uid":"7f28db5ec7be789b","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/7f28db5ec7be789b","status":"passed","time":{"start":1668946166345,"stop":1668946166345,"duration":0}},{"uid":"7109ec86f0907eb1","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/7109ec86f0907eb1","status":"passed","time":{"start":1668931776137,"stop":1668931776137,"duration":0}},{"uid":"bd0c707321c3e75a","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/bd0c707321c3e75a","status":"passed","time":{"start":1668917463675,"stop":1668917463675,"duration":0}},{"uid":"50b4a8207e54d1d2","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/50b4a8207e54d1d2","status":"passed","time":{"start":1668903619135,"stop":1668903619136,"duration":1}},{"uid":"b8bfdb094e764754","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/b8bfdb094e764754","status":"passed","time":{"start":1668888490337,"stop":1668888490337,"duration":0}},{"uid":"b3bc4710505e646c","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/b3bc4710505e646c","status":"passed","time":{"start":1668874088200,"stop":1668874093265,"duration":5065}}]},"tags":[]},"source":"b5963838b2269fee.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fb6c29b22e0>"]}