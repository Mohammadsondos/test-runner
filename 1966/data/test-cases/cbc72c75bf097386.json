{"uid":"cbc72c75bf097386","name":"test_address_prefix[Test for Altair]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"2c3522be65674e268b1e06f2268f5a45","time":{"start":1669392319100,"stop":1669392332925,"duration":13825},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Altair","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f6e6df770d0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6e472f70>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6e472f70>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Altair\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Altair","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f6e6df770d0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6e472f70>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6e472f70>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Altair\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"e63d9da8355e8d28","name":"stdout","source":"e63d9da8355e8d28.txt","type":"text/plain","size":162}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f6e6e472f70>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b71338b866a4d78","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Altair","time":{"start":1669392294993,"stop":1669392309083,"duration":14090}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":248,"unknown":0,"total":251},"items":[{"uid":"857e91606afdf2aa","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/857e91606afdf2aa","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Altair","time":{"start":1669377977672,"stop":1669377989125,"duration":11453}},{"uid":"5839400baf0b1491","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/5839400baf0b1491","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Altair","time":{"start":1669370723975,"stop":1669370738400,"duration":14425}},{"uid":"f393b79e4adef3eb","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/f393b79e4adef3eb","status":"passed","time":{"start":1669118720197,"stop":1669118723272,"duration":3075}},{"uid":"1e36274deb0916d4","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/1e36274deb0916d4","status":"passed","time":{"start":1669104288065,"stop":1669104290948,"duration":2883}},{"uid":"ac712274ce924919","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/ac712274ce924919","status":"passed","time":{"start":1669089857324,"stop":1669089861937,"duration":4613}},{"uid":"7bf769b7884a1cd6","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7bf769b7884a1cd6","status":"passed","time":{"start":1669076132223,"stop":1669076135040,"duration":2817}},{"uid":"1c9437963c164060","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/1c9437963c164060","status":"passed","time":{"start":1669061055490,"stop":1669061058727,"duration":3237}},{"uid":"2cf94a97ba9a0502","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/2cf94a97ba9a0502","status":"passed","time":{"start":1669046657074,"stop":1669046661274,"duration":4200}},{"uid":"359c242a9d442341","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/359c242a9d442341","status":"passed","time":{"start":1669032335107,"stop":1669032339443,"duration":4336}},{"uid":"9f690fbbfaae7323","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/9f690fbbfaae7323","status":"passed","time":{"start":1669017882388,"stop":1669017885936,"duration":3548}},{"uid":"fed2e0019be8d705","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/fed2e0019be8d705","status":"passed","time":{"start":1669003727709,"stop":1669003730538,"duration":2829}},{"uid":"f95d898f3381d006","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/f95d898f3381d006","status":"passed","time":{"start":1668989747496,"stop":1668989751195,"duration":3699}},{"uid":"5dcd9b7ab0e4d2f7","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/5dcd9b7ab0e4d2f7","status":"passed","time":{"start":1668974638878,"stop":1668974641872,"duration":2994}},{"uid":"87704cef341b4b2a","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/87704cef341b4b2a","status":"passed","time":{"start":1668960237815,"stop":1668960240737,"duration":2922}},{"uid":"fe6c3958a2da4034","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/fe6c3958a2da4034","status":"passed","time":{"start":1668945895596,"stop":1668945898535,"duration":2939}},{"uid":"d7ade1c8c0f0f7c6","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/d7ade1c8c0f0f7c6","status":"passed","time":{"start":1668931474206,"stop":1668931478699,"duration":4493}},{"uid":"3664c239b5baa0b4","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/3664c239b5baa0b4","status":"passed","time":{"start":1668917210032,"stop":1668917212891,"duration":2859}},{"uid":"f61600fe520507f","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/f61600fe520507f","status":"passed","time":{"start":1668903349647,"stop":1668903352697,"duration":3050}},{"uid":"e825d6148ff70568","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/e825d6148ff70568","status":"passed","time":{"start":1668888234768,"stop":1668888238145,"duration":3377}},{"uid":"64e74836865e57bc","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/64e74836865e57bc","status":"passed","time":{"start":1668873859910,"stop":1668873862742,"duration":2832}}]},"tags":[]},"source":"cbc72c75bf097386.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f6e6e472f70>"]}