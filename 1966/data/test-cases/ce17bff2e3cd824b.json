{"uid":"ce17bff2e3cd824b","name":"test_can_create_connection[Test for Bifrost Kusama, url: wss://bifrost-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"dc41cf5ddf6798d0575237cf315429cf","time":{"start":1669392425163,"stop":1669392425618,"duration":455},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Bifrost Kusama', 'url': 'wss://bifrost-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://bifrost-rpc.dwellir.com', 'name': 'Bifrost Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"37747e13a5c40363","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392414247,"stop":1669392415095,"duration":848}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":250,"unknown":0,"total":253},"items":[{"uid":"db1a8ddd526d6094","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/db1a8ddd526d6094","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378077111,"stop":1669378077796,"duration":685}},{"uid":"424c583057d9f735","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/424c583057d9f735","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370831966,"stop":1669370832771,"duration":805}},{"uid":"77422ab77ddf963c","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/77422ab77ddf963c","status":"passed","time":{"start":1669118701090,"stop":1669118702388,"duration":1298}},{"uid":"9c13e7b3ab9f4c94","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/9c13e7b3ab9f4c94","status":"passed","time":{"start":1669104279370,"stop":1669104280019,"duration":649}},{"uid":"5163e4e3fac597fe","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/5163e4e3fac597fe","status":"passed","time":{"start":1669089841596,"stop":1669089842882,"duration":1286}},{"uid":"26830fec9470d6fc","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/26830fec9470d6fc","status":"passed","time":{"start":1669076126165,"stop":1669076126736,"duration":571}},{"uid":"d54670d640bb6e0d","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/d54670d640bb6e0d","status":"passed","time":{"start":1669061039051,"stop":1669061039664,"duration":613}},{"uid":"1766906037e9cbf5","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/1766906037e9cbf5","status":"passed","time":{"start":1669046670026,"stop":1669046671129,"duration":1103}},{"uid":"67274775f85b4d76","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/67274775f85b4d76","status":"passed","time":{"start":1669032320034,"stop":1669032321202,"duration":1168}},{"uid":"a2234452305f18d2","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/a2234452305f18d2","status":"passed","time":{"start":1669017873993,"stop":1669017875166,"duration":1173}},{"uid":"2532d0e079d1b6aa","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/2532d0e079d1b6aa","status":"passed","time":{"start":1669003717267,"stop":1669003717748,"duration":481}},{"uid":"c6777ce3023e0aa1","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/c6777ce3023e0aa1","status":"passed","time":{"start":1668989727577,"stop":1668989728062,"duration":485}},{"uid":"2294d1d3be8748a3","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/2294d1d3be8748a3","status":"passed","time":{"start":1668974623828,"stop":1668974624352,"duration":524}},{"uid":"36002e9480e60c8","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/36002e9480e60c8","status":"passed","time":{"start":1668960228970,"stop":1668960229629,"duration":659}},{"uid":"3ff2b7296e719517","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/3ff2b7296e719517","status":"passed","time":{"start":1668945881156,"stop":1668945882612,"duration":1456}},{"uid":"ad73c85156dce953","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/ad73c85156dce953","status":"passed","time":{"start":1668931447128,"stop":1668931447589,"duration":461}},{"uid":"d8a22871c0313bf3","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/d8a22871c0313bf3","status":"passed","time":{"start":1668917202235,"stop":1668917202902,"duration":667}},{"uid":"5df856e4a6527643","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/5df856e4a6527643","status":"passed","time":{"start":1668903337460,"stop":1668903338634,"duration":1174}},{"uid":"1c001a122b250f3a","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/1c001a122b250f3a","status":"passed","time":{"start":1668888221711,"stop":1668888222196,"duration":485}},{"uid":"50682230bfd8a15d","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/50682230bfd8a15d","status":"passed","time":{"start":1668873831840,"stop":1668873832386,"duration":546}}]},"tags":[]},"source":"ce17bff2e3cd824b.json","parameterValues":["{'url': 'wss://bifrost-rpc.dwellir.com', 'name': 'Bifrost Kusama'}"]}