{"uid":"e6ffc7cb00e98e8b","name":"test_address_prefix[Test for DAO IPCI]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"5613308dc5f907909dc07d2534475b76","time":{"start":1669392717093,"stop":1669392717461,"duration":368},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7fb6c2961f10>\nchain = <tests.utils.chain_model.Chain object at 0x7fb6c29b2910>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fb6c29b2910>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7fb6c2961f10>\nchain = <tests.utils.chain_model.Chain object at 0x7fb6c29b2910>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fb6c29b2910>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"205111689f7f49bb","name":"stdout","source":"205111689f7f49bb.txt","type":"text/plain","size":54}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1641-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fb6c29b2910>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"46ed1688d78dc6f4","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI","time":{"start":1669392706635,"stop":1669392707077,"duration":442}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":117,"unknown":0,"total":120},"items":[{"uid":"44cfec55a2f3e19e","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/44cfec55a2f3e19e","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI","time":{"start":1669378371198,"stop":1669378371569,"duration":371}},{"uid":"aecb556d5ec4ae80","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/aecb556d5ec4ae80","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] DAO IPCI","time":{"start":1669371132991,"stop":1669371133470,"duration":479}},{"uid":"a295233f3965766c","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/a295233f3965766c","status":"passed","time":{"start":1669118877068,"stop":1669118881555,"duration":4487}},{"uid":"2316745cd0dcc469","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/2316745cd0dcc469","status":"passed","time":{"start":1669104440824,"stop":1669104445015,"duration":4191}},{"uid":"ea732300523cd78b","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/ea732300523cd78b","status":"passed","time":{"start":1669090054593,"stop":1669090060754,"duration":6161}},{"uid":"d16603f41010b1fe","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/d16603f41010b1fe","status":"passed","time":{"start":1669076276102,"stop":1669076280098,"duration":3996}},{"uid":"3175c06501f8b77","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/3175c06501f8b77","status":"passed","time":{"start":1669061220782,"stop":1669061225696,"duration":4914}},{"uid":"fa4446e6e94ec141","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/fa4446e6e94ec141","status":"passed","time":{"start":1669046838974,"stop":1669046844594,"duration":5620}},{"uid":"af2a6de5b7016cbf","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/af2a6de5b7016cbf","status":"passed","time":{"start":1669032517877,"stop":1669032523541,"duration":5664}},{"uid":"9a1c8f53a92d0c36","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/9a1c8f53a92d0c36","status":"passed","time":{"start":1669018043355,"stop":1669018052965,"duration":9610}},{"uid":"5b5d9adfb5b997e3","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/5b5d9adfb5b997e3","status":"passed","time":{"start":1669003860988,"stop":1669003868406,"duration":7418}},{"uid":"a0208a444801d36b","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/a0208a444801d36b","status":"passed","time":{"start":1668989915665,"stop":1668989925739,"duration":10074}},{"uid":"27fd425287a71783","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/27fd425287a71783","status":"passed","time":{"start":1668974805521,"stop":1668974815087,"duration":9566}},{"uid":"79fc9f236ed89496","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/79fc9f236ed89496","status":"passed","time":{"start":1668960380098,"stop":1668960384239,"duration":4141}},{"uid":"4c850ece3a3ed664","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/4c850ece3a3ed664","status":"passed","time":{"start":1668946042807,"stop":1668946047166,"duration":4359}},{"uid":"f175d5cc451b01e6","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/f175d5cc451b01e6","status":"passed","time":{"start":1668931663521,"stop":1668931674046,"duration":10525}},{"uid":"ac2eccee8c04984f","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/ac2eccee8c04984f","status":"passed","time":{"start":1668917356872,"stop":1668917365148,"duration":8276}},{"uid":"4ff8f162453bd475","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/4ff8f162453bd475","status":"passed","time":{"start":1668903499376,"stop":1668903508761,"duration":9385}},{"uid":"4afdb9d21dad8a7e","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/4afdb9d21dad8a7e","status":"passed","time":{"start":1668888381028,"stop":1668888389063,"duration":8035}},{"uid":"2db1315a0c9c91b","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/2db1315a0c9c91b","status":"passed","time":{"start":1668873986117,"stop":1668873990056,"duration":3939}}]},"tags":[]},"source":"e6ffc7cb00e98e8b.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fb6c29b2910>"]}