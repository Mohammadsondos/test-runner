{"uid":"df969b217a6f139c","name":"test_can_create_connection[Test for Kusama, url: wss://public-rpc.pinknode.io/kusama]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d2b5777cb36dc1d74008de65876a209d","time":{"start":1669392272119,"stop":1669392272247,"duration":128},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Kusama', 'url': 'wss://public-rpc.pinknode.io/kusama'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://public-rpc.pinknode.io/kusama', 'name': 'Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d43f10362c5fa36","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392261868,"stop":1669392262037,"duration":169}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":113,"unknown":0,"total":117},"items":[{"uid":"6583e62c5006bb2f","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/6583e62c5006bb2f","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669377928747,"stop":1669377928781,"duration":34}},{"uid":"e88f0c3338c5778b","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/e88f0c3338c5778b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370674880,"stop":1669370675005,"duration":125}},{"uid":"41294f52f879e09d","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/41294f52f879e09d","status":"passed","time":{"start":1669118696241,"stop":1669118696297,"duration":56}},{"uid":"4ddd7cf03efa3f0a","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/4ddd7cf03efa3f0a","status":"passed","time":{"start":1669104272198,"stop":1669104272423,"duration":225}},{"uid":"bcfd3dfc0fc0bbce","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/bcfd3dfc0fc0bbce","status":"passed","time":{"start":1669089834556,"stop":1669089834927,"duration":371}},{"uid":"bfaf26cc01b3f7b1","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/bfaf26cc01b3f7b1","status":"passed","time":{"start":1669076121252,"stop":1669076121309,"duration":57}},{"uid":"3ca0917039e6e0be","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/3ca0917039e6e0be","status":"passed","time":{"start":1669061031991,"stop":1669061032185,"duration":194}},{"uid":"9338b10bad2c37c9","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/9338b10bad2c37c9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1669046642018,"stop":1669046642160,"duration":142}},{"uid":"c35a49f0c12a4edc","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/c35a49f0c12a4edc","status":"passed","time":{"start":1669032315570,"stop":1669032315626,"duration":56}},{"uid":"31692e6d3c14d575","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/31692e6d3c14d575","status":"passed","time":{"start":1669017867495,"stop":1669017867700,"duration":205}},{"uid":"13c819a14f1bc105","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/13c819a14f1bc105","status":"passed","time":{"start":1669003712376,"stop":1669003712420,"duration":44}},{"uid":"c2994b411afb2768","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/c2994b411afb2768","status":"passed","time":{"start":1668989722549,"stop":1668989722617,"duration":68}},{"uid":"aea8fc8e233478ee","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/aea8fc8e233478ee","status":"passed","time":{"start":1668974619025,"stop":1668974619084,"duration":59}},{"uid":"b4fa9d9aef81fe6e","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/b4fa9d9aef81fe6e","status":"passed","time":{"start":1668960222947,"stop":1668960223135,"duration":188}},{"uid":"c493ef02bac095cd","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/c493ef02bac095cd","status":"passed","time":{"start":1668945873950,"stop":1668945874303,"duration":353}},{"uid":"fafc8179d9de9a54","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/fafc8179d9de9a54","status":"passed","time":{"start":1668931441889,"stop":1668931442038,"duration":149}},{"uid":"ea47efd6c7ea6f5b","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/ea47efd6c7ea6f5b","status":"passed","time":{"start":1668917196185,"stop":1668917196392,"duration":207}},{"uid":"1c33f38cbd05f968","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/1c33f38cbd05f968","status":"passed","time":{"start":1668903332662,"stop":1668903332734,"duration":72}},{"uid":"911ee94fafe03910","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/911ee94fafe03910","status":"passed","time":{"start":1668888215991,"stop":1668888216046,"duration":55}},{"uid":"7a23fb648e1fab00","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/7a23fb648e1fab00","status":"passed","time":{"start":1668873827293,"stop":1668873827376,"duration":83}}]},"tags":[]},"source":"df969b217a6f139c.json","parameterValues":["{'url': 'wss://public-rpc.pinknode.io/kusama', 'name': 'Kusama'}"]}