{"uid":"6ce97fb4cd39dd88","name":"test_address_prefix[Test for Karura]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"bdc275591070a0f0c0a5ac4c6c84d691","time":{"start":1669392267419,"stop":1669392269352,"duration":1933},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Karura","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f6e6dfdecd0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6f0c3c10>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6f0c3c10>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Karura\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Karura","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f6e6dfdecd0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6f0c3c10>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6f0c3c10>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Karura\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"204227c0104fa00c","name":"stdout","source":"204227c0104fa00c.txt","type":"text/plain","size":270}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f6e6f0c3c10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"80377ef398f5498a","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Karura","time":{"start":1669392255355,"stop":1669392257409,"duration":2054}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":248,"unknown":0,"total":251},"items":[{"uid":"a9ef0c25012f529c","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/a9ef0c25012f529c","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Karura","time":{"start":1669377929241,"stop":1669377931275,"duration":2034}},{"uid":"8dc4b0c162aaea84","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/8dc4b0c162aaea84","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Karura","time":{"start":1669370672529,"stop":1669370675154,"duration":2625}},{"uid":"af4c37a041695492","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/af4c37a041695492","status":"passed","time":{"start":1669118700126,"stop":1669118704217,"duration":4091}},{"uid":"f9dd36aa498cda5c","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/f9dd36aa498cda5c","status":"passed","time":{"start":1669104270894,"stop":1669104274020,"duration":3126}},{"uid":"dabcabccd0d99fea","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/dabcabccd0d99fea","status":"passed","time":{"start":1669089842523,"stop":1669089847394,"duration":4871}},{"uid":"9334593b754a4fa1","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/9334593b754a4fa1","status":"passed","time":{"start":1669076121087,"stop":1669076124241,"duration":3154}},{"uid":"7a97996733058535","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/7a97996733058535","status":"passed","time":{"start":1669061042931,"stop":1669061046457,"duration":3526}},{"uid":"41e9c9e0f75017f7","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/41e9c9e0f75017f7","status":"passed","time":{"start":1669046643164,"stop":1669046648020,"duration":4856}},{"uid":"96de440555eae415","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/96de440555eae415","status":"passed","time":{"start":1669032317294,"stop":1669032321876,"duration":4582}},{"uid":"118bd2719ecb1dc1","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/118bd2719ecb1dc1","status":"passed","time":{"start":1669017869886,"stop":1669017873564,"duration":3678}},{"uid":"7e0eb3b68bbfa02b","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/7e0eb3b68bbfa02b","status":"passed","time":{"start":1669003716932,"stop":1669003719955,"duration":3023}},{"uid":"93a027cb7906b56f","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/93a027cb7906b56f","status":"passed","time":{"start":1668989734507,"stop":1668989738439,"duration":3932}},{"uid":"8246d44a3fc9a08a","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/8246d44a3fc9a08a","status":"passed","time":{"start":1668974624579,"stop":1668974627807,"duration":3228}},{"uid":"9ef51be3180a8668","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/9ef51be3180a8668","status":"passed","time":{"start":1668960226069,"stop":1668960229418,"duration":3349}},{"uid":"c18eaa02b7d7ef80","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/c18eaa02b7d7ef80","status":"passed","time":{"start":1668945879408,"stop":1668945882616,"duration":3208}},{"uid":"2446c51362d2fb3","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/2446c51362d2fb3","status":"passed","time":{"start":1668931459652,"stop":1668931464448,"duration":4796}},{"uid":"dbfb9a28eeb7d4c2","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/dbfb9a28eeb7d4c2","status":"passed","time":{"start":1668917198144,"stop":1668917201677,"duration":3533}},{"uid":"121eee5779a95f64","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/121eee5779a95f64","status":"passed","time":{"start":1668903337638,"stop":1668903341058,"duration":3420}},{"uid":"34bd3d3247153ff0","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/34bd3d3247153ff0","status":"passed","time":{"start":1668888223018,"stop":1668888226613,"duration":3595}},{"uid":"9cfafd19f3eaee14","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/9cfafd19f3eaee14","status":"passed","time":{"start":1668873833655,"stop":1668873836766,"duration":3111}}]},"tags":[]},"source":"6ce97fb4cd39dd88.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f6e6f0c3c10>"]}