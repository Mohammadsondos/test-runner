{"uid":"ca5d4ed3eaba7640","name":"test_can_create_connection[Test for Parallel Heiko, url: wss://parallel-heiko.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e63bcdc37ef540889e40b7a474f60dd7","time":{"start":1669392529307,"stop":1669392529926,"duration":619},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://parallel-heiko.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://parallel-heiko.api.onfinality.io/public-ws', 'name': 'Parallel Heiko'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"49fffcca24b2368","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392518503,"stop":1669392519238,"duration":735}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":28,"skipped":0,"passed":225,"unknown":0,"total":253},"items":[{"uid":"6b20d39a4b463446","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/6b20d39a4b463446","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378178906,"stop":1669378179612,"duration":706}},{"uid":"338a3471ea67cfcd","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/338a3471ea67cfcd","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370935597,"stop":1669370936218,"duration":621}},{"uid":"9d3a9e45a59564e9","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/9d3a9e45a59564e9","status":"passed","time":{"start":1669118737874,"stop":1669118738799,"duration":925}},{"uid":"3fd2835d9c19a9bc","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/3fd2835d9c19a9bc","status":"passed","time":{"start":1669104315339,"stop":1669104316203,"duration":864}},{"uid":"a33bd5bf741b087f","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/a33bd5bf741b087f","status":"passed","time":{"start":1669089882692,"stop":1669089883565,"duration":873}},{"uid":"17ff63d9c7470f34","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/17ff63d9c7470f34","status":"passed","time":{"start":1669076163151,"stop":1669076164139,"duration":988}},{"uid":"8377a34109b31551","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/8377a34109b31551","status":"passed","time":{"start":1669061076155,"stop":1669061077019,"duration":864}},{"uid":"ca17bc74388c59c7","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/ca17bc74388c59c7","status":"passed","time":{"start":1669046708126,"stop":1669046709016,"duration":890}},{"uid":"399416a1af7960bc","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/399416a1af7960bc","status":"passed","time":{"start":1669032356534,"stop":1669032357475,"duration":941}},{"uid":"783eee0bc41ee165","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/783eee0bc41ee165","status":"passed","time":{"start":1669017911219,"stop":1669017912094,"duration":875}},{"uid":"36a2f00a804d982","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/36a2f00a804d982","status":"passed","time":{"start":1669003752150,"stop":1669003753104,"duration":954}},{"uid":"6dcaacfc4fecd61","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/6dcaacfc4fecd61","status":"passed","time":{"start":1668989764443,"stop":1668989765386,"duration":943}},{"uid":"5979d74b568438fa","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/5979d74b568438fa","status":"passed","time":{"start":1668974660953,"stop":1668974661922,"duration":969}},{"uid":"390da1bba8cedc40","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/390da1bba8cedc40","status":"passed","time":{"start":1668960265324,"stop":1668960266248,"duration":924}},{"uid":"f6aef82e4c781122","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/f6aef82e4c781122","status":"passed","time":{"start":1668945921943,"stop":1668945929802,"duration":7859}},{"uid":"71ad84cda3216116","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/71ad84cda3216116","status":"passed","time":{"start":1668931484187,"stop":1668931485138,"duration":951}},{"uid":"9ddd6007dd1de6e5","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/9ddd6007dd1de6e5","status":"passed","time":{"start":1668917239492,"stop":1668917240390,"duration":898}},{"uid":"30eda3fbeaf6566","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/30eda3fbeaf6566","status":"passed","time":{"start":1668903374666,"stop":1668903375608,"duration":942}},{"uid":"9d99172f4c8cc9f2","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/9d99172f4c8cc9f2","status":"passed","time":{"start":1668888256393,"stop":1668888257358,"duration":965}},{"uid":"d31b7446c13d24a3","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/d31b7446c13d24a3","status":"passed","time":{"start":1668873869121,"stop":1668873871080,"duration":1959}}]},"tags":[]},"source":"ca5d4ed3eaba7640.json","parameterValues":["{'url': 'wss://parallel-heiko.api.onfinality.io/public-ws', 'name': 'Parallel Heiko'}"]}