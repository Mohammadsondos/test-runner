{"uid":"5cd67811e45d6c14","name":"test_precision[Test for CLV Parachain]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"caf60422fd79069608330301ab59af6b","time":{"start":1669393284109,"stop":1669393285065,"duration":956},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f6e6df614c0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6dfea160>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6dfea160>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f6e6df614c0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6dfea160>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6dfea160>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"8c35bd209c2c1cef","name":"stdout","source":"8c35bd209c2c1cef.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f6e6dfea160>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d17f935d99b6ac7e","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain","time":{"start":1669393273090,"stop":1669393274093,"duration":1003}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":248,"unknown":0,"total":251},"items":[{"uid":"ee5a29d9537d1732","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/ee5a29d9537d1732","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain","time":{"start":1669378943832,"stop":1669378944801,"duration":969}},{"uid":"80d235d6a62421db","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/80d235d6a62421db","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] CLV Parachain","time":{"start":1669371766964,"stop":1669371767912,"duration":948}},{"uid":"e63df16f32fecc93","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/e63df16f32fecc93","status":"passed","time":{"start":1669119258270,"stop":1669119266670,"duration":8400}},{"uid":"a5645ac491b3d82e","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/a5645ac491b3d82e","status":"passed","time":{"start":1669104798072,"stop":1669104805556,"duration":7484}},{"uid":"ef5adb3f52ef526c","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/ef5adb3f52ef526c","status":"passed","time":{"start":1669090325064,"stop":1669090325064,"duration":0}},{"uid":"4cfdee341d7a4885","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/4cfdee341d7a4885","status":"passed","time":{"start":1669076665148,"stop":1669076672018,"duration":6870}},{"uid":"e728b5079be94030","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/e728b5079be94030","status":"passed","time":{"start":1669061599052,"stop":1669061607569,"duration":8517}},{"uid":"5db2a09f2e607a01","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/5db2a09f2e607a01","status":"passed","time":{"start":1669047100710,"stop":1669047100710,"duration":0}},{"uid":"c85b5300a7536ef3","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/c85b5300a7536ef3","status":"passed","time":{"start":1669032905355,"stop":1669032913145,"duration":7790}},{"uid":"cb29f4d4809c95c8","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/cb29f4d4809c95c8","status":"passed","time":{"start":1669018299198,"stop":1669018299198,"duration":0}},{"uid":"1ccf7c4f06bf55ec","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/1ccf7c4f06bf55ec","status":"passed","time":{"start":1669004219152,"stop":1669004226475,"duration":7323}},{"uid":"6a6cabcc41a73735","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/6a6cabcc41a73735","status":"passed","time":{"start":1668990008406,"stop":1668990008406,"duration":0}},{"uid":"4ef1c732f7418527","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/4ef1c732f7418527","status":"passed","time":{"start":1668974902984,"stop":1668974902984,"duration":0}},{"uid":"7d8bebc7e232ba1f","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/7d8bebc7e232ba1f","status":"passed","time":{"start":1668960466772,"stop":1668960474293,"duration":7521}},{"uid":"734928531a8f7fa","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/734928531a8f7fa","status":"passed","time":{"start":1668946131817,"stop":1668946139535,"duration":7718}},{"uid":"53e3617069129e0b","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/53e3617069129e0b","status":"passed","time":{"start":1668931778984,"stop":1668931778985,"duration":1}},{"uid":"681aecbab14dd9b6","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/681aecbab14dd9b6","status":"passed","time":{"start":1668917434374,"stop":1668917434374,"duration":0}},{"uid":"3f2f16d6e3082b27","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/3f2f16d6e3082b27","status":"passed","time":{"start":1668903587329,"stop":1668903587329,"duration":0}},{"uid":"89aa4f19ddb8ace3","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/89aa4f19ddb8ace3","status":"passed","time":{"start":1668888462374,"stop":1668888462374,"duration":0}},{"uid":"28eac222c38c619c","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/28eac222c38c619c","status":"passed","time":{"start":1668874055204,"stop":1668874062480,"duration":7276}}]},"tags":[]},"source":"5cd67811e45d6c14.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f6e6dfea160>"]}