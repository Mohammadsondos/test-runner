{"uid":"de24877be98d04bc","name":"test_chainId[Test for Interlay]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"95c5ab37eec3dfab22d8adf256c75bdf","time":{"start":1669392879979,"stop":1669392880561,"duration":582},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Interlay","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f6e6df326a0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6dfea460>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6dfea460>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Interlay\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Interlay","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f6e6df326a0>\nchain = <tests.utils.chain_model.Chain object at 0x7f6e6dfea460>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f6e6dfea460>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Interlay\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"94358102bb88327e","name":"stdout","source":"94358102bb88327e.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f6e6dfea460>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c42ab761855b25c4","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Interlay","time":{"start":1669392867724,"stop":1669392869971,"duration":2247}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":248,"unknown":0,"total":251},"items":[{"uid":"233ddae50b0c056a","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/233ddae50b0c056a","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Interlay","time":{"start":1669378546465,"stop":1669378547274,"duration":809}},{"uid":"5a6200cb9ad7f48f","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/5a6200cb9ad7f48f","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Interlay","time":{"start":1669371295489,"stop":1669371296206,"duration":717}},{"uid":"901897f58eeec84b","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/901897f58eeec84b","status":"passed","time":{"start":1669118928726,"stop":1669118935095,"duration":6369}},{"uid":"972fd83839f6a7d0","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/972fd83839f6a7d0","status":"passed","time":{"start":1669104493584,"stop":1669104499535,"duration":5951}},{"uid":"cfa07dc3d994d360","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/cfa07dc3d994d360","status":"passed","time":{"start":1669090093280,"stop":1669090101196,"duration":7916}},{"uid":"84b8b55bdc102d56","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/84b8b55bdc102d56","status":"passed","time":{"start":1669076407264,"stop":1669076412879,"duration":5615}},{"uid":"2de3ae0ff22e7a88","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/2de3ae0ff22e7a88","status":"passed","time":{"start":1669061273960,"stop":1669061280988,"duration":7028}},{"uid":"e7b7fc9d665fae62","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/e7b7fc9d665fae62","status":"passed","time":{"start":1669046921111,"stop":1669046928744,"duration":7633}},{"uid":"72de480b2429936c","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/72de480b2429936c","status":"passed","time":{"start":1669032558363,"stop":1669032566224,"duration":7861}},{"uid":"a6078cee2fca826a","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/a6078cee2fca826a","status":"passed","time":{"start":1669018156786,"stop":1669018165245,"duration":8459}},{"uid":"c326ed68ff3c0e1","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/c326ed68ff3c0e1","status":"passed","time":{"start":1669003934588,"stop":1669003940713,"duration":6125}},{"uid":"69ad343b4f8d573c","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/69ad343b4f8d573c","status":"passed","time":{"start":1668989892035,"stop":1668989897755,"duration":5720}},{"uid":"655b022cb7fc8bd1","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/655b022cb7fc8bd1","status":"passed","time":{"start":1668974774272,"stop":1668974779020,"duration":4748}},{"uid":"40e5270183420e43","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/40e5270183420e43","status":"passed","time":{"start":1668960372291,"stop":1668960372291,"duration":0}},{"uid":"607fc15cf0cf6bb1","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/607fc15cf0cf6bb1","status":"passed","time":{"start":1668946028255,"stop":1668946028255,"duration":0}},{"uid":"9b8266fcfcdea6d9","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/9b8266fcfcdea6d9","status":"passed","time":{"start":1668931625753,"stop":1668931632254,"duration":6501}},{"uid":"627afd158ad0a2a9","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/627afd158ad0a2a9","status":"passed","time":{"start":1668917340641,"stop":1668917345322,"duration":4681}},{"uid":"e5fbc3c5f80f9969","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/e5fbc3c5f80f9969","status":"passed","time":{"start":1668903482012,"stop":1668903487117,"duration":5105}},{"uid":"2ed53e6c8439b6b4","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/2ed53e6c8439b6b4","status":"passed","time":{"start":1668888365990,"stop":1668888371354,"duration":5364}},{"uid":"28b75f248c3ff1f9","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/28b75f248c3ff1f9","status":"passed","time":{"start":1668873981011,"stop":1668873981011,"duration":0}}]},"tags":[]},"source":"de24877be98d04bc.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f6e6dfea460>"]}