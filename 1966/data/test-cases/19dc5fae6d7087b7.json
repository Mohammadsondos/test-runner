{"uid":"19dc5fae6d7087b7","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1669393033560,"stop":1669393033929,"duration":369},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az296-935"},{"name":"thread","value":"1637-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f6df4a8eafdd8e09","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669393023056,"stop":1669393023494,"duration":438}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":118,"unknown":0,"total":121},"items":[{"uid":"1b1d73c62260636","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/1b1d73c62260636","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378692033,"stop":1669378692325,"duration":292}},{"uid":"91e4f30be2c5b75e","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/91e4f30be2c5b75e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371434990,"stop":1669371435349,"duration":359}},{"uid":"f7a698f1736997ab","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/f7a698f1736997ab","status":"passed","time":{"start":1669118800482,"stop":1669118800860,"duration":378}},{"uid":"d684524ed7c7c822","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/d684524ed7c7c822","status":"passed","time":{"start":1669104373135,"stop":1669104373710,"duration":575}},{"uid":"b1957ac74138fcc7","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/b1957ac74138fcc7","status":"passed","time":{"start":1669089942701,"stop":1669089943269,"duration":568}},{"uid":"c5e19ff973375b79","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/c5e19ff973375b79","status":"passed","time":{"start":1669076219577,"stop":1669076219995,"duration":418}},{"uid":"c60842a69aac156c","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c60842a69aac156c","status":"passed","time":{"start":1669061156891,"stop":1669061157444,"duration":553}},{"uid":"88c7ff829289adf9","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/88c7ff829289adf9","status":"passed","time":{"start":1669046811899,"stop":1669046812455,"duration":556}},{"uid":"6f1592b502a94c38","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/6f1592b502a94c38","status":"passed","time":{"start":1669032423734,"stop":1669032424106,"duration":372}},{"uid":"bfd8fd55b3ed1840","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/bfd8fd55b3ed1840","status":"passed","time":{"start":1669017963596,"stop":1669017964146,"duration":550}},{"uid":"29a9309ad15278f2","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/29a9309ad15278f2","status":"passed","time":{"start":1669003798281,"stop":1669003798655,"duration":374}},{"uid":"dcb39eeb4bc4b9e3","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/dcb39eeb4bc4b9e3","status":"passed","time":{"start":1668989828845,"stop":1668989829243,"duration":398}},{"uid":"c70f568899d05cba","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/c70f568899d05cba","status":"passed","time":{"start":1668974713500,"stop":1668974713898,"duration":398}},{"uid":"56fa7bfdf3450e59","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/56fa7bfdf3450e59","status":"passed","time":{"start":1668960326889,"stop":1668960327470,"duration":581}},{"uid":"7f82a56e2879af02","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/7f82a56e2879af02","status":"passed","time":{"start":1668945984507,"stop":1668945985169,"duration":662}},{"uid":"cb793ee559916fa0","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/cb793ee559916fa0","status":"passed","time":{"start":1668931532867,"stop":1668931533268,"duration":401}},{"uid":"95e00e2e5dcad59","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/95e00e2e5dcad59","status":"passed","time":{"start":1668917287636,"stop":1668917288202,"duration":566}},{"uid":"dea24f5b2444e555","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/dea24f5b2444e555","status":"passed","time":{"start":1668903420141,"stop":1668903420534,"duration":393}},{"uid":"7d7fd4175211bb38","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/7d7fd4175211bb38","status":"passed","time":{"start":1668888304202,"stop":1668888304597,"duration":395}},{"uid":"cf6924528086cac0","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/cf6924528086cac0","status":"passed","time":{"start":1668873947588,"stop":1668873948000,"duration":412}}]},"tags":[]},"source":"19dc5fae6d7087b7.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}