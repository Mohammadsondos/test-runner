{"uid":"c6c24c4ae7e7f6e","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1688297766314,"stop":1688297766735,"duration":421},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f4c54c74100>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4c54c30970>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f4c54c74100>\nchain = <scripts.utils.chain_model.Chain object at 0x7f4c54c30970>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"31c65803ae7a873","name":"stdout","source":"31c65803ae7a873.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az577-978"},{"name":"thread","value":"1966-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f4c54c30970>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7c29062a2e9b851b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688297750778,"stop":1688297751294,"duration":516}},{"uid":"f4d58e9316a89e12","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688297734622,"stop":1688297735731,"duration":1109}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":79,"skipped":0,"passed":238,"unknown":0,"total":317},"items":[{"uid":"9e74ab367748cf35","reportUrl":"https://novasamatech.github.io/test-runner/3313//#testresult/9e74ab367748cf35","status":"passed","time":{"start":1688285096556,"stop":1688285106265,"duration":9709}},{"uid":"4693b11d262266de","reportUrl":"https://novasamatech.github.io/test-runner/3312//#testresult/4693b11d262266de","status":"passed","time":{"start":1688270699622,"stop":1688270701190,"duration":1568}},{"uid":"e48ed9288785c5ed","reportUrl":"https://novasamatech.github.io/test-runner/3311//#testresult/e48ed9288785c5ed","status":"passed","time":{"start":1688257062932,"stop":1688257072403,"duration":9471}},{"uid":"48bbdf5e79d09de8","reportUrl":"https://novasamatech.github.io/test-runner/3310//#testresult/48bbdf5e79d09de8","status":"passed","time":{"start":1688241890639,"stop":1688241899016,"duration":8377}},{"uid":"a09a646333ae3262","reportUrl":"https://novasamatech.github.io/test-runner/3309//#testresult/a09a646333ae3262","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688227514042,"stop":1688227514512,"duration":470}},{"uid":"79ac54b87326302a","reportUrl":"https://novasamatech.github.io/test-runner/3308//#testresult/79ac54b87326302a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688213168296,"stop":1688213168516,"duration":220}},{"uid":"1f0f95b1ceed3bc0","reportUrl":"https://novasamatech.github.io/test-runner/3307//#testresult/1f0f95b1ceed3bc0","status":"passed","time":{"start":1688198688730,"stop":1688198697250,"duration":8520}},{"uid":"e0d80f39b74b6d14","reportUrl":"https://novasamatech.github.io/test-runner/3306//#testresult/e0d80f39b74b6d14","status":"passed","time":{"start":1688184287375,"stop":1688184298961,"duration":11586}},{"uid":"8443d24bfe7dc216","reportUrl":"https://novasamatech.github.io/test-runner/3305//#testresult/8443d24bfe7dc216","status":"passed","time":{"start":1688170708764,"stop":1688170716252,"duration":7488}},{"uid":"133a8c699d664d54","reportUrl":"https://novasamatech.github.io/test-runner/3304//#testresult/133a8c699d664d54","status":"passed","time":{"start":1688155514240,"stop":1688155525816,"duration":11576}},{"uid":"bbc22927caf16b37","reportUrl":"https://novasamatech.github.io/test-runner/3303//#testresult/bbc22927caf16b37","status":"passed","time":{"start":1688141124531,"stop":1688141128365,"duration":3834}},{"uid":"9a50aebcc54a50c","reportUrl":"https://novasamatech.github.io/test-runner/3302//#testresult/9a50aebcc54a50c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688126799612,"stop":1688126799826,"duration":214}},{"uid":"1999306c2926b3","reportUrl":"https://novasamatech.github.io/test-runner/3301//#testresult/1999306c2926b3","status":"passed","time":{"start":1688112310120,"stop":1688112315977,"duration":5857}},{"uid":"299bf6e93746a47","reportUrl":"https://novasamatech.github.io/test-runner/3300//#testresult/299bf6e93746a47","status":"passed","time":{"start":1688097891007,"stop":1688097897574,"duration":6567}},{"uid":"287d5d6f52580081","reportUrl":"https://novasamatech.github.io/test-runner/3299//#testresult/287d5d6f52580081","status":"passed","time":{"start":1688084136811,"stop":1688084145564,"duration":8753}},{"uid":"286445ff350d267b","reportUrl":"https://novasamatech.github.io/test-runner/3298//#testresult/286445ff350d267b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688069119711,"stop":1688069120157,"duration":446}},{"uid":"ead6798d4d03fb3c","reportUrl":"https://novasamatech.github.io/test-runner/3297//#testresult/ead6798d4d03fb3c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688054722569,"stop":1688054722985,"duration":416}},{"uid":"3d4d7821e8c669e4","reportUrl":"https://novasamatech.github.io/test-runner/3296//#testresult/3d4d7821e8c669e4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688040418127,"stop":1688040418510,"duration":383}},{"uid":"1722e6bdbe8e1e22","reportUrl":"https://novasamatech.github.io/test-runner/3295//#testresult/1722e6bdbe8e1e22","status":"passed","time":{"start":1688025940709,"stop":1688025952533,"duration":11824}},{"uid":"ea00cee2dbb15087","reportUrl":"https://novasamatech.github.io/test-runner/3294//#testresult/ea00cee2dbb15087","status":"passed","time":{"start":1688011504467,"stop":1688011512274,"duration":7807}}]},"tags":[]},"source":"c6c24c4ae7e7f6e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f4c54c30970>"]}