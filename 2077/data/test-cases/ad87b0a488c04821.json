{"uid":"ad87b0a488c04821","name":"test_can_create_connection[Test for Robonomics, url: wss://robonomics.leemo.me]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"60f696a8c9130865c0be5e1d2491af5d","time":{"start":1670933127415,"stop":1670933128076,"duration":661},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"177ccccccf2063e7","name":"stdout","source":"177ccccccf2063e7.txt","type":"text/plain","size":218}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az283-210"},{"name":"thread","value":"1668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"aeda226e9e5b5c1e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670933116674,"stop":1670933117331,"duration":657}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":84,"skipped":0,"passed":130,"unknown":0,"total":214},"items":[{"uid":"7619f7d6be4a43bb","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/7619f7d6be4a43bb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670918691473,"stop":1670918691987,"duration":514}},{"uid":"80f7e5b9e981245e","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/80f7e5b9e981245e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670904273802,"stop":1670904274155,"duration":353}},{"uid":"983860b279bc11b8","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/983860b279bc11b8","status":"passed","time":{"start":1670890454664,"stop":1670890455465,"duration":801}},{"uid":"3d6e0dcc4f60cc1d","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/3d6e0dcc4f60cc1d","status":"passed","time":{"start":1670875442916,"stop":1670875443369,"duration":453}},{"uid":"4b867c1d5487cc39","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/4b867c1d5487cc39","status":"passed","time":{"start":1670861069299,"stop":1670861070063,"duration":764}},{"uid":"c399243bd934d8cf","reportUrl":"https://nova-wallet.github.io/test-runner/2071//#testresult/c399243bd934d8cf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670846739425,"stop":1670846740065,"duration":640}},{"uid":"4b694df3c3c765e3","reportUrl":"https://nova-wallet.github.io/test-runner/2070//#testresult/4b694df3c3c765e3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670832313902,"stop":1670832314249,"duration":347}},{"uid":"6192dc5658b59792","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/6192dc5658b59792","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670817894122,"stop":1670817894640,"duration":518}},{"uid":"e1bd87f71c9d3d8a","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/e1bd87f71c9d3d8a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670804066370,"stop":1670804066814,"duration":444}},{"uid":"246e97b7dd62ab1a","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/246e97b7dd62ab1a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670789067319,"stop":1670789067641,"duration":322}},{"uid":"daade7b3af78d40e","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/daade7b3af78d40e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670774662966,"stop":1670774663285,"duration":319}},{"uid":"3818c198928c0c0e","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/3818c198928c0c0e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670760325829,"stop":1670760326446,"duration":617}},{"uid":"dbd6112cebe21eea","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/dbd6112cebe21eea","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670745957048,"stop":1670745957369,"duration":321}},{"uid":"e237551db2780c6a","reportUrl":"https://nova-wallet.github.io/test-runner/2063//#testresult/e237551db2780c6a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670731563152,"stop":1670731563494,"duration":342}},{"uid":"7e6abcada4d67d9b","reportUrl":"https://nova-wallet.github.io/test-runner/2062//#testresult/7e6abcada4d67d9b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1670717736329,"stop":1670717736654,"duration":325}},{"uid":"ca4c905c646111a5","reportUrl":"https://nova-wallet.github.io/test-runner/2061//#testresult/ca4c905c646111a5","status":"passed","time":{"start":1670702659855,"stop":1670702660280,"duration":425}},{"uid":"a67a3c8008ff79ac","reportUrl":"https://nova-wallet.github.io/test-runner/2060//#testresult/a67a3c8008ff79ac","status":"passed","time":{"start":1670688281225,"stop":1670688281978,"duration":753}},{"uid":"91f097b337cb97d0","reportUrl":"https://nova-wallet.github.io/test-runner/2059//#testresult/91f097b337cb97d0","status":"passed","time":{"start":1670673950322,"stop":1670673950721,"duration":399}},{"uid":"fea6a7831442cefd","reportUrl":"https://nova-wallet.github.io/test-runner/2058//#testresult/fea6a7831442cefd","status":"passed","time":{"start":1670659540163,"stop":1670659540974,"duration":811}},{"uid":"2e95419126a668bd","reportUrl":"https://nova-wallet.github.io/test-runner/2057//#testresult/2e95419126a668bd","status":"passed","time":{"start":1670645051071,"stop":1670645051901,"duration":830}}]},"tags":[]},"source":"ad87b0a488c04821.json","parameterValues":["{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"]}