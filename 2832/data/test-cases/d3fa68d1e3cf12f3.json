{"uid":"d3fa68d1e3cf12f3","name":"test_can_create_connection[Test for Calamari, url: wss://ws.calamari.systems/]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"313295000e78b74b8dc0b5885f9dc006","time":{"start":1681632258117,"stop":1681632258666,"duration":549},"status":"broken","statusMessage":"ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)","statusTrace":"data = {'name': 'Calamari', 'url': 'wss://ws.calamari.systems/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLZeroReturnError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)","statusTrace":"data = {'name': 'Calamari', 'url': 'wss://ws.calamari.systems/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)\n\n/usr/lib/python3.10/ssl.py:1342: SSLZeroReturnError","steps":[],"attachments":[{"uid":"95ffd10b069974e7","name":"stdout","source":"95ffd10b069974e7.txt","type":"text/plain","size":262}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az561-95"},{"name":"thread","value":"1770-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://ws.calamari.systems/', 'name': 'Calamari'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4c7c4474e1efefbb","status":"broken","statusDetails":"ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)","time":{"start":1681632247487,"stop":1681632247927,"duration":440}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":59,"skipped":0,"passed":950,"unknown":0,"total":1009},"items":[{"uid":"1018dfd08c9dc372","reportUrl":"https://nova-wallet.github.io/test-runner/2831//#testresult/1018dfd08c9dc372","status":"passed","time":{"start":1681617846506,"stop":1681617846851,"duration":345}},{"uid":"e08d3607a38a1767","reportUrl":"https://nova-wallet.github.io/test-runner/2830//#testresult/e08d3607a38a1767","status":"passed","time":{"start":1681604047530,"stop":1681604048364,"duration":834}},{"uid":"f40dec642b92b1f8","reportUrl":"https://nova-wallet.github.io/test-runner/2829//#testresult/f40dec642b92b1f8","status":"passed","time":{"start":1681589025863,"stop":1681589026165,"duration":302}},{"uid":"8e2ef897b5a23656","reportUrl":"https://nova-wallet.github.io/test-runner/2828//#testresult/8e2ef897b5a23656","status":"passed","time":{"start":1681574642910,"stop":1681574643807,"duration":897}},{"uid":"7d920ab9268f6e06","reportUrl":"https://nova-wallet.github.io/test-runner/2827//#testresult/7d920ab9268f6e06","status":"passed","time":{"start":1681560259223,"stop":1681560259619,"duration":396}},{"uid":"3d9c2920a9ff5007","reportUrl":"https://nova-wallet.github.io/test-runner/2825//#testresult/3d9c2920a9ff5007","status":"passed","time":{"start":1681531440467,"stop":1681531441453,"duration":986}},{"uid":"94cdcf0ebfaf0951","reportUrl":"https://nova-wallet.github.io/test-runner/2824//#testresult/94cdcf0ebfaf0951","status":"broken","statusDetails":"ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)","time":{"start":1681517596234,"stop":1681517596512,"duration":278}},{"uid":"499ee2488e7c5aa3","reportUrl":"https://nova-wallet.github.io/test-runner/2823//#testresult/499ee2488e7c5aa3","status":"passed","time":{"start":1681502648596,"stop":1681502648946,"duration":350}},{"uid":"4dd91ede44ad1ca8","reportUrl":"https://nova-wallet.github.io/test-runner/2822//#testresult/4dd91ede44ad1ca8","status":"broken","statusDetails":"ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)","time":{"start":1681488272840,"stop":1681488272947,"duration":107}},{"uid":"a0220d178839a2e8","reportUrl":"https://nova-wallet.github.io/test-runner/2821//#testresult/a0220d178839a2e8","status":"passed","time":{"start":1681473922119,"stop":1681473922694,"duration":575}},{"uid":"7f0aa3ac7bfbe4d7","reportUrl":"https://nova-wallet.github.io/test-runner/2820//#testresult/7f0aa3ac7bfbe4d7","status":"broken","statusDetails":"ssl.SSLZeroReturnError: TLS/SSL connection has been closed (EOF) (_ssl.c:997)","time":{"start":1681459458789,"stop":1681459458944,"duration":155}},{"uid":"42018f981bb81c72","reportUrl":"https://nova-wallet.github.io/test-runner/2819//#testresult/42018f981bb81c72","status":"passed","time":{"start":1681445045041,"stop":1681445045543,"duration":502}},{"uid":"286f5d6335ecac3c","reportUrl":"https://nova-wallet.github.io/test-runner/2818//#testresult/286f5d6335ecac3c","status":"passed","time":{"start":1681431150563,"stop":1681431150909,"duration":346}},{"uid":"445c1b6f16bc5fca","reportUrl":"https://nova-wallet.github.io/test-runner/2817//#testresult/445c1b6f16bc5fca","status":"passed","time":{"start":1681416242732,"stop":1681416243482,"duration":750}},{"uid":"f79009280c2609f5","reportUrl":"https://nova-wallet.github.io/test-runner/2816//#testresult/f79009280c2609f5","status":"passed","time":{"start":1681401855874,"stop":1681401856636,"duration":762}},{"uid":"4939a6544e9f6736","reportUrl":"https://nova-wallet.github.io/test-runner/2815//#testresult/4939a6544e9f6736","status":"passed","time":{"start":1681387529045,"stop":1681387530158,"duration":1113}},{"uid":"e58ae391092b1613","reportUrl":"https://nova-wallet.github.io/test-runner/2814//#testresult/e58ae391092b1613","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1681373088586,"stop":1681373088901,"duration":315}},{"uid":"c4bbc4675814c9f0","reportUrl":"https://nova-wallet.github.io/test-runner/2813//#testresult/c4bbc4675814c9f0","status":"passed","time":{"start":1681358655198,"stop":1681358655365,"duration":167}},{"uid":"4d296a86a8a943c9","reportUrl":"https://nova-wallet.github.io/test-runner/2812//#testresult/4d296a86a8a943c9","status":"passed","time":{"start":1681344738130,"stop":1681344739336,"duration":1206}},{"uid":"de18b3f8b7ed8fea","reportUrl":"https://nova-wallet.github.io/test-runner/2811//#testresult/de18b3f8b7ed8fea","status":"passed","time":{"start":1681329858431,"stop":1681329859461,"duration":1030}}]},"tags":[]},"source":"d3fa68d1e3cf12f3.json","parameterValues":["{'url': 'wss://ws.calamari.systems/', 'name': 'Calamari'}"]}