{"uid":"3fc8dc144a7e7d62","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://eth-rpc.gateway.pokt.network/]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"a16f4676fac9ad616237b0a8d5485def","time":{"start":1685721885865,"stop":1685721886238,"duration":373},"status":"failed","statusMessage":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347603700>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347603700>> = <web3.main.Web3 object at 0x7fa347603700>.is_connected","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7fa347b589a0>\ndata = {'name': 'Ethereum', 'url': 'https://eth-rpc.gateway.pokt.network/'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n>       assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\nE       AssertionError: Failed to connect to Ethereum RPC node\nE       assert False\nE        +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347603700>>()\nE        +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347603700>> = <web3.main.Web3 object at 0x7fa347603700>.is_connected\n\ntests/test_eth_nodes_availability.py:37: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az471-817"},{"name":"thread","value":"1986-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://eth-rpc.gateway.pokt.network/', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e96f08a2a8a1e856","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347603ee0>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347603ee0>> = <web3.main.Web3 object at 0x7fa347603ee0>.is_connected","time":{"start":1685721870460,"stop":1685721870856,"duration":396}},{"uid":"d1921fee2bbfe457","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347b59d50>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7fa347b59d50>> = <web3.main.Web3 object at 0x7fa347b59d50>.is_connected","time":{"start":1685721854763,"stop":1685721855373,"duration":610}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":146,"unknown":0,"total":149},"items":[{"uid":"fc59407b290ef8c3","reportUrl":"https://novasamatech.github.io/test-runner/3134//#testresult/fc59407b290ef8c3","status":"passed","time":{"start":1685707482699,"stop":1685707483214,"duration":515}},{"uid":"112ff6051f373f4a","reportUrl":"https://novasamatech.github.io/test-runner/3133//#testresult/112ff6051f373f4a","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f4f7ff60970>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f4f7ff60970>> = <web3.main.Web3 object at 0x7f4f7ff60970>.is_connected","time":{"start":1685693069822,"stop":1685693070247,"duration":425}},{"uid":"707f9ace4e90fd0e","reportUrl":"https://novasamatech.github.io/test-runner/3132//#testresult/707f9ace4e90fd0e","status":"passed","time":{"start":1685678646957,"stop":1685678647838,"duration":881}},{"uid":"195a6799dc9b5cce","reportUrl":"https://novasamatech.github.io/test-runner/3131//#testresult/195a6799dc9b5cce","status":"passed","time":{"start":1685664846252,"stop":1685664846755,"duration":503}},{"uid":"bc0c2837c13dae1e","reportUrl":"https://novasamatech.github.io/test-runner/3130//#testresult/bc0c2837c13dae1e","status":"passed","time":{"start":1685649820719,"stop":1685649821201,"duration":482}},{"uid":"a9301f9cf9990345","reportUrl":"https://novasamatech.github.io/test-runner/3129//#testresult/a9301f9cf9990345","status":"passed","time":{"start":1685635438418,"stop":1685635439296,"duration":878}},{"uid":"5aad01a921768de3","reportUrl":"https://novasamatech.github.io/test-runner/3128//#testresult/5aad01a921768de3","status":"passed","time":{"start":1685621073764,"stop":1685621074612,"duration":848}},{"uid":"1206327f279bfea3","reportUrl":"https://novasamatech.github.io/test-runner/3127//#testresult/1206327f279bfea3","status":"passed","time":{"start":1685606663356,"stop":1685606664458,"duration":1102}},{"uid":"18849c257a41e971","reportUrl":"https://novasamatech.github.io/test-runner/3126//#testresult/18849c257a41e971","status":"passed","time":{"start":1685592293854,"stop":1685592294275,"duration":421}},{"uid":"a01d48211b6ec21c","reportUrl":"https://novasamatech.github.io/test-runner/3125//#testresult/a01d48211b6ec21c","status":"passed","time":{"start":1685578653836,"stop":1685578654827,"duration":991}},{"uid":"eba8176efc3f2e8b","reportUrl":"https://novasamatech.github.io/test-runner/3124//#testresult/eba8176efc3f2e8b","status":"passed","time":{"start":1685563424804,"stop":1685563426102,"duration":1298}},{"uid":"b0d2ff1d19522082","reportUrl":"https://novasamatech.github.io/test-runner/3123//#testresult/b0d2ff1d19522082","status":"passed","time":{"start":1685549044505,"stop":1685549045753,"duration":1248}},{"uid":"6c0bf382232b30b7","reportUrl":"https://novasamatech.github.io/test-runner/3122//#testresult/6c0bf382232b30b7","status":"passed","time":{"start":1685534712809,"stop":1685534713303,"duration":494}},{"uid":"2bf8c536b68cf989","reportUrl":"https://nova-wallet.github.io/test-runner/3121//#testresult/2bf8c536b68cf989","status":"passed","time":{"start":1685520258051,"stop":1685520258503,"duration":452}},{"uid":"87fd219fd588facf","reportUrl":"https://nova-wallet.github.io/test-runner/3120//#testresult/87fd219fd588facf","status":"passed","time":{"start":1685505837377,"stop":1685505837903,"duration":526}},{"uid":"35717e6c30baabb6","reportUrl":"https://nova-wallet.github.io/test-runner/3119//#testresult/35717e6c30baabb6","status":"passed","time":{"start":1685492028898,"stop":1685492029912,"duration":1014}},{"uid":"f3a667b01cb4e06f","reportUrl":"https://nova-wallet.github.io/test-runner/3118//#testresult/f3a667b01cb4e06f","status":"passed","time":{"start":1685477028469,"stop":1685477029544,"duration":1075}},{"uid":"8d1efb92929812be","reportUrl":"https://nova-wallet.github.io/test-runner/3117//#testresult/8d1efb92929812be","status":"passed","time":{"start":1685462644102,"stop":1685462644663,"duration":561}},{"uid":"fd7fa3821e198247","reportUrl":"https://nova-wallet.github.io/test-runner/3116//#testresult/fd7fa3821e198247","status":"passed","time":{"start":1685448301753,"stop":1685448303052,"duration":1299}},{"uid":"bf8c925bc903261b","reportUrl":"https://nova-wallet.github.io/test-runner/3115//#testresult/bf8c925bc903261b","status":"passed","time":{"start":1685433845404,"stop":1685433846439,"duration":1035}}]},"tags":[]},"source":"3fc8dc144a7e7d62.json","parameterValues":["{'url': 'https://eth-rpc.gateway.pokt.network/', 'name': 'Ethereum'}"]}