{"uid":"94badad987ef19e0","name":"test_can_create_connection[Test for Kintsugi, url: wss://kintsugi-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"764ca318c5eada7b509393e0fd98a29a","time":{"start":1670659564562,"stop":1670659577257,"duration":12695},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Kintsugi', 'url': 'wss://kintsugi-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Kintsugi', 'url': 'wss://kintsugi-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"31ea86aea78abd91","name":"stdout","source":"31ea86aea78abd91.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az621-198"},{"name":"thread","value":"1651-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kintsugi-rpc.dwellir.com', 'name': 'Kintsugi'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3763f78a195b9211","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670659543348,"stop":1670659554477,"duration":11129}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":119,"skipped":0,"passed":208,"unknown":0,"total":327},"items":[{"uid":"a6df4f5821c72518","reportUrl":"https://nova-wallet.github.io/test-runner/2057//#testresult/a6df4f5821c72518","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670645076395,"stop":1670645087820,"duration":11425}},{"uid":"3474154db40a3ea","reportUrl":"https://nova-wallet.github.io/test-runner/2056//#testresult/3474154db40a3ea","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670631218573,"stop":1670631229993,"duration":11420}},{"uid":"9eee11523e7602f6","reportUrl":"https://nova-wallet.github.io/test-runner/2054//#testresult/9eee11523e7602f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670601889450,"stop":1670601900869,"duration":11419}},{"uid":"bc218a39f8a22d0b","reportUrl":"https://nova-wallet.github.io/test-runner/2053//#testresult/bc218a39f8a22d0b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670587529892,"stop":1670587541282,"duration":11390}},{"uid":"ff89b89b437bfc9c","reportUrl":"https://nova-wallet.github.io/test-runner/2052//#testresult/ff89b89b437bfc9c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670573166702,"stop":1670573178084,"duration":11382}},{"uid":"86fef1ef669dbe99","reportUrl":"https://nova-wallet.github.io/test-runner/2051//#testresult/86fef1ef669dbe99","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670558692580,"stop":1670558703975,"duration":11395}},{"uid":"98a4c830bfea52a5","reportUrl":"https://nova-wallet.github.io/test-runner/2050//#testresult/98a4c830bfea52a5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670544942259,"stop":1670544955004,"duration":12745}},{"uid":"aac2ebfa51f51402","reportUrl":"https://nova-wallet.github.io/test-runner/2049//#testresult/aac2ebfa51f51402","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670529899536,"stop":1670529910923,"duration":11387}},{"uid":"95204fbe8d47898a","reportUrl":"https://nova-wallet.github.io/test-runner/2048//#testresult/95204fbe8d47898a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670515483524,"stop":1670515494942,"duration":11418}},{"uid":"6e04366e06dbbc71","reportUrl":"https://nova-wallet.github.io/test-runner/2047//#testresult/6e04366e06dbbc71","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670501151570,"stop":1670501162973,"duration":11403}},{"uid":"4783fce9200cc15f","reportUrl":"https://nova-wallet.github.io/test-runner/2046//#testresult/4783fce9200cc15f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670486689340,"stop":1670486700757,"duration":11417}},{"uid":"978ec3c8dc008362","reportUrl":"https://nova-wallet.github.io/test-runner/2045//#testresult/978ec3c8dc008362","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670472298396,"stop":1670472309823,"duration":11427}},{"uid":"198179e60048eed3","reportUrl":"https://nova-wallet.github.io/test-runner/2044//#testresult/198179e60048eed3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670458447938,"stop":1670458460653,"duration":12715}},{"uid":"a4154e7e886d27d5","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/a4154e7e886d27d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670443484908,"stop":1670443497607,"duration":12699}},{"uid":"630e9895fd3ded6c","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/630e9895fd3ded6c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670429102537,"stop":1670429115012,"duration":12475}},{"uid":"ee135f7ed744ca3c","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/ee135f7ed744ca3c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670414754121,"stop":1670414765502,"duration":11381}},{"uid":"1d03dd3cfb74949a","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/1d03dd3cfb74949a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670400312910,"stop":1670400325307,"duration":12397}},{"uid":"9a3e3f2de02bae6d","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/9a3e3f2de02bae6d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670385901966,"stop":1670385914699,"duration":12733}},{"uid":"36657d95d345554d","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/36657d95d345554d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670372088272,"stop":1670372099695,"duration":11423}},{"uid":"7a2c13b3744c02a0","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/7a2c13b3744c02a0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670357088860,"stop":1670357100264,"duration":11404}}]},"tags":[]},"source":"94badad987ef19e0.json","parameterValues":["{'url': 'wss://kintsugi-rpc.dwellir.com', 'name': 'Kintsugi'}"]}