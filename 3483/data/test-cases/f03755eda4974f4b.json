{"uid":"f03755eda4974f4b","name":"test_has_new_assets[Test for Tinkernet]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"d969e3cf97286b18cdcce33aa2d558b4","time":{"start":1690733122728,"stop":1690733123124,"duration":396},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f6f2b056ce0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6f2b5dfa30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f6f2b056ce0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6f2b5dfa30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a6cc7a2eb034c5a0","name":"stdout","source":"a6cc7a2eb034c5a0.txt","type":"text/plain","size":822}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az412-600"},{"name":"thread","value":"1971-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f6f2b5dfa30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ffca5b9a0705c7a7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690733106849,"stop":1690733107676,"duration":827}},{"uid":"f6da426d0dfc19f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1690733090809,"stop":1690733091807,"duration":998}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":486,"unknown":0,"total":487},"items":[{"uid":"98697a830b7fa86f","reportUrl":"https://novasamatech.github.io/test-runner/3482//#testresult/98697a830b7fa86f","status":"passed","time":{"start":1690718713991,"stop":1690718723905,"duration":9914}},{"uid":"305cf9a405036f1d","reportUrl":"https://novasamatech.github.io/test-runner/3481//#testresult/305cf9a405036f1d","status":"passed","time":{"start":1690704328770,"stop":1690704335838,"duration":7068}},{"uid":"dff67d815803b656","reportUrl":"https://novasamatech.github.io/test-runner/3480//#testresult/dff67d815803b656","status":"passed","time":{"start":1690689907569,"stop":1690689915331,"duration":7762}},{"uid":"396f611bb8ee875d","reportUrl":"https://novasamatech.github.io/test-runner/3479//#testresult/396f611bb8ee875d","status":"passed","time":{"start":1690676133900,"stop":1690676140734,"duration":6834}},{"uid":"52998898f9564c0c","reportUrl":"https://novasamatech.github.io/test-runner/3478//#testresult/52998898f9564c0c","status":"passed","time":{"start":1690661084022,"stop":1690661093383,"duration":9361}},{"uid":"67db534c7e43fe01","reportUrl":"https://novasamatech.github.io/test-runner/3477//#testresult/67db534c7e43fe01","status":"passed","time":{"start":1690646702392,"stop":1690646713264,"duration":10872}},{"uid":"8467000aa8eb2d7c","reportUrl":"https://novasamatech.github.io/test-runner/3476//#testresult/8467000aa8eb2d7c","status":"passed","time":{"start":1690632337992,"stop":1690632350517,"duration":12525}},{"uid":"c8ffc15101fafb2c","reportUrl":"https://novasamatech.github.io/test-runner/3475//#testresult/c8ffc15101fafb2c","status":"passed","time":{"start":1690617875269,"stop":1690617883608,"duration":8339}},{"uid":"cc54b344680854e6","reportUrl":"https://novasamatech.github.io/test-runner/3474//#testresult/cc54b344680854e6","status":"passed","time":{"start":1690603496292,"stop":1690603508296,"duration":12004}},{"uid":"a78b1eb9aff5c3f8","reportUrl":"https://novasamatech.github.io/test-runner/3473//#testresult/a78b1eb9aff5c3f8","status":"passed","time":{"start":1690589663387,"stop":1690589672999,"duration":9612}},{"uid":"37be49251faa2b2c","reportUrl":"https://novasamatech.github.io/test-runner/3472//#testresult/37be49251faa2b2c","status":"passed","time":{"start":1690574669477,"stop":1690574677424,"duration":7947}},{"uid":"79efa84f83a22339","reportUrl":"https://novasamatech.github.io/test-runner/3471//#testresult/79efa84f83a22339","status":"passed","time":{"start":1690560307953,"stop":1690560317388,"duration":9435}},{"uid":"3b920637e4b0a0bf","reportUrl":"https://novasamatech.github.io/test-runner/3470//#testresult/3b920637e4b0a0bf","status":"passed","time":{"start":1690545937896,"stop":1690545946733,"duration":8837}},{"uid":"a68142c6f3deed50","reportUrl":"https://novasamatech.github.io/test-runner/3469//#testresult/a68142c6f3deed50","status":"passed","time":{"start":1690531505371,"stop":1690531515757,"duration":10386}},{"uid":"1adfb0938cd3d93e","reportUrl":"https://novasamatech.github.io/test-runner/3468//#testresult/1adfb0938cd3d93e","status":"passed","time":{"start":1690517119042,"stop":1690517125288,"duration":6246}},{"uid":"deec3231e9cb0aaf","reportUrl":"https://novasamatech.github.io/test-runner/3467//#testresult/deec3231e9cb0aaf","status":"passed","time":{"start":1690503243500,"stop":1690503252980,"duration":9480}},{"uid":"6f343acba2c55e86","reportUrl":"https://novasamatech.github.io/test-runner/3466//#testresult/6f343acba2c55e86","status":"passed","time":{"start":1690488290414,"stop":1690488298254,"duration":7840}},{"uid":"40400847ad9fa438","reportUrl":"https://novasamatech.github.io/test-runner/3465//#testresult/40400847ad9fa438","status":"passed","time":{"start":1690473926557,"stop":1690473937515,"duration":10958}},{"uid":"bdf34d5be4dd6bd5","reportUrl":"https://novasamatech.github.io/test-runner/3464//#testresult/bdf34d5be4dd6bd5","status":"passed","time":{"start":1690459530737,"stop":1690459541125,"duration":10388}},{"uid":"4cab7a049e710736","reportUrl":"https://novasamatech.github.io/test-runner/3463//#testresult/4cab7a049e710736","status":"passed","time":{"start":1690445113665,"stop":1690445122568,"duration":8903}}]},"tags":[]},"source":"f03755eda4974f4b.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f6f2b5dfa30>"]}