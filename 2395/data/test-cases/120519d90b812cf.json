{"uid":"120519d90b812cf","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1675455327115,"stop":1675455327487,"duration":372},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e1314a30e7b1ac00","name":"stdout","source":"e1314a30e7b1ac00.txt","type":"text/plain","size":228}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az337-844"},{"name":"thread","value":"1718-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"741051091b363bec","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675455316561,"stop":1675455317006,"duration":445}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":75,"skipped":0,"passed":444,"unknown":0,"total":519},"items":[{"uid":"1b76d70c36c542d0","reportUrl":"https://nova-wallet.github.io/test-runner/2394//#testresult/1b76d70c36c542d0","status":"passed","time":{"start":1675441139748,"stop":1675441140240,"duration":492}},{"uid":"b668c24420f7b919","reportUrl":"https://nova-wallet.github.io/test-runner/2393//#testresult/b668c24420f7b919","status":"passed","time":{"start":1675427166675,"stop":1675427167269,"duration":594}},{"uid":"5b1a81366990ded3","reportUrl":"https://nova-wallet.github.io/test-runner/2392//#testresult/5b1a81366990ded3","status":"passed","time":{"start":1675412287931,"stop":1675412288593,"duration":662}},{"uid":"422e491ca2c9d1e9","reportUrl":"https://nova-wallet.github.io/test-runner/2391//#testresult/422e491ca2c9d1e9","status":"passed","time":{"start":1675397801428,"stop":1675397801806,"duration":378}},{"uid":"f433dc37f728d612","reportUrl":"https://nova-wallet.github.io/test-runner/2390//#testresult/f433dc37f728d612","status":"passed","time":{"start":1675386707241,"stop":1675386707821,"duration":580}},{"uid":"4215666b5c1b5fef","reportUrl":"https://nova-wallet.github.io/test-runner/2388//#testresult/4215666b5c1b5fef","status":"passed","time":{"start":1675354764507,"stop":1675354765077,"duration":570}},{"uid":"6548cf377d50601","reportUrl":"https://nova-wallet.github.io/test-runner/2387//#testresult/6548cf377d50601","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675340904320,"stop":1675340904805,"duration":485}},{"uid":"240aab6a7e80aae4","reportUrl":"https://nova-wallet.github.io/test-runner/2386//#testresult/240aab6a7e80aae4","status":"passed","time":{"start":1675325876684,"stop":1675325877293,"duration":609}},{"uid":"4c76813e90c11c8e","reportUrl":"https://nova-wallet.github.io/test-runner/2385//#testresult/4c76813e90c11c8e","status":"passed","time":{"start":1675311446653,"stop":1675311447053,"duration":400}},{"uid":"f7631c97eb514bfd","reportUrl":"https://nova-wallet.github.io/test-runner/2384//#testresult/f7631c97eb514bfd","status":"passed","time":{"start":1675300208184,"stop":1675300208718,"duration":534}},{"uid":"2a0b40d3ff7c971f","reportUrl":"https://nova-wallet.github.io/test-runner/2383//#testresult/2a0b40d3ff7c971f","status":"passed","time":{"start":1675282550199,"stop":1675282550816,"duration":617}},{"uid":"13abfe94cae20e00","reportUrl":"https://nova-wallet.github.io/test-runner/2381//#testresult/13abfe94cae20e00","status":"passed","time":{"start":1675254480099,"stop":1675254480685,"duration":586}},{"uid":"1fef485429539ba5","reportUrl":"https://nova-wallet.github.io/test-runner/2380//#testresult/1fef485429539ba5","status":"passed","time":{"start":1675239457019,"stop":1675239457417,"duration":398}},{"uid":"547269d00a892a83","reportUrl":"https://nova-wallet.github.io/test-runner/2379//#testresult/547269d00a892a83","status":"passed","time":{"start":1675225023366,"stop":1675225023963,"duration":597}},{"uid":"601243badba4f2e1","reportUrl":"https://nova-wallet.github.io/test-runner/2377//#testresult/601243badba4f2e1","status":"passed","time":{"start":1675196112041,"stop":1675196112692,"duration":651}},{"uid":"d2887ae1df380a9a","reportUrl":"https://nova-wallet.github.io/test-runner/2376//#testresult/d2887ae1df380a9a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675181973130,"stop":1675181973574,"duration":444}},{"uid":"cc420fdeafd0d248","reportUrl":"https://nova-wallet.github.io/test-runner/2375//#testresult/cc420fdeafd0d248","status":"passed","time":{"start":1675168004624,"stop":1675168005133,"duration":509}},{"uid":"df98021e78ffde9d","reportUrl":"https://nova-wallet.github.io/test-runner/2373//#testresult/df98021e78ffde9d","status":"passed","time":{"start":1675138599448,"stop":1675138600113,"duration":665}},{"uid":"fd78d4639d73fde3","reportUrl":"https://nova-wallet.github.io/test-runner/2372//#testresult/fd78d4639d73fde3","status":"passed","time":{"start":1675127573119,"stop":1675127573818,"duration":699}},{"uid":"fc08f935ad41a328","reportUrl":"https://nova-wallet.github.io/test-runner/2371//#testresult/fc08f935ad41a328","status":"passed","time":{"start":1675109669861,"stop":1675109670269,"duration":408}}]},"tags":[]},"source":"120519d90b812cf.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}