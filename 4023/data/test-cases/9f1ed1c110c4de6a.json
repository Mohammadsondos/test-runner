{"uid":"9f1ed1c110c4de6a","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1698350608564,"stop":1698350609704,"duration":1140},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fdb01bde140>\nchain = <scripts.utils.chain_model.Chain object at 0x7fdb01e36d40>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fdb01bde140>\nchain = <scripts.utils.chain_model.Chain object at 0x7fdb01e36d40>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"ac149fd96173cba6","name":"stdout","source":"ac149fd96173cba6.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az414-664"},{"name":"thread","value":"2241-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fdb01e36d40>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"797367f814f89ba8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698350592048,"stop":1698350593530,"duration":1482}},{"uid":"db06ae392a5949c2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698350575142,"stop":1698350576996,"duration":1854}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":364,"unknown":0,"total":382},"items":[{"uid":"6889d504f25f123","reportUrl":"https://novasamatech.github.io/test-runner/4022//#testresult/6889d504f25f123","status":"passed","time":{"start":1698336163750,"stop":1698336168003,"duration":4253}},{"uid":"74977aef9e87f50e","reportUrl":"https://novasamatech.github.io/test-runner/4021//#testresult/74977aef9e87f50e","status":"passed","time":{"start":1698321763423,"stop":1698321773982,"duration":10559}},{"uid":"7e97331376fdf9a4","reportUrl":"https://novasamatech.github.io/test-runner/4020//#testresult/7e97331376fdf9a4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698307404783,"stop":1698307405957,"duration":1174}},{"uid":"24f2ead44807df59","reportUrl":"https://novasamatech.github.io/test-runner/4019//#testresult/24f2ead44807df59","status":"passed","time":{"start":1698292964380,"stop":1698292969877,"duration":5497}},{"uid":"65bd1cb672c57037","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/65bd1cb672c57037","status":"passed","time":{"start":1698278641034,"stop":1698278646525,"duration":5491}},{"uid":"4352c4648b04c91a","reportUrl":"https://novasamatech.github.io/test-runner/4017//#testresult/4352c4648b04c91a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698264189842,"stop":1698264190893,"duration":1051}},{"uid":"af1a7ab03e21c364","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/af1a7ab03e21c364","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698249818991,"stop":1698249820554,"duration":1563}},{"uid":"416218e8abdb9236","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/416218e8abdb9236","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698235409862,"stop":1698235411014,"duration":1152}},{"uid":"7db0ee09ad7fd53a","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/7db0ee09ad7fd53a","status":"passed","time":{"start":1698220985187,"stop":1698220989935,"duration":4748}},{"uid":"b875ad0005eb9c54","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/b875ad0005eb9c54","status":"passed","time":{"start":1698206553342,"stop":1698206558666,"duration":5324}},{"uid":"59e10e225a6dcdf5","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/59e10e225a6dcdf5","status":"passed","time":{"start":1698192184884,"stop":1698192192780,"duration":7896}},{"uid":"c3e1e8896dddcf5d","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/c3e1e8896dddcf5d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698177765357,"stop":1698177766342,"duration":985}},{"uid":"53e27f40c757f9a","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/53e27f40c757f9a","status":"passed","time":{"start":1698163373195,"stop":1698163378979,"duration":5784}},{"uid":"dc1888613480bb21","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/dc1888613480bb21","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698148996159,"stop":1698148996997,"duration":838}},{"uid":"c1161233f02cf4e1","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/c1161233f02cf4e1","status":"passed","time":{"start":1698120184262,"stop":1698120192687,"duration":8425}},{"uid":"8325ad02a373a5b4","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/8325ad02a373a5b4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698134592864,"stop":1698134593834,"duration":970}},{"uid":"b4e4cc2945721fc9","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/b4e4cc2945721fc9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698105831705,"stop":1698105832455,"duration":750}},{"uid":"8d1a510239b6962","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/8d1a510239b6962","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698091384793,"stop":1698091385823,"duration":1030}},{"uid":"3593f52af783c28e","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/3593f52af783c28e","status":"passed","time":{"start":1698076982867,"stop":1698076986830,"duration":3963}},{"uid":"62492ca5f7df7bfc","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/62492ca5f7df7bfc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062618973,"stop":1698062620778,"duration":1805}}]},"tags":[]},"source":"9f1ed1c110c4de6a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fdb01e36d40>"]}