{"uid":"9bcc18baeaea3dbe","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1687939543046,"stop":1687939543367,"duration":321},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0777f74430>\nchain = <scripts.utils.chain_model.Chain object at 0x7f077c2dcca0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0777f74430>\nchain = <scripts.utils.chain_model.Chain object at 0x7f077c2dcca0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"9787a4d987a362ee","name":"stdout","source":"9787a4d987a362ee.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az397-542"},{"name":"thread","value":"1892-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f077c2dcca0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cf55b85fc9c2d850","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687939527704,"stop":1687939528019,"duration":315}},{"uid":"e723f276faa7cca1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687939511723,"stop":1687939512651,"duration":928}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":72,"skipped":0,"passed":220,"unknown":0,"total":292},"items":[{"uid":"d5d17f449a75da39","reportUrl":"https://novasamatech.github.io/test-runner/3288//#testresult/d5d17f449a75da39","status":"passed","time":{"start":1687925113543,"stop":1687925119545,"duration":6002}},{"uid":"f3c72d886925f9ef","reportUrl":"https://novasamatech.github.io/test-runner/3287//#testresult/f3c72d886925f9ef","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687911488035,"stop":1687911488256,"duration":221}},{"uid":"1e65781b4b6e2691","reportUrl":"https://novasamatech.github.io/test-runner/3286//#testresult/1e65781b4b6e2691","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687896383885,"stop":1687896384265,"duration":380}},{"uid":"4e8220c8eb157a60","reportUrl":"https://novasamatech.github.io/test-runner/3285//#testresult/4e8220c8eb157a60","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687881923388,"stop":1687881923579,"duration":191}},{"uid":"579a293e5a1e34c3","reportUrl":"https://novasamatech.github.io/test-runner/3284//#testresult/579a293e5a1e34c3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687867597822,"stop":1687867598179,"duration":357}},{"uid":"fa0aae507940e942","reportUrl":"https://novasamatech.github.io/test-runner/3283//#testresult/fa0aae507940e942","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687853150504,"stop":1687853150927,"duration":423}},{"uid":"380e755645c0ab1f","reportUrl":"https://novasamatech.github.io/test-runner/3282//#testresult/380e755645c0ab1f","status":"passed","time":{"start":1687838697701,"stop":1687838706443,"duration":8742}},{"uid":"d4375d7e1d565611","reportUrl":"https://novasamatech.github.io/test-runner/3281//#testresult/d4375d7e1d565611","status":"passed","time":{"start":1687825001342,"stop":1687825011908,"duration":10566}},{"uid":"43c0df59fce8860d","reportUrl":"https://novasamatech.github.io/test-runner/3280//#testresult/43c0df59fce8860d","status":"passed","time":{"start":1687809925077,"stop":1687809928903,"duration":3826}},{"uid":"2314f32fb30170c5","reportUrl":"https://novasamatech.github.io/test-runner/3279//#testresult/2314f32fb30170c5","status":"passed","time":{"start":1687795499072,"stop":1687795508327,"duration":9255}},{"uid":"a62ebbc5724577e9","reportUrl":"https://novasamatech.github.io/test-runner/3241//#testresult/a62ebbc5724577e9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687248363685,"stop":1687248364209,"duration":524}},{"uid":"d091a5e6ca57e7d0","reportUrl":"https://novasamatech.github.io/test-runner/3240//#testresult/d091a5e6ca57e7d0","status":"passed","time":{"start":1687233894996,"stop":1687233902035,"duration":7039}},{"uid":"cbbd92186ee074f7","reportUrl":"https://novasamatech.github.io/test-runner/3239//#testresult/cbbd92186ee074f7","status":"passed","time":{"start":1687220004884,"stop":1687220015948,"duration":11064}},{"uid":"3f1b5f7de9899cd4","reportUrl":"https://novasamatech.github.io/test-runner/3238//#testresult/3f1b5f7de9899cd4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687205135832,"stop":1687205136306,"duration":474}},{"uid":"31927ef13c412345","reportUrl":"https://novasamatech.github.io/test-runner/3237//#testresult/31927ef13c412345","status":"passed","time":{"start":1687190690139,"stop":1687190692216,"duration":2077}},{"uid":"ae48ac05d031af4b","reportUrl":"https://novasamatech.github.io/test-runner/3236//#testresult/ae48ac05d031af4b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687176416225,"stop":1687176416555,"duration":330}},{"uid":"889fcdd2f201d9c1","reportUrl":"https://novasamatech.github.io/test-runner/3235//#testresult/889fcdd2f201d9c1","status":"passed","time":{"start":1687161897894,"stop":1687161907369,"duration":9475}},{"uid":"5d5ca2f627a4f472","reportUrl":"https://novasamatech.github.io/test-runner/3234//#testresult/5d5ca2f627a4f472","status":"passed","time":{"start":1687147494170,"stop":1687147503173,"duration":9003}},{"uid":"cd310ac72cc132bf","reportUrl":"https://novasamatech.github.io/test-runner/3233//#testresult/cd310ac72cc132bf","status":"passed","time":{"start":1687133718755,"stop":1687133728333,"duration":9578}},{"uid":"a73f9a2035101fe8","reportUrl":"https://novasamatech.github.io/test-runner/3232//#testresult/a73f9a2035101fe8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687118706757,"stop":1687118706955,"duration":198}}]},"tags":[]},"source":"9bcc18baeaea3dbe.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f077c2dcca0>"]}