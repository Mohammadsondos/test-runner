{"uid":"bd5d40319018e54c","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1695715420075,"stop":1695715420888,"duration":813},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9e3abe0a00>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9e3ae23be0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9e3abe0a00>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9e3ae23be0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"54b486e8e46b043","name":"stdout","source":"54b486e8e46b043.txt","type":"text/plain","size":711}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1235-697"},{"name":"thread","value":"2041-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9e3ae23be0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3b11bae649cfef6e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695715403864,"stop":1695715405026,"duration":1162}},{"uid":"1783c95178344f6e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695715387862,"stop":1695715388831,"duration":969}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":27,"skipped":0,"passed":170,"unknown":0,"total":197},"items":[{"uid":"b3f7d0ddecbe2c7a","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/b3f7d0ddecbe2c7a","status":"passed","time":{"start":1695700943205,"stop":1695700946983,"duration":3778}},{"uid":"1d8fcb243c5afa87","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/1d8fcb243c5afa87","status":"passed","time":{"start":1695686599804,"stop":1695686605690,"duration":5886}},{"uid":"b745a5b666181d27","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/b745a5b666181d27","status":"passed","time":{"start":1695672181640,"stop":1695672186805,"duration":5165}},{"uid":"c0e0af98fbc391dc","reportUrl":"https://novasamatech.github.io/test-runner/3834//#testresult/c0e0af98fbc391dc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695657787466,"stop":1695657788471,"duration":1005}},{"uid":"d346670173a18e2d","reportUrl":"https://novasamatech.github.io/test-runner/3833//#testresult/d346670173a18e2d","status":"passed","time":{"start":1695643422717,"stop":1695643428218,"duration":5501}},{"uid":"e9f21a0889361993","reportUrl":"https://novasamatech.github.io/test-runner/3832//#testresult/e9f21a0889361993","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695628983710,"stop":1695628984830,"duration":1120}},{"uid":"42a44e63ad0ce7f","reportUrl":"https://novasamatech.github.io/test-runner/3831//#testresult/42a44e63ad0ce7f","status":"passed","time":{"start":1695614545847,"stop":1695614548956,"duration":3109}},{"uid":"88a192e4b2f0c21e","reportUrl":"https://novasamatech.github.io/test-runner/3830//#testresult/88a192e4b2f0c21e","status":"passed","time":{"start":1695600200655,"stop":1695600204185,"duration":3530}},{"uid":"25d84b5c793e299","reportUrl":"https://novasamatech.github.io/test-runner/3829//#testresult/25d84b5c793e299","status":"passed","time":{"start":1695585743720,"stop":1695585748630,"duration":4910}},{"uid":"ccf872bc1875c63a","reportUrl":"https://novasamatech.github.io/test-runner/3828//#testresult/ccf872bc1875c63a","status":"passed","time":{"start":1695571394622,"stop":1695571400558,"duration":5936}},{"uid":"11d4b969836b5b3f","reportUrl":"https://novasamatech.github.io/test-runner/3827//#testresult/11d4b969836b5b3f","status":"passed","time":{"start":1695556982562,"stop":1695556988464,"duration":5902}},{"uid":"62539c586d2be669","reportUrl":"https://novasamatech.github.io/test-runner/3826//#testresult/62539c586d2be669","status":"passed","time":{"start":1695542623342,"stop":1695542630244,"duration":6902}},{"uid":"5f8e74ef21d75a57","reportUrl":"https://novasamatech.github.io/test-runner/3825//#testresult/5f8e74ef21d75a57","status":"passed","time":{"start":1695528143284,"stop":1695528147716,"duration":4432}},{"uid":"2a8fa41b4aa4d87d","reportUrl":"https://novasamatech.github.io/test-runner/3824//#testresult/2a8fa41b4aa4d87d","status":"passed","time":{"start":1695513787101,"stop":1695513790252,"duration":3151}},{"uid":"456445626991b084","reportUrl":"https://novasamatech.github.io/test-runner/3823//#testresult/456445626991b084","status":"passed","time":{"start":1695499357557,"stop":1695499361940,"duration":4383}},{"uid":"895ae25e22d6ecd3","reportUrl":"https://novasamatech.github.io/test-runner/3822//#testresult/895ae25e22d6ecd3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695484978002,"stop":1695484979306,"duration":1304}},{"uid":"343977cb5d9a63b4","reportUrl":"https://novasamatech.github.io/test-runner/3821//#testresult/343977cb5d9a63b4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695470576456,"stop":1695470577578,"duration":1122}},{"uid":"437c40f2048af62d","reportUrl":"https://novasamatech.github.io/test-runner/3820//#testresult/437c40f2048af62d","status":"passed","time":{"start":1695456148384,"stop":1695456152743,"duration":4359}},{"uid":"86736271923532d6","reportUrl":"https://novasamatech.github.io/test-runner/3819//#testresult/86736271923532d6","status":"passed","time":{"start":1695441733625,"stop":1695441739233,"duration":5608}},{"uid":"53624f7bfc7025b1","reportUrl":"https://novasamatech.github.io/test-runner/3818//#testresult/53624f7bfc7025b1","status":"passed","time":{"start":1695427404651,"stop":1695427409726,"duration":5075}}]},"tags":[]},"source":"bd5d40319018e54c.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9e3ae23be0>"]}