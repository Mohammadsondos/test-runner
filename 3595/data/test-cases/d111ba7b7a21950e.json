{"uid":"d111ba7b7a21950e","name":"test_chainId[Test for Hashed Network]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"1fc348901d77863f5be9cd9da95e4145","time":{"start":1692302752767,"stop":1692302753142,"duration":375},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f1c5adff9a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f1c5b3e7580>\n\n    def test_chainId(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f1c5adff9a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f1c5b3e7580>\n\n    def test_chainId(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"37081e36b1a80da1","name":"stdout","source":"37081e36b1a80da1.txt","type":"text/plain","size":1857}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az1233-226"},{"name":"thread","value":"2049-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f1c5b3e7580>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"194223cdbafe03fe","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692302737040,"stop":1692302737728,"duration":688}},{"uid":"5b8add5079b8b012","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692302720714,"stop":1692302721737,"duration":1023}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":110,"skipped":0,"passed":489,"unknown":0,"total":599},"items":[{"uid":"8b88eb1395ae96a1","reportUrl":"https://novasamatech.github.io/test-runner/3593//#testresult/8b88eb1395ae96a1","status":"passed","time":{"start":1692273962372,"stop":1692273975016,"duration":12644}},{"uid":"457778958f6f1b7f","reportUrl":"https://novasamatech.github.io/test-runner/3592//#testresult/457778958f6f1b7f","status":"passed","time":{"start":1692259511905,"stop":1692259522951,"duration":11046}},{"uid":"9ad394193f2d74b5","reportUrl":"https://novasamatech.github.io/test-runner/3591//#testresult/9ad394193f2d74b5","status":"passed","time":{"start":1692245082624,"stop":1692245090100,"duration":7476}},{"uid":"902ff4e04f0de63b","reportUrl":"https://novasamatech.github.io/test-runner/3590//#testresult/902ff4e04f0de63b","status":"passed","time":{"start":1692231168178,"stop":1692231177840,"duration":9662}},{"uid":"cf46b5d3ece129","reportUrl":"https://novasamatech.github.io/test-runner/3589//#testresult/cf46b5d3ece129","status":"passed","time":{"start":1692216292259,"stop":1692216304095,"duration":11836}},{"uid":"23a5447d299f655d","reportUrl":"https://novasamatech.github.io/test-runner/3588//#testresult/23a5447d299f655d","status":"passed","time":{"start":1692201911105,"stop":1692201918538,"duration":7433}},{"uid":"d9c49300cc6fff76","reportUrl":"https://novasamatech.github.io/test-runner/3587//#testresult/d9c49300cc6fff76","status":"passed","time":{"start":1692187541992,"stop":1692187550469,"duration":8477}},{"uid":"c0d5239239e1f845","reportUrl":"https://novasamatech.github.io/test-runner/3586//#testresult/c0d5239239e1f845","status":"passed","time":{"start":1692173135401,"stop":1692173149434,"duration":14033}},{"uid":"b2ef0f2e23dbd424","reportUrl":"https://novasamatech.github.io/test-runner/3585//#testresult/b2ef0f2e23dbd424","status":"passed","time":{"start":1692158715199,"stop":1692158726932,"duration":11733}},{"uid":"d9ef575ff60708e2","reportUrl":"https://novasamatech.github.io/test-runner/3584//#testresult/d9ef575ff60708e2","status":"passed","time":{"start":1692144794119,"stop":1692144804414,"duration":10295}},{"uid":"fb4b04ddde019fdd","reportUrl":"https://novasamatech.github.io/test-runner/3583//#testresult/fb4b04ddde019fdd","status":"passed","time":{"start":1692129916237,"stop":1692129927291,"duration":11054}},{"uid":"d49f467dd1be272f","reportUrl":"https://novasamatech.github.io/test-runner/3582//#testresult/d49f467dd1be272f","status":"passed","time":{"start":1692115518416,"stop":1692115529392,"duration":10976}},{"uid":"7cd1222d468f7eba","reportUrl":"https://novasamatech.github.io/test-runner/3581//#testresult/7cd1222d468f7eba","status":"passed","time":{"start":1692101133193,"stop":1692101139803,"duration":6610}},{"uid":"cdd0f2c3d442b623","reportUrl":"https://novasamatech.github.io/test-runner/3580//#testresult/cdd0f2c3d442b623","status":"passed","time":{"start":1692086706713,"stop":1692086714869,"duration":8156}},{"uid":"445f5cd20f2a95b5","reportUrl":"https://novasamatech.github.io/test-runner/3579//#testresult/445f5cd20f2a95b5","status":"passed","time":{"start":1692072303555,"stop":1692072316730,"duration":13175}},{"uid":"9a349fe7aabc7342","reportUrl":"https://novasamatech.github.io/test-runner/3578//#testresult/9a349fe7aabc7342","status":"passed","time":{"start":1692058394940,"stop":1692058406794,"duration":11854}},{"uid":"ebd2872f0255b9c8","reportUrl":"https://novasamatech.github.io/test-runner/3577//#testresult/ebd2872f0255b9c8","status":"passed","time":{"start":1692043519484,"stop":1692043527241,"duration":7757}},{"uid":"ec7bc5d4e9b6da3f","reportUrl":"https://novasamatech.github.io/test-runner/3576//#testresult/ec7bc5d4e9b6da3f","status":"passed","time":{"start":1692029096402,"stop":1692029105906,"duration":9504}},{"uid":"fa0ea69db10dffbd","reportUrl":"https://novasamatech.github.io/test-runner/3575//#testresult/fa0ea69db10dffbd","status":"passed","time":{"start":1692014798511,"stop":1692014806477,"duration":7966}},{"uid":"206e928418393baa","reportUrl":"https://novasamatech.github.io/test-runner/3574//#testresult/206e928418393baa","status":"passed","time":{"start":1692000331209,"stop":1692000340756,"duration":9547}}]},"tags":[]},"source":"d111ba7b7a21950e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f1c5b3e7580>"]}