{"uid":"ef79a5e8be0c5dbd","name":"test_precision[Test for Tinkernet]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"08d39601ce4d010f5953583f85a400f9","time":{"start":1665381038575,"stop":1665381039752,"duration":1177},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0e9ea4c820>\nchain = <tests.utils.chain_model.Chain object at 0x7f0e9ef63e20>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0e9ef63e20>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0e9ea4c820>\nchain = <tests.utils.chain_model.Chain object at 0x7f0e9ef63e20>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0e9ef63e20>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"d92c50a4d384905f","name":"stdout","source":"d92c50a4d384905f.txt","type":"text/plain","size":54}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az91-441"},{"name":"thread","value":"1621-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f0e9ef63e20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5e205076ffc8f7b4","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Tinkernet","time":{"start":1665381027378,"stop":1665381028559,"duration":1181}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"ee9ba1a5e1fa570b","reportUrl":"https://nova-wallet.github.io/test-runner/21//#testresult/ee9ba1a5e1fa570b","status":"passed","time":{"start":1665378478204,"stop":1665378478204,"duration":0}}]},"tags":[]},"source":"ef79a5e8be0c5dbd.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f0e9ef63e20>"]}