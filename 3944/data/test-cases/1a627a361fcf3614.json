{"uid":"1a627a361fcf3614","name":"test_has_new_assets[Test for Bit.Country Pioneer]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"27cc2974be60c7bc903ced5d5eb236e9","time":{"start":1697227868782,"stop":1697228049790,"duration":181008},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f00da036c80>\nchain = <scripts.utils.chain_model.Chain object at 0x7f00da035ba0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f00da036c80>\nchain = <scripts.utils.chain_model.Chain object at 0x7f00da035ba0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"fdc75ea0181a3f38","name":"stdout","source":"fdc75ea0181a3f38.txt","type":"text/plain","size":639}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az749-858"},{"name":"thread","value":"2225-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f00da035ba0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b8c2edbb458a672f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697227552902,"stop":1697227853752,"duration":300850}},{"uid":"27f74e39238bc553","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697227296969,"stop":1697227537871,"duration":240902}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":298,"unknown":0,"total":303},"items":[{"uid":"f2a94da821880051","reportUrl":"https://novasamatech.github.io/test-runner/3943//#testresult/f2a94da821880051","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697213468180,"stop":1697213589085,"duration":120905}},{"uid":"b4f71e7eb54db8ac","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/b4f71e7eb54db8ac","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697198776992,"stop":1697199077706,"duration":300714}},{"uid":"4673530477fc8c88","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/4673530477fc8c88","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697184490952,"stop":1697184671666,"duration":180714}},{"uid":"25c774dfd2e5ea25","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/25c774dfd2e5ea25","status":"passed","time":{"start":1697169707075,"stop":1697169714369,"duration":7294}},{"uid":"3d7823a5d3e7d6","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/3d7823a5d3e7d6","status":"passed","time":{"start":1697155338832,"stop":1697155345101,"duration":6269}},{"uid":"ceaa6f6610b6bbc1","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/ceaa6f6610b6bbc1","status":"passed","time":{"start":1697140891669,"stop":1697140897787,"duration":6118}},{"uid":"d18896f99e98881e","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/d18896f99e98881e","status":"passed","time":{"start":1697126494096,"stop":1697126498714,"duration":4618}},{"uid":"f3b89c9813f0be0a","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/f3b89c9813f0be0a","status":"passed","time":{"start":1697112094583,"stop":1697112099755,"duration":5172}},{"uid":"c997a532bd60b1cb","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/c997a532bd60b1cb","status":"passed","time":{"start":1697097695415,"stop":1697097700393,"duration":4978}},{"uid":"7c671d906a719312","reportUrl":"https://novasamatech.github.io/test-runner/3934//#testresult/7c671d906a719312","status":"passed","time":{"start":1697083293142,"stop":1697083298636,"duration":5494}},{"uid":"a6320ad7f870570f","reportUrl":"https://novasamatech.github.io/test-runner/3933//#testresult/a6320ad7f870570f","status":"passed","time":{"start":1697068963362,"stop":1697068969805,"duration":6443}},{"uid":"fe0d4c76e740cdb1","reportUrl":"https://novasamatech.github.io/test-runner/3932//#testresult/fe0d4c76e740cdb1","status":"passed","time":{"start":1697054493416,"stop":1697054498787,"duration":5371}},{"uid":"721300c57b8f6288","reportUrl":"https://novasamatech.github.io/test-runner/3931//#testresult/721300c57b8f6288","status":"passed","time":{"start":1697040108847,"stop":1697040115954,"duration":7107}},{"uid":"7e1d7c5aa2aa7b21","reportUrl":"https://novasamatech.github.io/test-runner/3930//#testresult/7e1d7c5aa2aa7b21","status":"passed","time":{"start":1697025695330,"stop":1697025699854,"duration":4524}},{"uid":"b6dc6281947dd082","reportUrl":"https://novasamatech.github.io/test-runner/3929//#testresult/b6dc6281947dd082","status":"passed","time":{"start":1697011308183,"stop":1697011314912,"duration":6729}},{"uid":"a1c0c2e099cc2771","reportUrl":"https://novasamatech.github.io/test-runner/3928//#testresult/a1c0c2e099cc2771","status":"passed","time":{"start":1696996901687,"stop":1696996908461,"duration":6774}},{"uid":"daef33c51660280","reportUrl":"https://novasamatech.github.io/test-runner/3927//#testresult/daef33c51660280","status":"passed","time":{"start":1696982537783,"stop":1696982544098,"duration":6315}},{"uid":"c2beaba04542dfaf","reportUrl":"https://novasamatech.github.io/test-runner/3926//#testresult/c2beaba04542dfaf","status":"passed","time":{"start":1696968099699,"stop":1696968105116,"duration":5417}},{"uid":"6c996fc792a6bc24","reportUrl":"https://novasamatech.github.io/test-runner/3925//#testresult/6c996fc792a6bc24","status":"passed","time":{"start":1696953691466,"stop":1696953698153,"duration":6687}},{"uid":"2b2afa8c11706afc","reportUrl":"https://novasamatech.github.io/test-runner/3924//#testresult/2b2afa8c11706afc","status":"passed","time":{"start":1696939299363,"stop":1696939306771,"duration":7408}}]},"tags":[]},"source":"1a627a361fcf3614.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f00da035ba0>"]}