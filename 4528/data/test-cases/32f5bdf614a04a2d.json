{"uid":"32f5bdf614a04a2d","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://api.securerpc.com/v1]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"5f51e5f09562d64cd0497442c6c29430","time":{"start":1705478465335,"stop":1705478465508,"duration":173},"status":"broken","statusMessage":"ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f18c404d1e0>\ndata = {'name': 'Ethereum', 'url': 'https://api.securerpc.com/v1'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n        assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Get the latest block number from nodes\n>       rpc_block_number = w3_rpc.eth.block_number\n\ntests/test_eth_nodes_availability.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:133: in block_number\n    return self.get_block_number()\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'error': {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries e...fely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}, 'id': 1, 'jsonrpc': '2.0'}\nparams = (), error_formatters = <cyfunction identity at 0x7f18c62a6400>\nnull_result_formatters = <cyfunction identity at 0x7f18c62a6400>\n\n    @staticmethod\n    def formatted_response(\n        response: RPCResponse,\n        params: Any,\n        error_formatters: Optional[Callable[..., Any]] = None,\n        null_result_formatters: Optional[Callable[..., Any]] = None,\n    ) -> Any:\n        if \"error\" in response:\n            apply_error_formatters(error_formatters, response)\n    \n            # guard against eth-tester case - eth-tester returns a string\n            # with no code, so can't parse what the error is.\n            if isinstance(response[\"error\"], dict):\n                resp_code = response[\"error\"].get(\"code\")\n                if resp_code == -32601:\n                    raise MethodUnavailable(response[\"error\"])\n>           raise ValueError(response[\"error\"])\nE           ValueError: {'code': 429, 'message': 'Your app has exceeded its compute units per second capacity. If you have retries enabled, you can safely ignore this message. If not, check out https://docs.alchemy.com/reference/throughput'}\n\n.venv/lib/python3.10/site-packages/web3/manager.py:205: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az847-649"},{"name":"thread","value":"2068-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"32f5bdf614a04a2d.json","parameterValues":["{'url': 'https://api.securerpc.com/v1', 'name': 'Ethereum'}"]}