{"uid":"545cf21ed43e2b97","name":"test_can_create_connection[Test for Polkadot, url: wss://polkadot.public.curie.radiumblock.co/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"59cf4f1f08e482052dea36d71b101242","time":{"start":1705694480159,"stop":1705694480159,"duration":0},"status":"broken","statusMessage":"substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Polkadot, url: wss://polkadot.public.curie.radiumblock.co/ws]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n        connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n>       execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=get_properties,\n            args=(connection,),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when getting properties: {data[\"url\"]}'\n        )\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:22: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2133: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2107: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7f5ff26390c0>\nblock_hash = '0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20'\nblock_id = None\n\n    def init_runtime(self, block_hash=None, block_id=None):\n        \"\"\"\n        This method is used by all other methods that deals with metadata and types defined in the type registry.\n        It optionally retrieves the block_hash when block_id is given and sets the applicable metadata for that\n        block_hash. Also it applies all the versioned types at the time of the block_hash.\n    \n        Because parsing of metadata and type registry is quite heavy, the result will be cached per runtime id.\n        In the future there could be support for caching backends like Redis to make this cache more persistent.\n    \n        Parameters\n        ----------\n        block_hash\n        block_id\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if block_id and block_hash:\n            raise ValueError('Cannot provide block_hash and block_id at the same time')\n    \n        # Check if runtime state already set to current block\n        if (block_hash and block_hash == self.block_hash) or (block_id and block_id == self.block_id):\n            return\n    \n        if block_id is not None:\n            block_hash = self.get_block_hash(block_id)\n    \n        if not block_hash:\n            block_hash = self.get_chain_head()\n    \n        self.block_hash = block_hash\n        self.block_id = block_id\n    \n        # In fact calls and storage functions are decoded against runtime of previous block, therefor retrieve\n        # metadata and apply type registry of runtime of parent block\n        block_header = self.rpc_request('chain_getHeader', [self.block_hash])\n    \n        if block_header['result'] is None:\n>           raise BlockNotFound(f'Block not found for \"{self.block_hash}\"')\nE           substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:658: BlockNotFound","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1705694468955,"stop":1705694469438,"duration":483},"status":"broken","statusMessage":"substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 35, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 22, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 658, in init_runtime\n    raise BlockNotFound(f'Block not found for \"{self.block_hash}\"')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705694474855,"stop":1705694475092,"duration":237},"status":"broken","statusMessage":"substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 35, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 22, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 658, in init_runtime\n    raise BlockNotFound(f'Block not found for \"{self.block_hash}\"')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705694480159,"stop":1705694480369,"duration":210},"status":"broken","statusMessage":"substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 35, in connection_by_url\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 22, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 658, in init_runtime\n    raise BlockNotFound(f'Block not found for \"{self.block_hash}\"')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az651-257"},{"name":"thread","value":"2066-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://polkadot.public.curie.radiumblock.co/ws', 'name': 'Polkadot'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"28a00b8dbbabc4ba","status":"broken","statusDetails":"substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"","time":{"start":1705694474855,"stop":1705694474855,"duration":0}},{"uid":"6b473528914444b7","status":"broken","statusDetails":"substrateinterface.exceptions.BlockNotFound: Block not found for \"0xa263f60ab461a5efcf851290cb215f859d65f31b81c966e3806eb22f4fd21a20\"","time":{"start":1705694468953,"stop":1705694468953,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":100,"skipped":0,"passed":6,"unknown":0,"total":106},"items":[{"uid":"3b41a032d9b3f040","reportUrl":"https://novasamatech.github.io/test-runner/4543//#testresult/3b41a032d9b3f040","status":"passed","time":{"start":1705680073995,"stop":1705680073995,"duration":0}},{"uid":"32ba16773246440d","reportUrl":"https://novasamatech.github.io/test-runner/4542//#testresult/32ba16773246440d","status":"passed","time":{"start":1705665680539,"stop":1705665680540,"duration":1}},{"uid":"f51203383f1654e0","reportUrl":"https://novasamatech.github.io/test-runner/4541//#testresult/f51203383f1654e0","status":"passed","time":{"start":1705655546064,"stop":1705655546065,"duration":1}},{"uid":"56d0eb43ddb81c6a","reportUrl":"https://novasamatech.github.io/test-runner/4540//#testresult/56d0eb43ddb81c6a","status":"passed","time":{"start":1705651273550,"stop":1705651273550,"duration":0}},{"uid":"cade02dc996b69db","reportUrl":"https://novasamatech.github.io/test-runner/4539//#testresult/cade02dc996b69db","status":"passed","time":{"start":1705636872795,"stop":1705636872795,"duration":0}},{"uid":"de3bd6dd071a9553","reportUrl":"https://novasamatech.github.io/test-runner/4538//#testresult/de3bd6dd071a9553","status":"passed","time":{"start":1705622523032,"stop":1705622523032,"duration":0}},{"uid":"74ebf86b5b75d5be","reportUrl":"https://novasamatech.github.io/test-runner/4537//#testresult/74ebf86b5b75d5be","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705608225435,"stop":1705608225435,"duration":0}},{"uid":"184119596484f20d","reportUrl":"https://novasamatech.github.io/test-runner/4536//#testresult/184119596484f20d","status":"broken","statusDetails":"AttributeError: 'str' object has no attribute 'get'","time":{"start":1705600085631,"stop":1705600085631,"duration":0}},{"uid":"a717483675ba5d61","reportUrl":"https://novasamatech.github.io/test-runner/4535//#testresult/a717483675ba5d61","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705594393332,"stop":1705594393332,"duration":0}},{"uid":"3558f046d654a1ec","reportUrl":"https://novasamatech.github.io/test-runner/4533//#testresult/3558f046d654a1ec","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705550613781,"stop":1705550613781,"duration":0}},{"uid":"ed6f4aa98233f07f","reportUrl":"https://novasamatech.github.io/test-runner/4532//#testresult/ed6f4aa98233f07f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705536265127,"stop":1705536265127,"duration":0}},{"uid":"e1fbb852b6210fc0","reportUrl":"https://novasamatech.github.io/test-runner/4531//#testresult/e1fbb852b6210fc0","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705521886011,"stop":1705521886011,"duration":0}},{"uid":"db25f8f8d8ad42dd","reportUrl":"https://novasamatech.github.io/test-runner/4530//#testresult/db25f8f8d8ad42dd","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705507423681,"stop":1705507423681,"duration":0}},{"uid":"c41fcf4027129b78","reportUrl":"https://novasamatech.github.io/test-runner/4529//#testresult/c41fcf4027129b78","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705493027058,"stop":1705493027058,"duration":0}},{"uid":"1d65e9f8e2420ca8","reportUrl":"https://novasamatech.github.io/test-runner/4528//#testresult/1d65e9f8e2420ca8","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705478620548,"stop":1705478620548,"duration":0}},{"uid":"29a4a78948991342","reportUrl":"https://novasamatech.github.io/test-runner/4527//#testresult/29a4a78948991342","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705464220974,"stop":1705464220974,"duration":0}},{"uid":"4f5579bf1c034854","reportUrl":"https://novasamatech.github.io/test-runner/4526//#testresult/4f5579bf1c034854","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705449864239,"stop":1705449864239,"duration":0}},{"uid":"ae2ef7d2a8bdcc50","reportUrl":"https://novasamatech.github.io/test-runner/4525//#testresult/ae2ef7d2a8bdcc50","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705435418807,"stop":1705435418807,"duration":0}},{"uid":"f590ae588fe8cb33","reportUrl":"https://novasamatech.github.io/test-runner/4524//#testresult/f590ae588fe8cb33","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705421019364,"stop":1705421019364,"duration":0}},{"uid":"83b029557b3b66ac","reportUrl":"https://novasamatech.github.io/test-runner/4523//#testresult/83b029557b3b66ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705406622382,"stop":1705406622382,"duration":0}}]},"tags":[]},"source":"545cf21ed43e2b97.json","parameterValues":["{'url': 'wss://polkadot.public.curie.radiumblock.co/ws', 'name': 'Polkadot'}"]}