{"uid":"960748732ebcaed0","name":"test_can_create_connection[Test for Pichiu, url: wss://pichiu.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5d38ef88a22293e2d22b76dd74c65b9f","time":{"start":1672848352297,"stop":1672848405247,"duration":52950},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3b428a2029470e79","name":"stdout","source":"3b428a2029470e79.txt","type":"text/plain","size":230}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az268-978"},{"name":"thread","value":"1732-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ffa7748ed3b1bee4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK","time":{"start":1672848311762,"stop":1672848342163,"duration":30401}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":424,"unknown":0,"total":480},"items":[{"uid":"12a60ac9c02390b9","reportUrl":"https://nova-wallet.github.io/test-runner/2211//#testresult/12a60ac9c02390b9","status":"passed","time":{"start":1672833929412,"stop":1672833929729,"duration":317}},{"uid":"54d76c11ceca453","reportUrl":"https://nova-wallet.github.io/test-runner/2210//#testresult/54d76c11ceca453","status":"passed","time":{"start":1672819490254,"stop":1672819490413,"duration":159}},{"uid":"42c0bb0e8d28a2d","reportUrl":"https://nova-wallet.github.io/test-runner/2209//#testresult/42c0bb0e8d28a2d","status":"passed","time":{"start":1672805202970,"stop":1672805203042,"duration":72}},{"uid":"76104d3517177282","reportUrl":"https://nova-wallet.github.io/test-runner/2208//#testresult/76104d3517177282","status":"passed","time":{"start":1672791220409,"stop":1672791220738,"duration":329}},{"uid":"c8dfce001ce8268f","reportUrl":"https://nova-wallet.github.io/test-runner/2207//#testresult/c8dfce001ce8268f","status":"passed","time":{"start":1672776240784,"stop":1672776240881,"duration":97}},{"uid":"ec320d6feb1f0e03","reportUrl":"https://nova-wallet.github.io/test-runner/2206//#testresult/ec320d6feb1f0e03","status":"passed","time":{"start":1672761850444,"stop":1672761850514,"duration":70}},{"uid":"539485cc21beeed4","reportUrl":"https://nova-wallet.github.io/test-runner/2205//#testresult/539485cc21beeed4","status":"passed","time":{"start":1672747524147,"stop":1672747524461,"duration":314}},{"uid":"924002442452495f","reportUrl":"https://nova-wallet.github.io/test-runner/2204//#testresult/924002442452495f","status":"passed","time":{"start":1672733072520,"stop":1672733072571,"duration":51}},{"uid":"f6f9c07f435562c4","reportUrl":"https://nova-wallet.github.io/test-runner/2203//#testresult/f6f9c07f435562c4","status":"passed","time":{"start":1672718675773,"stop":1672718675829,"duration":56}},{"uid":"9f871d692170cc79","reportUrl":"https://nova-wallet.github.io/test-runner/2202//#testresult/9f871d692170cc79","status":"passed","time":{"start":1672704796061,"stop":1672704796376,"duration":315}},{"uid":"479990c4f487d938","reportUrl":"https://nova-wallet.github.io/test-runner/2201//#testresult/479990c4f487d938","status":"passed","time":{"start":1672689837361,"stop":1672689837443,"duration":82}},{"uid":"832f7a555f989bc6","reportUrl":"https://nova-wallet.github.io/test-runner/2200//#testresult/832f7a555f989bc6","status":"passed","time":{"start":1672675468229,"stop":1672675468543,"duration":314}},{"uid":"866c47cf5f7c8ceb","reportUrl":"https://nova-wallet.github.io/test-runner/2199//#testresult/866c47cf5f7c8ceb","status":"passed","time":{"start":1672661140679,"stop":1672661141013,"duration":334}},{"uid":"70fcd379288d2023","reportUrl":"https://nova-wallet.github.io/test-runner/2198//#testresult/70fcd379288d2023","status":"passed","time":{"start":1672646692429,"stop":1672646692480,"duration":51}},{"uid":"e26c413132c2753c","reportUrl":"https://nova-wallet.github.io/test-runner/2197//#testresult/e26c413132c2753c","status":"passed","time":{"start":1672632298410,"stop":1672632298491,"duration":81}},{"uid":"507c5953c83722a8","reportUrl":"https://nova-wallet.github.io/test-runner/2196//#testresult/507c5953c83722a8","status":"passed","time":{"start":1672618434858,"stop":1672618435173,"duration":315}},{"uid":"57dd3e2f85c2e4b0","reportUrl":"https://nova-wallet.github.io/test-runner/2195//#testresult/57dd3e2f85c2e4b0","status":"passed","time":{"start":1672603447446,"stop":1672603447491,"duration":45}},{"uid":"621b64118f54f2d8","reportUrl":"https://nova-wallet.github.io/test-runner/2194//#testresult/621b64118f54f2d8","status":"passed","time":{"start":1672589074100,"stop":1672589074445,"duration":345}},{"uid":"a92f7d338a65fc0c","reportUrl":"https://nova-wallet.github.io/test-runner/2193//#testresult/a92f7d338a65fc0c","status":"passed","time":{"start":1672574814111,"stop":1672574814177,"duration":66}},{"uid":"8e24fb7e6f5c77ba","reportUrl":"https://nova-wallet.github.io/test-runner/2192//#testresult/8e24fb7e6f5c77ba","status":"passed","time":{"start":1672560356297,"stop":1672560356488,"duration":191}}]},"tags":[]},"source":"960748732ebcaed0.json","parameterValues":["{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"]}