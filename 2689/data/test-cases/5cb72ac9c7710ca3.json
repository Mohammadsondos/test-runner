{"uid":"5cb72ac9c7710ca3","name":"test_can_create_connection[Test for Pichiu, url: wss://kusama.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"43f9a3f242d3a4a5d24c7320862b4e4b","time":{"start":1679587064802,"stop":1679587064957,"duration":155},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://kusama.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://kusama.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"b13d7844ddd6ff59","name":"stdout","source":"b13d7844ddd6ff59.txt","type":"text/plain","size":246}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az221-10"},{"name":"thread","value":"1877-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.kylin-node.co.uk', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"76014e8c40a49b31","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1679587054463,"stop":1679587054649,"duration":186}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":143,"skipped":0,"passed":731,"unknown":0,"total":874},"items":[{"uid":"309870ecd1baa2be","reportUrl":"https://nova-wallet.github.io/test-runner/2679//#testresult/309870ecd1baa2be","status":"passed","time":{"start":1679458534006,"stop":1679458534121,"duration":115}},{"uid":"2023e41900965775","reportUrl":"https://nova-wallet.github.io/test-runner/2678//#testresult/2023e41900965775","status":"passed","time":{"start":1679447145433,"stop":1679447145839,"duration":406}},{"uid":"bd566f06fe59951f","reportUrl":"https://nova-wallet.github.io/test-runner/2677//#testresult/bd566f06fe59951f","status":"passed","time":{"start":1679429635573,"stop":1679429635815,"duration":242}},{"uid":"46b669bf846e0ae2","reportUrl":"https://nova-wallet.github.io/test-runner/2676//#testresult/46b669bf846e0ae2","status":"passed","time":{"start":1679415290846,"stop":1679415291275,"duration":429}},{"uid":"66241c3adcf37f","reportUrl":"https://nova-wallet.github.io/test-runner/2675//#testresult/66241c3adcf37f","status":"passed","time":{"start":1679401475002,"stop":1679401475215,"duration":213}},{"uid":"969a02785a4d533f","reportUrl":"https://nova-wallet.github.io/test-runner/2633//#testresult/969a02785a4d533f","status":"passed","time":{"start":1678795585603,"stop":1678795585697,"duration":94}},{"uid":"442a51478d1d1fd8","reportUrl":"https://nova-wallet.github.io/test-runner/2632//#testresult/442a51478d1d1fd8","status":"passed","time":{"start":1678781113241,"stop":1678781113294,"duration":53}},{"uid":"289abfd1c620c8e6","reportUrl":"https://nova-wallet.github.io/test-runner/2631//#testresult/289abfd1c620c8e6","status":"passed","time":{"start":1678766677671,"stop":1678766677993,"duration":322}},{"uid":"1ec9f594bbadc2d","reportUrl":"https://nova-wallet.github.io/test-runner/2630//#testresult/1ec9f594bbadc2d","status":"passed","time":{"start":1678752819773,"stop":1678752820040,"duration":267}},{"uid":"832c977a889a88b7","reportUrl":"https://nova-wallet.github.io/test-runner/2629//#testresult/832c977a889a88b7","status":"passed","time":{"start":1678737885150,"stop":1678737885534,"duration":384}},{"uid":"520f2adab82ed68d","reportUrl":"https://nova-wallet.github.io/test-runner/2628//#testresult/520f2adab82ed68d","status":"passed","time":{"start":1678723470422,"stop":1678723470474,"duration":52}},{"uid":"17a4698dc2e4ef2","reportUrl":"https://nova-wallet.github.io/test-runner/2627//#testresult/17a4698dc2e4ef2","status":"passed","time":{"start":1678709153228,"stop":1678709153369,"duration":141}},{"uid":"26fa454ca382eab","reportUrl":"https://nova-wallet.github.io/test-runner/2626//#testresult/26fa454ca382eab","status":"passed","time":{"start":1678694717025,"stop":1678694717263,"duration":238}},{"uid":"af96163c1979069b","reportUrl":"https://nova-wallet.github.io/test-runner/2625//#testresult/af96163c1979069b","status":"passed","time":{"start":1678680284676,"stop":1678680285099,"duration":423}},{"uid":"7ee0897f492a804b","reportUrl":"https://nova-wallet.github.io/test-runner/2624//#testresult/7ee0897f492a804b","status":"passed","time":{"start":1678666462914,"stop":1678666463227,"duration":313}},{"uid":"e59fe15b803c29ff","reportUrl":"https://nova-wallet.github.io/test-runner/2623//#testresult/e59fe15b803c29ff","status":"passed","time":{"start":1678651463834,"stop":1678651464100,"duration":266}},{"uid":"618b64bf71495d3b","reportUrl":"https://nova-wallet.github.io/test-runner/2621//#testresult/618b64bf71495d3b","status":"passed","time":{"start":1678622707236,"stop":1678622707508,"duration":272}},{"uid":"21dabbcc4dc2f4ad","reportUrl":"https://nova-wallet.github.io/test-runner/2620//#testresult/21dabbcc4dc2f4ad","status":"passed","time":{"start":1678608294174,"stop":1678608294435,"duration":261}},{"uid":"68e24cb0cc85c7aa","reportUrl":"https://nova-wallet.github.io/test-runner/2619//#testresult/68e24cb0cc85c7aa","status":"passed","time":{"start":1678593894685,"stop":1678593895163,"duration":478}},{"uid":"53891a3715c5a494","reportUrl":"https://nova-wallet.github.io/test-runner/2618//#testresult/53891a3715c5a494","status":"passed","time":{"start":1678580098243,"stop":1678580098287,"duration":44}}]},"tags":[]},"source":"5cb72ac9c7710ca3.json","parameterValues":["{'url': 'wss://kusama.kylin-node.co.uk', 'name': 'Pichiu'}"]}