{"uid":"1c4a0b2bfed1e407","name":"test_precision[Test for DAO IPCI]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"33810a4242d025509f0e78a3e06893b8","time":{"start":1693843398978,"stop":1693843399635,"duration":657},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f1ad8a6c0a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f1ad8a34e20>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f1ad8a6c0a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f1ad8a34e20>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"209b4a39f7656de7","name":"stdout","source":"209b4a39f7656de7.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az445-350"},{"name":"thread","value":"2074-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f1ad8a34e20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a4d4ba111606a86e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693843383276,"stop":1693843383950,"duration":674}},{"uid":"564bc98575137954","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693843367409,"stop":1693843368251,"duration":842}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":68,"unknown":0,"total":69},"items":[{"uid":"2cff15c7c4e3ef93","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/2cff15c7c4e3ef93","status":"passed","time":{"start":1693828985017,"stop":1693828990215,"duration":5198}},{"uid":"bfa1dfc2b122c07d","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/bfa1dfc2b122c07d","status":"passed","time":{"start":1693814588542,"stop":1693814592961,"duration":4419}},{"uid":"83f0ba16f6a308a7","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/83f0ba16f6a308a7","status":"passed","time":{"start":1693800140712,"stop":1693800146741,"duration":6029}},{"uid":"bd7432dd88e0fe17","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/bd7432dd88e0fe17","status":"passed","time":{"start":1693785788425,"stop":1693785792908,"duration":4483}},{"uid":"4d4352b65d21eead","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/4d4352b65d21eead","status":"passed","time":{"start":1693771347862,"stop":1693771352939,"duration":5077}},{"uid":"f6fd1bb1778666d3","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/f6fd1bb1778666d3","status":"passed","time":{"start":1693756948467,"stop":1693756953955,"duration":5488}},{"uid":"db5be5814fa680c4","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/db5be5814fa680c4","status":"passed","time":{"start":1693742585353,"stop":1693742591363,"duration":6010}},{"uid":"947d9379264673f","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/947d9379264673f","status":"passed","time":{"start":1693728157048,"stop":1693728160939,"duration":3891}},{"uid":"7339e1e20b780919","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/7339e1e20b780919","status":"passed","time":{"start":1693713741855,"stop":1693713745694,"duration":3839}},{"uid":"6e41d0f92fa57347","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/6e41d0f92fa57347","status":"passed","time":{"start":1693699430904,"stop":1693699436349,"duration":5445}},{"uid":"13a8ec0e1bcb3b16","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/13a8ec0e1bcb3b16","status":"passed","time":{"start":1693684945903,"stop":1693684949895,"duration":3992}},{"uid":"9e9953da8597e27b","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/9e9953da8597e27b","status":"passed","time":{"start":1693670584257,"stop":1693670589559,"duration":5302}},{"uid":"b50c82919034c2bc","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/b50c82919034c2bc","status":"passed","time":{"start":1693656159394,"stop":1693656163618,"duration":4224}},{"uid":"8c544fb896ad0bed","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/8c544fb896ad0bed","status":"passed","time":{"start":1693641749204,"stop":1693641757017,"duration":7813}},{"uid":"da7cc33b148387cd","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/da7cc33b148387cd","status":"passed","time":{"start":1693627350507,"stop":1693627355750,"duration":5243}},{"uid":"e60727616ebc612d","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/e60727616ebc612d","status":"passed","time":{"start":1693612993971,"stop":1693612997682,"duration":3711}},{"uid":"d247bba7d1da3f13","reportUrl":"https://novasamatech.github.io/test-runner/3690//#testresult/d247bba7d1da3f13","status":"passed","time":{"start":1693598581581,"stop":1693598586220,"duration":4639}},{"uid":"84116a0b8bce3aa9","reportUrl":"https://novasamatech.github.io/test-runner/3689//#testresult/84116a0b8bce3aa9","status":"passed","time":{"start":1693584162127,"stop":1693584167101,"duration":4974}},{"uid":"14dc3429d970cccb","reportUrl":"https://novasamatech.github.io/test-runner/3688//#testresult/14dc3429d970cccb","status":"passed","time":{"start":1693569831907,"stop":1693569836638,"duration":4731}},{"uid":"bfed5744a354ff5e","reportUrl":"https://novasamatech.github.io/test-runner/3687//#testresult/bfed5744a354ff5e","status":"passed","time":{"start":1693555442363,"stop":1693555446912,"duration":4549}}]},"tags":[]},"source":"1c4a0b2bfed1e407.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f1ad8a34e20>"]}