{"uid":"cf3020dad3e1fb13","name":"test_can_create_connection[Test for Altair, url: wss://altair-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"abcba6d159bf02fac13745bbd963686a","time":{"start":1670817896775,"stop":1670817909514,"duration":12739},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"aea57fbd3d107792","name":"stdout","source":"aea57fbd3d107792.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az448-471"},{"name":"thread","value":"1666-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"649d4fe285a233f0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670817873897,"stop":1670817886671,"duration":12774}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":130,"skipped":0,"passed":208,"unknown":0,"total":338},"items":[{"uid":"b0e4c0557c6c3cd","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/b0e4c0557c6c3cd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670804067046,"stop":1670804079785,"duration":12739}},{"uid":"7fa99a00345bcdb8","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/7fa99a00345bcdb8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670789060074,"stop":1670789072700,"duration":12626}},{"uid":"667442f45fe47ae2","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/667442f45fe47ae2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670774646396,"stop":1670774659030,"duration":12634}},{"uid":"ddbce70c9ec4f5f7","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/ddbce70c9ec4f5f7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670760324722,"stop":1670760336091,"duration":11369}},{"uid":"bafe70a195b45d8d","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/bafe70a195b45d8d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670745948597,"stop":1670745961236,"duration":12639}},{"uid":"5458273646f05d5","reportUrl":"https://nova-wallet.github.io/test-runner/2063//#testresult/5458273646f05d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670731536598,"stop":1670731547993,"duration":11395}},{"uid":"78d5bf3f9b1301f0","reportUrl":"https://nova-wallet.github.io/test-runner/2062//#testresult/78d5bf3f9b1301f0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670717727905,"stop":1670717739279,"duration":11374}},{"uid":"737d0305bbc43874","reportUrl":"https://nova-wallet.github.io/test-runner/2061//#testresult/737d0305bbc43874","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670702660574,"stop":1670702673180,"duration":12606}},{"uid":"4bc0cb7855e95e44","reportUrl":"https://nova-wallet.github.io/test-runner/2060//#testresult/4bc0cb7855e95e44","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670688291976,"stop":1670688303261,"duration":11285}},{"uid":"90e7fe4adb9add3","reportUrl":"https://nova-wallet.github.io/test-runner/2059//#testresult/90e7fe4adb9add3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670673954400,"stop":1670673967032,"duration":12632}},{"uid":"784ac60b0275b71c","reportUrl":"https://nova-wallet.github.io/test-runner/2058//#testresult/784ac60b0275b71c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670659548549,"stop":1670659561261,"duration":12712}},{"uid":"c5fd5b7b0d1e7015","reportUrl":"https://nova-wallet.github.io/test-runner/2057//#testresult/c5fd5b7b0d1e7015","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670645058378,"stop":1670645069964,"duration":11586}},{"uid":"6c6c1241890724a9","reportUrl":"https://nova-wallet.github.io/test-runner/2056//#testresult/6c6c1241890724a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670631206918,"stop":1670631219656,"duration":12738}},{"uid":"7cb418974f9ce7db","reportUrl":"https://nova-wallet.github.io/test-runner/2054//#testresult/7cb418974f9ce7db","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670601869410,"stop":1670601880809,"duration":11399}},{"uid":"be17233513477818","reportUrl":"https://nova-wallet.github.io/test-runner/2053//#testresult/be17233513477818","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670587513959,"stop":1670587526690,"duration":12731}},{"uid":"84de62305784cef0","reportUrl":"https://nova-wallet.github.io/test-runner/2052//#testresult/84de62305784cef0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670573145017,"stop":1670573157737,"duration":12720}},{"uid":"e9d45b91dea80c11","reportUrl":"https://nova-wallet.github.io/test-runner/2051//#testresult/e9d45b91dea80c11","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670558666932,"stop":1670558679723,"duration":12791}},{"uid":"b9ac5d8c0b033908","reportUrl":"https://nova-wallet.github.io/test-runner/2050//#testresult/b9ac5d8c0b033908","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670544910463,"stop":1670544923064,"duration":12601}},{"uid":"50cc227925dec674","reportUrl":"https://nova-wallet.github.io/test-runner/2049//#testresult/50cc227925dec674","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670529871741,"stop":1670529884587,"duration":12846}},{"uid":"f929bea01107c779","reportUrl":"https://nova-wallet.github.io/test-runner/2048//#testresult/f929bea01107c779","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670515464575,"stop":1670515475770,"duration":11195}}]},"tags":[]},"source":"cf3020dad3e1fb13.json","parameterValues":["{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"]}