{"uid":"b99e221a64a1fefa","name":"test_xcm_parameters[Check XCM data for Acala]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"8738f15fafbd0b44e022d85d6a0eaa11","time":{"start":1666296364700,"stop":1666296367045,"duration":2345},"status":"broken","statusMessage":"NotImplementedError: Decoder class for \"scale_info::193\" not found","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7fab9cae1df0>\nchain = <tests.utils.chain_model.Chain object at 0x7fab9dbbe640>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n>       data = connection.get_constant('System', 'BlockWeights').serialize()\n\ntests/test_xcm_data.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2377: in get_constant\n    return self.decode_scale(\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2808: in decode_scale\n    obj = self.runtime_config.create_scale_object(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <scalecodec.base.RuntimeConfigurationObject object at 0x7fab86b64bb0>\ntype_string = 'scale_info::193'\ndata = <ScaleBytes(data=0xe0d1a93e010000000088526a7400000090cd2405000000000170ea3fd44500000001002ca07d5100000001000000000000000090cd240500000000017046f2c068000000010088526a7400000001005cb2ec2200000090cd240500000000000000)>\nkwargs = {'metadata': <MetadataVersioned(value=('0x6d657461', {'V14': {'types': {'types': [{'id': 0, 'type': {'path': ['sp_core...igned': 31}, {'identifier': 'ChargeTransactionPayment', 'ty': 595, 'additional_signed': 31}]}, 'runtime_type': 43}}))>}\ndecoder_class = None\n\n    def create_scale_object(self, type_string: str, data: Optional['ScaleBytes'] = None, **kwargs) -> 'ScaleType':\n        \"\"\"\n        Creates a new `ScaleType` object with given type_string, for example 'u32', 'Bytes' or 'scale_info::2'\n        (scale_info:: prefixed types are defined in the `PortableRegistry` object of the runtime metadata.)\n    \n        Parameters\n        ----------\n        type_string: string representation of a `ScaleType`\n        data: ScaleBytes data to decode\n        kwargs\n    \n        Returns\n        -------\n        ScaleType\n        \"\"\"\n        decoder_class = self.get_decoder_class(type_string)\n    \n        if decoder_class:\n            return decoder_class(data=data, **kwargs)\n    \n>       raise NotImplementedError('Decoder class for \"{}\" not found'.format(type_string))\nE       NotImplementedError: Decoder class for \"scale_info::193\" not found\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/base.py:168: NotImplementedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az265-475"},{"name":"thread","value":"1653-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fab9dbbe640>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1cc10fc2a142ab00","status":"broken","statusDetails":"ValueError: Type registry preset 'acala' not found","time":{"start":1666296348533,"stop":1666296354542,"duration":6009}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":68,"unknown":0,"total":70},"items":[{"uid":"52fd370a93330d40","reportUrl":"https://nova-wallet.github.io/test-runner/1747//#testresult/52fd370a93330d40","status":"broken","statusDetails":"NotImplementedError: Decoder class for \"scale_info::193\" not found","time":{"start":1666282135663,"stop":1666282136862,"duration":1199}},{"uid":"7680b5fd6f618e70","reportUrl":"https://nova-wallet.github.io/test-runner/1746//#testresult/7680b5fd6f618e70","status":"passed","time":{"start":1666267668121,"stop":1666267674831,"duration":6710}},{"uid":"738f898d846172b5","reportUrl":"https://nova-wallet.github.io/test-runner/1745//#testresult/738f898d846172b5","status":"passed","time":{"start":1666253206933,"stop":1666253211471,"duration":4538}},{"uid":"a3eb37858640f9ce","reportUrl":"https://nova-wallet.github.io/test-runner/1744//#testresult/a3eb37858640f9ce","status":"passed","time":{"start":1666240275923,"stop":1666240280838,"duration":4915}},{"uid":"8347f5f4bc67d820","reportUrl":"https://nova-wallet.github.io/test-runner/1743//#testresult/8347f5f4bc67d820","status":"passed","time":{"start":1666225418263,"stop":1666225423635,"duration":5372}},{"uid":"fc62d73f0fb63b5f","reportUrl":"https://nova-wallet.github.io/test-runner/1742//#testresult/fc62d73f0fb63b5f","status":"passed","time":{"start":1666209947548,"stop":1666209952390,"duration":4842}},{"uid":"9128fbb69c4dfcca","reportUrl":"https://nova-wallet.github.io/test-runner/1741//#testresult/9128fbb69c4dfcca","status":"passed","time":{"start":1666195708511,"stop":1666195713367,"duration":4856}},{"uid":"6ad76b81fb2e4237","reportUrl":"https://nova-wallet.github.io/test-runner/1740//#testresult/6ad76b81fb2e4237","status":"passed","time":{"start":1666181252852,"stop":1666181257958,"duration":5106}},{"uid":"a8d100a13e41ec30","reportUrl":"https://nova-wallet.github.io/test-runner/1739//#testresult/a8d100a13e41ec30","status":"passed","time":{"start":1666167125725,"stop":1666167130787,"duration":5062}},{"uid":"414398c502f267c0","reportUrl":"https://nova-wallet.github.io/test-runner/1738//#testresult/414398c502f267c0","status":"passed","time":{"start":1666154460652,"stop":1666154467718,"duration":7066}},{"uid":"6bb3deafbc85533d","reportUrl":"https://nova-wallet.github.io/test-runner/1737//#testresult/6bb3deafbc85533d","status":"passed","time":{"start":1666138973957,"stop":1666138980850,"duration":6893}},{"uid":"e3e56ddd0d0c6290","reportUrl":"https://nova-wallet.github.io/test-runner/1736//#testresult/e3e56ddd0d0c6290","status":"passed","time":{"start":1666123566137,"stop":1666123574147,"duration":8010}},{"uid":"be24ea0006c62c1","reportUrl":"https://nova-wallet.github.io/test-runner/1735//#testresult/be24ea0006c62c1","status":"passed","time":{"start":1666109361766,"stop":1666109368553,"duration":6787}},{"uid":"acea40db764bdb9f","reportUrl":"https://nova-wallet.github.io/test-runner/1734//#testresult/acea40db764bdb9f","status":"passed","time":{"start":1666094872408,"stop":1666094879124,"duration":6716}},{"uid":"64b0d693d189b950","reportUrl":"https://nova-wallet.github.io/test-runner/1733//#testresult/64b0d693d189b950","status":"passed","time":{"start":1666080559030,"stop":1666080563758,"duration":4728}},{"uid":"f4b452adec80195b","reportUrl":"https://nova-wallet.github.io/test-runner/1732//#testresult/f4b452adec80195b","status":"passed","time":{"start":1666067979127,"stop":1666067986372,"duration":7245}},{"uid":"a891be3e86eb6ff2","reportUrl":"https://nova-wallet.github.io/test-runner/1731//#testresult/a891be3e86eb6ff2","status":"passed","time":{"start":1666052595778,"stop":1666052601949,"duration":6171}},{"uid":"c213939ba91a908","reportUrl":"https://nova-wallet.github.io/test-runner/1730//#testresult/c213939ba91a908","status":"passed","time":{"start":1666037137105,"stop":1666037142911,"duration":5806}},{"uid":"691777b940471299","reportUrl":"https://nova-wallet.github.io/test-runner/1729//#testresult/691777b940471299","status":"passed","time":{"start":1666022990836,"stop":1666022995777,"duration":4941}},{"uid":"917cf96893085a7a","reportUrl":"https://nova-wallet.github.io/test-runner/1728//#testresult/917cf96893085a7a","status":"passed","time":{"start":1666008467086,"stop":1666008472060,"duration":4974}}]},"tags":[]},"source":"b99e221a64a1fefa.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fab9dbbe640>"]}