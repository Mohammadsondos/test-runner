{"uid":"4cbc145898a15533","name":"test_chainId[Test for Ajuna]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"8fd23d62e3fba21e29fa66b1d33195b2","time":{"start":1705494284039,"stop":1705494284039,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"request = <SubRequest 'chain_model' for <Function test_chainId[Test for Ajuna]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2133: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2107: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:648: in init_runtime\n    block_hash = self.get_chain_head()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:435: in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:323: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:364: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:387: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:408: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:447: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:340: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:296: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:375: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:531: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:124: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"request = <SubRequest 'chain_model' for <Function test_chainId[Test for Ajuna]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2133: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2107: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:648: in init_runtime\n    block_hash = self.get_chain_head()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:435: in get_chain_head\n    response = self.rpc_request(\"chain_getHead\", [])\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:323: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:364: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:387: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:408: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:447: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:340: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:296: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:375: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:531: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:124: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"d442ca75f3de004c","name":"stdout","source":"d442ca75f3de004c.txt","type":"text/plain","size":398}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az1429-857"},{"name":"thread","value":"2150-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f3d12ad28f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"91582d3b45fc838d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705492959190,"stop":1705492959190,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":82,"skipped":0,"passed":654,"unknown":0,"total":736},"items":[{"uid":"38feca69fc9c88b0","reportUrl":"https://novasamatech.github.io/test-runner/4528//#testresult/38feca69fc9c88b0","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705494284026,"stop":1705494284026,"duration":0}},{"uid":"dde0a6687d6fe58e","reportUrl":"https://novasamatech.github.io/test-runner/4523//#testresult/dde0a6687d6fe58e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705406547164,"stop":1705406547164,"duration":0}},{"uid":"a37ebda4e58ec37f","reportUrl":"https://novasamatech.github.io/test-runner/4522//#testresult/a37ebda4e58ec37f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705392125962,"stop":1705392125962,"duration":0}},{"uid":"9f312d9b87cbf949","reportUrl":"https://novasamatech.github.io/test-runner/4518//#testresult/9f312d9b87cbf949","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705334548659,"stop":1705334548659,"duration":0}},{"uid":"88a809347070999c","reportUrl":"https://novasamatech.github.io/test-runner/4517//#testresult/88a809347070999c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'date': 'Mon, 15 Jan 2024 13:17:19 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=ALyglOrKYkhoFecZnKPA3tqb0%2BVJqF%2BAUp5Ysl5RGbedLqymGLgQIg4dQwnUBydI%2Fxkcbb1SKpso8tiGKxuBixBD%2B0RQtifhV%2FxDnqDl7Biq8cxlBZsozrJcbJ%2FgEaXhoaVgkldj3%2BoXP6bAbpqEP%2FrmOA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '845e65f0c8bd2d11-IAD'} -+-+- b'error code: 502'","time":{"start":1705324637744,"stop":1705324637744,"duration":0}},{"uid":"1c34c24ee17c1771","reportUrl":"https://novasamatech.github.io/test-runner/4516//#testresult/1c34c24ee17c1771","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705305894956,"stop":1705305894956,"duration":0}},{"uid":"cc9ee3b066930534","reportUrl":"https://novasamatech.github.io/test-runner/4515//#testresult/cc9ee3b066930534","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705291493411,"stop":1705291493411,"duration":0}},{"uid":"fae0c570a2ed44bd","reportUrl":"https://novasamatech.github.io/test-runner/4514//#testresult/fae0c570a2ed44bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705277156616,"stop":1705277156616,"duration":0}},{"uid":"d3c3cf930f535812","reportUrl":"https://novasamatech.github.io/test-runner/4513//#testresult/d3c3cf930f535812","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705262696450,"stop":1705262696450,"duration":0}},{"uid":"95a2ec15e43ce257","reportUrl":"https://novasamatech.github.io/test-runner/4512//#testresult/95a2ec15e43ce257","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705248308518,"stop":1705248308518,"duration":0}},{"uid":"a03fd42deabbe1df","reportUrl":"https://novasamatech.github.io/test-runner/4511//#testresult/a03fd42deabbe1df","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705233898615,"stop":1705233898615,"duration":0}},{"uid":"1677638718102893","reportUrl":"https://novasamatech.github.io/test-runner/4510//#testresult/1677638718102893","status":"passed","time":{"start":1705219412846,"stop":1705219412846,"duration":0}},{"uid":"f2b0acbfeedf36f8","reportUrl":"https://novasamatech.github.io/test-runner/4509//#testresult/f2b0acbfeedf36f8","status":"passed","time":{"start":1705204953757,"stop":1705204953757,"duration":0}},{"uid":"4af6ecde6d729d5b","reportUrl":"https://novasamatech.github.io/test-runner/4508//#testresult/4af6ecde6d729d5b","status":"passed","time":{"start":1705190622125,"stop":1705190622125,"duration":0}},{"uid":"3d6659f381af1d07","reportUrl":"https://novasamatech.github.io/test-runner/4507//#testresult/3d6659f381af1d07","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705176321332,"stop":1705176321332,"duration":0}},{"uid":"a54223d8755308c6","reportUrl":"https://novasamatech.github.io/test-runner/4506//#testresult/a54223d8755308c6","status":"passed","time":{"start":1705161823985,"stop":1705161823985,"duration":0}},{"uid":"f591b3bb75040202","reportUrl":"https://novasamatech.github.io/test-runner/4505//#testresult/f591b3bb75040202","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705147515162,"stop":1705147515162,"duration":0}},{"uid":"929f4654e2712a49","reportUrl":"https://novasamatech.github.io/test-runner/4504//#testresult/929f4654e2712a49","status":"passed","time":{"start":1705132944857,"stop":1705132944857,"duration":0}},{"uid":"32157a808df95115","reportUrl":"https://novasamatech.github.io/test-runner/4503//#testresult/32157a808df95115","status":"passed","time":{"start":1705118547889,"stop":1705118547889,"duration":0}},{"uid":"d90980d7f37ed61d","reportUrl":"https://novasamatech.github.io/test-runner/4502//#testresult/d90980d7f37ed61d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705104334801,"stop":1705104334801,"duration":0}}]},"tags":[]},"source":"4cbc145898a15533.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f3d12ad28f0>"]}