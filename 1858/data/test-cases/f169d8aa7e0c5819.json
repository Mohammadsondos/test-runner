{"uid":"f169d8aa7e0c5819","name":"test_xcm_parameters[Check XCM data for Basilisk]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"96a3af14ca9eee938b6f577647bea0e3","time":{"start":1667866691321,"stop":1667866692254,"duration":933},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:200000000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7f8876c229a0>\nchain = <tests.utils.chain_model.Chain object at 0x7f8877ce6fa0>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:200000000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az619-348"},{"name":"thread","value":"1633-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f8877ce6fa0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c8f2a982fb4cf88e","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:200000000>]})","time":{"start":1667866675596,"stop":1667866681303,"duration":5707}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":159,"unknown":0,"total":162},"items":[{"uid":"96e6d387aaefcc07","reportUrl":"https://nova-wallet.github.io/test-runner/1857//#testresult/96e6d387aaefcc07","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:200000000>]})","time":{"start":1667851499772,"stop":1667851500611,"duration":839}},{"uid":"84c3d7f0be322085","reportUrl":"https://nova-wallet.github.io/test-runner/1856//#testresult/84c3d7f0be322085","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:200000000>]})","time":{"start":1667837112567,"stop":1667837113257,"duration":690}},{"uid":"667af749b6a3c47c","reportUrl":"https://nova-wallet.github.io/test-runner/1855//#testresult/667af749b6a3c47c","status":"passed","time":{"start":1667822797603,"stop":1667822801874,"duration":4271}},{"uid":"4882e3721aad1d7e","reportUrl":"https://nova-wallet.github.io/test-runner/1854//#testresult/4882e3721aad1d7e","status":"passed","time":{"start":1667808338198,"stop":1667808343276,"duration":5078}},{"uid":"552309050a1b46c7","reportUrl":"https://nova-wallet.github.io/test-runner/1853//#testresult/552309050a1b46c7","status":"passed","time":{"start":1667794705098,"stop":1667794709239,"duration":4141}},{"uid":"4af067a68e3c1cf2","reportUrl":"https://nova-wallet.github.io/test-runner/1852//#testresult/4af067a68e3c1cf2","status":"passed","time":{"start":1667780212044,"stop":1667780216067,"duration":4023}},{"uid":"b2f4c28175534761","reportUrl":"https://nova-wallet.github.io/test-runner/1851//#testresult/b2f4c28175534761","status":"passed","time":{"start":1667765106262,"stop":1667765110505,"duration":4243}},{"uid":"3514d79f4ab391ae","reportUrl":"https://nova-wallet.github.io/test-runner/1850//#testresult/3514d79f4ab391ae","status":"passed","time":{"start":1667750684422,"stop":1667750688095,"duration":3673}},{"uid":"35e6f408c8eb209b","reportUrl":"https://nova-wallet.github.io/test-runner/1849//#testresult/35e6f408c8eb209b","status":"passed","time":{"start":1667736337985,"stop":1667736341573,"duration":3588}},{"uid":"c6ee61c5e4e34a4c","reportUrl":"https://nova-wallet.github.io/test-runner/1848//#testresult/c6ee61c5e4e34a4c","status":"passed","time":{"start":1667721912498,"stop":1667721916022,"duration":3524}},{"uid":"802d99df7adb49ee","reportUrl":"https://nova-wallet.github.io/test-runner/1847//#testresult/802d99df7adb49ee","status":"passed","time":{"start":1667707815680,"stop":1667707820701,"duration":5021}},{"uid":"84f6ba1f0ebe502a","reportUrl":"https://nova-wallet.github.io/test-runner/1846//#testresult/84f6ba1f0ebe502a","status":"passed","time":{"start":1667693880619,"stop":1667693885577,"duration":4958}},{"uid":"bea878a1b297eaff","reportUrl":"https://nova-wallet.github.io/test-runner/1845//#testresult/bea878a1b297eaff","status":"passed","time":{"start":1667678692449,"stop":1667678696427,"duration":3978}},{"uid":"f2b25e4c55fdce80","reportUrl":"https://nova-wallet.github.io/test-runner/1844//#testresult/f2b25e4c55fdce80","status":"passed","time":{"start":1667664291308,"stop":1667664295590,"duration":4282}},{"uid":"d1e177ab9754a5e6","reportUrl":"https://nova-wallet.github.io/test-runner/1843//#testresult/d1e177ab9754a5e6","status":"passed","time":{"start":1667649933641,"stop":1667649938575,"duration":4934}},{"uid":"92908a1d548b2459","reportUrl":"https://nova-wallet.github.io/test-runner/1842//#testresult/92908a1d548b2459","status":"passed","time":{"start":1667635494047,"stop":1667635497655,"duration":3608}},{"uid":"80a487c3e8dae70d","reportUrl":"https://nova-wallet.github.io/test-runner/1841//#testresult/80a487c3e8dae70d","status":"passed","time":{"start":1667621414956,"stop":1667621420030,"duration":5074}},{"uid":"f5bce3e2ada387bb","reportUrl":"https://nova-wallet.github.io/test-runner/1840//#testresult/f5bce3e2ada387bb","status":"passed","time":{"start":1667607439681,"stop":1667607443483,"duration":3802}},{"uid":"63c997d96d423ed9","reportUrl":"https://nova-wallet.github.io/test-runner/1839//#testresult/63c997d96d423ed9","status":"passed","time":{"start":1667592276557,"stop":1667592280936,"duration":4379}},{"uid":"cab7e30c43767ab0","reportUrl":"https://nova-wallet.github.io/test-runner/1838//#testresult/cab7e30c43767ab0","status":"passed","time":{"start":1667577906562,"stop":1667577911089,"duration":4527}}]},"tags":[]},"source":"f169d8aa7e0c5819.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f8877ce6fa0>"]}