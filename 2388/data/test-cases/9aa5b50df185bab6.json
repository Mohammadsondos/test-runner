{"uid":"9aa5b50df185bab6","name":"test_can_create_connection[Test for Kylin, url: wss://polkadot.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3ee0d191ab7acb2fad9a82a3aa808e89","time":{"start":1675354760597,"stop":1675354760843,"duration":246},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"cd93e0bfb0312c09","name":"stdout","source":"cd93e0bfb0312c09.txt","type":"text/plain","size":242}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az338-397"},{"name":"thread","value":"1726-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"88b7a2efe71b9f2e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675354750291,"stop":1675354750487,"duration":196}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":97,"skipped":0,"passed":548,"unknown":0,"total":645},"items":[{"uid":"42d526c00b9ee6a0","reportUrl":"https://nova-wallet.github.io/test-runner/2387//#testresult/42d526c00b9ee6a0","status":"passed","time":{"start":1675340890075,"stop":1675340890465,"duration":390}},{"uid":"ac41edc27622d3c7","reportUrl":"https://nova-wallet.github.io/test-runner/2386//#testresult/ac41edc27622d3c7","status":"passed","time":{"start":1675325872892,"stop":1675325873241,"duration":349}},{"uid":"46b8fdd8beab0536","reportUrl":"https://nova-wallet.github.io/test-runner/2385//#testresult/46b8fdd8beab0536","status":"passed","time":{"start":1675311443683,"stop":1675311443778,"duration":95}},{"uid":"b482def28b0e0f05","reportUrl":"https://nova-wallet.github.io/test-runner/2384//#testresult/b482def28b0e0f05","status":"passed","time":{"start":1675300205500,"stop":1675300205546,"duration":46}},{"uid":"fe5b28821aa478e8","reportUrl":"https://nova-wallet.github.io/test-runner/2383//#testresult/fe5b28821aa478e8","status":"passed","time":{"start":1675282546433,"stop":1675282546898,"duration":465}},{"uid":"960398e2a0e20d4f","reportUrl":"https://nova-wallet.github.io/test-runner/2381//#testresult/960398e2a0e20d4f","status":"passed","time":{"start":1675254476541,"stop":1675254476854,"duration":313}},{"uid":"eae3be261bd5f1f9","reportUrl":"https://nova-wallet.github.io/test-runner/2380//#testresult/eae3be261bd5f1f9","status":"passed","time":{"start":1675239454592,"stop":1675239454683,"duration":91}},{"uid":"2d7ab782caf2a64d","reportUrl":"https://nova-wallet.github.io/test-runner/2379//#testresult/2d7ab782caf2a64d","status":"passed","time":{"start":1675225019743,"stop":1675225020057,"duration":314}},{"uid":"e4b41eb50d2d1810","reportUrl":"https://nova-wallet.github.io/test-runner/2377//#testresult/e4b41eb50d2d1810","status":"passed","time":{"start":1675196097610,"stop":1675196098010,"duration":400}},{"uid":"5b2715b8ad4e21f0","reportUrl":"https://nova-wallet.github.io/test-runner/2376//#testresult/5b2715b8ad4e21f0","status":"passed","time":{"start":1675181958964,"stop":1675181959268,"duration":304}},{"uid":"9bd250da3c454995","reportUrl":"https://nova-wallet.github.io/test-runner/2375//#testresult/9bd250da3c454995","status":"passed","time":{"start":1675167990652,"stop":1675167990845,"duration":193}},{"uid":"55625e52b3d7357c","reportUrl":"https://nova-wallet.github.io/test-runner/2373//#testresult/55625e52b3d7357c","status":"passed","time":{"start":1675138595846,"stop":1675138596234,"duration":388}},{"uid":"c25b14cac2119903","reportUrl":"https://nova-wallet.github.io/test-runner/2372//#testresult/c25b14cac2119903","status":"passed","time":{"start":1675127569410,"stop":1675127569827,"duration":417}},{"uid":"71cd9385f8690443","reportUrl":"https://nova-wallet.github.io/test-runner/2371//#testresult/71cd9385f8690443","status":"passed","time":{"start":1675109666938,"stop":1675109667087,"duration":149}},{"uid":"af8dbd9d844296d5","reportUrl":"https://nova-wallet.github.io/test-runner/2370//#testresult/af8dbd9d844296d5","status":"passed","time":{"start":1675095629535,"stop":1675095629608,"duration":73}},{"uid":"43cd0182cb1d9b9c","reportUrl":"https://nova-wallet.github.io/test-runner/2369//#testresult/43cd0182cb1d9b9c","status":"passed","time":{"start":1675081763600,"stop":1675081764004,"duration":404}},{"uid":"8f72978e1aa7f41d","reportUrl":"https://nova-wallet.github.io/test-runner/2368//#testresult/8f72978e1aa7f41d","status":"passed","time":{"start":1675066829780,"stop":1675066830275,"duration":495}},{"uid":"adc6a72a4f63fcfb","reportUrl":"https://nova-wallet.github.io/test-runner/2367//#testresult/adc6a72a4f63fcfb","status":"passed","time":{"start":1675052306338,"stop":1675052306433,"duration":95}},{"uid":"89c47e49cda3fe9","reportUrl":"https://nova-wallet.github.io/test-runner/2366//#testresult/89c47e49cda3fe9","status":"passed","time":{"start":1675040768469,"stop":1675040768530,"duration":61}},{"uid":"8531fc2a40d498af","reportUrl":"https://nova-wallet.github.io/test-runner/2365//#testresult/8531fc2a40d498af","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675023326455,"stop":1675023326597,"duration":142}}]},"tags":[]},"source":"9aa5b50df185bab6.json","parameterValues":["{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"]}