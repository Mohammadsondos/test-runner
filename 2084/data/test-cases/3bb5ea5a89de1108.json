{"uid":"3bb5ea5a89de1108","name":"test_can_create_connection[Test for Acala, url: wss://acala.polkawallet.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0e1a867151b3f97288d7a72234d50dbf","time":{"start":1671034323288,"stop":1671034323881,"duration":593},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala.polkawallet.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"6f91ba1c53651aaa","name":"stdout","source":"6f91ba1c53651aaa.txt","type":"text/plain","size":232}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-51"},{"name":"thread","value":"1691-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eccf502702dd9752","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671034312632,"stop":1671034313217,"duration":585}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":88,"skipped":0,"passed":265,"unknown":0,"total":353},"items":[{"uid":"4c16e091cb78e13","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/4c16e091cb78e13","status":"passed","time":{"start":1671019499899,"stop":1671019501735,"duration":1836}},{"uid":"e999778e5903e78","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/e999778e5903e78","status":"passed","time":{"start":1671005103465,"stop":1671005104754,"duration":1289}},{"uid":"f0eec57a07b07b","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/f0eec57a07b07b","status":"passed","time":{"start":1670990694608,"stop":1670990695279,"duration":671}},{"uid":"ac7f7a030acfc8dc","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/ac7f7a030acfc8dc","status":"passed","time":{"start":1670976874544,"stop":1670976876701,"duration":2157}},{"uid":"59ed40962b72bc55","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/59ed40962b72bc55","status":"passed","time":{"start":1670961879946,"stop":1670961880718,"duration":772}},{"uid":"8960afae58882cec","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/8960afae58882cec","status":"passed","time":{"start":1670947466845,"stop":1670947469626,"duration":2781}},{"uid":"5502609fb81e1218","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/5502609fb81e1218","status":"passed","time":{"start":1670933154360,"stop":1670933155533,"duration":1173}},{"uid":"66c266a11ca1b9de","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/66c266a11ca1b9de","status":"passed","time":{"start":1670918712732,"stop":1670918713972,"duration":1240}},{"uid":"92be5287c46dda6e","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/92be5287c46dda6e","status":"passed","time":{"start":1670904254049,"stop":1670904255472,"duration":1423}},{"uid":"b83776661dd14676","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/b83776661dd14676","status":"passed","time":{"start":1670890486220,"stop":1670890487496,"duration":1276}},{"uid":"b75208533d7bd3a6","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/b75208533d7bd3a6","status":"passed","time":{"start":1670875435604,"stop":1670875436470,"duration":866}},{"uid":"e3ccd1bea800de3c","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/e3ccd1bea800de3c","status":"passed","time":{"start":1670861102838,"stop":1670861103826,"duration":988}},{"uid":"e9ca94344875e556","reportUrl":"https://nova-wallet.github.io/test-runner/2071//#testresult/e9ca94344875e556","status":"passed","time":{"start":1670846774269,"stop":1670846775408,"duration":1139}},{"uid":"599a0d768576a064","reportUrl":"https://nova-wallet.github.io/test-runner/2070//#testresult/599a0d768576a064","status":"passed","time":{"start":1670832296706,"stop":1670832298011,"duration":1305}},{"uid":"c756349fba8faf70","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/c756349fba8faf70","status":"passed","time":{"start":1670817920981,"stop":1670817922285,"duration":1304}},{"uid":"912a732c1a34e0d1","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/912a732c1a34e0d1","status":"passed","time":{"start":1670804090841,"stop":1670804091642,"duration":801}},{"uid":"639512d1b654f293","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/639512d1b654f293","status":"passed","time":{"start":1670789049714,"stop":1670789051105,"duration":1391}},{"uid":"816d3ac88a2762d3","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/816d3ac88a2762d3","status":"passed","time":{"start":1670774645278,"stop":1670774646167,"duration":889}},{"uid":"b6ed277dbcf00975","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/b6ed277dbcf00975","status":"passed","time":{"start":1670760348642,"stop":1670760350077,"duration":1435}},{"uid":"ec69d87218d898e6","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/ec69d87218d898e6","status":"passed","time":{"start":1670745939081,"stop":1670745939947,"duration":866}}]},"tags":[]},"source":"3bb5ea5a89de1108.json","parameterValues":["{'url': 'wss://acala.polkawallet.io', 'name': 'Acala'}"]}