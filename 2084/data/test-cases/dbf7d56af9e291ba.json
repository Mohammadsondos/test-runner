{"uid":"dbf7d56af9e291ba","name":"test_can_create_connection[Test for QUARTZ, url: wss://us-ws-quartz.unique.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c90170add3f7fc11fe94a138a71d8345","time":{"start":1671034177938,"stop":1671034307123,"duration":129185},"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'QUARTZ', 'url': 'wss://us-ws-quartz.unique.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:130: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:197: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('104.22.76.170', 443)), (<AddressFamily.AF_INET: 2>...43, 0, 0)), (<AddressFamily.AF_INET6: 10>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('2606:4700:10::6816:4caa', 443, 0, 0))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:185: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'QUARTZ', 'url': 'wss://us-ws-quartz.unique.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:130: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:197: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('104.22.76.170', 443)), (<AddressFamily.AF_INET: 2>...43, 0, 0)), (<AddressFamily.AF_INET6: 10>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('2606:4700:10::6816:4caa', 443, 0, 0))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:185: TimeoutError","steps":[],"attachments":[{"uid":"4c5c090962bca8","name":"stdout","source":"4c5c090962bca8.txt","type":"text/plain","size":234}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-51"},{"name":"thread","value":"1691-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://us-ws-quartz.unique.network', 'name': 'QUARTZ'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"594860babd6193d3","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1671034037323,"stop":1671034167859,"duration":130536}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":298,"unknown":0,"total":353},"items":[{"uid":"a9c8f892448a8b08","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/a9c8f892448a8b08","status":"passed","time":{"start":1671019496160,"stop":1671019496285,"duration":125}},{"uid":"849aa0a441062231","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/849aa0a441062231","status":"passed","time":{"start":1671005098788,"stop":1671005099097,"duration":309}},{"uid":"54b86a4b177515b8","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/54b86a4b177515b8","status":"passed","time":{"start":1670990689408,"stop":1670990689795,"duration":387}},{"uid":"c544a7754494261b","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/c544a7754494261b","status":"passed","time":{"start":1670976870837,"stop":1670976870948,"duration":111}},{"uid":"aed1c999cf04c268","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/aed1c999cf04c268","status":"passed","time":{"start":1670961875116,"stop":1670961875448,"duration":332}},{"uid":"47807e7a6afe0b66","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/47807e7a6afe0b66","status":"passed","time":{"start":1670947452339,"stop":1670947452457,"duration":118}},{"uid":"b0a761c969dabda2","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/b0a761c969dabda2","status":"passed","time":{"start":1670933149733,"stop":1670933150033,"duration":300}},{"uid":"7d5cf8fb4ef59add","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/7d5cf8fb4ef59add","status":"passed","time":{"start":1670918708210,"stop":1670918708503,"duration":293}},{"uid":"9d793a130fc94f43","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/9d793a130fc94f43","status":"passed","time":{"start":1670904250057,"stop":1670904250168,"duration":111}},{"uid":"8f8499d61609e6bb","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/8f8499d61609e6bb","status":"passed","time":{"start":1670890481418,"stop":1670890481737,"duration":319}},{"uid":"e30d48062e7b0c37","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/e30d48062e7b0c37","status":"passed","time":{"start":1670875431708,"stop":1670875431875,"duration":167}},{"uid":"e2bdb166c78ebd67","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/e2bdb166c78ebd67","status":"passed","time":{"start":1670861097333,"stop":1670861097739,"duration":406}},{"uid":"a15798045389d1c7","reportUrl":"https://nova-wallet.github.io/test-runner/2071//#testresult/a15798045389d1c7","status":"passed","time":{"start":1670846758445,"stop":1670846758773,"duration":328}},{"uid":"e3a2432b4be12da7","reportUrl":"https://nova-wallet.github.io/test-runner/2070//#testresult/e3a2432b4be12da7","status":"passed","time":{"start":1670832293060,"stop":1670832293135,"duration":75}},{"uid":"dfae0c9efeb413bc","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/dfae0c9efeb413bc","status":"passed","time":{"start":1670817916497,"stop":1670817916770,"duration":273}},{"uid":"c9e608da473268c8","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/c9e608da473268c8","status":"passed","time":{"start":1670804086339,"stop":1670804086650,"duration":311}},{"uid":"b2d62a3dc2ab5af9","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/b2d62a3dc2ab5af9","status":"passed","time":{"start":1670789045902,"stop":1670789046053,"duration":151}},{"uid":"f2874db78ff2fdb3","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/f2874db78ff2fdb3","status":"passed","time":{"start":1670774631128,"stop":1670774631215,"duration":87}},{"uid":"d78368893f4ce206","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/d78368893f4ce206","status":"passed","time":{"start":1670760343352,"stop":1670760343714,"duration":362}},{"uid":"4ddf9b3bd4d6ac9e","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/4ddf9b3bd4d6ac9e","status":"passed","time":{"start":1670745935511,"stop":1670745935598,"duration":87}}]},"tags":[]},"source":"dbf7d56af9e291ba.json","parameterValues":["{'url': 'wss://us-ws-quartz.unique.network', 'name': 'QUARTZ'}"]}