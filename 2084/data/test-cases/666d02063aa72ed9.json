{"uid":"666d02063aa72ed9","name":"test_can_create_connection[Test for Tinkernet, url: wss://tinker.invarch.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d05bfdf1289b5d816007efa824eb7e47","time":{"start":1671034218262,"stop":1671034218476,"duration":214},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://tinker.invarch.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tinkernet', 'url': 'wss://tinker.invarch.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e63715b8baa257eb","name":"stdout","source":"e63715b8baa257eb.txt","type":"text/plain","size":236}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az408-51"},{"name":"thread","value":"1688-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://tinker.invarch.network', 'name': 'Tinkernet'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"836a5aa94d0145be","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671034207915,"stop":1671034208184,"duration":269}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":103,"skipped":0,"passed":250,"unknown":0,"total":353},"items":[{"uid":"688420079bf9d1fe","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/688420079bf9d1fe","status":"passed","time":{"start":1671019630560,"stop":1671019630629,"duration":69}},{"uid":"7d5e97a34cfd51c4","reportUrl":"https://nova-wallet.github.io/test-runner/2082//#testresult/7d5e97a34cfd51c4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1671005221433,"stop":1671005221625,"duration":192}},{"uid":"e8399348153408b2","reportUrl":"https://nova-wallet.github.io/test-runner/2081//#testresult/e8399348153408b2","status":"passed","time":{"start":1670990816183,"stop":1670990816567,"duration":384}},{"uid":"fc48b5f202320fab","reportUrl":"https://nova-wallet.github.io/test-runner/2080//#testresult/fc48b5f202320fab","status":"passed","time":{"start":1670976991253,"stop":1670976991346,"duration":93}},{"uid":"c9bb18de892bc50d","reportUrl":"https://nova-wallet.github.io/test-runner/2079//#testresult/c9bb18de892bc50d","status":"passed","time":{"start":1670961983258,"stop":1670961983599,"duration":341}},{"uid":"e624f2c764c54425","reportUrl":"https://nova-wallet.github.io/test-runner/2078//#testresult/e624f2c764c54425","status":"passed","time":{"start":1670947590218,"stop":1670947590580,"duration":362}},{"uid":"dbdec3e30f464e5f","reportUrl":"https://nova-wallet.github.io/test-runner/2077//#testresult/dbdec3e30f464e5f","status":"passed","time":{"start":1670933261665,"stop":1670933261932,"duration":267}},{"uid":"c07269ccdf8d5622","reportUrl":"https://nova-wallet.github.io/test-runner/2076//#testresult/c07269ccdf8d5622","status":"passed","time":{"start":1670918811564,"stop":1670918811850,"duration":286}},{"uid":"c8af225ffd4cdcb4","reportUrl":"https://nova-wallet.github.io/test-runner/2075//#testresult/c8af225ffd4cdcb4","status":"passed","time":{"start":1670904330602,"stop":1670904330691,"duration":89}},{"uid":"c7abc1dbcb4956bb","reportUrl":"https://nova-wallet.github.io/test-runner/2074//#testresult/c7abc1dbcb4956bb","status":"passed","time":{"start":1670890520630,"stop":1670890520909,"duration":279}},{"uid":"1ebb6e58e87c354a","reportUrl":"https://nova-wallet.github.io/test-runner/2073//#testresult/1ebb6e58e87c354a","status":"passed","time":{"start":1670875504969,"stop":1670875505271,"duration":302}},{"uid":"782b84c5b6342933","reportUrl":"https://nova-wallet.github.io/test-runner/2072//#testresult/782b84c5b6342933","status":"passed","time":{"start":1670861142345,"stop":1670861142853,"duration":508}},{"uid":"feed6aa8bf2cf3b6","reportUrl":"https://nova-wallet.github.io/test-runner/2071//#testresult/feed6aa8bf2cf3b6","status":"passed","time":{"start":1670846810089,"stop":1670846810478,"duration":389}},{"uid":"2028f31421bbdd2b","reportUrl":"https://nova-wallet.github.io/test-runner/2070//#testresult/2028f31421bbdd2b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670832375331,"stop":1670832375382,"duration":51}},{"uid":"64ed27605401fd34","reportUrl":"https://nova-wallet.github.io/test-runner/2069//#testresult/64ed27605401fd34","status":"passed","time":{"start":1670817949002,"stop":1670817949317,"duration":315}},{"uid":"f72dc9d28e51837f","reportUrl":"https://nova-wallet.github.io/test-runner/2068//#testresult/f72dc9d28e51837f","status":"passed","time":{"start":1670804133567,"stop":1670804133891,"duration":324}},{"uid":"46ba9f3cf3adc5e","reportUrl":"https://nova-wallet.github.io/test-runner/2067//#testresult/46ba9f3cf3adc5e","status":"passed","time":{"start":1670789130718,"stop":1670789130826,"duration":108}},{"uid":"720e02d529f317e6","reportUrl":"https://nova-wallet.github.io/test-runner/2066//#testresult/720e02d529f317e6","status":"passed","time":{"start":1670774734008,"stop":1670774734079,"duration":71}},{"uid":"7b2692c02cb3ccc1","reportUrl":"https://nova-wallet.github.io/test-runner/2065//#testresult/7b2692c02cb3ccc1","status":"passed","time":{"start":1670760392839,"stop":1670760393260,"duration":421}},{"uid":"c922e635e9f855e8","reportUrl":"https://nova-wallet.github.io/test-runner/2064//#testresult/c922e635e9f855e8","status":"passed","time":{"start":1670746019142,"stop":1670746019202,"duration":60}}]},"tags":[]},"source":"666d02063aa72ed9.json","parameterValues":["{'url': 'wss://tinker.invarch.network', 'name': 'Tinkernet'}"]}