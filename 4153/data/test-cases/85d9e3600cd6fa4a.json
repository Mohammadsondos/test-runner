{"uid":"85d9e3600cd6fa4a","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1700222589391,"stop":1700222589391,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_has_new_assets[Test for DAO IPCI]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1700222589391,"stop":1700222589794,"duration":403},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_has_new_assets[Test for DAO IPCI]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c5abbb93e5d34fcf","name":"stdout","source":"c5abbb93e5d34fcf.txt","type":"text/plain","size":1361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1016-119"},{"name":"thread","value":"2169-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f0cce826680>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8db091c592f8b25e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1700222573960,"stop":1700222573960,"duration":0}},{"uid":"e6757eafbeb14703","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1700222558605,"stop":1700222558605,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":70,"skipped":0,"passed":432,"unknown":0,"total":502},"items":[{"uid":"d3fbbb56f4db7883","reportUrl":"https://novasamatech.github.io/test-runner/4152//#testresult/d3fbbb56f4db7883","status":"passed","time":{"start":1700208173466,"stop":1700208174360,"duration":894}},{"uid":"e3e4292c67728f81","reportUrl":"https://novasamatech.github.io/test-runner/4151//#testresult/e3e4292c67728f81","status":"passed","time":{"start":1700193723749,"stop":1700193724529,"duration":780}},{"uid":"8351d777c9696323","reportUrl":"https://novasamatech.github.io/test-runner/4150//#testresult/8351d777c9696323","status":"passed","time":{"start":1700179385273,"stop":1700179385859,"duration":586}},{"uid":"d3620ee9526c3f72","reportUrl":"https://novasamatech.github.io/test-runner/4149//#testresult/d3620ee9526c3f72","status":"passed","time":{"start":1700164925500,"stop":1700164926139,"duration":639}},{"uid":"2791c122eaeaf8b","reportUrl":"https://novasamatech.github.io/test-runner/4148//#testresult/2791c122eaeaf8b","status":"passed","time":{"start":1700150611136,"stop":1700150611495,"duration":359}},{"uid":"d066894300271efc","reportUrl":"https://novasamatech.github.io/test-runner/4147//#testresult/d066894300271efc","status":"passed","time":{"start":1700136155351,"stop":1700136156024,"duration":673}},{"uid":"68ab55b5d68b1e69","reportUrl":"https://novasamatech.github.io/test-runner/4146//#testresult/68ab55b5d68b1e69","status":"passed","time":{"start":1700121749226,"stop":1700121749690,"duration":464}},{"uid":"e13b7a43d610bc8","reportUrl":"https://novasamatech.github.io/test-runner/4145//#testresult/e13b7a43d610bc8","status":"passed","time":{"start":1700107339669,"stop":1700107340547,"duration":878}},{"uid":"fd15b7109b7cc43b","reportUrl":"https://novasamatech.github.io/test-runner/4144//#testresult/fd15b7109b7cc43b","status":"passed","time":{"start":1700092979354,"stop":1700092979989,"duration":635}},{"uid":"1ba887874d77018a","reportUrl":"https://novasamatech.github.io/test-runner/4143//#testresult/1ba887874d77018a","status":"passed","time":{"start":1700078556042,"stop":1700078556563,"duration":521}},{"uid":"73fcc12ab9ad5dc2","reportUrl":"https://novasamatech.github.io/test-runner/4142//#testresult/73fcc12ab9ad5dc2","status":"passed","time":{"start":1700064137538,"stop":1700064137907,"duration":369}},{"uid":"a05ef4b844efad47","reportUrl":"https://novasamatech.github.io/test-runner/4141//#testresult/a05ef4b844efad47","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1700049801800,"stop":1700049801800,"duration":0}},{"uid":"eaa65f8a4014982","reportUrl":"https://novasamatech.github.io/test-runner/4130//#testresult/eaa65f8a4014982","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699891403338,"stop":1699891403338,"duration":0}},{"uid":"51e4f4a19af0f7a0","reportUrl":"https://novasamatech.github.io/test-runner/4129//#testresult/51e4f4a19af0f7a0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699877004326,"stop":1699877004326,"duration":0}},{"uid":"41fa633b9048daf2","reportUrl":"https://novasamatech.github.io/test-runner/4128//#testresult/41fa633b9048daf2","status":"passed","time":{"start":1699862534479,"stop":1699862539985,"duration":5506}},{"uid":"7cecfb1adf2f9dac","reportUrl":"https://novasamatech.github.io/test-runner/4127//#testresult/7cecfb1adf2f9dac","status":"passed","time":{"start":1699848172603,"stop":1699848178634,"duration":6031}},{"uid":"628b62869128f2c3","reportUrl":"https://novasamatech.github.io/test-runner/4126//#testresult/628b62869128f2c3","status":"passed","time":{"start":1699833767837,"stop":1699833772936,"duration":5099}},{"uid":"7be2495ade972556","reportUrl":"https://novasamatech.github.io/test-runner/4125//#testresult/7be2495ade972556","status":"passed","time":{"start":1699819376459,"stop":1699819379970,"duration":3511}},{"uid":"1ecaae749ac71761","reportUrl":"https://novasamatech.github.io/test-runner/4124//#testresult/1ecaae749ac71761","status":"passed","time":{"start":1699804943659,"stop":1699804946860,"duration":3201}},{"uid":"efd9b5e017f8b99c","reportUrl":"https://novasamatech.github.io/test-runner/4123//#testresult/efd9b5e017f8b99c","status":"passed","time":{"start":1699790565070,"stop":1699790568863,"duration":3793}}]},"tags":[]},"source":"85d9e3600cd6fa4a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0cce826680>"]}