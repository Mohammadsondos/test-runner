{"uid":"63c40b338891010b","name":"test_can_create_connection[Test for Hashed Network, url: wss://c2.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c89828a53a64d5be0404b3846fb6bd54","time":{"start":1689797086430,"stop":1689797086483,"duration":53},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 20:04:46 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 20:04:46 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 20:04:46 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 20:04:46 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"290ef28d4cbeb873","name":"stdout","source":"290ef28d4cbeb873.txt","type":"text/plain","size":1098}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az617-832"},{"name":"thread","value":"1928-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8d73a0814631992c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 20:04:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689797071289,"stop":1689797071316,"duration":27}},{"uid":"a16d9a65b83911ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 20:04:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689797056063,"stop":1689797056116,"duration":53}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":115,"skipped":0,"passed":308,"unknown":0,"total":423},"items":[{"uid":"e858fff7a3e2043b","reportUrl":"https://novasamatech.github.io/test-runner/3417//#testresult/e858fff7a3e2043b","status":"passed","time":{"start":1689782650694,"stop":1689782650752,"duration":58}},{"uid":"a102b89c14390560","reportUrl":"https://novasamatech.github.io/test-runner/3416//#testresult/a102b89c14390560","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 12:05:40 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689768340112,"stop":1689768340139,"duration":27}},{"uid":"58cba2e162960daa","reportUrl":"https://novasamatech.github.io/test-runner/3415//#testresult/58cba2e162960daa","status":"passed","time":{"start":1689753861224,"stop":1689753861281,"duration":57}},{"uid":"bd79a6ef877b56c5","reportUrl":"https://novasamatech.github.io/test-runner/3414//#testresult/bd79a6ef877b56c5","status":"passed","time":{"start":1689739756872,"stop":1689739757187,"duration":315}},{"uid":"35c0c4d8b71534fd","reportUrl":"https://novasamatech.github.io/test-runner/3413//#testresult/35c0c4d8b71534fd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Wed, 19 Jul 2023 00:19:51 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689725990896,"stop":1689725991065,"duration":169}},{"uid":"1064f1f422276377","reportUrl":"https://novasamatech.github.io/test-runner/3412//#testresult/1064f1f422276377","status":"passed","time":{"start":1689710649739,"stop":1689710649775,"duration":36}},{"uid":"bc6bb4e0e3e5041a","reportUrl":"https://novasamatech.github.io/test-runner/3411//#testresult/bc6bb4e0e3e5041a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 18 Jul 2023 16:04:58 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689696298060,"stop":1689696298258,"duration":198}},{"uid":"76d15bf913714c51","reportUrl":"https://novasamatech.github.io/test-runner/3410//#testresult/76d15bf913714c51","status":"passed","time":{"start":1689681929904,"stop":1689681930134,"duration":230}},{"uid":"233c48fb6755964a","reportUrl":"https://novasamatech.github.io/test-runner/3409//#testresult/233c48fb6755964a","status":"passed","time":{"start":1689667485415,"stop":1689667485501,"duration":86}},{"uid":"b136f262944efc54","reportUrl":"https://novasamatech.github.io/test-runner/3408//#testresult/b136f262944efc54","status":"passed","time":{"start":1689653048113,"stop":1689653048169,"duration":56}},{"uid":"75f2f63e2c047d0d","reportUrl":"https://novasamatech.github.io/test-runner/3407//#testresult/75f2f63e2c047d0d","status":"passed","time":{"start":1689639768438,"stop":1689639768730,"duration":292}},{"uid":"7e8b13ae57253d6f","reportUrl":"https://novasamatech.github.io/test-runner/3406//#testresult/7e8b13ae57253d6f","status":"passed","time":{"start":1689624265201,"stop":1689624265278,"duration":77}},{"uid":"6378ccbecf3b52d3","reportUrl":"https://novasamatech.github.io/test-runner/3405//#testresult/6378ccbecf3b52d3","status":"passed","time":{"start":1689609882676,"stop":1689609882993,"duration":317}},{"uid":"7191f2f677103c43","reportUrl":"https://novasamatech.github.io/test-runner/3404//#testresult/7191f2f677103c43","status":"passed","time":{"start":1689595543091,"stop":1689595543331,"duration":240}},{"uid":"9a973479e08498c7","reportUrl":"https://novasamatech.github.io/test-runner/3403//#testresult/9a973479e08498c7","status":"passed","time":{"start":1689581113746,"stop":1689581113964,"duration":218}},{"uid":"320fa618928a7085","reportUrl":"https://novasamatech.github.io/test-runner/3402//#testresult/320fa618928a7085","status":"passed","time":{"start":1689566672146,"stop":1689566672385,"duration":239}},{"uid":"5ea48662115bc012","reportUrl":"https://novasamatech.github.io/test-runner/3401//#testresult/5ea48662115bc012","status":"passed","time":{"start":1689553050508,"stop":1689553050751,"duration":243}},{"uid":"c1178fbd92a55166","reportUrl":"https://novasamatech.github.io/test-runner/3400//#testresult/c1178fbd92a55166","status":"passed","time":{"start":1689537878012,"stop":1689537878354,"duration":342}},{"uid":"4f85a2925a5aaa43","reportUrl":"https://novasamatech.github.io/test-runner/3399//#testresult/4f85a2925a5aaa43","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:45 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689523485076,"stop":1689523485306,"duration":230}},{"uid":"c70c238e16c02d25","reportUrl":"https://novasamatech.github.io/test-runner/3398//#testresult/c70c238e16c02d25","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 12:05:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689509131472,"stop":1689509131517,"duration":45}}]},"tags":[]},"source":"63c40b338891010b.json","parameterValues":["{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"]}