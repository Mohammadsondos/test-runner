{"uid":"d778b35759ff4d6b","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1689797139080,"stop":1689797139460,"duration":380},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0c97bc4ac0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0c9c1c9330>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0c97bc4ac0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0c9c1c9330>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"1eb47e7d8dcc73b4","name":"stdout","source":"1eb47e7d8dcc73b4.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az454-709"},{"name":"thread","value":"1928-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0c9c1c9330>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ef68aee92196575f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689797123479,"stop":1689797124043,"duration":564}},{"uid":"d27c69e18834a9f7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689797107277,"stop":1689797108429,"duration":1152}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":102,"skipped":0,"passed":320,"unknown":0,"total":422},"items":[{"uid":"10fa65bbe7adb23e","reportUrl":"https://novasamatech.github.io/test-runner/3417//#testresult/10fa65bbe7adb23e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689782743726,"stop":1689782744180,"duration":454}},{"uid":"99a755dbbc7a021","reportUrl":"https://novasamatech.github.io/test-runner/3416//#testresult/99a755dbbc7a021","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689768380958,"stop":1689768381160,"duration":202}},{"uid":"f456f1f1608a0c0","reportUrl":"https://novasamatech.github.io/test-runner/3415//#testresult/f456f1f1608a0c0","status":"passed","time":{"start":1689753903693,"stop":1689753913002,"duration":9309}},{"uid":"c087e92e1ab6fe10","reportUrl":"https://novasamatech.github.io/test-runner/3414//#testresult/c087e92e1ab6fe10","status":"passed","time":{"start":1689739799003,"stop":1689739808885,"duration":9882}},{"uid":"5216a98fb733dac6","reportUrl":"https://novasamatech.github.io/test-runner/3413//#testresult/5216a98fb733dac6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689726029954,"stop":1689726030164,"duration":210}},{"uid":"d05bc012515d62f5","reportUrl":"https://novasamatech.github.io/test-runner/3412//#testresult/d05bc012515d62f5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689710707627,"stop":1689710707946,"duration":319}},{"uid":"1c775278805a02b","reportUrl":"https://novasamatech.github.io/test-runner/3411//#testresult/1c775278805a02b","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689696350953,"stop":1689696351297,"duration":344}},{"uid":"578d7ebfe8797107","reportUrl":"https://novasamatech.github.io/test-runner/3410//#testresult/578d7ebfe8797107","status":"passed","time":{"start":1689681977420,"stop":1689681980860,"duration":3440}},{"uid":"136d1483ad257da","reportUrl":"https://novasamatech.github.io/test-runner/3409//#testresult/136d1483ad257da","status":"passed","time":{"start":1689667548417,"stop":1689667550697,"duration":2280}},{"uid":"bdaaecc9739d3acb","reportUrl":"https://novasamatech.github.io/test-runner/3408//#testresult/bdaaecc9739d3acb","status":"passed","time":{"start":1689653096842,"stop":1689653107440,"duration":10598}},{"uid":"24ecf79eb7c6b2c2","reportUrl":"https://novasamatech.github.io/test-runner/3407//#testresult/24ecf79eb7c6b2c2","status":"passed","time":{"start":1689639796647,"stop":1689639802431,"duration":5784}},{"uid":"298d70ddf2164f9b","reportUrl":"https://novasamatech.github.io/test-runner/3406//#testresult/298d70ddf2164f9b","status":"passed","time":{"start":1689624291596,"stop":1689624300481,"duration":8885}},{"uid":"2b1bbb41669f22f7","reportUrl":"https://novasamatech.github.io/test-runner/3405//#testresult/2b1bbb41669f22f7","status":"passed","time":{"start":1689609911506,"stop":1689609923155,"duration":11649}},{"uid":"f88c61a3c9150a53","reportUrl":"https://novasamatech.github.io/test-runner/3404//#testresult/f88c61a3c9150a53","status":"passed","time":{"start":1689595572763,"stop":1689595578567,"duration":5804}},{"uid":"5d2c4265ecb2fb77","reportUrl":"https://novasamatech.github.io/test-runner/3403//#testresult/5d2c4265ecb2fb77","status":"passed","time":{"start":1689581171965,"stop":1689581180413,"duration":8448}},{"uid":"2f814f6a9a7c727c","reportUrl":"https://novasamatech.github.io/test-runner/3402//#testresult/2f814f6a9a7c727c","status":"passed","time":{"start":1689566700671,"stop":1689566709536,"duration":8865}},{"uid":"cee2079edfcbebfe","reportUrl":"https://novasamatech.github.io/test-runner/3401//#testresult/cee2079edfcbebfe","status":"passed","time":{"start":1689553132084,"stop":1689553145984,"duration":13900}},{"uid":"ec9e728109c9a879","reportUrl":"https://novasamatech.github.io/test-runner/3400//#testresult/ec9e728109c9a879","status":"passed","time":{"start":1689537892719,"stop":1689537895034,"duration":2315}},{"uid":"4183bdc058e9993e","reportUrl":"https://novasamatech.github.io/test-runner/3399//#testresult/4183bdc058e9993e","status":"passed","time":{"start":1689523499386,"stop":1689523501395,"duration":2009}},{"uid":"a0e0ab1e4dd38655","reportUrl":"https://novasamatech.github.io/test-runner/3398//#testresult/a0e0ab1e4dd38655","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689509201058,"stop":1689509201438,"duration":380}}]},"tags":[]},"source":"d778b35759ff4d6b.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0c9c1c9330>"]}