{"uid":"8a1ab3ca7a7ee33","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1696104206551,"stop":1696104207002,"duration":451},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fe38287db70>\nchain = <scripts.utils.chain_model.Chain object at 0x7fe3828d2920>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fe38287db70>\nchain = <scripts.utils.chain_model.Chain object at 0x7fe3828d2920>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"8ea604b9882e5513","name":"stdout","source":"8ea604b9882e5513.txt","type":"text/plain","size":1338}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az419-29"},{"name":"thread","value":"2072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fe3828d2920>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eec98269634353e9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696104190912,"stop":1696104191510,"duration":598}},{"uid":"27bcbb82005e898c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696104174978,"stop":1696104175877,"duration":899}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":217,"unknown":0,"total":224},"items":[{"uid":"40a24b8ab07a53cc","reportUrl":"https://novasamatech.github.io/test-runner/3864//#testresult/40a24b8ab07a53cc","status":"passed","time":{"start":1696089758114,"stop":1696089760253,"duration":2139}},{"uid":"60517a4c4eebb6cc","reportUrl":"https://novasamatech.github.io/test-runner/3863//#testresult/60517a4c4eebb6cc","status":"passed","time":{"start":1696075343431,"stop":1696075345612,"duration":2181}},{"uid":"95ac103c0eec7065","reportUrl":"https://novasamatech.github.io/test-runner/3862//#testresult/95ac103c0eec7065","status":"passed","time":{"start":1696061000695,"stop":1696061009046,"duration":8351}},{"uid":"23918dfe2345ade5","reportUrl":"https://novasamatech.github.io/test-runner/3861//#testresult/23918dfe2345ade5","status":"passed","time":{"start":1696046585265,"stop":1696046593285,"duration":8020}},{"uid":"26e6240f627239e8","reportUrl":"https://novasamatech.github.io/test-runner/3860//#testresult/26e6240f627239e8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696032219454,"stop":1696032220000,"duration":546}},{"uid":"cfb17b8b1a8c7034","reportUrl":"https://novasamatech.github.io/test-runner/3859//#testresult/cfb17b8b1a8c7034","status":"passed","time":{"start":1696017794941,"stop":1696017798959,"duration":4018}},{"uid":"1da67c336340a360","reportUrl":"https://novasamatech.github.io/test-runner/3858//#testresult/1da67c336340a360","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696003398827,"stop":1696003399415,"duration":588}},{"uid":"ea9c87a6246357e4","reportUrl":"https://novasamatech.github.io/test-runner/3857//#testresult/ea9c87a6246357e4","status":"passed","time":{"start":1695988964209,"stop":1695988969571,"duration":5362}},{"uid":"cb203cdc769c35a","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/cb203cdc769c35a","status":"passed","time":{"start":1695974562581,"stop":1695974565977,"duration":3396}},{"uid":"acf52dd3de48dfb","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/acf52dd3de48dfb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695960189024,"stop":1695960189617,"duration":593}},{"uid":"6124de1c4f709308","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/6124de1c4f709308","status":"passed","time":{"start":1695945822946,"stop":1695945826924,"duration":3978}},{"uid":"cc9ed9ef30a49e59","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/cc9ed9ef30a49e59","status":"passed","time":{"start":1695931368049,"stop":1695931371191,"duration":3142}},{"uid":"877a05972c05d0ea","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/877a05972c05d0ea","status":"passed","time":{"start":1695916972468,"stop":1695916977963,"duration":5495}},{"uid":"77fe434b58a92c89","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/77fe434b58a92c89","status":"passed","time":{"start":1695902601206,"stop":1695902608576,"duration":7370}},{"uid":"e3dd01c8dcd40c9","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/e3dd01c8dcd40c9","status":"passed","time":{"start":1695888180062,"stop":1695888183893,"duration":3831}},{"uid":"fa85ce5ccdcfadbf","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/fa85ce5ccdcfadbf","status":"passed","time":{"start":1695873767407,"stop":1695873771670,"duration":4263}},{"uid":"fa4c08337774ffdf","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/fa4c08337774ffdf","status":"passed","time":{"start":1695859403455,"stop":1695859407331,"duration":3876}},{"uid":"754adcbbc97f7c6b","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/754adcbbc97f7c6b","status":"passed","time":{"start":1695845003991,"stop":1695845007547,"duration":3556}},{"uid":"8957b5044b12cc36","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/8957b5044b12cc36","status":"passed","time":{"start":1695830600976,"stop":1695830604524,"duration":3548}},{"uid":"e6df4d5741b2b3d2","reportUrl":"https://novasamatech.github.io/test-runner/3845//#testresult/e6df4d5741b2b3d2","status":"passed","time":{"start":1695816173582,"stop":1695816176858,"duration":3276}}]},"tags":[]},"source":"8a1ab3ca7a7ee33.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fe3828d2920>"]}