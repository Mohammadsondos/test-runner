{"uid":"9863fc1193ea8dd9","name":"test_can_create_connection[Test for Khala, url: wss://khala-api.phala.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b9ef5d231f3ccda572f27ab1ee01534b","time":{"start":1666743426700,"stop":1666743427215,"duration":515},"status":"broken","statusMessage":"ValueError: scheme https is invalid","statusTrace":"data = {'name': 'Khala', 'url': 'wss://khala-api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:605: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:255: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:117: in connect\n    hostname, port_from_url, resource, is_secure = parse_url(url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nurl = '//khala-api.phala.network/ws'\n\n    def parse_url(url):\n        \"\"\"\n        parse url and the result is tuple of\n        (hostname, port, resource path and the flag of secure mode)\n    \n        Parameters\n        ----------\n        url: str\n            url string.\n        \"\"\"\n        if \":\" not in url:\n            raise ValueError(\"url is invalid\")\n    \n        scheme, url = url.split(\":\", 1)\n    \n        parsed = urlparse(url, scheme=\"http\")\n        if parsed.hostname:\n            hostname = parsed.hostname\n        else:\n            raise ValueError(\"hostname is invalid\")\n        port = 0\n        if parsed.port:\n            port = parsed.port\n    \n        is_secure = False\n        if scheme == \"ws\":\n            if not port:\n                port = 80\n        elif scheme == \"wss\":\n            is_secure = True\n            if not port:\n                port = 443\n        else:\n>           raise ValueError(\"scheme %s is invalid\" % scheme)\nE           ValueError: scheme https is invalid\n\n../../../../.local/lib/python3.8/site-packages/websocket/_url.py:62: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az626-883"},{"name":"thread","value":"1658-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://khala-api.phala.network/ws', 'name': 'Khala'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9863fc1193ea8dd9.json","parameterValues":["{'url': 'wss://khala-api.phala.network/ws', 'name': 'Khala'}"]}