{"uid":"aeaf804aaae465fb","name":"test_can_create_connection[Test for Statemine, url: wss://statemine-rpc.polkadot.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"dfad1ea1444d49766784249e2a4ae0b4","time":{"start":1681387535132,"stop":1681387535423,"duration":291},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","statusTrace":"data = {'name': 'Statemine', 'url': 'wss://statemine-rpc.polkadot.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","statusTrace":"data = {'name': 'Statemine', 'url': 'wss://statemine-rpc.polkadot.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"25cfa227c619d65f","name":"stdout","source":"25cfa227c619d65f.txt","type":"text/plain","size":230}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az577-927"},{"name":"thread","value":"1848-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemine-rpc.polkadot.io', 'name': 'Statemine'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"54e8b4bc4cc34213","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 521 Origin Down","time":{"start":1681387508277,"stop":1681387525001,"duration":16724}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":72,"skipped":0,"passed":921,"unknown":0,"total":993},"items":[{"uid":"573546ad00eab49","reportUrl":"https://nova-wallet.github.io/test-runner/2814//#testresult/573546ad00eab49","status":"passed","time":{"start":1681373064419,"stop":1681373064965,"duration":546}},{"uid":"ca5134ce24ae3988","reportUrl":"https://nova-wallet.github.io/test-runner/2813//#testresult/ca5134ce24ae3988","status":"passed","time":{"start":1681358639002,"stop":1681358639704,"duration":702}},{"uid":"4ae39f2e59d8c4ef","reportUrl":"https://nova-wallet.github.io/test-runner/2812//#testresult/4ae39f2e59d8c4ef","status":"passed","time":{"start":1681344723787,"stop":1681344724363,"duration":576}},{"uid":"bdbe57e7bef08017","reportUrl":"https://nova-wallet.github.io/test-runner/2811//#testresult/bdbe57e7bef08017","status":"passed","time":{"start":1681329839852,"stop":1681329840875,"duration":1023}},{"uid":"9969f807f5b2b5b0","reportUrl":"https://nova-wallet.github.io/test-runner/2810//#testresult/9969f807f5b2b5b0","status":"passed","time":{"start":1681315425962,"stop":1681315426631,"duration":669}},{"uid":"50230aeda056b9ab","reportUrl":"https://nova-wallet.github.io/test-runner/2809//#testresult/50230aeda056b9ab","status":"passed","time":{"start":1681301081071,"stop":1681301081959,"duration":888}},{"uid":"69aa5bf889e4ccf0","reportUrl":"https://nova-wallet.github.io/test-runner/2808//#testresult/69aa5bf889e4ccf0","status":"passed","time":{"start":1681286665969,"stop":1681286666875,"duration":906}},{"uid":"f52aad69deb02957","reportUrl":"https://nova-wallet.github.io/test-runner/2807//#testresult/f52aad69deb02957","status":"passed","time":{"start":1681272233039,"stop":1681272233511,"duration":472}},{"uid":"314238cc39736a2a","reportUrl":"https://nova-wallet.github.io/test-runner/2806//#testresult/314238cc39736a2a","status":"passed","time":{"start":1681258342560,"stop":1681258343330,"duration":770}},{"uid":"42f5e41025da9bd","reportUrl":"https://nova-wallet.github.io/test-runner/2805//#testresult/42f5e41025da9bd","status":"passed","time":{"start":1681243436401,"stop":1681243437121,"duration":720}},{"uid":"ebc08e6af31098b3","reportUrl":"https://nova-wallet.github.io/test-runner/2803//#testresult/ebc08e6af31098b3","status":"passed","time":{"start":1681214706070,"stop":1681214706929,"duration":859}},{"uid":"6e3597bd42a0ba73","reportUrl":"https://nova-wallet.github.io/test-runner/2802//#testresult/6e3597bd42a0ba73","status":"passed","time":{"start":1681200251715,"stop":1681200252367,"duration":652}},{"uid":"b93e64591c6417de","reportUrl":"https://nova-wallet.github.io/test-runner/2801//#testresult/b93e64591c6417de","status":"passed","time":{"start":1681185846289,"stop":1681185847111,"duration":822}},{"uid":"9b5f4142dcad426","reportUrl":"https://nova-wallet.github.io/test-runner/2800//#testresult/9b5f4142dcad426","status":"passed","time":{"start":1681171977598,"stop":1681171978474,"duration":876}},{"uid":"98880e60b980951a","reportUrl":"https://nova-wallet.github.io/test-runner/2799//#testresult/98880e60b980951a","status":"passed","time":{"start":1681157049751,"stop":1681157050659,"duration":908}},{"uid":"6d1de43f4aa39ca","reportUrl":"https://nova-wallet.github.io/test-runner/2798//#testresult/6d1de43f4aa39ca","status":"passed","time":{"start":1681142638084,"stop":1681142638773,"duration":689}},{"uid":"249a0c77ff4dda63","reportUrl":"https://nova-wallet.github.io/test-runner/2797//#testresult/249a0c77ff4dda63","status":"passed","time":{"start":1681128290970,"stop":1681128291582,"duration":612}},{"uid":"b21347bb6e4f2c2c","reportUrl":"https://nova-wallet.github.io/test-runner/2796//#testresult/b21347bb6e4f2c2c","status":"passed","time":{"start":1681113829143,"stop":1681113829609,"duration":466}},{"uid":"a30fe2462655d29d","reportUrl":"https://nova-wallet.github.io/test-runner/2795//#testresult/a30fe2462655d29d","status":"passed","time":{"start":1681099434887,"stop":1681099435618,"duration":731}},{"uid":"76e200d46d83be0f","reportUrl":"https://nova-wallet.github.io/test-runner/2794//#testresult/76e200d46d83be0f","status":"passed","time":{"start":1681085550004,"stop":1681085550914,"duration":910}}]},"tags":[]},"source":"aeaf804aaae465fb.json","parameterValues":["{'url': 'wss://statemine-rpc.polkadot.io', 'name': 'Statemine'}"]}