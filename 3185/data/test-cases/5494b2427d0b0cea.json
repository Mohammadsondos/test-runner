{"uid":"5494b2427d0b0cea","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc-0.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3d8f2ce0558c9bfde019f2a96edd941d","time":{"start":1686442548194,"stop":1686442548733,"duration":539},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Sun, 11 Jun 2023 00:15:48 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Sun, 11 Jun 2023 00:15:48 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Sun, 11 Jun 2023 00:15:48 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Sun, 11 Jun 2023 00:15:48 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"5f8311c5aa433fea","name":"stdout","source":"5f8311c5aa433fea.txt","type":"text/plain","size":1599}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az454-95"},{"name":"thread","value":"1904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bb8bd0f136a0a6e2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Sun, 11 Jun 2023 00:15:32 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1686442532548,"stop":1686442533088,"duration":540}},{"uid":"676ebb07ed6c91a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx', 'date': 'Sun, 11 Jun 2023 00:15:17 GMT', 'content-type': 'text/html', 'content-length': '170', 'connection': 'close', 'strict-transport-security': 'max-age=15724800; includeSubdomains'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1686442516782,"stop":1686442517348,"duration":566}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":219,"unknown":0,"total":226},"items":[{"uid":"3b2364975d7f5822","reportUrl":"https://novasamatech.github.io/test-runner/3184//#testresult/3b2364975d7f5822","status":"passed","time":{"start":1686427468125,"stop":1686427468866,"duration":741}},{"uid":"897022a6bcd8a9cd","reportUrl":"https://novasamatech.github.io/test-runner/3183//#testresult/897022a6bcd8a9cd","status":"passed","time":{"start":1686413081032,"stop":1686413081775,"duration":743}},{"uid":"530167e2bc99bd46","reportUrl":"https://novasamatech.github.io/test-runner/3182//#testresult/530167e2bc99bd46","status":"passed","time":{"start":1686398716530,"stop":1686398717253,"duration":723}},{"uid":"113a03f664c9c237","reportUrl":"https://novasamatech.github.io/test-runner/3181//#testresult/113a03f664c9c237","status":"passed","time":{"start":1686384238092,"stop":1686384238638,"duration":546}},{"uid":"1e41db3aee277719","reportUrl":"https://novasamatech.github.io/test-runner/3180//#testresult/1e41db3aee277719","status":"passed","time":{"start":1686369847242,"stop":1686369847739,"duration":497}},{"uid":"811a4fb8bc8cd5a5","reportUrl":"https://novasamatech.github.io/test-runner/3179//#testresult/811a4fb8bc8cd5a5","status":"passed","time":{"start":1686355987980,"stop":1686355988065,"duration":85}},{"uid":"cddfa2395f57b393","reportUrl":"https://novasamatech.github.io/test-runner/3178//#testresult/cddfa2395f57b393","status":"passed","time":{"start":1686341034857,"stop":1686341035692,"duration":835}},{"uid":"e3182b055022d554","reportUrl":"https://novasamatech.github.io/test-runner/3177//#testresult/e3182b055022d554","status":"passed","time":{"start":1686326640418,"stop":1686326640919,"duration":501}},{"uid":"7cb33ab36c6d4e8c","reportUrl":"https://novasamatech.github.io/test-runner/3176//#testresult/7cb33ab36c6d4e8c","status":"passed","time":{"start":1686312300260,"stop":1686312301002,"duration":742}},{"uid":"5a855680ea892056","reportUrl":"https://novasamatech.github.io/test-runner/3175//#testresult/5a855680ea892056","status":"passed","time":{"start":1686297839419,"stop":1686297839926,"duration":507}},{"uid":"932231efd6ad667b","reportUrl":"https://novasamatech.github.io/test-runner/3174//#testresult/932231efd6ad667b","status":"passed","time":{"start":1686283447941,"stop":1686283448057,"duration":116}},{"uid":"eee96dafe06b4e8f","reportUrl":"https://novasamatech.github.io/test-runner/3173//#testresult/eee96dafe06b4e8f","status":"passed","time":{"start":1686269688161,"stop":1686269688782,"duration":621}},{"uid":"af7c18b9c4fc0b85","reportUrl":"https://novasamatech.github.io/test-runner/3172//#testresult/af7c18b9c4fc0b85","status":"passed","time":{"start":1686254640039,"stop":1686254640629,"duration":590}},{"uid":"42f010621ec3e329","reportUrl":"https://novasamatech.github.io/test-runner/3171//#testresult/42f010621ec3e329","status":"passed","time":{"start":1686240248176,"stop":1686240248899,"duration":723}},{"uid":"59d6215fcb5a2b8b","reportUrl":"https://novasamatech.github.io/test-runner/3170//#testresult/59d6215fcb5a2b8b","status":"passed","time":{"start":1686225901504,"stop":1686225902130,"duration":626}},{"uid":"d71d3842dc0554f3","reportUrl":"https://novasamatech.github.io/test-runner/3169//#testresult/d71d3842dc0554f3","status":"passed","time":{"start":1686211448683,"stop":1686211449178,"duration":495}},{"uid":"5c84b418c8afa261","reportUrl":"https://novasamatech.github.io/test-runner/3168//#testresult/5c84b418c8afa261","status":"passed","time":{"start":1686197070793,"stop":1686197071295,"duration":502}},{"uid":"c769859426c84ef1","reportUrl":"https://novasamatech.github.io/test-runner/3167//#testresult/c769859426c84ef1","status":"passed","time":{"start":1686183253673,"stop":1686183254068,"duration":395}},{"uid":"d2f66a028d7bc920","reportUrl":"https://novasamatech.github.io/test-runner/3166//#testresult/d2f66a028d7bc920","status":"passed","time":{"start":1686168245585,"stop":1686168245964,"duration":379}},{"uid":"3fd0d72c299520d7","reportUrl":"https://novasamatech.github.io/test-runner/3165//#testresult/3fd0d72c299520d7","status":"passed","time":{"start":1686153860270,"stop":1686153860918,"duration":648}}]},"tags":[]},"source":"5494b2427d0b0cea.json","parameterValues":["{'url': 'wss://acala-rpc-0.aca-api.network', 'name': 'Acala'}"]}