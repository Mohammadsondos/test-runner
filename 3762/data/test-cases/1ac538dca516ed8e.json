{"uid":"1ac538dca516ed8e","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1694621252077,"stop":1694621382457,"duration":130380},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f8226a2da20>\nchain = <scripts.utils.chain_model.Chain object at 0x7f8226984cd0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f8226a2da20>\nchain = <scripts.utils.chain_model.Chain object at 0x7f8226984cd0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"52fac757ce96df30","name":"stdout","source":"52fac757ce96df30.txt","type":"text/plain","size":531}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az407-916"},{"name":"thread","value":"2079-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f8226984cd0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2dbabc1d68e6a20e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694621106670,"stop":1694621237049,"duration":130379}},{"uid":"a0df68828992ce5a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694620961020,"stop":1694621091641,"duration":130621}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":119,"unknown":0,"total":122},"items":[{"uid":"d6eb89eed72489c6","reportUrl":"https://novasamatech.github.io/test-runner/3761//#testresult/d6eb89eed72489c6","status":"passed","time":{"start":1694606585801,"stop":1694606590810,"duration":5009}},{"uid":"d8aca5ffd807e530","reportUrl":"https://novasamatech.github.io/test-runner/3760//#testresult/d8aca5ffd807e530","status":"passed","time":{"start":1694597385330,"stop":1694597389457,"duration":4127}},{"uid":"3bf1005ab1d6cd39","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/3bf1005ab1d6cd39","status":"passed","time":{"start":1694592184158,"stop":1694592188392,"duration":4234}},{"uid":"f04e548d4e2f916c","reportUrl":"https://novasamatech.github.io/test-runner/3758//#testresult/f04e548d4e2f916c","status":"passed","time":{"start":1694577785807,"stop":1694577790940,"duration":5133}},{"uid":"2af1d955f072d4e4","reportUrl":"https://novasamatech.github.io/test-runner/3757//#testresult/2af1d955f072d4e4","status":"passed","time":{"start":1694563439731,"stop":1694563445945,"duration":6214}},{"uid":"de2295fb08108e72","reportUrl":"https://novasamatech.github.io/test-runner/3756//#testresult/de2295fb08108e72","status":"passed","time":{"start":1694549010698,"stop":1694549014503,"duration":3805}},{"uid":"4c7b49573bda9ae7","reportUrl":"https://novasamatech.github.io/test-runner/3755//#testresult/4c7b49573bda9ae7","status":"passed","time":{"start":1694534563457,"stop":1694534566975,"duration":3518}},{"uid":"f3795a3738289828","reportUrl":"https://novasamatech.github.io/test-runner/3754//#testresult/f3795a3738289828","status":"passed","time":{"start":1694520229078,"stop":1694520233907,"duration":4829}},{"uid":"e032efe4c21730f","reportUrl":"https://novasamatech.github.io/test-runner/3753//#testresult/e032efe4c21730f","status":"passed","time":{"start":1694505809508,"stop":1694505815061,"duration":5553}},{"uid":"938f0082fbe017e8","reportUrl":"https://novasamatech.github.io/test-runner/3752//#testresult/938f0082fbe017e8","status":"passed","time":{"start":1694491364551,"stop":1694491368921,"duration":4370}},{"uid":"91b70229f05479cf","reportUrl":"https://novasamatech.github.io/test-runner/3751//#testresult/91b70229f05479cf","status":"passed","time":{"start":1694477009856,"stop":1694477013613,"duration":3757}},{"uid":"1e6fd4534dc4ed3b","reportUrl":"https://novasamatech.github.io/test-runner/3750//#testresult/1e6fd4534dc4ed3b","status":"passed","time":{"start":1694462579030,"stop":1694462582956,"duration":3926}},{"uid":"184a850db6db93ec","reportUrl":"https://novasamatech.github.io/test-runner/3749//#testresult/184a850db6db93ec","status":"passed","time":{"start":1694448184583,"stop":1694448188764,"duration":4181}},{"uid":"c6bba94e18db29c8","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/c6bba94e18db29c8","status":"passed","time":{"start":1694433795769,"stop":1694433801189,"duration":5420}},{"uid":"3312f9d7eb0b2288","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/3312f9d7eb0b2288","status":"passed","time":{"start":1694419449116,"stop":1694419452996,"duration":3880}},{"uid":"1285ea4dc01b2481","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/1285ea4dc01b2481","status":"passed","time":{"start":1694404963359,"stop":1694404967268,"duration":3909}},{"uid":"4c3ee47ac7b802ce","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/4c3ee47ac7b802ce","status":"passed","time":{"start":1694390643416,"stop":1694390648317,"duration":4901}},{"uid":"4450056c97ffa153","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/4450056c97ffa153","status":"passed","time":{"start":1694376182826,"stop":1694376187766,"duration":4940}},{"uid":"6d965142b23939cb","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/6d965142b23939cb","status":"passed","time":{"start":1694361788848,"stop":1694361793929,"duration":5081}},{"uid":"8acc75fc650e942","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/8acc75fc650e942","status":"passed","time":{"start":1694347384048,"stop":1694347388875,"duration":4827}}]},"tags":[]},"source":"1ac538dca516ed8e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f8226984cd0>"]}