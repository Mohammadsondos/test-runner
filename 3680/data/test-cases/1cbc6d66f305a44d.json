{"uid":"1cbc6d66f305a44d","name":"test_has_new_assets[Test for Calamari]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"8edafafb0910af574e27cf9f6c595286","time":{"start":1693454529739,"stop":1693454530332,"duration":593},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0668931660>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0668fd6110>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f0668931660>\nchain = <scripts.utils.chain_model.Chain object at 0x7f0668fd6110>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"d479a2ea3ea72566","name":"stdout","source":"d479a2ea3ea72566.txt","type":"text/plain","size":1605}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az452-978"},{"name":"thread","value":"2053-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f0668fd6110>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2573fc782eb57c8e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693454514162,"stop":1693454514704,"duration":542}},{"uid":"cc9e8f484888cd05","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693454498339,"stop":1693454499119,"duration":780}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":41,"unknown":0,"total":42},"items":[{"uid":"63a09fd9d17ce83e","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/63a09fd9d17ce83e","status":"passed","time":{"start":1693440147653,"stop":1693440154215,"duration":6562}},{"uid":"ab33c3ddae6ac8b6","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/ab33c3ddae6ac8b6","status":"passed","time":{"start":1693425688488,"stop":1693425692160,"duration":3672}},{"uid":"fd6b71eeac6d38f","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/fd6b71eeac6d38f","status":"passed","time":{"start":1693411292243,"stop":1693411294398,"duration":2155}},{"uid":"c59a7504de5c0d8","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/c59a7504de5c0d8","status":"passed","time":{"start":1693396903390,"stop":1693396907510,"duration":4120}},{"uid":"4a5e2246c7a55dee","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/4a5e2246c7a55dee","status":"passed","time":{"start":1693382498884,"stop":1693382503133,"duration":4249}},{"uid":"e5c5c084619f5e41","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/e5c5c084619f5e41","status":"passed","time":{"start":1693368096407,"stop":1693368101312,"duration":4905}},{"uid":"d1ac4c95bdf02d95","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/d1ac4c95bdf02d95","status":"passed","time":{"start":1693353735370,"stop":1693353740265,"duration":4895}},{"uid":"2fa4b750078c53c8","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/2fa4b750078c53c8","status":"passed","time":{"start":1693339300072,"stop":1693339304888,"duration":4816}},{"uid":"7c6d24092888e1d9","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/7c6d24092888e1d9","status":"passed","time":{"start":1693324903858,"stop":1693324909129,"duration":5271}},{"uid":"c2c7ddce42622de8","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/c2c7ddce42622de8","status":"passed","time":{"start":1693310500700,"stop":1693310504101,"duration":3401}},{"uid":"5f798a15ed36dad0","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/5f798a15ed36dad0","status":"passed","time":{"start":1693296100232,"stop":1693296104347,"duration":4115}},{"uid":"cbc5632efde4a54b","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/cbc5632efde4a54b","status":"passed","time":{"start":1693281685332,"stop":1693281689153,"duration":3821}},{"uid":"ab54dafd23b9f549","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/ab54dafd23b9f549","status":"passed","time":{"start":1693267337158,"stop":1693267341104,"duration":3946}},{"uid":"aa239ef44ae405fc","reportUrl":"https://novasamatech.github.io/test-runner/3666//#testresult/aa239ef44ae405fc","status":"passed","time":{"start":1693252888783,"stop":1693252892454,"duration":3671}},{"uid":"8196eb71308b7de5","reportUrl":"https://novasamatech.github.io/test-runner/3665//#testresult/8196eb71308b7de5","status":"passed","time":{"start":1693238485172,"stop":1693238488696,"duration":3524}},{"uid":"42f90dfe3c3dff1","reportUrl":"https://novasamatech.github.io/test-runner/3664//#testresult/42f90dfe3c3dff1","status":"passed","time":{"start":1693224096074,"stop":1693224099964,"duration":3890}},{"uid":"34301fdad5c8c047","reportUrl":"https://novasamatech.github.io/test-runner/3663//#testresult/34301fdad5c8c047","status":"passed","time":{"start":1693209696741,"stop":1693209699881,"duration":3140}},{"uid":"55cb86e896f140ac","reportUrl":"https://novasamatech.github.io/test-runner/3662//#testresult/55cb86e896f140ac","status":"passed","time":{"start":1693195300376,"stop":1693195306773,"duration":6397}},{"uid":"12d931d8f918c65a","reportUrl":"https://novasamatech.github.io/test-runner/3661//#testresult/12d931d8f918c65a","status":"passed","time":{"start":1693180951933,"stop":1693180956191,"duration":4258}},{"uid":"5e12fa74fda5bd3a","reportUrl":"https://novasamatech.github.io/test-runner/3660//#testresult/5e12fa74fda5bd3a","status":"passed","time":{"start":1693166483598,"stop":1693166486110,"duration":2512}}]},"tags":[]},"source":"1cbc6d66f305a44d.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f0668fd6110>"]}