{"uid":"8f2a92cbad8a5948","name":"test_has_new_assets[Test for Tinkernet]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"d969e3cf97286b18cdcce33aa2d558b4","time":{"start":1693454592315,"stop":1693454593399,"duration":1084},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f7ea4cd39d0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7ea4c53010>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f7ea4cd39d0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7ea4c53010>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"cb689b4478f6bd80","name":"stdout","source":"cb689b4478f6bd80.txt","type":"text/plain","size":825}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az452-978"},{"name":"thread","value":"2047-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f7ea4c53010>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9bb5c6454b0b701d","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693454575828,"stop":1693454577271,"duration":1443}},{"uid":"40d8535746bc9bae","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693454559911,"stop":1693454560772,"duration":861}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":41,"unknown":0,"total":42},"items":[{"uid":"418dc35e698ef810","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/418dc35e698ef810","status":"passed","time":{"start":1693440213903,"stop":1693440219475,"duration":5572}},{"uid":"9bd5154ea0042c97","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/9bd5154ea0042c97","status":"passed","time":{"start":1693425739393,"stop":1693425743364,"duration":3971}},{"uid":"64f9147f6d35f48c","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/64f9147f6d35f48c","status":"passed","time":{"start":1693411346576,"stop":1693411361207,"duration":14631}},{"uid":"39bc90f7644576f7","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/39bc90f7644576f7","status":"passed","time":{"start":1693396966884,"stop":1693396972704,"duration":5820}},{"uid":"83cf8b29ab2f07ba","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/83cf8b29ab2f07ba","status":"passed","time":{"start":1693382562718,"stop":1693382569343,"duration":6625}},{"uid":"a815bbabe7a3eecb","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/a815bbabe7a3eecb","status":"passed","time":{"start":1693368154351,"stop":1693368158628,"duration":4277}},{"uid":"889fd54364e9b5b5","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/889fd54364e9b5b5","status":"passed","time":{"start":1693353799877,"stop":1693353804283,"duration":4406}},{"uid":"56b7443cf36bacfe","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/56b7443cf36bacfe","status":"passed","time":{"start":1693339363734,"stop":1693339367943,"duration":4209}},{"uid":"682ff3ad0fc426ca","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/682ff3ad0fc426ca","status":"passed","time":{"start":1693324983128,"stop":1693324988291,"duration":5163}},{"uid":"e1311c2c4f6ddfec","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/e1311c2c4f6ddfec","status":"passed","time":{"start":1693310564912,"stop":1693310572743,"duration":7831}},{"uid":"7151024c54efe847","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/7151024c54efe847","status":"passed","time":{"start":1693296161438,"stop":1693296165978,"duration":4540}},{"uid":"ff85b46fa14dcdb","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/ff85b46fa14dcdb","status":"passed","time":{"start":1693281737475,"stop":1693281742827,"duration":5352}},{"uid":"3eee86251282ed4e","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/3eee86251282ed4e","status":"passed","time":{"start":1693267398086,"stop":1693267401714,"duration":3628}},{"uid":"9c81eae2b4c7a2cc","reportUrl":"https://novasamatech.github.io/test-runner/3666//#testresult/9c81eae2b4c7a2cc","status":"passed","time":{"start":1693252944046,"stop":1693252949866,"duration":5820}},{"uid":"e7b2c1ed1015be8a","reportUrl":"https://novasamatech.github.io/test-runner/3665//#testresult/e7b2c1ed1015be8a","status":"passed","time":{"start":1693238532538,"stop":1693238536380,"duration":3842}},{"uid":"8bec25cffbab1acd","reportUrl":"https://novasamatech.github.io/test-runner/3664//#testresult/8bec25cffbab1acd","status":"passed","time":{"start":1693224157427,"stop":1693224161846,"duration":4419}},{"uid":"454bcfce88c12f9a","reportUrl":"https://novasamatech.github.io/test-runner/3663//#testresult/454bcfce88c12f9a","status":"passed","time":{"start":1693209763503,"stop":1693209767276,"duration":3773}},{"uid":"694a976c22997106","reportUrl":"https://novasamatech.github.io/test-runner/3662//#testresult/694a976c22997106","status":"passed","time":{"start":1693195367839,"stop":1693195372918,"duration":5079}},{"uid":"c07ede0306aad3ac","reportUrl":"https://novasamatech.github.io/test-runner/3661//#testresult/c07ede0306aad3ac","status":"passed","time":{"start":1693181012937,"stop":1693181017408,"duration":4471}},{"uid":"58d34058d5fcad20","reportUrl":"https://novasamatech.github.io/test-runner/3660//#testresult/58d34058d5fcad20","status":"passed","time":{"start":1693166533604,"stop":1693166539000,"duration":5396}}]},"tags":[]},"source":"8f2a92cbad8a5948.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f7ea4c53010>"]}