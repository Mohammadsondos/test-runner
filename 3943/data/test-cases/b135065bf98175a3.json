{"uid":"b135065bf98175a3","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1697213015512,"stop":1697213016937,"duration":1425},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fd910ae2680>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd910d430a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fd910ae2680>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd910d430a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"51cc8ad9c4fa06eb","name":"stdout","source":"51cc8ad9c4fa06eb.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1255-303"},{"name":"thread","value":"2194-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fd910d430a0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"460902f0103096ab","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697212999123,"stop":1697213000479,"duration":1356}},{"uid":"b4a27f46610688e9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697212982566,"stop":1697212984087,"duration":1521}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":293,"unknown":0,"total":302},"items":[{"uid":"5d851fe7dba1f301","reportUrl":"https://novasamatech.github.io/test-runner/3942//#testresult/5d851fe7dba1f301","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697198649144,"stop":1697198650577,"duration":1433}},{"uid":"2d1fc00e1ddcdd9f","reportUrl":"https://novasamatech.github.io/test-runner/3941//#testresult/2d1fc00e1ddcdd9f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697184204419,"stop":1697184205464,"duration":1045}},{"uid":"a47ed44fdbf79f1b","reportUrl":"https://novasamatech.github.io/test-runner/3940//#testresult/a47ed44fdbf79f1b","status":"passed","time":{"start":1697169783521,"stop":1697169789647,"duration":6126}},{"uid":"e9418ada37b67e77","reportUrl":"https://novasamatech.github.io/test-runner/3939//#testresult/e9418ada37b67e77","status":"passed","time":{"start":1697155399406,"stop":1697155403850,"duration":4444}},{"uid":"b1358fec3779c646","reportUrl":"https://novasamatech.github.io/test-runner/3938//#testresult/b1358fec3779c646","status":"passed","time":{"start":1697140958276,"stop":1697140967617,"duration":9341}},{"uid":"9312fbd932ad0d37","reportUrl":"https://novasamatech.github.io/test-runner/3937//#testresult/9312fbd932ad0d37","status":"passed","time":{"start":1697126572734,"stop":1697126576586,"duration":3852}},{"uid":"8b254a08b605484c","reportUrl":"https://novasamatech.github.io/test-runner/3936//#testresult/8b254a08b605484c","status":"passed","time":{"start":1697112154726,"stop":1697112158639,"duration":3913}},{"uid":"baa7ae2fb49e5a90","reportUrl":"https://novasamatech.github.io/test-runner/3935//#testresult/baa7ae2fb49e5a90","status":"passed","time":{"start":1697097758145,"stop":1697097769509,"duration":11364}},{"uid":"ddf7c59c260fb3ec","reportUrl":"https://novasamatech.github.io/test-runner/3934//#testresult/ddf7c59c260fb3ec","status":"passed","time":{"start":1697083356508,"stop":1697083361580,"duration":5072}},{"uid":"ed9a86ee2d9f85af","reportUrl":"https://novasamatech.github.io/test-runner/3933//#testresult/ed9a86ee2d9f85af","status":"passed","time":{"start":1697069046749,"stop":1697069052555,"duration":5806}},{"uid":"ff7dcdc3cc914046","reportUrl":"https://novasamatech.github.io/test-runner/3932//#testresult/ff7dcdc3cc914046","status":"passed","time":{"start":1697054567979,"stop":1697054572971,"duration":4992}},{"uid":"241ee95e0160cbc","reportUrl":"https://novasamatech.github.io/test-runner/3931//#testresult/241ee95e0160cbc","status":"passed","time":{"start":1697040188508,"stop":1697040196301,"duration":7793}},{"uid":"6851d08e399448e7","reportUrl":"https://novasamatech.github.io/test-runner/3930//#testresult/6851d08e399448e7","status":"passed","time":{"start":1697025756242,"stop":1697025761481,"duration":5239}},{"uid":"fa23bf9631d8bb6f","reportUrl":"https://novasamatech.github.io/test-runner/3929//#testresult/fa23bf9631d8bb6f","status":"passed","time":{"start":1697011385673,"stop":1697011390863,"duration":5190}},{"uid":"38114b99971beda4","reportUrl":"https://novasamatech.github.io/test-runner/3928//#testresult/38114b99971beda4","status":"passed","time":{"start":1696996982929,"stop":1696996989518,"duration":6589}},{"uid":"5ef270c2d84662b3","reportUrl":"https://novasamatech.github.io/test-runner/3927//#testresult/5ef270c2d84662b3","status":"passed","time":{"start":1696982605491,"stop":1696982610512,"duration":5021}},{"uid":"c562e75a8f873a44","reportUrl":"https://novasamatech.github.io/test-runner/3926//#testresult/c562e75a8f873a44","status":"passed","time":{"start":1696968162141,"stop":1696968167014,"duration":4873}},{"uid":"af6457b772530f92","reportUrl":"https://novasamatech.github.io/test-runner/3925//#testresult/af6457b772530f92","status":"passed","time":{"start":1696953765308,"stop":1696953769741,"duration":4433}},{"uid":"b2b7827eb2cbd93e","reportUrl":"https://novasamatech.github.io/test-runner/3924//#testresult/b2b7827eb2cbd93e","status":"passed","time":{"start":1696939363280,"stop":1696939373001,"duration":9721}},{"uid":"38ffaf6410a480cc","reportUrl":"https://novasamatech.github.io/test-runner/3923//#testresult/38ffaf6410a480cc","status":"passed","time":{"start":1696924976263,"stop":1696924981628,"duration":5365}}]},"tags":[]},"source":"b135065bf98175a3.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fd910d430a0>"]}