{"uid":"6d23109ecdf966c2","name":"test_can_create_connection[Test for Westend, url: wss://westend-rpc.polkadot.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2d0a009e24d4716600864d016afa6545","time":{"start":1688645174803,"stop":1688645175208,"duration":405},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Thu, 06 Jul 2023 12:06:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '19', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=RFm3WK8zZPe6UMk9t1WO%2B6M3ryop0ngNMjz9eAie7D%2BrQDGmnJV5RsippztkeLMtZ3c2Tm1KC4nied4OMe0mUbcLhzIfdLK0HXbCFWPvEjXKMtsmGFlDawWge%2F3Or%2FkZ2qs8kpUaByJW\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7e27b876be572e5d-DFW'} -+-+- b'Service Unavailable'","statusTrace":"data = {'name': 'Westend', 'url': 'wss://westend-rpc.polkadot.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Thu, 06 Jul 2023 12:06:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '19', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=RFm3WK8zZPe6UMk9t1WO%2B6M3ryop0ngNMjz9eAie7D%2BrQDGmnJV5RsippztkeLMtZ3c2Tm1KC4nied4OMe0mUbcLhzIfdLK0HXbCFWPvEjXKMtsmGFlDawWge%2F3Or%2FkZ2qs8kpUaByJW\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7e27b876be572e5d-DFW'} -+-+- b'Service Unavailable'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Thu, 06 Jul 2023 12:06:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '19', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=RFm3WK8zZPe6UMk9t1WO%2B6M3ryop0ngNMjz9eAie7D%2BrQDGmnJV5RsippztkeLMtZ3c2Tm1KC4nied4OMe0mUbcLhzIfdLK0HXbCFWPvEjXKMtsmGFlDawWge%2F3Or%2FkZ2qs8kpUaByJW\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7e27b876be572e5d-DFW'} -+-+- b'Service Unavailable'","statusTrace":"data = {'name': 'Westend', 'url': 'wss://westend-rpc.polkadot.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Thu, 06 Jul 2023 12:06:15 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '19', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=RFm3WK8zZPe6UMk9t1WO%2B6M3ryop0ngNMjz9eAie7D%2BrQDGmnJV5RsippztkeLMtZ3c2Tm1KC4nied4OMe0mUbcLhzIfdLK0HXbCFWPvEjXKMtsmGFlDawWge%2F3Or%2FkZ2qs8kpUaByJW\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7e27b876be572e5d-DFW'} -+-+- b'Service Unavailable'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"397da5d10c09d3fe","name":"stdout","source":"397da5d10c09d3fe.txt","type":"text/plain","size":2188}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az247-315"},{"name":"thread","value":"1979-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://westend-rpc.polkadot.io', 'name': 'Westend'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ada8955a238dddb5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Thu, 06 Jul 2023 12:05:59 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '19', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=V%2FhKO7sH0YCVVDNZ77BJELL8ZKH2xlD14joPW1DAjVEkvMdZJ8Y9UW89UAUiBiiBMaevo6BAXlMrdkEWJ8Geh9o2tOHXdHs02%2BXIOeijO4TqAYCTeRLBWnBn0vLPTFRnQrkYSzJIc%2B9M\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7e27b8159ce33172-DFW'} -+-+- b'Service Unavailable'","time":{"start":1688645159267,"stop":1688645159693,"duration":426}},{"uid":"44d19a428f833e5b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'date': 'Thu, 06 Jul 2023 12:05:44 GMT', 'content-type': 'text/plain; charset=utf-8', 'content-length': '19', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=6whIdQv7j4ElL0fCkdTFcdDilixxncJQCFl3C85WrhGKlvKXSvdJ2TngWQpcN7rqVIJYfp5YMvVTV%2BDA%2BGz0EzMH24uw7%2Bsfx4VMrG67Tvca23%2BWfzXi%2BaO3UhWHFiRczes%2FiiZ%2BwJqA\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'server': 'cloudflare', 'cf-ray': '7e27b7b3cfd435a0-DFW'} -+-+- b'Service Unavailable'","time":{"start":1688645143568,"stop":1688645144068,"duration":500}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":331,"unknown":0,"total":332},"items":[{"uid":"5b5d49e7ea93ad02","reportUrl":"https://novasamatech.github.io/test-runner/3337//#testresult/5b5d49e7ea93ad02","status":"passed","time":{"start":1688630684678,"stop":1688630685271,"duration":593}},{"uid":"1348c825ae943ee9","reportUrl":"https://novasamatech.github.io/test-runner/3336//#testresult/1348c825ae943ee9","status":"passed","time":{"start":1688616245894,"stop":1688616246412,"duration":518}},{"uid":"9345263e07234d63","reportUrl":"https://novasamatech.github.io/test-runner/3335//#testresult/9345263e07234d63","status":"passed","time":{"start":1688602585212,"stop":1688602586118,"duration":906}},{"uid":"be15b9926b954def","reportUrl":"https://novasamatech.github.io/test-runner/3334//#testresult/be15b9926b954def","status":"passed","time":{"start":1688587458571,"stop":1688587459093,"duration":522}},{"uid":"43fe59d41acc19d7","reportUrl":"https://novasamatech.github.io/test-runner/3333//#testresult/43fe59d41acc19d7","status":"passed","time":{"start":1688573056082,"stop":1688573056695,"duration":613}},{"uid":"42ee4f28d12e058c","reportUrl":"https://novasamatech.github.io/test-runner/3332//#testresult/42ee4f28d12e058c","status":"passed","time":{"start":1688558743579,"stop":1688558743996,"duration":417}},{"uid":"4869bef987e494a4","reportUrl":"https://novasamatech.github.io/test-runner/3331//#testresult/4869bef987e494a4","status":"passed","time":{"start":1688544289461,"stop":1688544290142,"duration":681}},{"uid":"1cda657f18321434","reportUrl":"https://novasamatech.github.io/test-runner/3330//#testresult/1cda657f18321434","status":"passed","time":{"start":1688529864597,"stop":1688529865283,"duration":686}},{"uid":"e4e3817b911e69f1","reportUrl":"https://novasamatech.github.io/test-runner/3329//#testresult/e4e3817b911e69f1","status":"passed","time":{"start":1688516180694,"stop":1688516181265,"duration":571}},{"uid":"62d8e9ed8acfcc92","reportUrl":"https://novasamatech.github.io/test-runner/3328//#testresult/62d8e9ed8acfcc92","status":"passed","time":{"start":1688501060616,"stop":1688501061256,"duration":640}},{"uid":"2b0d798972082e00","reportUrl":"https://novasamatech.github.io/test-runner/3327//#testresult/2b0d798972082e00","status":"passed","time":{"start":1688486667307,"stop":1688486668048,"duration":741}},{"uid":"e91f8deabc2329f4","reportUrl":"https://novasamatech.github.io/test-runner/3326//#testresult/e91f8deabc2329f4","status":"passed","time":{"start":1688472341692,"stop":1688472342383,"duration":691}},{"uid":"1285de412db74a64","reportUrl":"https://novasamatech.github.io/test-runner/3325//#testresult/1285de412db74a64","status":"passed","time":{"start":1688457891761,"stop":1688457892353,"duration":592}},{"uid":"54b5e1ae91cd7834","reportUrl":"https://novasamatech.github.io/test-runner/3324//#testresult/54b5e1ae91cd7834","status":"passed","time":{"start":1688443457233,"stop":1688443457644,"duration":411}},{"uid":"27503dd12254e88e","reportUrl":"https://novasamatech.github.io/test-runner/3323//#testresult/27503dd12254e88e","status":"passed","time":{"start":1688429757966,"stop":1688429758542,"duration":576}},{"uid":"a2cda8f3073db766","reportUrl":"https://novasamatech.github.io/test-runner/3322//#testresult/a2cda8f3073db766","status":"passed","time":{"start":1688414656013,"stop":1688414656426,"duration":413}},{"uid":"6a0f72252aadf635","reportUrl":"https://novasamatech.github.io/test-runner/3321//#testresult/6a0f72252aadf635","status":"passed","time":{"start":1688400263168,"stop":1688400263787,"duration":619}},{"uid":"455918503e68f712","reportUrl":"https://novasamatech.github.io/test-runner/3320//#testresult/455918503e68f712","status":"passed","time":{"start":1688385937243,"stop":1688385937825,"duration":582}},{"uid":"e8e770619f9ca1b4","reportUrl":"https://novasamatech.github.io/test-runner/3319//#testresult/e8e770619f9ca1b4","status":"passed","time":{"start":1688371498851,"stop":1688371499450,"duration":599}},{"uid":"b8376314e44e0bf","reportUrl":"https://novasamatech.github.io/test-runner/3318//#testresult/b8376314e44e0bf","status":"passed","time":{"start":1688357053380,"stop":1688357054185,"duration":805}}]},"tags":[]},"source":"6d23109ecdf966c2.json","parameterValues":["{'url': 'wss://westend-rpc.polkadot.io', 'name': 'Westend'}"]}