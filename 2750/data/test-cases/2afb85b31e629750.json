{"uid":"2afb85b31e629750","name":"test_can_create_connection[Test for Imbue, url: wss://imbue-kusama.imbue.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"37f966fb65a76fdaf4ab1b4f770dedaf","time":{"start":1680451493324,"stop":1680451493713,"duration":389},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Imbue', 'url': 'wss://imbue-kusama.imbue.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Imbue', 'url': 'wss://imbue-kusama.imbue.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"29cc82810e2c558a","name":"stdout","source":"29cc82810e2c558a.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az576-858"},{"name":"thread","value":"1780-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"af7a088f541a400b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680451482935,"stop":1680451483190,"duration":255}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":106,"skipped":0,"passed":825,"unknown":0,"total":931},"items":[{"uid":"59db81199ca4b2f0","reportUrl":"https://nova-wallet.github.io/test-runner/2749//#testresult/59db81199ca4b2f0","status":"passed","time":{"start":1680437081806,"stop":1680437082010,"duration":204}},{"uid":"bd1adab17f2b1b6f","reportUrl":"https://nova-wallet.github.io/test-runner/2748//#testresult/bd1adab17f2b1b6f","status":"passed","time":{"start":1680422697324,"stop":1680422697479,"duration":155}},{"uid":"658bdd93de318d4d","reportUrl":"https://nova-wallet.github.io/test-runner/2747//#testresult/658bdd93de318d4d","status":"passed","time":{"start":1680408274018,"stop":1680408274276,"duration":258}},{"uid":"812bca3fe31e25f9","reportUrl":"https://nova-wallet.github.io/test-runner/2746//#testresult/812bca3fe31e25f9","status":"passed","time":{"start":1680394502618,"stop":1680394502719,"duration":101}},{"uid":"54f52f9bbaba889","reportUrl":"https://nova-wallet.github.io/test-runner/2745//#testresult/54f52f9bbaba889","status":"passed","time":{"start":1680379490177,"stop":1680379490285,"duration":108}},{"uid":"7162b90a073c2ade","reportUrl":"https://nova-wallet.github.io/test-runner/2744//#testresult/7162b90a073c2ade","status":"passed","time":{"start":1680365077700,"stop":1680365077929,"duration":229}},{"uid":"793dd03f0106c49e","reportUrl":"https://nova-wallet.github.io/test-runner/2743//#testresult/793dd03f0106c49e","status":"passed","time":{"start":1680350685428,"stop":1680350685712,"duration":284}},{"uid":"e88bc71391708cd9","reportUrl":"https://nova-wallet.github.io/test-runner/2742//#testresult/e88bc71391708cd9","status":"passed","time":{"start":1680336373796,"stop":1680336373890,"duration":94}},{"uid":"d2668a37388e2326","reportUrl":"https://nova-wallet.github.io/test-runner/2741//#testresult/d2668a37388e2326","status":"passed","time":{"start":1680321860359,"stop":1680321860565,"duration":206}},{"uid":"a10e78ec82b4987c","reportUrl":"https://nova-wallet.github.io/test-runner/2740//#testresult/a10e78ec82b4987c","status":"passed","time":{"start":1680308061810,"stop":1680308061889,"duration":79}},{"uid":"db14833ca123117f","reportUrl":"https://nova-wallet.github.io/test-runner/2739//#testresult/db14833ca123117f","status":"passed","time":{"start":1680293074123,"stop":1680293074325,"duration":202}},{"uid":"10dc4b8144b66a0e","reportUrl":"https://nova-wallet.github.io/test-runner/2738//#testresult/10dc4b8144b66a0e","status":"passed","time":{"start":1680278683547,"stop":1680278683822,"duration":275}},{"uid":"b88004c5f2d169","reportUrl":"https://nova-wallet.github.io/test-runner/2737//#testresult/b88004c5f2d169","status":"passed","time":{"start":1680264341278,"stop":1680264341385,"duration":107}},{"uid":"dd8a0e8d72487cab","reportUrl":"https://nova-wallet.github.io/test-runner/2736//#testresult/dd8a0e8d72487cab","status":"passed","time":{"start":1680249896955,"stop":1680249897154,"duration":199}},{"uid":"bf924d38eebccc65","reportUrl":"https://nova-wallet.github.io/test-runner/2735//#testresult/bf924d38eebccc65","status":"passed","time":{"start":1680235469166,"stop":1680235469276,"duration":110}},{"uid":"32d924f8c04394f3","reportUrl":"https://nova-wallet.github.io/test-runner/2734//#testresult/32d924f8c04394f3","status":"passed","time":{"start":1680221637539,"stop":1680221637632,"duration":93}},{"uid":"f221aa22f4b6afa7","reportUrl":"https://nova-wallet.github.io/test-runner/2733//#testresult/f221aa22f4b6afa7","status":"passed","time":{"start":1680206670843,"stop":1680206670955,"duration":112}},{"uid":"6722b0907203df73","reportUrl":"https://nova-wallet.github.io/test-runner/2732//#testresult/6722b0907203df73","status":"passed","time":{"start":1680192263314,"stop":1680192263422,"duration":108}},{"uid":"67aeca5e122d97e0","reportUrl":"https://nova-wallet.github.io/test-runner/2731//#testresult/67aeca5e122d97e0","status":"passed","time":{"start":1680177961523,"stop":1680177961755,"duration":232}},{"uid":"1aaee3e65c7fce87","reportUrl":"https://nova-wallet.github.io/test-runner/2730//#testresult/1aaee3e65c7fce87","status":"passed","time":{"start":1680163474615,"stop":1680163474831,"duration":216}}]},"tags":[]},"source":"2afb85b31e629750.json","parameterValues":["{'url': 'wss://imbue-kusama.imbue.network', 'name': 'Imbue'}"]}