{"uid":"6e00c0c00bafe8d1","name":"test_can_create_connection[Test for Efinity, url: wss://efinity.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e7127e77471430140b24b1b56702eaf3","time":{"start":1695283430046,"stop":1695283445777,"duration":15731},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 08:04:04 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://efinity.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 08:04:04 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 08:04:04 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","statusTrace":"data = {'name': 'Efinity', 'url': 'wss://efinity.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 08:04:04 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"7b2d02b87d4205cb","name":"stdout","source":"7b2d02b87d4205cb.txt","type":"text/plain","size":1557}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az358-893"},{"name":"thread","value":"2064-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://efinity.api.onfinality.io/public-ws', 'name': 'Efinity'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d04d10b54a8db370","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 08:03:34 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15015', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695283399194,"stop":1695283414905,"duration":15711}},{"uid":"12447b320037f271","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 08:03:03 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695283368369,"stop":1695283384101,"duration":15732}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":134,"unknown":0,"total":169},"items":[{"uid":"a953f06f555d5cba","reportUrl":"https://novasamatech.github.io/test-runner/3807//#testresult/a953f06f555d5cba","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 04:04:03 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15018', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695269028620,"stop":1695269044187,"duration":15567}},{"uid":"40d92b29142da659","reportUrl":"https://novasamatech.github.io/test-runner/3806//#testresult/40d92b29142da659","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Thu, 21 Sep 2023 00:04:55 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15019', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695254680157,"stop":1695254695799,"duration":15642}},{"uid":"df380ed8ad0ef810","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/df380ed8ad0ef810","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Wed, 20 Sep 2023 20:03:58 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15589', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695240224050,"stop":1695240240328,"duration":16278}},{"uid":"81b8fc1739ec883f","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/81b8fc1739ec883f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Wed, 20 Sep 2023 16:04:38 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15022', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695225863273,"stop":1695225878865,"duration":15592}},{"uid":"2a7caf1ff3622c5e","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/2a7caf1ff3622c5e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Wed, 20 Sep 2023 12:04:04 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15017', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695211429386,"stop":1695211444949,"duration":15563}},{"uid":"14c0ff86adeae089","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/14c0ff86adeae089","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Wed, 20 Sep 2023 08:03:57 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15017', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695197022459,"stop":1695197038187,"duration":15728}},{"uid":"2242a6055ff8ba2c","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/2242a6055ff8ba2c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Wed, 20 Sep 2023 04:03:43 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15268', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695182603617,"stop":1695182624084,"duration":20467}},{"uid":"6c928557e0055100","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/6c928557e0055100","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Wed, 20 Sep 2023 00:04:20 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15018', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695168245643,"stop":1695168261229,"duration":15586}},{"uid":"982fab42c6b9fe1f","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/982fab42c6b9fe1f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Tue, 19 Sep 2023 20:03:32 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695153797859,"stop":1695153813409,"duration":15550}},{"uid":"e2034128d926fd17","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/e2034128d926fd17","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Tue, 19 Sep 2023 16:03:41 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15015', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695139406494,"stop":1695139422078,"duration":15584}},{"uid":"c69d9e9d8c9c4739","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/c69d9e9d8c9c4739","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Tue, 19 Sep 2023 12:03:43 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695125009048,"stop":1695125024679,"duration":15631}},{"uid":"14c2ebbdd1344bb9","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/14c2ebbdd1344bb9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Tue, 19 Sep 2023 08:03:59 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15020', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695110624594,"stop":1695110640280,"duration":15686}},{"uid":"b7aecedacb4df073","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/b7aecedacb4df073","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Tue, 19 Sep 2023 04:03:56 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15017', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695096222157,"stop":1695096237895,"duration":15738}},{"uid":"e6a99a4d1da09733","reportUrl":"https://novasamatech.github.io/test-runner/3794//#testresult/e6a99a4d1da09733","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Tue, 19 Sep 2023 00:04:39 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15022', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695081864391,"stop":1695081880098,"duration":15707}},{"uid":"aab082b79c335fe2","reportUrl":"https://novasamatech.github.io/test-runner/3792//#testresult/aab082b79c335fe2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 16:03:34 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15018', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695052999353,"stop":1695053015117,"duration":15764}},{"uid":"37d12abbeb8b9feb","reportUrl":"https://novasamatech.github.io/test-runner/3793//#testresult/37d12abbeb8b9feb","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 20:03:36 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15016', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695067400953,"stop":1695067416501,"duration":15548}},{"uid":"40f3258fd686f4be","reportUrl":"https://novasamatech.github.io/test-runner/3791//#testresult/40f3258fd686f4be","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 12:03:53 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15017', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695038618326,"stop":1695038633962,"duration":15636}},{"uid":"1cb479c7fd691725","reportUrl":"https://novasamatech.github.io/test-runner/3790//#testresult/1cb479c7fd691725","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 08:03:52 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15019', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695024217564,"stop":1695024233298,"duration":15734}},{"uid":"f304333ad2362551","reportUrl":"https://novasamatech.github.io/test-runner/3789//#testresult/f304333ad2362551","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 403 Forbidden -+-+- {'content-type': 'text/plain; charset=UTF-8', 'content-length': '0', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': '*', 'date': 'Mon, 18 Sep 2023 04:03:36 GMT', 'vary': 'access-control-request-headers', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '15153', 'x-kong-proxy-latency': '1', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1695009800842,"stop":1695009816543,"duration":15701}},{"uid":"1f4434ab4a6134ce","reportUrl":"https://novasamatech.github.io/test-runner/3788//#testresult/1f4434ab4a6134ce","status":"passed","time":{"start":1694995388933,"stop":1694995389688,"duration":755}}]},"tags":[]},"source":"6e00c0c00bafe8d1.json","parameterValues":["{'url': 'wss://efinity.api.onfinality.io/public-ws', 'name': 'Efinity'}"]}