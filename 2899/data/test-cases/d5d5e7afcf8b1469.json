{"uid":"d5d5e7afcf8b1469","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc-0.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"74abac3bcfd546cd2faa7dbde7c71997","time":{"start":1682568245584,"stop":1682568245950,"duration":366},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"8744fc41dd7b39c1","name":"stdout","source":"8744fc41dd7b39c1.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az251-226"},{"name":"thread","value":"1855-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc-0.aca-api.network', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dc4e003ae5b76b13","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682568235071,"stop":1682568235425,"duration":354}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":40,"unknown":0,"total":43},"items":[{"uid":"223746dbe382fce5","reportUrl":"https://nova-wallet.github.io/test-runner/2898//#testresult/223746dbe382fce5","status":"passed","time":{"start":1682554394670,"stop":1682554395518,"duration":848}},{"uid":"fca4cd8438f04c3a","reportUrl":"https://nova-wallet.github.io/test-runner/2897//#testresult/fca4cd8438f04c3a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682539443531,"stop":1682539444007,"duration":476}},{"uid":"1e90838c5b1aab29","reportUrl":"https://nova-wallet.github.io/test-runner/2896//#testresult/1e90838c5b1aab29","status":"passed","time":{"start":1682525063325,"stop":1682525064024,"duration":699}},{"uid":"30738953f96168c1","reportUrl":"https://nova-wallet.github.io/test-runner/2895//#testresult/30738953f96168c1","status":"passed","time":{"start":1682510787721,"stop":1682510788206,"duration":485}},{"uid":"fd127d9314a5f9e9","reportUrl":"https://nova-wallet.github.io/test-runner/2894//#testresult/fd127d9314a5f9e9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682496271893,"stop":1682496272441,"duration":548}},{"uid":"c9d0616c0a479459","reportUrl":"https://nova-wallet.github.io/test-runner/2893//#testresult/c9d0616c0a479459","status":"passed","time":{"start":1682481853998,"stop":1682481854715,"duration":717}},{"uid":"51c3233f4919b12e","reportUrl":"https://nova-wallet.github.io/test-runner/2892//#testresult/51c3233f4919b12e","status":"passed","time":{"start":1682467992391,"stop":1682467993032,"duration":641}},{"uid":"ed83c891ee069d91","reportUrl":"https://nova-wallet.github.io/test-runner/2891//#testresult/ed83c891ee069d91","status":"passed","time":{"start":1682453058036,"stop":1682453058755,"duration":719}},{"uid":"b5d82c4a385a9a4a","reportUrl":"https://nova-wallet.github.io/test-runner/2890//#testresult/b5d82c4a385a9a4a","status":"passed","time":{"start":1682438639765,"stop":1682438640457,"duration":692}},{"uid":"2a6ca795d4edd021","reportUrl":"https://nova-wallet.github.io/test-runner/2889//#testresult/2a6ca795d4edd021","status":"passed","time":{"start":1682424337821,"stop":1682424338407,"duration":586}},{"uid":"88a00be8d554db38","reportUrl":"https://nova-wallet.github.io/test-runner/2888//#testresult/88a00be8d554db38","status":"passed","time":{"start":1682409837570,"stop":1682409838069,"duration":499}},{"uid":"481ea5032580d1ca","reportUrl":"https://nova-wallet.github.io/test-runner/2887//#testresult/481ea5032580d1ca","status":"passed","time":{"start":1682395431244,"stop":1682395431735,"duration":491}},{"uid":"c9888929e4bfbed2","reportUrl":"https://nova-wallet.github.io/test-runner/2886//#testresult/c9888929e4bfbed2","status":"passed","time":{"start":1682381553886,"stop":1682381554358,"duration":472}},{"uid":"a1be8d91b5f02bd8","reportUrl":"https://nova-wallet.github.io/test-runner/2885//#testresult/a1be8d91b5f02bd8","status":"passed","time":{"start":1682366630131,"stop":1682366631042,"duration":911}},{"uid":"9f8384126d7365e5","reportUrl":"https://nova-wallet.github.io/test-runner/2883//#testresult/9f8384126d7365e5","status":"passed","time":{"start":1682337902077,"stop":1682337902818,"duration":741}},{"uid":"2776b33190d4ce2b","reportUrl":"https://nova-wallet.github.io/test-runner/2882//#testresult/2776b33190d4ce2b","status":"passed","time":{"start":1682323476326,"stop":1682323476962,"duration":636}},{"uid":"dd944cac616636b9","reportUrl":"https://nova-wallet.github.io/test-runner/2881//#testresult/dd944cac616636b9","status":"passed","time":{"start":1682309044168,"stop":1682309044797,"duration":629}},{"uid":"e0a92b4c996dfd23","reportUrl":"https://nova-wallet.github.io/test-runner/2880//#testresult/e0a92b4c996dfd23","status":"passed","time":{"start":1682295172619,"stop":1682295173244,"duration":625}},{"uid":"578b5af75a95d214","reportUrl":"https://nova-wallet.github.io/test-runner/2879//#testresult/578b5af75a95d214","status":"passed","time":{"start":1682280242477,"stop":1682280243252,"duration":775}},{"uid":"fad0aacc24795db4","reportUrl":"https://nova-wallet.github.io/test-runner/2878//#testresult/fad0aacc24795db4","status":"passed","time":{"start":1682265827722,"stop":1682265828326,"duration":604}}]},"tags":[]},"source":"d5d5e7afcf8b1469.json","parameterValues":["{'url': 'wss://karura-rpc-0.aca-api.network', 'name': 'Karura'}"]}