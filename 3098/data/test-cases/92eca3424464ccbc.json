{"uid":"92eca3424464ccbc","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc-3.aca-api.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"9924fd062719dddab41b666be49e86a5","time":{"start":1685289899599,"stop":1685289909921,"duration":10322},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 28 May 2023 16:05:09 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-3.aca-api.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 28 May 2023 16:05:09 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 28 May 2023 16:05:09 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-3.aca-api.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 28 May 2023 16:05:09 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2514f82a3ede5b1c","name":"stdout","source":"2514f82a3ede5b1c.txt","type":"text/plain","size":868}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az470-702"},{"name":"thread","value":"1864-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc-3.aca-api.network/ws', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"29dd74f7dd93ccf0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 28 May 2023 16:04:49 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1685289879181,"stop":1685289889506,"duration":10325}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":146,"unknown":0,"total":147},"items":[{"uid":"16b8ce6166cb9332","reportUrl":"https://nova-wallet.github.io/test-runner/3086//#testresult/16b8ce6166cb9332","status":"passed","time":{"start":1685174646749,"stop":1685174647031,"duration":282}},{"uid":"db410394fb8d090","reportUrl":"https://nova-wallet.github.io/test-runner/3083//#testresult/db410394fb8d090","status":"passed","time":{"start":1685131429866,"stop":1685131430264,"duration":398}},{"uid":"198b0b3162d88461","reportUrl":"https://nova-wallet.github.io/test-runner/3082//#testresult/198b0b3162d88461","status":"passed","time":{"start":1685117043290,"stop":1685117043701,"duration":411}},{"uid":"fb5a7878c03acfaf","reportUrl":"https://nova-wallet.github.io/test-runner/3081//#testresult/fb5a7878c03acfaf","status":"passed","time":{"start":1685102686215,"stop":1685102686490,"duration":275}},{"uid":"dde278cbe3f3403e","reportUrl":"https://nova-wallet.github.io/test-runner/3077//#testresult/dde278cbe3f3403e","status":"passed","time":{"start":1685045027474,"stop":1685045027763,"duration":289}},{"uid":"dc8a356e7c40df51","reportUrl":"https://nova-wallet.github.io/test-runner/3076//#testresult/dc8a356e7c40df51","status":"passed","time":{"start":1685030651440,"stop":1685030651684,"duration":244}},{"uid":"a2fa67a225dda112","reportUrl":"https://nova-wallet.github.io/test-runner/3074//#testresult/a2fa67a225dda112","status":"passed","time":{"start":1685005739361,"stop":1685005739617,"duration":256}},{"uid":"69088cfbaaab5bc7","reportUrl":"https://nova-wallet.github.io/test-runner/3054//#testresult/69088cfbaaab5bc7","status":"passed","time":{"start":1684742668591,"stop":1684742668809,"duration":218}},{"uid":"3d4cb14b53bc5fdd","reportUrl":"https://nova-wallet.github.io/test-runner/3052//#testresult/3d4cb14b53bc5fdd","status":"passed","time":{"start":1684714413458,"stop":1684714413711,"duration":253}},{"uid":"d61b0dbd82f5f963","reportUrl":"https://nova-wallet.github.io/test-runner/3050//#testresult/d61b0dbd82f5f963","status":"passed","time":{"start":1684685035088,"stop":1684685035708,"duration":620}},{"uid":"35eee2efda03d0f6","reportUrl":"https://nova-wallet.github.io/test-runner/3049//#testresult/35eee2efda03d0f6","status":"passed","time":{"start":1684670649416,"stop":1684670649509,"duration":93}},{"uid":"eaa06b06f08c0093","reportUrl":"https://nova-wallet.github.io/test-runner/3048//#testresult/eaa06b06f08c0093","status":"passed","time":{"start":1684656262018,"stop":1684656262545,"duration":527}},{"uid":"66b09b5ee9c23da2","reportUrl":"https://nova-wallet.github.io/test-runner/3047//#testresult/66b09b5ee9c23da2","status":"passed","time":{"start":1684641828511,"stop":1684641828639,"duration":128}},{"uid":"ecdeeea49e6c3fac","reportUrl":"https://nova-wallet.github.io/test-runner/3046//#testresult/ecdeeea49e6c3fac","status":"passed","time":{"start":1684628047880,"stop":1684628048290,"duration":410}},{"uid":"febfe8f5892ff0f2","reportUrl":"https://nova-wallet.github.io/test-runner/3045//#testresult/febfe8f5892ff0f2","status":"passed","time":{"start":1684613030351,"stop":1684613030761,"duration":410}},{"uid":"46dfa3e7e1f288aa","reportUrl":"https://nova-wallet.github.io/test-runner/3044//#testresult/46dfa3e7e1f288aa","status":"passed","time":{"start":1684598632166,"stop":1684598632410,"duration":244}},{"uid":"4d7bdaead4dba0cc","reportUrl":"https://nova-wallet.github.io/test-runner/3043//#testresult/4d7bdaead4dba0cc","status":"passed","time":{"start":1684584263549,"stop":1684584263801,"duration":252}},{"uid":"b15be5021cda81f7","reportUrl":"https://nova-wallet.github.io/test-runner/3042//#testresult/b15be5021cda81f7","status":"passed","time":{"start":1684569824422,"stop":1684569824505,"duration":83}},{"uid":"cb1afd6817238e60","reportUrl":"https://nova-wallet.github.io/test-runner/3041//#testresult/cb1afd6817238e60","status":"passed","time":{"start":1684555425365,"stop":1684555425639,"duration":274}},{"uid":"f187bdcd15756c36","reportUrl":"https://nova-wallet.github.io/test-runner/3040//#testresult/f187bdcd15756c36","status":"passed","time":{"start":1684541526334,"stop":1684541526503,"duration":169}}]},"tags":[]},"source":"92eca3424464ccbc.json","parameterValues":["{'url': 'wss://karura-rpc-3.aca-api.network/ws', 'name': 'Karura'}"]}