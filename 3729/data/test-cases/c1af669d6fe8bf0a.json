{"uid":"c1af669d6fe8bf0a","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1694160160061,"stop":1694160160952,"duration":891},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fd1e99dda20>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd1e9c42cb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fd1e99dda20>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd1e9c42cb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"c427b4abe7386002","name":"stdout","source":"c427b4abe7386002.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az174-765"},{"name":"thread","value":"2034-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fd1e9c42cb0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"50e7f69af6ec8f33","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694160144049,"stop":1694160145038,"duration":989}},{"uid":"a4409ea6e1717518","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694160128003,"stop":1694160129017,"duration":1014}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":85,"unknown":0,"total":89},"items":[{"uid":"e804d50a92d1405d","reportUrl":"https://novasamatech.github.io/test-runner/3728//#testresult/e804d50a92d1405d","status":"passed","time":{"start":1694145728320,"stop":1694145731782,"duration":3462}},{"uid":"f2ec3e919a891ab0","reportUrl":"https://novasamatech.github.io/test-runner/3727//#testresult/f2ec3e919a891ab0","status":"passed","time":{"start":1694131384684,"stop":1694131390276,"duration":5592}},{"uid":"7b7593f0681f3efd","reportUrl":"https://novasamatech.github.io/test-runner/3726//#testresult/7b7593f0681f3efd","status":"passed","time":{"start":1694116948694,"stop":1694116955546,"duration":6852}},{"uid":"ca6b1dd8f648f738","reportUrl":"https://novasamatech.github.io/test-runner/3725//#testresult/ca6b1dd8f648f738","status":"passed","time":{"start":1694102559650,"stop":1694102565969,"duration":6319}},{"uid":"1c4adb6b903fe803","reportUrl":"https://novasamatech.github.io/test-runner/3724//#testresult/1c4adb6b903fe803","status":"passed","time":{"start":1694088123551,"stop":1694088127720,"duration":4169}},{"uid":"92272c0d9df1e235","reportUrl":"https://novasamatech.github.io/test-runner/3723//#testresult/92272c0d9df1e235","status":"passed","time":{"start":1694073729548,"stop":1694073733599,"duration":4051}},{"uid":"c96ce4c491f078e3","reportUrl":"https://novasamatech.github.io/test-runner/3722//#testresult/c96ce4c491f078e3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694059375048,"stop":1694059376255,"duration":1207}},{"uid":"58f072db34622a20","reportUrl":"https://novasamatech.github.io/test-runner/3721//#testresult/58f072db34622a20","status":"passed","time":{"start":1694044995686,"stop":1694045001129,"duration":5443}},{"uid":"148471f7de8203ef","reportUrl":"https://novasamatech.github.io/test-runner/3720//#testresult/148471f7de8203ef","status":"passed","time":{"start":1694030541562,"stop":1694030546851,"duration":5289}},{"uid":"4adfbdf86168c9b0","reportUrl":"https://novasamatech.github.io/test-runner/3719//#testresult/4adfbdf86168c9b0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694016186835,"stop":1694016188020,"duration":1185}},{"uid":"dee3f12a8dde1173","reportUrl":"https://novasamatech.github.io/test-runner/3718//#testresult/dee3f12a8dde1173","status":"passed","time":{"start":1694001735736,"stop":1694001739314,"duration":3578}},{"uid":"bd28bc583262beca","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/bd28bc583262beca","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693987368732,"stop":1693987369681,"duration":949}},{"uid":"5cf213419f8f1098","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/5cf213419f8f1098","status":"passed","time":{"start":1693972925756,"stop":1693972929447,"duration":3691}},{"uid":"77a4007da91f88a","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/77a4007da91f88a","status":"passed","time":{"start":1693958583652,"stop":1693958587852,"duration":4200}},{"uid":"cf62f5d80ebc7dd9","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/cf62f5d80ebc7dd9","status":"passed","time":{"start":1693944132675,"stop":1693944136184,"duration":3509}},{"uid":"66742b26358cea24","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/66742b26358cea24","status":"passed","time":{"start":1693929732390,"stop":1693929737068,"duration":4678}},{"uid":"2554a6f01167ece4","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/2554a6f01167ece4","status":"passed","time":{"start":1693915348651,"stop":1693915353249,"duration":4598}},{"uid":"136de15147ce8f70","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/136de15147ce8f70","status":"passed","time":{"start":1693872201266,"stop":1693872207923,"duration":6657}},{"uid":"31c304ee3d22ad6f","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/31c304ee3d22ad6f","status":"passed","time":{"start":1693857736854,"stop":1693857742727,"duration":5873}},{"uid":"48fad9418eb209d4","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/48fad9418eb209d4","status":"passed","time":{"start":1693843321458,"stop":1693843326649,"duration":5191}}]},"tags":[]},"source":"c1af669d6fe8bf0a.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fd1e9c42cb0>"]}