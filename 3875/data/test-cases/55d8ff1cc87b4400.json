{"uid":"55d8ff1cc87b4400","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1696248187929,"stop":1696248189177,"duration":1248},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fef482fb6a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fef482c2c20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fef482fb6a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fef482c2c20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"ba7f03f73961fcbe","name":"stdout","source":"ba7f03f73961fcbe.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az883-993"},{"name":"thread","value":"2059-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fef482c2c20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b09f9d7c70e51b2a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696248171842,"stop":1696248172901,"duration":1059}},{"uid":"52bc55f43e19f7a0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696248155442,"stop":1696248156801,"duration":1359}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":214,"unknown":0,"total":234},"items":[{"uid":"3b4929f51148bef4","reportUrl":"https://novasamatech.github.io/test-runner/3874//#testresult/3b4929f51148bef4","status":"passed","time":{"start":1696233773376,"stop":1696233778253,"duration":4877}},{"uid":"e5f3373e582f2b39","reportUrl":"https://novasamatech.github.io/test-runner/3873//#testresult/e5f3373e582f2b39","status":"passed","time":{"start":1696219324662,"stop":1696219328042,"duration":3380}},{"uid":"38b188706e0fd6ce","reportUrl":"https://novasamatech.github.io/test-runner/3872//#testresult/38b188706e0fd6ce","status":"passed","time":{"start":1696204969173,"stop":1696204973373,"duration":4200}},{"uid":"ee28f714e77a10ac","reportUrl":"https://novasamatech.github.io/test-runner/3871//#testresult/ee28f714e77a10ac","status":"passed","time":{"start":1696190543873,"stop":1696190549879,"duration":6006}},{"uid":"bc9012dd8d594930","reportUrl":"https://novasamatech.github.io/test-runner/3870//#testresult/bc9012dd8d594930","status":"passed","time":{"start":1696176119541,"stop":1696176125405,"duration":5864}},{"uid":"c5d2e23380c165df","reportUrl":"https://novasamatech.github.io/test-runner/3869//#testresult/c5d2e23380c165df","status":"passed","time":{"start":1696161730178,"stop":1696161733616,"duration":3438}},{"uid":"5ca440ae008b61c8","reportUrl":"https://novasamatech.github.io/test-runner/3868//#testresult/5ca440ae008b61c8","status":"passed","time":{"start":1696147355200,"stop":1696147360219,"duration":5019}},{"uid":"6653d7e386457e04","reportUrl":"https://novasamatech.github.io/test-runner/3867//#testresult/6653d7e386457e04","status":"passed","time":{"start":1696132945814,"stop":1696132950693,"duration":4879}},{"uid":"2f0ac1e4dab6ede2","reportUrl":"https://novasamatech.github.io/test-runner/3866//#testresult/2f0ac1e4dab6ede2","status":"passed","time":{"start":1696118575823,"stop":1696118579297,"duration":3474}},{"uid":"370f100ff97c0b94","reportUrl":"https://novasamatech.github.io/test-runner/3865//#testresult/370f100ff97c0b94","status":"passed","time":{"start":1696104130526,"stop":1696104134238,"duration":3712}},{"uid":"1b6cb29de2d3bf32","reportUrl":"https://novasamatech.github.io/test-runner/3864//#testresult/1b6cb29de2d3bf32","status":"passed","time":{"start":1696089726527,"stop":1696089730056,"duration":3529}},{"uid":"d300e5256c276bce","reportUrl":"https://novasamatech.github.io/test-runner/3863//#testresult/d300e5256c276bce","status":"passed","time":{"start":1696075328138,"stop":1696075332262,"duration":4124}},{"uid":"9204c18844f5af46","reportUrl":"https://novasamatech.github.io/test-runner/3862//#testresult/9204c18844f5af46","status":"passed","time":{"start":1696060978629,"stop":1696060985624,"duration":6995}},{"uid":"b05f8bf24a06ed52","reportUrl":"https://novasamatech.github.io/test-runner/3861//#testresult/b05f8bf24a06ed52","status":"passed","time":{"start":1696046559315,"stop":1696046565903,"duration":6588}},{"uid":"35c9f7b3cc4e2052","reportUrl":"https://novasamatech.github.io/test-runner/3860//#testresult/35c9f7b3cc4e2052","status":"passed","time":{"start":1696032168355,"stop":1696032173016,"duration":4661}},{"uid":"e427666d5962d52d","reportUrl":"https://novasamatech.github.io/test-runner/3859//#testresult/e427666d5962d52d","status":"passed","time":{"start":1696017775469,"stop":1696017779571,"duration":4102}},{"uid":"f2d7b1a41c0e7934","reportUrl":"https://novasamatech.github.io/test-runner/3858//#testresult/f2d7b1a41c0e7934","status":"passed","time":{"start":1696003345151,"stop":1696003348643,"duration":3492}},{"uid":"c9c9b26cb7cfd947","reportUrl":"https://novasamatech.github.io/test-runner/3857//#testresult/c9c9b26cb7cfd947","status":"passed","time":{"start":1695988942658,"stop":1695988947497,"duration":4839}},{"uid":"962cfc8f235c60f2","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/962cfc8f235c60f2","status":"passed","time":{"start":1695974534629,"stop":1695974539292,"duration":4663}},{"uid":"3e967c8ec285ae6b","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/3e967c8ec285ae6b","status":"passed","time":{"start":1695960130603,"stop":1695960134285,"duration":3682}}]},"tags":[]},"source":"55d8ff1cc87b4400.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fef482c2c20>"]}