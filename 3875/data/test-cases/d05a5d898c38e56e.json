{"uid":"d05a5d898c38e56e","name":"test_can_create_connection[Test for Kylin, url: wss://polkadot.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3ee0d191ab7acb2fad9a82a3aa808e89","time":{"start":1696248137661,"stop":1696248137733,"duration":72},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 02 Oct 2023 12:02:17 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 02 Oct 2023 12:02:17 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 02 Oct 2023 12:02:17 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 02 Oct 2023 12:02:17 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e249ec49db6ed516","name":"stdout","source":"e249ec49db6ed516.txt","type":"text/plain","size":1500}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az444-814"},{"name":"thread","value":"2057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7600523b2d78d78e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 02 Oct 2023 12:02:02 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1696248122444,"stop":1696248122513,"duration":69}},{"uid":"b309ae14d01c7727","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 02 Oct 2023 12:01:47 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1696248107133,"stop":1696248107291,"duration":158}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":214,"unknown":0,"total":235},"items":[{"uid":"3647bd06b7690891","reportUrl":"https://novasamatech.github.io/test-runner/3874//#testresult/3647bd06b7690891","status":"passed","time":{"start":1696233750062,"stop":1696233750218,"duration":156}},{"uid":"68469473a69e9c92","reportUrl":"https://novasamatech.github.io/test-runner/3873//#testresult/68469473a69e9c92","status":"passed","time":{"start":1696219358384,"stop":1696219358467,"duration":83}},{"uid":"d59e57d029c7f64c","reportUrl":"https://novasamatech.github.io/test-runner/3872//#testresult/d59e57d029c7f64c","status":"passed","time":{"start":1696205033393,"stop":1696205033782,"duration":389}},{"uid":"21c9d7ed8329cc7b","reportUrl":"https://novasamatech.github.io/test-runner/3871//#testresult/21c9d7ed8329cc7b","status":"passed","time":{"start":1696190580139,"stop":1696190580225,"duration":86}},{"uid":"cd046a034242295a","reportUrl":"https://novasamatech.github.io/test-runner/3870//#testresult/cd046a034242295a","status":"passed","time":{"start":1696176256773,"stop":1696176257131,"duration":358}},{"uid":"b64cf19b90936905","reportUrl":"https://novasamatech.github.io/test-runner/3869//#testresult/b64cf19b90936905","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 01 Oct 2023 12:03:04 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1696161784001,"stop":1696161784095,"duration":94}},{"uid":"7dae781395a4a92d","reportUrl":"https://novasamatech.github.io/test-runner/3868//#testresult/7dae781395a4a92d","status":"passed","time":{"start":1696147355477,"stop":1696147355906,"duration":429}},{"uid":"97b6ba931c6c1f44","reportUrl":"https://novasamatech.github.io/test-runner/3867//#testresult/97b6ba931c6c1f44","status":"passed","time":{"start":1696132940570,"stop":1696132940661,"duration":91}},{"uid":"66bd1d1003bbbbff","reportUrl":"https://novasamatech.github.io/test-runner/3866//#testresult/66bd1d1003bbbbff","status":"passed","time":{"start":1696118608599,"stop":1696118608914,"duration":315}},{"uid":"c61a93d838eb49c1","reportUrl":"https://novasamatech.github.io/test-runner/3865//#testresult/c61a93d838eb49c1","status":"passed","time":{"start":1696104156312,"stop":1696104156548,"duration":236}},{"uid":"c3564cca8eddf083","reportUrl":"https://novasamatech.github.io/test-runner/3864//#testresult/c3564cca8eddf083","status":"passed","time":{"start":1696089800004,"stop":1696089800141,"duration":137}},{"uid":"15a009acb9976c76","reportUrl":"https://novasamatech.github.io/test-runner/3863//#testresult/15a009acb9976c76","status":"passed","time":{"start":1696075361782,"stop":1696075362156,"duration":374}},{"uid":"189916ce13e3561d","reportUrl":"https://novasamatech.github.io/test-runner/3862//#testresult/189916ce13e3561d","status":"passed","time":{"start":1696060966677,"stop":1696060967006,"duration":329}},{"uid":"e081e983bb660e16","reportUrl":"https://novasamatech.github.io/test-runner/3861//#testresult/e081e983bb660e16","status":"passed","time":{"start":1696046576068,"stop":1696046576319,"duration":251}},{"uid":"99c2332b8afa2eaa","reportUrl":"https://novasamatech.github.io/test-runner/3860//#testresult/99c2332b8afa2eaa","status":"passed","time":{"start":1696032242116,"stop":1696032242466,"duration":350}},{"uid":"186a608e8111b796","reportUrl":"https://novasamatech.github.io/test-runner/3859//#testresult/186a608e8111b796","status":"passed","time":{"start":1696017823693,"stop":1696017823773,"duration":80}},{"uid":"e68866a22d506253","reportUrl":"https://novasamatech.github.io/test-runner/3858//#testresult/e68866a22d506253","status":"passed","time":{"start":1696003399517,"stop":1696003399613,"duration":96}},{"uid":"a37ace6e5b4ae012","reportUrl":"https://novasamatech.github.io/test-runner/3857//#testresult/a37ace6e5b4ae012","status":"passed","time":{"start":1695988942972,"stop":1695988943027,"duration":55}},{"uid":"41775e6450fe59e2","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/41775e6450fe59e2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Fri, 29 Sep 2023 08:03:01 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1695974581274,"stop":1695974581560,"duration":286}},{"uid":"33c42bf22b85c0cf","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/33c42bf22b85c0cf","status":"passed","time":{"start":1695960125089,"stop":1695960125158,"duration":69}}]},"tags":[]},"source":"d05a5d898c38e56e.json","parameterValues":["{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"]}