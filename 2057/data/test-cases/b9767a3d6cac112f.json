{"uid":"b9767a3d6cac112f","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://centrifuge-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c61d3131e170cf9bb6fa392a1937f08b","time":{"start":1670645147009,"stop":1670645158797,"duration":11788},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a433ad5cd2c4cd52","name":"stdout","source":"a433ad5cd2c4cd52.txt","type":"text/plain","size":248}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az621-198"},{"name":"thread","value":"1665-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c998d083afd34e53","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670645125583,"stop":1670645136936,"duration":11353}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":118,"skipped":0,"passed":208,"unknown":0,"total":326},"items":[{"uid":"cf629dee914b059e","reportUrl":"https://nova-wallet.github.io/test-runner/2056//#testresult/cf629dee914b059e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670631294565,"stop":1670631305993,"duration":11428}},{"uid":"555a3f9b3c6ab9ea","reportUrl":"https://nova-wallet.github.io/test-runner/2054//#testresult/555a3f9b3c6ab9ea","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670601961190,"stop":1670601972933,"duration":11743}},{"uid":"a69c16521d9fed9","reportUrl":"https://nova-wallet.github.io/test-runner/2053//#testresult/a69c16521d9fed9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670587614248,"stop":1670587624035,"duration":9787}},{"uid":"fc02c98e75e2fd56","reportUrl":"https://nova-wallet.github.io/test-runner/2052//#testresult/fc02c98e75e2fd56","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670573232008,"stop":1670573244004,"duration":11996}},{"uid":"21e3c1e07f027554","reportUrl":"https://nova-wallet.github.io/test-runner/2051//#testresult/21e3c1e07f027554","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670558756350,"stop":1670558768300,"duration":11950}},{"uid":"68337f22100635a9","reportUrl":"https://nova-wallet.github.io/test-runner/2050//#testresult/68337f22100635a9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670544993439,"stop":1670545004856,"duration":11417}},{"uid":"dc09e00a5160c4","reportUrl":"https://nova-wallet.github.io/test-runner/2049//#testresult/dc09e00a5160c4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670529977215,"stop":1670529988459,"duration":11244}},{"uid":"84081683f8d4dd99","reportUrl":"https://nova-wallet.github.io/test-runner/2048//#testresult/84081683f8d4dd99","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670515559622,"stop":1670515571001,"duration":11379}},{"uid":"c5f0709fd2068c6b","reportUrl":"https://nova-wallet.github.io/test-runner/2047//#testresult/c5f0709fd2068c6b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670501227760,"stop":1670501239161,"duration":11401}},{"uid":"5237efca94bf6608","reportUrl":"https://nova-wallet.github.io/test-runner/2046//#testresult/5237efca94bf6608","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670486767064,"stop":1670486778485,"duration":11421}},{"uid":"75d10de0656483a0","reportUrl":"https://nova-wallet.github.io/test-runner/2045//#testresult/75d10de0656483a0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670472375453,"stop":1670472387391,"duration":11938}},{"uid":"b99995e680fce606","reportUrl":"https://nova-wallet.github.io/test-runner/2044//#testresult/b99995e680fce606","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670458517806,"stop":1670458529230,"duration":11424}},{"uid":"6801577959c09a6c","reportUrl":"https://nova-wallet.github.io/test-runner/2043//#testresult/6801577959c09a6c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670443552544,"stop":1670443563948,"duration":11404}},{"uid":"f853539835c8323f","reportUrl":"https://nova-wallet.github.io/test-runner/2042//#testresult/f853539835c8323f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670429181639,"stop":1670429193060,"duration":11421}},{"uid":"73ad69fba89ff634","reportUrl":"https://nova-wallet.github.io/test-runner/2041//#testresult/73ad69fba89ff634","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670414837116,"stop":1670414848507,"duration":11391}},{"uid":"8520b27393e99d63","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/8520b27393e99d63","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670400390782,"stop":1670400403004,"duration":12222}},{"uid":"1f0b10acc9374ca9","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/1f0b10acc9374ca9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670385954801,"stop":1670385966979,"duration":12178}},{"uid":"cf027db1b1190dd2","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/cf027db1b1190dd2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670372161374,"stop":1670372172780,"duration":11406}},{"uid":"90e2bb0f74d260d9","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/90e2bb0f74d260d9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670357155592,"stop":1670357167020,"duration":11428}},{"uid":"2cdbb5d5e9053866","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/2cdbb5d5e9053866","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1670342764006,"stop":1670342775404,"duration":11398}}]},"tags":[]},"source":"b9767a3d6cac112f.json","parameterValues":["{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"]}