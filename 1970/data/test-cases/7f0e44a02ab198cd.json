{"uid":"7f0e44a02ab198cd","name":"test_can_create_connection[Test for Robonomics, url: wss://robonomics.leemo.me]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"60f696a8c9130865c0be5e1d2491af5d","time":{"start":1669450129307,"stop":1669450129644,"duration":337},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Robonomics', 'url': 'wss://robonomics.leemo.me'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az208-521"},{"name":"thread","value":"1609-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"23319b907d6202a9","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669450118878,"stop":1669450119220,"duration":342}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":118,"unknown":0,"total":125},"items":[{"uid":"61f29bf612f29cad","reportUrl":"https://nova-wallet.github.io/test-runner/1969//#testresult/61f29bf612f29cad","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669435768679,"stop":1669435769192,"duration":513}},{"uid":"555457b38140c454","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/555457b38140c454","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421887068,"stop":1669421887408,"duration":340}},{"uid":"d3d37f78ad40cabe","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/d3d37f78ad40cabe","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406939176,"stop":1669406939824,"duration":648}},{"uid":"edb71fa99584481b","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/edb71fa99584481b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392536512,"stop":1669392537015,"duration":503}},{"uid":"6238449e62b13048","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/6238449e62b13048","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378203486,"stop":1669378203821,"duration":335}},{"uid":"d07b9272d0f6545d","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/d07b9272d0f6545d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370944436,"stop":1669370944931,"duration":495}},{"uid":"2cfaa36630a7feab","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/2cfaa36630a7feab","status":"passed","time":{"start":1669118718741,"stop":1669118719168,"duration":427}},{"uid":"bc6e9a76c1279f91","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/bc6e9a76c1279f91","status":"passed","time":{"start":1669104287868,"stop":1669104288651,"duration":783}},{"uid":"5c61f3d29b06416d","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/5c61f3d29b06416d","status":"passed","time":{"start":1669089849445,"stop":1669089850058,"duration":613}},{"uid":"7d09e05c8cdb93ec","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7d09e05c8cdb93ec","status":"passed","time":{"start":1669076140665,"stop":1669076141068,"duration":403}},{"uid":"eab95903bf38c166","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/eab95903bf38c166","status":"passed","time":{"start":1669061047210,"stop":1669061047833,"duration":623}},{"uid":"dffa9c498a1f61ed","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/dffa9c498a1f61ed","status":"passed","time":{"start":1669046726498,"stop":1669046727283,"duration":785}},{"uid":"39b0585c91babaa9","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/39b0585c91babaa9","status":"passed","time":{"start":1669032331426,"stop":1669032331822,"duration":396}},{"uid":"b00f828d9649e7b0","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/b00f828d9649e7b0","status":"passed","time":{"start":1669017882137,"stop":1669017882786,"duration":649}},{"uid":"c7de6edbf8c59b56","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/c7de6edbf8c59b56","status":"passed","time":{"start":1669003729063,"stop":1669003729473,"duration":410}},{"uid":"e8d903cf9ffef65c","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/e8d903cf9ffef65c","status":"passed","time":{"start":1668989748225,"stop":1668989748663,"duration":438}},{"uid":"ac3207f1199bff5d","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/ac3207f1199bff5d","status":"passed","time":{"start":1668974636668,"stop":1668974637098,"duration":430}},{"uid":"32c27a56f02d0e89","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/32c27a56f02d0e89","status":"passed","time":{"start":1668960238807,"stop":1668960239447,"duration":640}},{"uid":"21a245d189386627","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/21a245d189386627","status":"passed","time":{"start":1668945890562,"stop":1668945891324,"duration":762}},{"uid":"d746a33c5c32feb3","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/d746a33c5c32feb3","status":"passed","time":{"start":1668931462378,"stop":1668931462832,"duration":454}}]},"tags":[]},"source":"7f0e44a02ab198cd.json","parameterValues":["{'url': 'wss://robonomics.leemo.me', 'name': 'Robonomics'}"]}