{"uid":"12914edd062b6c08","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc-3.aca-api.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"9924fd062719dddab41b666be49e86a5","time":{"start":1669449934520,"stop":1669449934616,"duration":96},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-3.aca-api.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az208-521"},{"name":"thread","value":"1609-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc-3.aca-api.network/ws', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ffc90fe2aede5600","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669449924362,"stop":1669449924448,"duration":86}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":250,"unknown":0,"total":257},"items":[{"uid":"ca5b3c081423453","reportUrl":"https://nova-wallet.github.io/test-runner/1969//#testresult/ca5b3c081423453","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669435543188,"stop":1669435543721,"duration":533}},{"uid":"ec865c9f4d932a50","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/ec865c9f4d932a50","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421684205,"stop":1669421684287,"duration":82}},{"uid":"f7e7e4c34d5d4af2","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/f7e7e4c34d5d4af2","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406739945,"stop":1669406740328,"duration":383}},{"uid":"69d92487f61e29b","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/69d92487f61e29b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392339269,"stop":1669392339424,"duration":155}},{"uid":"e5581fd525dcbd00","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/e5581fd525dcbd00","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669377993184,"stop":1669377993249,"duration":65}},{"uid":"c2af499814b2176b","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/c2af499814b2176b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370740759,"stop":1669370740954,"duration":195}},{"uid":"d2970441f0657b2f","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/d2970441f0657b2f","status":"passed","time":{"start":1669118699064,"stop":1669118699150,"duration":86}},{"uid":"8b514bd9256ec4b5","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/8b514bd9256ec4b5","status":"passed","time":{"start":1669104275480,"stop":1669104275722,"duration":242}},{"uid":"81647f52d9241f59","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/81647f52d9241f59","status":"passed","time":{"start":1669089837975,"stop":1669089838214,"duration":239}},{"uid":"9fc7a7c32fed3b2f","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/9fc7a7c32fed3b2f","status":"passed","time":{"start":1669076123929,"stop":1669076124019,"duration":90}},{"uid":"9cd7b2a8ebc2bfda","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/9cd7b2a8ebc2bfda","status":"passed","time":{"start":1669061035259,"stop":1669061035532,"duration":273}},{"uid":"61c1d80208e2c156","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/61c1d80208e2c156","status":"passed","time":{"start":1669046675811,"stop":1669046676052,"duration":241}},{"uid":"5d881dbe48299b9a","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/5d881dbe48299b9a","status":"passed","time":{"start":1669032318170,"stop":1669032318258,"duration":88}},{"uid":"a16fdce0ba3a379f","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/a16fdce0ba3a379f","status":"passed","time":{"start":1669017870723,"stop":1669017870987,"duration":264}},{"uid":"27ad665e1932290a","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/27ad665e1932290a","status":"passed","time":{"start":1669003714956,"stop":1669003715048,"duration":92}},{"uid":"48284d96b4c3fb34","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/48284d96b4c3fb34","status":"passed","time":{"start":1668989725368,"stop":1668989725491,"duration":123}},{"uid":"331380f70d8b4ac8","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/331380f70d8b4ac8","status":"passed","time":{"start":1668974621709,"stop":1668974621824,"duration":115}},{"uid":"439dae9c7b114f6b","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/439dae9c7b114f6b","status":"passed","time":{"start":1668960226385,"stop":1668960226654,"duration":269}},{"uid":"6bb9025518224490","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/6bb9025518224490","status":"passed","time":{"start":1668945877681,"stop":1668945878105,"duration":424}},{"uid":"97061c990793ada1","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/97061c990793ada1","status":"passed","time":{"start":1668931444619,"stop":1668931444801,"duration":182}}]},"tags":[]},"source":"12914edd062b6c08.json","parameterValues":["{'url': 'wss://karura-rpc-3.aca-api.network/ws', 'name': 'Karura'}"]}