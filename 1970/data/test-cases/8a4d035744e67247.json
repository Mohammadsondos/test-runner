{"uid":"8a4d035744e67247","name":"test_can_create_connection[Test for Picasso, url: wss://picasso-rpc.composable.finance]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a99dc3895865408a2004c053a1261232","time":{"start":1669450209850,"stop":1669450210216,"duration":366},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Picasso', 'url': 'wss://picasso-rpc.composable.finance'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az208-521"},{"name":"thread","value":"1609-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://picasso-rpc.composable.finance', 'name': 'Picasso'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e5b5f11b7741afc1","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669450199088,"stop":1669450199760,"duration":672}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":250,"unknown":0,"total":257},"items":[{"uid":"85f063250769167","reportUrl":"https://nova-wallet.github.io/test-runner/1969//#testresult/85f063250769167","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669435849540,"stop":1669435849946,"duration":406}},{"uid":"6710c0b048bc75d9","reportUrl":"https://nova-wallet.github.io/test-runner/1968//#testresult/6710c0b048bc75d9","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669421962738,"stop":1669421963113,"duration":375}},{"uid":"602159121f7bdf39","reportUrl":"https://nova-wallet.github.io/test-runner/1967//#testresult/602159121f7bdf39","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669407016882,"stop":1669407017295,"duration":413}},{"uid":"11311e4a072ba14","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/11311e4a072ba14","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392615504,"stop":1669392616003,"duration":499}},{"uid":"a39a464a486049d7","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/a39a464a486049d7","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)","time":{"start":1669378279110,"stop":1669378279277,"duration":167}},{"uid":"b03dfd964a81493e","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/b03dfd964a81493e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371023529,"stop":1669371023922,"duration":393}},{"uid":"596e5541de963612","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/596e5541de963612","status":"passed","time":{"start":1669118753569,"stop":1669118753919,"duration":350}},{"uid":"cf589c60f6f03207","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/cf589c60f6f03207","status":"passed","time":{"start":1669104324400,"stop":1669104324966,"duration":566}},{"uid":"d388588365f3040f","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/d388588365f3040f","status":"passed","time":{"start":1669089885987,"stop":1669089886620,"duration":633}},{"uid":"980324f696a95f75","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/980324f696a95f75","status":"passed","time":{"start":1669076175655,"stop":1669076176241,"duration":586}},{"uid":"c5a613b9cdece2df","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c5a613b9cdece2df","status":"passed","time":{"start":1669061081743,"stop":1669061082378,"duration":635}},{"uid":"ad5700e425d04659","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/ad5700e425d04659","status":"passed","time":{"start":1669046763174,"stop":1669046763696,"duration":522}},{"uid":"7c1632b39d0b21e7","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/7c1632b39d0b21e7","status":"passed","time":{"start":1669032367768,"stop":1669032368120,"duration":352}},{"uid":"1492d1744e0c9f88","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/1492d1744e0c9f88","status":"passed","time":{"start":1669017917079,"stop":1669017917720,"duration":641}},{"uid":"6510a70566928a3","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/6510a70566928a3","status":"passed","time":{"start":1669003764377,"stop":1669003764720,"duration":343}},{"uid":"b508efddc6222f6","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/b508efddc6222f6","status":"passed","time":{"start":1668989783680,"stop":1668989784333,"duration":653}},{"uid":"50729450b3406743","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/50729450b3406743","status":"passed","time":{"start":1668974678743,"stop":1668974679287,"duration":544}},{"uid":"b9d495899bdf9ddb","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/b9d495899bdf9ddb","status":"passed","time":{"start":1668960274104,"stop":1668960274757,"duration":653}},{"uid":"4d62e173ba368e84","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/4d62e173ba368e84","status":"passed","time":{"start":1668945926883,"stop":1668945927646,"duration":763}},{"uid":"5dffb1ff6ecc9aaf","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/5dffb1ff6ecc9aaf","status":"passed","time":{"start":1668931497659,"stop":1668931498178,"duration":519}}]},"tags":[]},"source":"8a4d035744e67247.json","parameterValues":["{'url': 'wss://picasso-rpc.composable.finance', 'name': 'Picasso'}"]}