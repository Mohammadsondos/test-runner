{"uid":"d7162b5efbc82d3b","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1676635515998,"stop":1676635516586,"duration":588},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"907e3babd9d82ab9","name":"stdout","source":"907e3babd9d82ab9.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az283-302"},{"name":"thread","value":"1630-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9de46ed766015496","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1676635505246,"stop":1676635505883,"duration":637}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":81,"skipped":0,"passed":640,"unknown":0,"total":721},"items":[{"uid":"d316c8d31c1082f5","reportUrl":"https://nova-wallet.github.io/test-runner/2476//#testresult/d316c8d31c1082f5","status":"passed","time":{"start":1676621054659,"stop":1676621055056,"duration":397}},{"uid":"a5a659837e197e9e","reportUrl":"https://nova-wallet.github.io/test-runner/2475//#testresult/a5a659837e197e9e","status":"passed","time":{"start":1676606644512,"stop":1676606644968,"duration":456}},{"uid":"80068a135860116c","reportUrl":"https://nova-wallet.github.io/test-runner/2474//#testresult/80068a135860116c","status":"passed","time":{"start":1676592921350,"stop":1676592921808,"duration":458}},{"uid":"67b4e944d67ce8f4","reportUrl":"https://nova-wallet.github.io/test-runner/2473//#testresult/67b4e944d67ce8f4","status":"passed","time":{"start":1676577830485,"stop":1676577830887,"duration":402}},{"uid":"f71410c41e590171","reportUrl":"https://nova-wallet.github.io/test-runner/2472//#testresult/f71410c41e590171","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1676563447119,"stop":1676563447490,"duration":371}},{"uid":"3ee6437e8170b959","reportUrl":"https://nova-wallet.github.io/test-runner/2471//#testresult/3ee6437e8170b959","status":"passed","time":{"start":1676549110317,"stop":1676549110986,"duration":669}},{"uid":"5c052852721852e6","reportUrl":"https://nova-wallet.github.io/test-runner/2469//#testresult/5c052852721852e6","status":"passed","time":{"start":1676520234630,"stop":1676520235008,"duration":378}},{"uid":"38ec094202673e4a","reportUrl":"https://nova-wallet.github.io/test-runner/2468//#testresult/38ec094202673e4a","status":"passed","time":{"start":1676506461860,"stop":1676506462532,"duration":672}},{"uid":"84749c262d278968","reportUrl":"https://nova-wallet.github.io/test-runner/2467//#testresult/84749c262d278968","status":"passed","time":{"start":1676491439951,"stop":1676491440418,"duration":467}},{"uid":"a03c43f086680a65","reportUrl":"https://nova-wallet.github.io/test-runner/2466//#testresult/a03c43f086680a65","status":"passed","time":{"start":1676477052490,"stop":1676477052942,"duration":452}},{"uid":"5930c8b63557d8d7","reportUrl":"https://nova-wallet.github.io/test-runner/2465//#testresult/5930c8b63557d8d7","status":"passed","time":{"start":1676462723566,"stop":1676462724188,"duration":622}},{"uid":"80f5e334f03484c","reportUrl":"https://nova-wallet.github.io/test-runner/2464//#testresult/80f5e334f03484c","status":"passed","time":{"start":1676448280313,"stop":1676448280727,"duration":414}},{"uid":"196ce723c15c43f1","reportUrl":"https://nova-wallet.github.io/test-runner/2457//#testresult/196ce723c15c43f1","status":"passed","time":{"start":1676348238882,"stop":1676348239541,"duration":659}},{"uid":"635cd1fb5092e0e0","reportUrl":"https://nova-wallet.github.io/test-runner/2456//#testresult/635cd1fb5092e0e0","status":"passed","time":{"start":1676337061779,"stop":1676337062550,"duration":771}},{"uid":"50de8788c38b3f58","reportUrl":"https://nova-wallet.github.io/test-runner/2455//#testresult/50de8788c38b3f58","status":"passed","time":{"start":1676319292827,"stop":1676319293459,"duration":632}},{"uid":"4a453b3e9c3e6856","reportUrl":"https://nova-wallet.github.io/test-runner/2454//#testresult/4a453b3e9c3e6856","status":"passed","time":{"start":1676305165987,"stop":1676305166660,"duration":673}},{"uid":"2df3a7aad161d8d7","reportUrl":"https://nova-wallet.github.io/test-runner/2453//#testresult/2df3a7aad161d8d7","status":"passed","time":{"start":1676291256897,"stop":1676291257643,"duration":746}},{"uid":"da4b2bf30d8f7c54","reportUrl":"https://nova-wallet.github.io/test-runner/2452//#testresult/da4b2bf30d8f7c54","status":"passed","time":{"start":1676276326768,"stop":1676276327367,"duration":599}},{"uid":"1e1de5688f441e12","reportUrl":"https://nova-wallet.github.io/test-runner/2451//#testresult/1e1de5688f441e12","status":"passed","time":{"start":1676261821501,"stop":1676261822217,"duration":716}},{"uid":"8ed66da70b7e367","reportUrl":"https://nova-wallet.github.io/test-runner/2450//#testresult/8ed66da70b7e367","status":"passed","time":{"start":1676250649160,"stop":1676250650003,"duration":843}}]},"tags":[]},"source":"d7162b5efbc82d3b.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}