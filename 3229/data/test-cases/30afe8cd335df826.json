{"uid":"30afe8cd335df826","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1687075529902,"stop":1687075530084,"duration":182},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f718335bee0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7183358760>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f718335bee0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f7183358760>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"4141cc3d1aa7cef9","name":"stdout","source":"4141cc3d1aa7cef9.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az612-786"},{"name":"thread","value":"1956-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f7183358760>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"96ab4c29ada23ae5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687075514613,"stop":1687075514879,"duration":266}},{"uid":"6f3f37fa351d5382","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687075499173,"stop":1687075499587,"duration":414}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":60,"skipped":0,"passed":209,"unknown":0,"total":269},"items":[{"uid":"1dfcc3b7ab9cb7b2","reportUrl":"https://novasamatech.github.io/test-runner/3228//#testresult/1dfcc3b7ab9cb7b2","status":"passed","time":{"start":1687061085859,"stop":1687061094713,"duration":8854}},{"uid":"ce17e82967ba27ca","reportUrl":"https://novasamatech.github.io/test-runner/3227//#testresult/ce17e82967ba27ca","status":"passed","time":{"start":1687047408317,"stop":1687047410393,"duration":2076}},{"uid":"621a92c1c895de8b","reportUrl":"https://novasamatech.github.io/test-runner/3226//#testresult/621a92c1c895de8b","status":"passed","time":{"start":1687032294885,"stop":1687032296799,"duration":1914}},{"uid":"e7b9242cecd04a41","reportUrl":"https://novasamatech.github.io/test-runner/3225//#testresult/e7b9242cecd04a41","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1687017933944,"stop":1687017934124,"duration":180}},{"uid":"f6fccac8e6c245a8","reportUrl":"https://novasamatech.github.io/test-runner/3224//#testresult/f6fccac8e6c245a8","status":"passed","time":{"start":1687003527682,"stop":1687003530324,"duration":2642}},{"uid":"98a5a6238cae6cd4","reportUrl":"https://novasamatech.github.io/test-runner/3223//#testresult/98a5a6238cae6cd4","status":"passed","time":{"start":1686989096782,"stop":1686989099850,"duration":3068}},{"uid":"e17ab385d8915ad7","reportUrl":"https://novasamatech.github.io/test-runner/3222//#testresult/e17ab385d8915ad7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686974750829,"stop":1686974751401,"duration":572}},{"uid":"404dd85726f3c969","reportUrl":"https://novasamatech.github.io/test-runner/3221//#testresult/404dd85726f3c969","status":"passed","time":{"start":1686960865102,"stop":1686960871907,"duration":6805}},{"uid":"9e40f47e78ff51ab","reportUrl":"https://novasamatech.github.io/test-runner/3220//#testresult/9e40f47e78ff51ab","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686945920939,"stop":1686945921290,"duration":351}},{"uid":"cb7b011e56ec9fac","reportUrl":"https://novasamatech.github.io/test-runner/3219//#testresult/cb7b011e56ec9fac","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686931521143,"stop":1686931521518,"duration":375}},{"uid":"a25ae98b38f3e9ed","reportUrl":"https://novasamatech.github.io/test-runner/3218//#testresult/a25ae98b38f3e9ed","status":"passed","time":{"start":1686917146128,"stop":1686917148079,"duration":1951}},{"uid":"663080e655411189","reportUrl":"https://novasamatech.github.io/test-runner/3217//#testresult/663080e655411189","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686902737056,"stop":1686902737264,"duration":208}},{"uid":"85b6d058f234314d","reportUrl":"https://novasamatech.github.io/test-runner/3216//#testresult/85b6d058f234314d","status":"passed","time":{"start":1686888325415,"stop":1686888328017,"duration":2602}},{"uid":"419144cbe266b657","reportUrl":"https://novasamatech.github.io/test-runner/3215//#testresult/419144cbe266b657","status":"passed","time":{"start":1686874494856,"stop":1686874500709,"duration":5853}},{"uid":"f4cae2840baf739","reportUrl":"https://novasamatech.github.io/test-runner/3214//#testresult/f4cae2840baf739","status":"passed","time":{"start":1686859506402,"stop":1686859509446,"duration":3044}},{"uid":"4e89d9cc4a9fd8ed","reportUrl":"https://novasamatech.github.io/test-runner/3213//#testresult/4e89d9cc4a9fd8ed","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686845117433,"stop":1686845117760,"duration":327}},{"uid":"c78240751986ff3e","reportUrl":"https://novasamatech.github.io/test-runner/3212//#testresult/c78240751986ff3e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686830797813,"stop":1686830798216,"duration":403}},{"uid":"6509355c433200b","reportUrl":"https://novasamatech.github.io/test-runner/3211//#testresult/6509355c433200b","status":"passed","time":{"start":1686816293237,"stop":1686816298823,"duration":5586}},{"uid":"b9951055b2f5802a","reportUrl":"https://novasamatech.github.io/test-runner/3210//#testresult/b9951055b2f5802a","status":"passed","time":{"start":1686801949647,"stop":1686801961872,"duration":12225}},{"uid":"6918898b42c68a24","reportUrl":"https://novasamatech.github.io/test-runner/3209//#testresult/6918898b42c68a24","status":"passed","time":{"start":1686788086783,"stop":1686788090144,"duration":3361}}]},"tags":[]},"source":"30afe8cd335df826.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f7183358760>"]}