{"uid":"394a2c84063d4101","name":"test_can_create_connection[Test for Aventus, url: wss://public-rpc.mainnet.aventus.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"44233bbaddf25c1595c9c2f0c82f319e","time":{"start":1699819335813,"stop":1699819336124,"duration":311},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 20:02:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Aventus', 'url': 'wss://public-rpc.mainnet.aventus.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 20:02:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 20:02:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Aventus', 'url': 'wss://public-rpc.mainnet.aventus.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 20:02:16 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"bdce3d287d279964","name":"stdout","source":"bdce3d287d279964.txt","type":"text/plain","size":1134}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1383-850"},{"name":"thread","value":"2171-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://public-rpc.mainnet.aventus.io', 'name': 'Aventus'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b1b3637c147de049","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 20:02:00 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699819320315,"stop":1699819320742,"duration":427}},{"uid":"88eac8ad9933774b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 20:01:45 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699819304874,"stop":1699819305205,"duration":331}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":450,"unknown":0,"total":485},"items":[{"uid":"875d3a3d0eaa46fc","reportUrl":"https://novasamatech.github.io/test-runner/4124//#testresult/875d3a3d0eaa46fc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 12 Nov 2023 16:02:22 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699804942347,"stop":1699804942577,"duration":230}},{"uid":"e2bb77bfdbe2ad02","reportUrl":"https://novasamatech.github.io/test-runner/4123//#testresult/e2bb77bfdbe2ad02","status":"passed","time":{"start":1699790520910,"stop":1699790521532,"duration":622}},{"uid":"9a8d200e07ab83c2","reportUrl":"https://novasamatech.github.io/test-runner/4122//#testresult/9a8d200e07ab83c2","status":"passed","time":{"start":1699776189342,"stop":1699776189813,"duration":471}},{"uid":"8141e30a125d2c30","reportUrl":"https://novasamatech.github.io/test-runner/4121//#testresult/8141e30a125d2c30","status":"passed","time":{"start":1699761723127,"stop":1699761723698,"duration":571}},{"uid":"59bbc4b43ddc3267","reportUrl":"https://novasamatech.github.io/test-runner/4120//#testresult/59bbc4b43ddc3267","status":"passed","time":{"start":1699747401841,"stop":1699747402321,"duration":480}},{"uid":"776724c934ae6283","reportUrl":"https://novasamatech.github.io/test-runner/4119//#testresult/776724c934ae6283","status":"passed","time":{"start":1699732919730,"stop":1699732920312,"duration":582}},{"uid":"9a27ec6c4a5ca1d","reportUrl":"https://novasamatech.github.io/test-runner/4118//#testresult/9a27ec6c4a5ca1d","status":"passed","time":{"start":1699718544734,"stop":1699718545160,"duration":426}},{"uid":"e9ae2421d280c327","reportUrl":"https://novasamatech.github.io/test-runner/4117//#testresult/e9ae2421d280c327","status":"passed","time":{"start":1699704099436,"stop":1699704100018,"duration":582}},{"uid":"9452656843c44e4f","reportUrl":"https://novasamatech.github.io/test-runner/4116//#testresult/9452656843c44e4f","status":"passed","time":{"start":1699689704812,"stop":1699689705316,"duration":504}},{"uid":"a25ca6b4ba842cea","reportUrl":"https://novasamatech.github.io/test-runner/4115//#testresult/a25ca6b4ba842cea","status":"passed","time":{"start":1699675301712,"stop":1699675302056,"duration":344}},{"uid":"57c5da906f56dd39","reportUrl":"https://novasamatech.github.io/test-runner/4114//#testresult/57c5da906f56dd39","status":"passed","time":{"start":1699660954326,"stop":1699660955065,"duration":739}},{"uid":"8f0ad10c6660c648","reportUrl":"https://novasamatech.github.io/test-runner/4113//#testresult/8f0ad10c6660c648","status":"passed","time":{"start":1699646613184,"stop":1699646613681,"duration":497}},{"uid":"6ad76be7aaba7b7f","reportUrl":"https://novasamatech.github.io/test-runner/4112//#testresult/6ad76be7aaba7b7f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 16:02:30 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699632150341,"stop":1699632150649,"duration":308}},{"uid":"72667c032c460910","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/72667c032c460910","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 10 Nov 2023 12:02:12 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699617732198,"stop":1699617732443,"duration":245}},{"uid":"857be01b08e01dd9","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/857be01b08e01dd9","status":"passed","time":{"start":1699603360760,"stop":1699603361374,"duration":614}},{"uid":"18c599524b9e0341","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/18c599524b9e0341","status":"passed","time":{"start":1699588968119,"stop":1699588968816,"duration":697}},{"uid":"ea8dcff2f9082bf6","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/ea8dcff2f9082bf6","status":"passed","time":{"start":1699574549054,"stop":1699574549413,"duration":359}},{"uid":"4eaaa92743b4b12f","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/4eaaa92743b4b12f","status":"passed","time":{"start":1699560143947,"stop":1699560144410,"duration":463}},{"uid":"c1add513d19fec43","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/c1add513d19fec43","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 09 Nov 2023 16:02:23 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1699545743207,"stop":1699545743478,"duration":271}},{"uid":"8b4c5e4a97a8eb5d","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/8b4c5e4a97a8eb5d","status":"passed","time":{"start":1699531392095,"stop":1699531392618,"duration":523}}]},"tags":[]},"source":"394a2c84063d4101.json","parameterValues":["{'url': 'wss://public-rpc.mainnet.aventus.io', 'name': 'Aventus'}"]}