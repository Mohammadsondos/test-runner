{"uid":"1a8d1b8061e238a8","name":"test_can_create_connection[Test for Parallel, url: wss://rpc.parallel.fi]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3426d33511aeea73e7f0e3938dc2a76d","time":{"start":1698292928776,"stop":1698292929163,"duration":387},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 04:02:09 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Parallel', 'url': 'wss://rpc.parallel.fi'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 04:02:09 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 04:02:09 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Parallel', 'url': 'wss://rpc.parallel.fi'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 04:02:09 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"428f129ad91ac357","name":"stdout","source":"428f129ad91ac357.txt","type":"text/plain","size":1389}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az365-115"},{"name":"thread","value":"2129-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.parallel.fi', 'name': 'Parallel'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"261e19ea0c536cdc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 04:01:53 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698292913246,"stop":1698292913650,"duration":404}},{"uid":"132009dd78e8a734","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 04:01:38 GMT', 'content-type': 'text/html', 'content-length': '162', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698292897733,"stop":1698292898154,"duration":421}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":375,"unknown":0,"total":379},"items":[{"uid":"ac461f78029a6965","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/ac461f78029a6965","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Thu, 26 Oct 2023 00:03:11 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698278581354,"stop":1698278591750,"duration":10396}},{"uid":"dd785a47fdd2c605","reportUrl":"https://novasamatech.github.io/test-runner/4017//#testresult/dd785a47fdd2c605","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Wed, 25 Oct 2023 20:02:25 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698264135062,"stop":1698264145466,"duration":10404}},{"uid":"a8066ef33d84f44e","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/a8066ef33d84f44e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway -+-+- {'server': 'awselb/2.0', 'date': 'Wed, 25 Oct 2023 16:03:12 GMT', 'content-type': 'text/html', 'content-length': '122', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1698249789406,"stop":1698249792667,"duration":3261}},{"uid":"52612c6499d978ff","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/52612c6499d978ff","status":"passed","time":{"start":1698235337893,"stop":1698235338499,"duration":606}},{"uid":"79d714da9bf2fd1a","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/79d714da9bf2fd1a","status":"passed","time":{"start":1698220920163,"stop":1698220920875,"duration":712}},{"uid":"aef46077d3e06d55","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/aef46077d3e06d55","status":"passed","time":{"start":1698206476859,"stop":1698206479159,"duration":2300}},{"uid":"a957470b16744044","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/a957470b16744044","status":"passed","time":{"start":1698192313707,"stop":1698192314529,"duration":822}},{"uid":"8ac58f93860a9c5e","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/8ac58f93860a9c5e","status":"passed","time":{"start":1698177700939,"stop":1698177701678,"duration":739}},{"uid":"49856d102eae84dd","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/49856d102eae84dd","status":"passed","time":{"start":1698163325907,"stop":1698163326408,"duration":501}},{"uid":"29704fc487ebcd0a","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/29704fc487ebcd0a","status":"passed","time":{"start":1698148886696,"stop":1698148887193,"duration":497}},{"uid":"e06d49204d0e2c1a","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/e06d49204d0e2c1a","status":"passed","time":{"start":1698120083003,"stop":1698120083537,"duration":534}},{"uid":"da2d76df2627d578","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/da2d76df2627d578","status":"passed","time":{"start":1698134501312,"stop":1698134501809,"duration":497}},{"uid":"6c65e992a56fc522","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/6c65e992a56fc522","status":"passed","time":{"start":1698105763192,"stop":1698105764527,"duration":1335}},{"uid":"553c1a5dab3431c9","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/553c1a5dab3431c9","status":"passed","time":{"start":1698091321827,"stop":1698091323198,"duration":1371}},{"uid":"24ddcf4fb37e773b","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/24ddcf4fb37e773b","status":"passed","time":{"start":1698076879868,"stop":1698076880466,"duration":598}},{"uid":"a6c815e7a0e9d9e3","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/a6c815e7a0e9d9e3","status":"passed","time":{"start":1698062491431,"stop":1698062493997,"duration":2566}},{"uid":"8a2023fc4e410a30","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/8a2023fc4e410a30","status":"passed","time":{"start":1698048106177,"stop":1698048106723,"duration":546}},{"uid":"6649133d3e35a608","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/6649133d3e35a608","status":"passed","time":{"start":1698033705780,"stop":1698033706474,"duration":694}},{"uid":"be3ed00ca3d46a36","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/be3ed00ca3d46a36","status":"passed","time":{"start":1698019338460,"stop":1698019339008,"duration":548}},{"uid":"66980b4558bff0f2","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/66980b4558bff0f2","status":"passed","time":{"start":1698004889903,"stop":1698004890599,"duration":696}}]},"tags":[]},"source":"1a8d1b8061e238a8.json","parameterValues":["{'url': 'wss://rpc.parallel.fi', 'name': 'Parallel'}"]}