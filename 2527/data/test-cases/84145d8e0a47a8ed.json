{"uid":"84145d8e0a47a8ed","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1677269051189,"stop":1677269051673,"duration":484},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"d7980c6cb0cbbc33","name":"stdout","source":"d7980c6cb0cbbc33.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az447-979"},{"name":"thread","value":"1751-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5ad35587df6f8465","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1677269040572,"stop":1677269041076,"duration":504}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":85,"skipped":0,"passed":679,"unknown":0,"total":764},"items":[{"uid":"429af0e45d6bb66e","reportUrl":"https://nova-wallet.github.io/test-runner/2526//#testresult/429af0e45d6bb66e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1677254650729,"stop":1677254651269,"duration":540}},{"uid":"a519d0f395779245","reportUrl":"https://nova-wallet.github.io/test-runner/2525//#testresult/a519d0f395779245","status":"passed","time":{"start":1677240314108,"stop":1677240314707,"duration":599}},{"uid":"b6855eadf7e7d260","reportUrl":"https://nova-wallet.github.io/test-runner/2524//#testresult/b6855eadf7e7d260","status":"passed","time":{"start":1677225859511,"stop":1677225860261,"duration":750}},{"uid":"336ff77ac1be73f7","reportUrl":"https://nova-wallet.github.io/test-runner/2523//#testresult/336ff77ac1be73f7","status":"passed","time":{"start":1677211437629,"stop":1677211438178,"duration":549}},{"uid":"f0549f59b5a43c42","reportUrl":"https://nova-wallet.github.io/test-runner/2522//#testresult/f0549f59b5a43c42","status":"passed","time":{"start":1677197632422,"stop":1677197633094,"duration":672}},{"uid":"432872c72ce3ac22","reportUrl":"https://nova-wallet.github.io/test-runner/2521//#testresult/432872c72ce3ac22","status":"passed","time":{"start":1677182633668,"stop":1677182634393,"duration":725}},{"uid":"68f174c947521163","reportUrl":"https://nova-wallet.github.io/test-runner/2520//#testresult/68f174c947521163","status":"passed","time":{"start":1677168236820,"stop":1677168237319,"duration":499}},{"uid":"c47ca12f5f03e3d2","reportUrl":"https://nova-wallet.github.io/test-runner/2519//#testresult/c47ca12f5f03e3d2","status":"passed","time":{"start":1677153955511,"stop":1677153956188,"duration":677}},{"uid":"70cd471a8aab81db","reportUrl":"https://nova-wallet.github.io/test-runner/2518//#testresult/70cd471a8aab81db","status":"passed","time":{"start":1677139454366,"stop":1677139455009,"duration":643}},{"uid":"b1bd338fdb6c0604","reportUrl":"https://nova-wallet.github.io/test-runner/2517//#testresult/b1bd338fdb6c0604","status":"passed","time":{"start":1677125039339,"stop":1677125040025,"duration":686}},{"uid":"fd1066a9aa31ed50","reportUrl":"https://nova-wallet.github.io/test-runner/2516//#testresult/fd1066a9aa31ed50","status":"passed","time":{"start":1677111299525,"stop":1677111299909,"duration":384}},{"uid":"5e6a0acc3ce33079","reportUrl":"https://nova-wallet.github.io/test-runner/2515//#testresult/5e6a0acc3ce33079","status":"passed","time":{"start":1677096231467,"stop":1677096231835,"duration":368}},{"uid":"aa2dad9936857f10","reportUrl":"https://nova-wallet.github.io/test-runner/2514//#testresult/aa2dad9936857f10","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1677081851214,"stop":1677081851784,"duration":570}},{"uid":"feb4af46c8e91efc","reportUrl":"https://nova-wallet.github.io/test-runner/2513//#testresult/feb4af46c8e91efc","status":"passed","time":{"start":1677067514389,"stop":1677067514740,"duration":351}},{"uid":"deb2d74b525da","reportUrl":"https://nova-wallet.github.io/test-runner/2512//#testresult/deb2d74b525da","status":"passed","time":{"start":1677053078584,"stop":1677053079343,"duration":759}},{"uid":"4b6a783c8531dde9","reportUrl":"https://nova-wallet.github.io/test-runner/2511//#testresult/4b6a783c8531dde9","status":"passed","time":{"start":1677038655781,"stop":1677038656452,"duration":671}},{"uid":"98b9047438ba81fa","reportUrl":"https://nova-wallet.github.io/test-runner/2510//#testresult/98b9047438ba81fa","status":"passed","time":{"start":1677024795679,"stop":1677024796279,"duration":600}},{"uid":"abfa85805469ca03","reportUrl":"https://nova-wallet.github.io/test-runner/2509//#testresult/abfa85805469ca03","status":"passed","time":{"start":1677009833498,"stop":1677009834255,"duration":757}},{"uid":"5b153648aee5459f","reportUrl":"https://nova-wallet.github.io/test-runner/2508//#testresult/5b153648aee5459f","status":"passed","time":{"start":1676995435835,"stop":1676995436226,"duration":391}},{"uid":"986bcdc82fc65740","reportUrl":"https://nova-wallet.github.io/test-runner/2507//#testresult/986bcdc82fc65740","status":"passed","time":{"start":1676981111834,"stop":1676981112528,"duration":694}}]},"tags":[]},"source":"84145d8e0a47a8ed.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}