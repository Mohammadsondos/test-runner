{"uid":"852caadb5e758c5c","name":"test_has_new_assets[Test for Bit.Country Pioneer]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"27cc2974be60c7bc903ced5d5eb236e9","time":{"start":1696910951860,"stop":1696911314917,"duration":363057},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7facee8dc760>\nchain = <scripts.utils.chain_model.Chain object at 0x7facee8ddde0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7facee8dc760>\nchain = <scripts.utils.chain_model.Chain object at 0x7facee8ddde0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"d7b94da022236e11","name":"stdout","source":"d7b94da022236e11.txt","type":"text/plain","size":1285}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az617-931"},{"name":"thread","value":"2172-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7facee8ddde0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"457e10884e235464","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696910875915,"stop":1696910936839,"duration":60924}},{"uid":"70efc615b8ce1011","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696910500023,"stop":1696910860879,"duration":360856}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":280,"unknown":0,"total":281},"items":[{"uid":"b7acd7d18eff0312","reportUrl":"https://novasamatech.github.io/test-runner/3921//#testresult/b7acd7d18eff0312","status":"passed","time":{"start":1696896150527,"stop":1696896158095,"duration":7568}},{"uid":"e650b529c0c3348a","reportUrl":"https://novasamatech.github.io/test-runner/3920//#testresult/e650b529c0c3348a","status":"passed","time":{"start":1696881697222,"stop":1696881702489,"duration":5267}},{"uid":"57c7177ff40f2285","reportUrl":"https://novasamatech.github.io/test-runner/3919//#testresult/57c7177ff40f2285","status":"passed","time":{"start":1696867318066,"stop":1696867326262,"duration":8196}},{"uid":"6aebaf9e85a74f5","reportUrl":"https://novasamatech.github.io/test-runner/3918//#testresult/6aebaf9e85a74f5","status":"passed","time":{"start":1696852897423,"stop":1696852904068,"duration":6645}},{"uid":"ea6b8d3507f0af","reportUrl":"https://novasamatech.github.io/test-runner/3917//#testresult/ea6b8d3507f0af","status":"passed","time":{"start":1696838498287,"stop":1696838503941,"duration":5654}},{"uid":"b06f46dee2dee8ca","reportUrl":"https://novasamatech.github.io/test-runner/3916//#testresult/b06f46dee2dee8ca","status":"passed","time":{"start":1696824089760,"stop":1696824094913,"duration":5153}},{"uid":"673b2f3164b000d2","reportUrl":"https://novasamatech.github.io/test-runner/3915//#testresult/673b2f3164b000d2","status":"passed","time":{"start":1696809747511,"stop":1696809754623,"duration":7112}},{"uid":"3a860e391bf2b556","reportUrl":"https://novasamatech.github.io/test-runner/3914//#testresult/3a860e391bf2b556","status":"passed","time":{"start":1696795298952,"stop":1696795304544,"duration":5592}},{"uid":"713418638cd7f916","reportUrl":"https://novasamatech.github.io/test-runner/3913//#testresult/713418638cd7f916","status":"passed","time":{"start":1696780890291,"stop":1696780897239,"duration":6948}},{"uid":"fa4bdbee0a268e75","reportUrl":"https://novasamatech.github.io/test-runner/3912//#testresult/fa4bdbee0a268e75","status":"passed","time":{"start":1696766498067,"stop":1696766503525,"duration":5458}},{"uid":"97c78c4029217ff7","reportUrl":"https://novasamatech.github.io/test-runner/3911//#testresult/97c78c4029217ff7","status":"passed","time":{"start":1696752113194,"stop":1696752119862,"duration":6668}},{"uid":"32043d50ee9ecd58","reportUrl":"https://novasamatech.github.io/test-runner/3910//#testresult/32043d50ee9ecd58","status":"passed","time":{"start":1696737690562,"stop":1696737696628,"duration":6066}},{"uid":"ddd07f6e2fb5eb3c","reportUrl":"https://novasamatech.github.io/test-runner/3909//#testresult/ddd07f6e2fb5eb3c","status":"passed","time":{"start":1696723361292,"stop":1696723370553,"duration":9261}},{"uid":"9e06362b0cc83320","reportUrl":"https://novasamatech.github.io/test-runner/3908//#testresult/9e06362b0cc83320","status":"passed","time":{"start":1696708890236,"stop":1696708895962,"duration":5726}},{"uid":"2e8d12bad83aa7c4","reportUrl":"https://novasamatech.github.io/test-runner/3907//#testresult/2e8d12bad83aa7c4","status":"passed","time":{"start":1696694484670,"stop":1696694490294,"duration":5624}},{"uid":"921506fec3c9a7b6","reportUrl":"https://novasamatech.github.io/test-runner/3906//#testresult/921506fec3c9a7b6","status":"passed","time":{"start":1696680083780,"stop":1696680089609,"duration":5829}},{"uid":"4f64ac7549c2ad1","reportUrl":"https://novasamatech.github.io/test-runner/3905//#testresult/4f64ac7549c2ad1","status":"passed","time":{"start":1696665689641,"stop":1696665696558,"duration":6917}},{"uid":"a0670842ccba47ff","reportUrl":"https://novasamatech.github.io/test-runner/3904//#testresult/a0670842ccba47ff","status":"passed","time":{"start":1696651296935,"stop":1696651303002,"duration":6067}},{"uid":"e886d7efbbf76b7","reportUrl":"https://novasamatech.github.io/test-runner/3903//#testresult/e886d7efbbf76b7","status":"passed","time":{"start":1696636939922,"stop":1696636945766,"duration":5844}},{"uid":"2276737f406b17c","reportUrl":"https://novasamatech.github.io/test-runner/3902//#testresult/2276737f406b17c","status":"passed","time":{"start":1696622494990,"stop":1696622500446,"duration":5456}}]},"tags":[]},"source":"852caadb5e758c5c.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7facee8ddde0>"]}