{"uid":"e0d2887307701980","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1698336185357,"stop":1698336186038,"duration":681},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f63d13996c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f63d13fc2b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f63d13996c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f63d13fc2b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"ca175045ce470e5","name":"stdout","source":"ca175045ce470e5.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1256-816"},{"name":"thread","value":"2100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f63d13fc2b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b376a636c81f3cd4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698336169056,"stop":1698336170316,"duration":1260}},{"uid":"fdab6d4f01073b15","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698336153184,"stop":1698336154017,"duration":833}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":45,"skipped":0,"passed":336,"unknown":0,"total":381},"items":[{"uid":"6a0eff6faa16d4ee","reportUrl":"https://novasamatech.github.io/test-runner/4021//#testresult/6a0eff6faa16d4ee","status":"passed","time":{"start":1698321760756,"stop":1698321763294,"duration":2538}},{"uid":"2d13bb04ae47b952","reportUrl":"https://novasamatech.github.io/test-runner/4020//#testresult/2d13bb04ae47b952","status":"passed","time":{"start":1698307392077,"stop":1698307394744,"duration":2667}},{"uid":"4e24695842d5fee3","reportUrl":"https://novasamatech.github.io/test-runner/4019//#testresult/4e24695842d5fee3","status":"passed","time":{"start":1698292954085,"stop":1698292957803,"duration":3718}},{"uid":"cb7d8da98c817820","reportUrl":"https://novasamatech.github.io/test-runner/4018//#testresult/cb7d8da98c817820","status":"passed","time":{"start":1698278621014,"stop":1698278626863,"duration":5849}},{"uid":"c3954d07d33ed90d","reportUrl":"https://novasamatech.github.io/test-runner/4017//#testresult/c3954d07d33ed90d","status":"passed","time":{"start":1698264143181,"stop":1698264145941,"duration":2760}},{"uid":"3cfd3dc1abe79426","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/3cfd3dc1abe79426","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698249798674,"stop":1698249799580,"duration":906}},{"uid":"17e50e6ffb32ef4e","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/17e50e6ffb32ef4e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698235384529,"stop":1698235385119,"duration":590}},{"uid":"69a11ee4928742bb","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/69a11ee4928742bb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698220986365,"stop":1698220987023,"duration":658}},{"uid":"ac48d258ae64f0cc","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/ac48d258ae64f0cc","status":"passed","time":{"start":1698206544539,"stop":1698206547519,"duration":2980}},{"uid":"c02f3e8068cc5268","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/c02f3e8068cc5268","status":"passed","time":{"start":1698192181837,"stop":1698192184872,"duration":3035}},{"uid":"94d72b2ed34b3a9b","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/94d72b2ed34b3a9b","status":"passed","time":{"start":1698177746023,"stop":1698177747681,"duration":1658}},{"uid":"529bd70d0d094ee1","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/529bd70d0d094ee1","status":"passed","time":{"start":1698163348392,"stop":1698163350742,"duration":2350}},{"uid":"ccb30bf3c0b04ff8","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/ccb30bf3c0b04ff8","status":"passed","time":{"start":1698148952213,"stop":1698148954842,"duration":2629}},{"uid":"741d888ce4630680","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/741d888ce4630680","status":"passed","time":{"start":1698120168609,"stop":1698120171986,"duration":3377}},{"uid":"cae8a82ec4acb113","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/cae8a82ec4acb113","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698134572824,"stop":1698134573464,"duration":640}},{"uid":"ccc0acddc047308d","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/ccc0acddc047308d","status":"passed","time":{"start":1698105791934,"stop":1698105795080,"duration":3146}},{"uid":"3a00cdc725eb368b","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/3a00cdc725eb368b","status":"passed","time":{"start":1698091339518,"stop":1698091343472,"duration":3954}},{"uid":"3fc46563aa767bf4","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/3fc46563aa767bf4","status":"passed","time":{"start":1698076965955,"stop":1698076968199,"duration":2244}},{"uid":"52c12a79f4558b6e","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/52c12a79f4558b6e","status":"passed","time":{"start":1698062577419,"stop":1698062581041,"duration":3622}},{"uid":"9ef3961b17f35c75","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/9ef3961b17f35c75","status":"passed","time":{"start":1698048157020,"stop":1698048161060,"duration":4040}}]},"tags":[]},"source":"e0d2887307701980.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f63d13fc2b0>"]}