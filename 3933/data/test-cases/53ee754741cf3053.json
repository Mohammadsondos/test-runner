{"uid":"53ee754741cf3053","name":"test_has_new_assets[Test for Polymesh]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"badcce16a32cb0d5e9cf2fd826e2cbba","time":{"start":1697069117873,"stop":1697069118573,"duration":700},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f04f92710f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f04f9272f20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f04f92710f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f04f9272f20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"b0261df892ed5ebb","name":"stdout","source":"b0261df892ed5ebb.txt","type":"text/plain","size":2803}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1241-973"},{"name":"thread","value":"2096-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f04f9272f20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4327b0c2c66a9fb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697069102135,"stop":1697069102835,"duration":700}},{"uid":"abd4d29dad14b3c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1697069024155,"stop":1697069087095,"duration":62940}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":291,"unknown":0,"total":292},"items":[{"uid":"1391912715acb5a1","reportUrl":"https://novasamatech.github.io/test-runner/3932//#testresult/1391912715acb5a1","status":"passed","time":{"start":1697054549973,"stop":1697054553225,"duration":3252}},{"uid":"f64ae53b6df0f19b","reportUrl":"https://novasamatech.github.io/test-runner/3931//#testresult/f64ae53b6df0f19b","status":"passed","time":{"start":1697040169957,"stop":1697040174192,"duration":4235}},{"uid":"fa59f02060ddfec7","reportUrl":"https://novasamatech.github.io/test-runner/3930//#testresult/fa59f02060ddfec7","status":"passed","time":{"start":1697025743813,"stop":1697025747393,"duration":3580}},{"uid":"a481bb2dd7910f23","reportUrl":"https://novasamatech.github.io/test-runner/3929//#testresult/a481bb2dd7910f23","status":"passed","time":{"start":1697011368280,"stop":1697011374055,"duration":5775}},{"uid":"4125455c52302519","reportUrl":"https://novasamatech.github.io/test-runner/3928//#testresult/4125455c52302519","status":"passed","time":{"start":1696996968664,"stop":1696996975033,"duration":6369}},{"uid":"da2b4076634bb000","reportUrl":"https://novasamatech.github.io/test-runner/3927//#testresult/da2b4076634bb000","status":"passed","time":{"start":1696982590012,"stop":1696982593466,"duration":3454}},{"uid":"797c3f5d3462cf94","reportUrl":"https://novasamatech.github.io/test-runner/3926//#testresult/797c3f5d3462cf94","status":"passed","time":{"start":1696968152515,"stop":1696968158999,"duration":6484}},{"uid":"b938944cb8f8ea2f","reportUrl":"https://novasamatech.github.io/test-runner/3925//#testresult/b938944cb8f8ea2f","status":"passed","time":{"start":1696953754737,"stop":1696953763937,"duration":9200}},{"uid":"e30b94fc65907af1","reportUrl":"https://novasamatech.github.io/test-runner/3924//#testresult/e30b94fc65907af1","status":"passed","time":{"start":1696939351351,"stop":1696939355924,"duration":4573}},{"uid":"20d7dd8910c7dc34","reportUrl":"https://novasamatech.github.io/test-runner/3923//#testresult/20d7dd8910c7dc34","status":"passed","time":{"start":1696924958123,"stop":1696924962936,"duration":4813}},{"uid":"82dc2bd6a58d42e2","reportUrl":"https://novasamatech.github.io/test-runner/3922//#testresult/82dc2bd6a58d42e2","status":"passed","time":{"start":1696910559237,"stop":1696910564321,"duration":5084}},{"uid":"ea30c7ebc9e37625","reportUrl":"https://novasamatech.github.io/test-runner/3921//#testresult/ea30c7ebc9e37625","status":"passed","time":{"start":1696896208370,"stop":1696896244813,"duration":36443}},{"uid":"275cde607a86bfe5","reportUrl":"https://novasamatech.github.io/test-runner/3920//#testresult/275cde607a86bfe5","status":"passed","time":{"start":1696881761059,"stop":1696881765959,"duration":4900}},{"uid":"66992c36cdb76057","reportUrl":"https://novasamatech.github.io/test-runner/3919//#testresult/66992c36cdb76057","status":"passed","time":{"start":1696867391201,"stop":1696867401194,"duration":9993}},{"uid":"9008a918b2a9db8f","reportUrl":"https://novasamatech.github.io/test-runner/3918//#testresult/9008a918b2a9db8f","status":"passed","time":{"start":1696852945782,"stop":1696852950044,"duration":4262}},{"uid":"52de452bad71e5d6","reportUrl":"https://novasamatech.github.io/test-runner/3917//#testresult/52de452bad71e5d6","status":"passed","time":{"start":1696838571547,"stop":1696838574837,"duration":3290}},{"uid":"1ae6c281c6097fdf","reportUrl":"https://novasamatech.github.io/test-runner/3916//#testresult/1ae6c281c6097fdf","status":"passed","time":{"start":1696824157034,"stop":1696824162440,"duration":5406}},{"uid":"7eabd8e91225c41a","reportUrl":"https://novasamatech.github.io/test-runner/3915//#testresult/7eabd8e91225c41a","status":"passed","time":{"start":1696809823807,"stop":1696809829233,"duration":5426}},{"uid":"fca99336dfc12b5b","reportUrl":"https://novasamatech.github.io/test-runner/3914//#testresult/fca99336dfc12b5b","status":"passed","time":{"start":1696795366625,"stop":1696795372468,"duration":5843}},{"uid":"c81a927ab9abda6c","reportUrl":"https://novasamatech.github.io/test-runner/3913//#testresult/c81a927ab9abda6c","status":"passed","time":{"start":1696780948024,"stop":1696780955816,"duration":7792}}]},"tags":[]},"source":"53ee754741cf3053.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f04f9272f20>"]}