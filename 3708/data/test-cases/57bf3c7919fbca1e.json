{"uid":"57bf3c7919fbca1e","name":"test_has_new_assets[Test for Darwinia]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"689013d09787ced16e9c0dcceea35c1d","time":{"start":1693857812398,"stop":1693857813580,"duration":1182},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fea7b822b60>\nchain = <scripts.utils.chain_model.Chain object at 0x7fea7b985c60>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fea7b822b60>\nchain = <scripts.utils.chain_model.Chain object at 0x7fea7b985c60>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"6a2893778f5d656d","name":"stdout","source":"6a2893778f5d656d.txt","type":"text/plain","size":1497}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az166-286"},{"name":"thread","value":"2044-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fea7b985c60>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b42e3ff9c384c38a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693857796058,"stop":1693857797367,"duration":1309}},{"uid":"31c6ed3fca6ed00c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693857779963,"stop":1693857781031,"duration":1068}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":69,"unknown":0,"total":70},"items":[{"uid":"f74f0e3e5118a689","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/f74f0e3e5118a689","status":"passed","time":{"start":1693843379657,"stop":1693843385401,"duration":5744}},{"uid":"bd2d3a7fe1d3770d","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/bd2d3a7fe1d3770d","status":"passed","time":{"start":1693828962979,"stop":1693828969975,"duration":6996}},{"uid":"2a077dc7a4165ff8","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/2a077dc7a4165ff8","status":"passed","time":{"start":1693814614058,"stop":1693814621313,"duration":7255}},{"uid":"b3f1b652d464a2e4","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/b3f1b652d464a2e4","status":"passed","time":{"start":1693800156600,"stop":1693800161702,"duration":5102}},{"uid":"51cdefd1c5a9e916","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/51cdefd1c5a9e916","status":"passed","time":{"start":1693785825720,"stop":1693785837128,"duration":11408}},{"uid":"66b50014e3fe42de","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/66b50014e3fe42de","status":"passed","time":{"start":1693771365932,"stop":1693771370649,"duration":4717}},{"uid":"ce7aa4f9aaa1cea","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/ce7aa4f9aaa1cea","status":"passed","time":{"start":1693756984669,"stop":1693756996234,"duration":11565}},{"uid":"b73b0c196799c189","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/b73b0c196799c189","status":"passed","time":{"start":1693742561654,"stop":1693742567229,"duration":5575}},{"uid":"9cef424549b18fdd","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/9cef424549b18fdd","status":"passed","time":{"start":1693728195448,"stop":1693728201179,"duration":5731}},{"uid":"e805c5334637771a","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/e805c5334637771a","status":"passed","time":{"start":1693713757473,"stop":1693713763487,"duration":6014}},{"uid":"2e638a9d0493664f","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/2e638a9d0493664f","status":"passed","time":{"start":1693699428644,"stop":1693699439196,"duration":10552}},{"uid":"28c5bc55e2133ecb","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/28c5bc55e2133ecb","status":"passed","time":{"start":1693684979790,"stop":1693684993524,"duration":13734}},{"uid":"6ed99398fd5a329b","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/6ed99398fd5a329b","status":"passed","time":{"start":1693670573541,"stop":1693670579083,"duration":5542}},{"uid":"8f7c5d29762b56ff","reportUrl":"https://novasamatech.github.io/test-runner/3694//#testresult/8f7c5d29762b56ff","status":"passed","time":{"start":1693656199969,"stop":1693656206091,"duration":6122}},{"uid":"bea8d1c0db242833","reportUrl":"https://novasamatech.github.io/test-runner/3693//#testresult/bea8d1c0db242833","status":"passed","time":{"start":1693641762912,"stop":1693641768259,"duration":5347}},{"uid":"60b8cefd9112ee3a","reportUrl":"https://novasamatech.github.io/test-runner/3692//#testresult/60b8cefd9112ee3a","status":"passed","time":{"start":1693627390424,"stop":1693627397895,"duration":7471}},{"uid":"ad5b2f9ab943ba77","reportUrl":"https://novasamatech.github.io/test-runner/3691//#testresult/ad5b2f9ab943ba77","status":"passed","time":{"start":1693613056924,"stop":1693613064523,"duration":7599}},{"uid":"4638821a692637c","reportUrl":"https://novasamatech.github.io/test-runner/3690//#testresult/4638821a692637c","status":"passed","time":{"start":1693598577048,"stop":1693598584748,"duration":7700}},{"uid":"204d2578827c93af","reportUrl":"https://novasamatech.github.io/test-runner/3689//#testresult/204d2578827c93af","status":"passed","time":{"start":1693584205340,"stop":1693584212094,"duration":6754}},{"uid":"55d6d7399144d83f","reportUrl":"https://novasamatech.github.io/test-runner/3688//#testresult/55d6d7399144d83f","status":"passed","time":{"start":1693569787718,"stop":1693569793680,"duration":5962}}]},"tags":[]},"source":"57bf3c7919fbca1e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fea7b985c60>"]}