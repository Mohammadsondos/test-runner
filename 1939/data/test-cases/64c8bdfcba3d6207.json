{"uid":"64c8bdfcba3d6207","name":"test_precision[Test for QUARTZ]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"655d1cc9a50b23cf91af222e92689cfd","time":{"start":1669018410105,"stop":1669018469976,"duration":59871},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f06e56955e0>\nchain = <tests.utils.chain_model.Chain object at 0x7f06e5bd15b0>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/utils/chain_model.py:35: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/create_type_file.py:52: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2374: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:2348: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:1100: in init_runtime\n    block_header = self.rpc_request('chain_getHeader', [self.block_hash])\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:655: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.8/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az334-341"},{"name":"thread","value":"1668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f06e5bd15b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7dc3aa3ba48935e3","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1669018340089,"stop":1669018399976,"duration":59887}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":239,"unknown":0,"total":241},"items":[{"uid":"969ca44e74d37d7f","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/969ca44e74d37d7f","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1669004146700,"stop":1669004206569,"duration":59869}},{"uid":"74f601bb2fc52f40","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/74f601bb2fc52f40","status":"passed","time":{"start":1668990032831,"stop":1668990032831,"duration":0}},{"uid":"ef39a4c7e3f5c1fc","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/ef39a4c7e3f5c1fc","status":"passed","time":{"start":1668974896013,"stop":1668974896013,"duration":0}},{"uid":"b4fdb802798b63ba","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/b4fdb802798b63ba","status":"passed","time":{"start":1668960487412,"stop":1668960494057,"duration":6645}},{"uid":"3de0f3a3399b7b1e","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/3de0f3a3399b7b1e","status":"passed","time":{"start":1668946159245,"stop":1668946166300,"duration":7055}},{"uid":"66cfbcd71e060c75","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/66cfbcd71e060c75","status":"passed","time":{"start":1668931771772,"stop":1668931771772,"duration":0}},{"uid":"e867cead3aa5942f","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/e867cead3aa5942f","status":"passed","time":{"start":1668917457676,"stop":1668917457676,"duration":0}},{"uid":"5afa878350185442","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/5afa878350185442","status":"passed","time":{"start":1668903610505,"stop":1668903610505,"duration":0}},{"uid":"f2da3f09bf048b73","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/f2da3f09bf048b73","status":"passed","time":{"start":1668888486886,"stop":1668888486886,"duration":0}},{"uid":"468b0a81c37e36dd","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/468b0a81c37e36dd","status":"passed","time":{"start":1668874088732,"stop":1668874094838,"duration":6106}},{"uid":"797923bea620937f","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/797923bea620937f","status":"passed","time":{"start":1668859714457,"stop":1668859714457,"duration":0}},{"uid":"949f0de784426490","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/949f0de784426490","status":"passed","time":{"start":1668845387315,"stop":1668845387315,"duration":0}},{"uid":"4b077edfce5573eb","reportUrl":"https://nova-wallet.github.io/test-runner/1926//#testresult/4b077edfce5573eb","status":"passed","time":{"start":1668830934145,"stop":1668830940442,"duration":6297}},{"uid":"38b85471eede1fff","reportUrl":"https://nova-wallet.github.io/test-runner/1925//#testresult/38b85471eede1fff","status":"passed","time":{"start":1668817166844,"stop":1668817166844,"duration":0}},{"uid":"a0b9c7b57645fb87","reportUrl":"https://nova-wallet.github.io/test-runner/1924//#testresult/a0b9c7b57645fb87","status":"passed","time":{"start":1668802100202,"stop":1668802106180,"duration":5978}},{"uid":"75ae8ded9bef8cfb","reportUrl":"https://nova-wallet.github.io/test-runner/1923//#testresult/75ae8ded9bef8cfb","status":"passed","time":{"start":1668787771971,"stop":1668787771971,"duration":0}},{"uid":"58d2010448f2f1fb","reportUrl":"https://nova-wallet.github.io/test-runner/1922//#testresult/58d2010448f2f1fb","status":"passed","time":{"start":1668773345783,"stop":1668773345784,"duration":1}},{"uid":"dfe76f9c7b74c47f","reportUrl":"https://nova-wallet.github.io/test-runner/1921//#testresult/dfe76f9c7b74c47f","status":"passed","time":{"start":1668758932568,"stop":1668758939377,"duration":6809}},{"uid":"8641bdb52f732117","reportUrl":"https://nova-wallet.github.io/test-runner/1920//#testresult/8641bdb52f732117","status":"passed","time":{"start":1668744549530,"stop":1668744549530,"duration":0}},{"uid":"24f8050a7a282b35","reportUrl":"https://nova-wallet.github.io/test-runner/1919//#testresult/24f8050a7a282b35","status":"passed","time":{"start":1668730833457,"stop":1668730833457,"duration":0}}]},"tags":[]},"source":"64c8bdfcba3d6207.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f06e5bd15b0>"]}