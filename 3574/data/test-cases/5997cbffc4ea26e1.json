{"uid":"5997cbffc4ea26e1","name":"test_has_new_assets[Test for Dora Factory (PAUSED)]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2618293375d61e703515aac3ceeb0de7","time":{"start":1692000333255,"stop":1692000334302,"duration":1047},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fef1cbf53f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fef1d166500>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fef1cbf53f0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fef1d166500>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"4da34d1c06875a79","name":"stdout","source":"4da34d1c06875a79.txt","type":"text/plain","size":3228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az713-802"},{"name":"thread","value":"1939-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fef1d166500>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b663b5675c217b67","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692000316833,"stop":1692000318228,"duration":1395}},{"uid":"cc294e4ad84b08bd","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1692000300500,"stop":1692000301784,"duration":1284}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":41,"skipped":0,"passed":160,"unknown":0,"total":201},"items":[{"uid":"d8ce277fc6e70a06","reportUrl":"https://novasamatech.github.io/test-runner/3573//#testresult/d8ce277fc6e70a06","status":"passed","time":{"start":1691985908267,"stop":1691985921926,"duration":13659}},{"uid":"f0529d1ee93ad43c","reportUrl":"https://novasamatech.github.io/test-runner/3572//#testresult/f0529d1ee93ad43c","status":"passed","time":{"start":1691971988574,"stop":1691971997702,"duration":9128}},{"uid":"32711a2795702c2e","reportUrl":"https://novasamatech.github.io/test-runner/3571//#testresult/32711a2795702c2e","status":"passed","time":{"start":1691957141055,"stop":1691957148793,"duration":7738}},{"uid":"549461016ad0bfd6","reportUrl":"https://novasamatech.github.io/test-runner/3570//#testresult/549461016ad0bfd6","status":"passed","time":{"start":1691942679772,"stop":1691942690395,"duration":10623}},{"uid":"381eff2e567a2717","reportUrl":"https://novasamatech.github.io/test-runner/3569//#testresult/381eff2e567a2717","status":"passed","time":{"start":1691928305843,"stop":1691928316773,"duration":10930}},{"uid":"5606c4abc702a497","reportUrl":"https://novasamatech.github.io/test-runner/3568//#testresult/5606c4abc702a497","status":"passed","time":{"start":1691913907955,"stop":1691913915486,"duration":7531}},{"uid":"80526824504c5c3e","reportUrl":"https://novasamatech.github.io/test-runner/3567//#testresult/80526824504c5c3e","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691899533414,"stop":1691899534644,"duration":1230}},{"uid":"cc4c1ec804d4b85a","reportUrl":"https://novasamatech.github.io/test-runner/3566//#testresult/cc4c1ec804d4b85a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691885617062,"stop":1691885618284,"duration":1222}},{"uid":"49f2be33c11eaa2","reportUrl":"https://novasamatech.github.io/test-runner/3565//#testresult/49f2be33c11eaa2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691870700194,"stop":1691870701290,"duration":1096}},{"uid":"5598f4726d421a49","reportUrl":"https://novasamatech.github.io/test-runner/3564//#testresult/5598f4726d421a49","status":"passed","time":{"start":1691856273889,"stop":1691856281059,"duration":7170}},{"uid":"fdc464d721a35c03","reportUrl":"https://novasamatech.github.io/test-runner/3562//#testresult/fdc464d721a35c03","status":"passed","time":{"start":1691827499636,"stop":1691827510830,"duration":11194}},{"uid":"8cb42b289432156f","reportUrl":"https://novasamatech.github.io/test-runner/3563//#testresult/8cb42b289432156f","status":"passed","time":{"start":1691841922684,"stop":1691841931929,"duration":9245}},{"uid":"f9f71b8e8c3463ce","reportUrl":"https://novasamatech.github.io/test-runner/3561//#testresult/f9f71b8e8c3463ce","status":"passed","time":{"start":1691813083870,"stop":1691813094762,"duration":10892}},{"uid":"52f4ccff346e345e","reportUrl":"https://novasamatech.github.io/test-runner/3560//#testresult/52f4ccff346e345e","status":"passed","time":{"start":1691799140859,"stop":1691799147898,"duration":7039}},{"uid":"11db852235dc89bc","reportUrl":"https://novasamatech.github.io/test-runner/3559//#testresult/11db852235dc89bc","status":"passed","time":{"start":1691784290517,"stop":1691784299101,"duration":8584}},{"uid":"1b204e10ffa6ca11","reportUrl":"https://novasamatech.github.io/test-runner/3558//#testresult/1b204e10ffa6ca11","status":"passed","time":{"start":1691769926704,"stop":1691769941021,"duration":14317}},{"uid":"5f427295968bf3f9","reportUrl":"https://novasamatech.github.io/test-runner/3557//#testresult/5f427295968bf3f9","status":"passed","time":{"start":1691755534309,"stop":1691755543035,"duration":8726}},{"uid":"c743fa4a56707eed","reportUrl":"https://novasamatech.github.io/test-runner/3556//#testresult/c743fa4a56707eed","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1691741115626,"stop":1691741116620,"duration":994}},{"uid":"d0d17cc889735dc1","reportUrl":"https://novasamatech.github.io/test-runner/3555//#testresult/d0d17cc889735dc1","status":"passed","time":{"start":1691734883737,"stop":1691734895603,"duration":11866}},{"uid":"bebb60b2eeb21247","reportUrl":"https://novasamatech.github.io/test-runner/3553//#testresult/bebb60b2eeb21247","status":"passed","time":{"start":1691734625337,"stop":1691734634437,"duration":9100}}]},"tags":[]},"source":"5997cbffc4ea26e1.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fef1d166500>"]}