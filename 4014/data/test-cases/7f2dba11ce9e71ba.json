{"uid":"7f2dba11ce9e71ba","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1698220988035,"stop":1698220989470,"duration":1435},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f071b900c10>\nchain = <scripts.utils.chain_model.Chain object at 0x7f071ba959f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f071b900c10>\nchain = <scripts.utils.chain_model.Chain object at 0x7f071ba959f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a1560d334248c8d0","name":"stdout","source":"a1560d334248c8d0.txt","type":"text/plain","size":1361}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az396-634"},{"name":"thread","value":"2235-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f071ba959f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"60be1cf219a0c8d2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698220972156,"stop":1698220973006,"duration":850}},{"uid":"445e1b4889e01f53","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698220956322,"stop":1698220957127,"duration":805}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":52,"skipped":0,"passed":321,"unknown":0,"total":373},"items":[{"uid":"11e7e11b4b400107","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/11e7e11b4b400107","status":"passed","time":{"start":1698206542577,"stop":1698206547066,"duration":4489}},{"uid":"4b7cbf61518c5a8d","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/4b7cbf61518c5a8d","status":"passed","time":{"start":1698192175410,"stop":1698192179017,"duration":3607}},{"uid":"a11026785e9f9c60","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/a11026785e9f9c60","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698177758066,"stop":1698177758688,"duration":622}},{"uid":"459a4b692695138a","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/459a4b692695138a","status":"passed","time":{"start":1698163369368,"stop":1698163373189,"duration":3821}},{"uid":"c34b5a392264caa3","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/c34b5a392264caa3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698148983151,"stop":1698148983925,"duration":774}},{"uid":"7b4431e9ff3986b4","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/7b4431e9ff3986b4","status":"passed","time":{"start":1698120171997,"stop":1698120177575,"duration":5578}},{"uid":"1c4ed73bb10befae","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/1c4ed73bb10befae","status":"passed","time":{"start":1698134589520,"stop":1698134592836,"duration":3316}},{"uid":"adf4460ca0deb8b6","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/adf4460ca0deb8b6","status":"passed","time":{"start":1698105790710,"stop":1698105796594,"duration":5884}},{"uid":"a3f959645ad9d5d1","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/a3f959645ad9d5d1","status":"passed","time":{"start":1698091346815,"stop":1698091352286,"duration":5471}},{"uid":"4503bc3ff3b2a7eb","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/4503bc3ff3b2a7eb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698076988257,"stop":1698076989014,"duration":757}},{"uid":"44972f7d539eabe3","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/44972f7d539eabe3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698062608409,"stop":1698062609309,"duration":900}},{"uid":"cb6b7735e2a4776f","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/cb6b7735e2a4776f","status":"passed","time":{"start":1698048162373,"stop":1698048168241,"duration":5868}},{"uid":"faaa4cd5833322c","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/faaa4cd5833322c","status":"passed","time":{"start":1698033736771,"stop":1698033741170,"duration":4399}},{"uid":"76788dabb2380edf","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/76788dabb2380edf","status":"passed","time":{"start":1698019394062,"stop":1698019397921,"duration":3859}},{"uid":"43e960894cbac42b","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/43e960894cbac42b","status":"passed","time":{"start":1698004950355,"stop":1698004956147,"duration":5792}},{"uid":"bd8a0b746a74bf46","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/bd8a0b746a74bf46","status":"passed","time":{"start":1697990532376,"stop":1697990536256,"duration":3880}},{"uid":"f66a4a29cc815004","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/f66a4a29cc815004","status":"passed","time":{"start":1697976133598,"stop":1697976137605,"duration":4007}},{"uid":"a53f062686c2885","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/a53f062686c2885","status":"passed","time":{"start":1697961732140,"stop":1697961735742,"duration":3602}},{"uid":"1a0ceaeea7952a3a","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/1a0ceaeea7952a3a","status":"passed","time":{"start":1697947332239,"stop":1697947336437,"duration":4198}},{"uid":"45ec7733c3cb1d89","reportUrl":"https://novasamatech.github.io/test-runner/3994//#testresult/45ec7733c3cb1d89","status":"passed","time":{"start":1697932991399,"stop":1697932999126,"duration":7727}}]},"tags":[]},"source":"7f2dba11ce9e71ba.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f071ba959f0>"]}