{"uid":"8a8e12c837a5a0ec","name":"test_can_create_connection[Test for Crust, url: wss://crust-parachain.crustapps.net]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d517ec5bcad90d9e743bc90bcf2a73d1","time":{"start":1698221205706,"stop":1698221335937,"duration":130231},"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Crust', 'url': 'wss://crust-parachain.crustapps.net'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('149.28.15.217', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno 110] Connection timed out","statusTrace":"data = {'name': 'Crust', 'url': 'wss://crust-parachain.crustapps.net'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:129: in connect\n    sock = _open_socket(addrinfo_list, options.sockopt, options.timeout)\n.venv/lib/python3.10/site-packages/websocket/_http.py:196: in _open_socket\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\naddrinfo_list = [(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('149.28.15.217', 443))]\nsockopt = [], timeout = None\n\n    def _open_socket(addrinfo_list, sockopt, timeout):\n        err = None\n        for addrinfo in addrinfo_list:\n            family, socktype, proto = addrinfo[:3]\n            sock = socket.socket(family, socktype, proto)\n            sock.settimeout(timeout)\n            for opts in DEFAULT_SOCKET_OPTION:\n                sock.setsockopt(*opts)\n            for opts in sockopt:\n                sock.setsockopt(*opts)\n    \n            address = addrinfo[4]\n            err = None\n            while not err:\n                try:\n>                   sock.connect(address)\nE                   TimeoutError: [Errno 110] Connection timed out\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:184: TimeoutError","steps":[],"attachments":[{"uid":"1565760e6cbf62ba","name":"stdout","source":"1565760e6cbf62ba.txt","type":"text/plain","size":357}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az587-494"},{"name":"thread","value":"2097-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://crust-parachain.crustapps.net', 'name': 'Crust'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ad477e8c7786c39d","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1698221060323,"stop":1698221190529,"duration":130206}},{"uid":"7e0d0f12057af370","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1698220915770,"stop":1698221045120,"duration":129350}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":373,"unknown":0,"total":374},"items":[{"uid":"41a8d145073f459","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/41a8d145073f459","status":"passed","time":{"start":1698206502457,"stop":1698206502827,"duration":370}},{"uid":"d0852809f17b46bf","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/d0852809f17b46bf","status":"passed","time":{"start":1698192151855,"stop":1698192152059,"duration":204}},{"uid":"64ed37f036f8e76e","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/64ed37f036f8e76e","status":"passed","time":{"start":1698177698064,"stop":1698177698287,"duration":223}},{"uid":"459a91f2beeaaa99","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/459a91f2beeaaa99","status":"passed","time":{"start":1698163312327,"stop":1698163312673,"duration":346}},{"uid":"22674627cdbb2226","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/22674627cdbb2226","status":"passed","time":{"start":1698148920273,"stop":1698148920661,"duration":388}},{"uid":"7a8ee75e099ef38f","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/7a8ee75e099ef38f","status":"passed","time":{"start":1698120106712,"stop":1698120107111,"duration":399}},{"uid":"773364df3d3728bf","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/773364df3d3728bf","status":"passed","time":{"start":1698134506302,"stop":1698134506692,"duration":390}},{"uid":"9aa9f6ac55b11ee2","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/9aa9f6ac55b11ee2","status":"passed","time":{"start":1698105758519,"stop":1698105758679,"duration":160}},{"uid":"8b77a64bfa9f773b","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/8b77a64bfa9f773b","status":"passed","time":{"start":1698091307677,"stop":1698091307930,"duration":253}},{"uid":"2d0c4616dbc75e73","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/2d0c4616dbc75e73","status":"passed","time":{"start":1698076915052,"stop":1698076915392,"duration":340}},{"uid":"51fe96f5f7ae6e74","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/51fe96f5f7ae6e74","status":"passed","time":{"start":1698062503995,"stop":1698062504315,"duration":320}},{"uid":"dc10d9733e5610fd","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/dc10d9733e5610fd","status":"passed","time":{"start":1698048105099,"stop":1698048105504,"duration":405}},{"uid":"30f99f149ee2edac","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/30f99f149ee2edac","status":"passed","time":{"start":1698033708057,"stop":1698033708326,"duration":269}},{"uid":"dd3681ed6ccc2be3","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/dd3681ed6ccc2be3","status":"passed","time":{"start":1698019335131,"stop":1698019335514,"duration":383}},{"uid":"5d1ffef2c3e9a2","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/5d1ffef2c3e9a2","status":"passed","time":{"start":1698004897493,"stop":1698004897770,"duration":277}},{"uid":"48ca21f18d5aa3d1","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/48ca21f18d5aa3d1","status":"passed","time":{"start":1697990510086,"stop":1697990510353,"duration":267}},{"uid":"fd684e7be281ca17","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/fd684e7be281ca17","status":"passed","time":{"start":1697976100137,"stop":1697976100395,"duration":258}},{"uid":"780a8b5774fb4f53","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/780a8b5774fb4f53","status":"passed","time":{"start":1697961707460,"stop":1697961707616,"duration":156}},{"uid":"f27a596520d73030","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/f27a596520d73030","status":"passed","time":{"start":1697947293956,"stop":1697947294334,"duration":378}},{"uid":"aaebb6ec317b5c60","reportUrl":"https://novasamatech.github.io/test-runner/3994//#testresult/aaebb6ec317b5c60","status":"passed","time":{"start":1697932962014,"stop":1697932962176,"duration":162}}]},"tags":[]},"source":"8a8e12c837a5a0ec.json","parameterValues":["{'url': 'wss://crust-parachain.crustapps.net', 'name': 'Crust'}"]}