{"uid":"d17adcb3cf87818","name":"test_can_create_connection[Test for Composable Finance, url: wss://composable.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"7c644b304507cfa85ea9ab3b97b67fbd","time":{"start":1698221117280,"stop":1698221190694,"duration":73414},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Composable Finance', 'url': 'wss://composable.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Composable Finance', 'url': 'wss://composable.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"cb37dc2b35fc47ce","name":"stdout","source":"cb37dc2b35fc47ce.txt","type":"text/plain","size":393}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az587-494"},{"name":"thread","value":"2100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://composable.api.onfinality.io/public-ws', 'name': 'Composable Finance'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"92ed7acffc8d73a1","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698220981434,"stop":1698221102077,"duration":120643}},{"uid":"452bdcef70f1f743","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698220905485,"stop":1698220966155,"duration":60670}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":362,"unknown":0,"total":374},"items":[{"uid":"5b1ce27b9a5be02e","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/5b1ce27b9a5be02e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698207061372,"stop":1698207122075,"duration":60703}},{"uid":"624ec37427b235bb","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/624ec37427b235bb","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698192293012,"stop":1698192413581,"duration":120569}},{"uid":"106f8871c02f433d","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/106f8871c02f433d","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698178083652,"stop":1698178264224,"duration":180572}},{"uid":"13370e0f7803a0f8","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/13370e0f7803a0f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698163455251,"stop":1698163575988,"duration":120737}},{"uid":"50d1799b1b3ca6bb","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/50d1799b1b3ca6bb","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698149229010,"stop":1698149289777,"duration":60767}},{"uid":"9515ce0e5348569e","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/9515ce0e5348569e","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698120666022,"stop":1698120846757,"duration":180735}},{"uid":"69ea5b9acc3230b6","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/69ea5b9acc3230b6","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698134831243,"stop":1698134891986,"duration":60743}},{"uid":"8738a2dee1cccbee","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/8738a2dee1cccbee","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698106500139,"stop":1698106560693,"duration":60554}},{"uid":"beb2beafae68344a","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/beb2beafae68344a","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698091446842,"stop":1698091807484,"duration":360642}},{"uid":"6c109fd3d4691f8","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/6c109fd3d4691f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1698077105066,"stop":1698077285780,"duration":180714}},{"uid":"30fbfdbf0a05ccfe","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/30fbfdbf0a05ccfe","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 200 OK -+-+- {'content-length': '0', 'connection': 'keep-alive', 'date': 'Mon, 23 Oct 2023 12:09:43 GMT', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '30046', 'x-kong-proxy-latency': '0', 'via': 'kong/2.5.2'} -+-+- b''","time":{"start":1698062952880,"stop":1698062983644,"duration":30764}},{"uid":"bfe49b60d3bed088","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/bfe49b60d3bed088","status":"passed","time":{"start":1698048097408,"stop":1698048098340,"duration":932}},{"uid":"1381f3a46118302a","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/1381f3a46118302a","status":"passed","time":{"start":1698033697699,"stop":1698033698545,"duration":846}},{"uid":"a741aed8541de144","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/a741aed8541de144","status":"passed","time":{"start":1698019329730,"stop":1698019330664,"duration":934}},{"uid":"a18a97b3a11639eb","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/a18a97b3a11639eb","status":"passed","time":{"start":1698004891034,"stop":1698004891934,"duration":900}},{"uid":"594cbbc0eef72797","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/594cbbc0eef72797","status":"passed","time":{"start":1697990501938,"stop":1697990502802,"duration":864}},{"uid":"69d7508582efa8a8","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/69d7508582efa8a8","status":"passed","time":{"start":1697976093798,"stop":1697976094698,"duration":900}},{"uid":"78e1daf2b7c4ebce","reportUrl":"https://novasamatech.github.io/test-runner/3996//#testresult/78e1daf2b7c4ebce","status":"passed","time":{"start":1697961699943,"stop":1697961700666,"duration":723}},{"uid":"afcc907ed61a4621","reportUrl":"https://novasamatech.github.io/test-runner/3995//#testresult/afcc907ed61a4621","status":"passed","time":{"start":1697947288100,"stop":1697947289035,"duration":935}},{"uid":"9b980f1bd2ea918f","reportUrl":"https://novasamatech.github.io/test-runner/3994//#testresult/9b980f1bd2ea918f","status":"passed","time":{"start":1697932952356,"stop":1697932954047,"duration":1691}}]},"tags":[]},"source":"d17adcb3cf87818.json","parameterValues":["{'url': 'wss://composable.api.onfinality.io/public-ws', 'name': 'Composable Finance'}"]}