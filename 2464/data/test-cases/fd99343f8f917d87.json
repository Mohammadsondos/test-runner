{"uid":"fd99343f8f917d87","name":"test_address_prefix[Test for XX network]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"2d187b8404bace95933c94fa9c4f33f0","time":{"start":1676448456884,"stop":1676448463104,"duration":6220},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f3a5a47f2b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3a5a45a080>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:69: in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:800: in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f3a5a47f2b0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f3a5a45a080>\n\n    def test_address_prefix(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:69: in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:800: in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"9556080711386687","name":"stdout","source":"9556080711386687.txt","type":"text/plain","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az357-42"},{"name":"thread","value":"1671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f3a5a45a080>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"79f59072787630b6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1676448444643,"stop":1676448446862,"duration":2219}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":403,"unknown":0,"total":459},"items":[{"uid":"b8d55f379080fb7d","reportUrl":"https://nova-wallet.github.io/test-runner/2457//#testresult/b8d55f379080fb7d","status":"passed","time":{"start":1676348414190,"stop":1676348420345,"duration":6155}},{"uid":"60b37b522272fdc9","reportUrl":"https://nova-wallet.github.io/test-runner/2456//#testresult/60b37b522272fdc9","status":"passed","time":{"start":1676337217985,"stop":1676337225131,"duration":7146}},{"uid":"ee4ec70336041721","reportUrl":"https://nova-wallet.github.io/test-runner/2455//#testresult/ee4ec70336041721","status":"passed","time":{"start":1676319524404,"stop":1676319531227,"duration":6823}},{"uid":"99da51c0771dd9ed","reportUrl":"https://nova-wallet.github.io/test-runner/2454//#testresult/99da51c0771dd9ed","status":"passed","time":{"start":1676305354269,"stop":1676305359465,"duration":5196}},{"uid":"e500c1686126e5ba","reportUrl":"https://nova-wallet.github.io/test-runner/2453//#testresult/e500c1686126e5ba","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1676291431938,"stop":1676291434366,"duration":2428}},{"uid":"4dc4c24234b4bd29","reportUrl":"https://nova-wallet.github.io/test-runner/2452//#testresult/4dc4c24234b4bd29","status":"passed","time":{"start":1676276488324,"stop":1676276496294,"duration":7970}},{"uid":"824197d033be2d80","reportUrl":"https://nova-wallet.github.io/test-runner/2451//#testresult/824197d033be2d80","status":"passed","time":{"start":1676261981872,"stop":1676261988254,"duration":6382}},{"uid":"554415687672fea1","reportUrl":"https://nova-wallet.github.io/test-runner/2450//#testresult/554415687672fea1","status":"passed","time":{"start":1676250835730,"stop":1676250843160,"duration":7430}},{"uid":"9b4631873d46c20f","reportUrl":"https://nova-wallet.github.io/test-runner/2449//#testresult/9b4631873d46c20f","status":"passed","time":{"start":1676233045134,"stop":1676233050234,"duration":5100}},{"uid":"259d7823f898a1e7","reportUrl":"https://nova-wallet.github.io/test-runner/2448//#testresult/259d7823f898a1e7","status":"passed","time":{"start":1676218820861,"stop":1676218827224,"duration":6363}},{"uid":"e01e0562a4d7b1da","reportUrl":"https://nova-wallet.github.io/test-runner/2447//#testresult/e01e0562a4d7b1da","status":"passed","time":{"start":1676204842901,"stop":1676204847742,"duration":4841}},{"uid":"de5a009a4e78944f","reportUrl":"https://nova-wallet.github.io/test-runner/2446//#testresult/de5a009a4e78944f","status":"passed","time":{"start":1676190002335,"stop":1676190009363,"duration":7028}},{"uid":"35bdb8aa0786027","reportUrl":"https://nova-wallet.github.io/test-runner/2445//#testresult/35bdb8aa0786027","status":"passed","time":{"start":1676175531355,"stop":1676175538294,"duration":6939}},{"uid":"bf5a543924da1db6","reportUrl":"https://nova-wallet.github.io/test-runner/2444//#testresult/bf5a543924da1db6","status":"passed","time":{"start":1676164574661,"stop":1676164581306,"duration":6645}},{"uid":"2d74937d2a3cdc35","reportUrl":"https://nova-wallet.github.io/test-runner/2443//#testresult/2d74937d2a3cdc35","status":"passed","time":{"start":1676146571465,"stop":1676146580825,"duration":9360}},{"uid":"478ba31a4189f0e2","reportUrl":"https://nova-wallet.github.io/test-runner/2442//#testresult/478ba31a4189f0e2","status":"passed","time":{"start":1676132387960,"stop":1676132394414,"duration":6454}},{"uid":"d17190ad44a61363","reportUrl":"https://nova-wallet.github.io/test-runner/2441//#testresult/d17190ad44a61363","status":"passed","time":{"start":1676118414419,"stop":1676118421844,"duration":7425}},{"uid":"3c5d23cb1adedc6e","reportUrl":"https://nova-wallet.github.io/test-runner/2440//#testresult/3c5d23cb1adedc6e","status":"passed","time":{"start":1676103635221,"stop":1676103648843,"duration":13622}},{"uid":"59ae8b9d3058775f","reportUrl":"https://nova-wallet.github.io/test-runner/2439//#testresult/59ae8b9d3058775f","status":"passed","time":{"start":1676089141619,"stop":1676089148504,"duration":6885}},{"uid":"3029e97bf2c96b7d","reportUrl":"https://nova-wallet.github.io/test-runner/2438//#testresult/3029e97bf2c96b7d","status":"passed","time":{"start":1676077559744,"stop":1676077566800,"duration":7056}}]},"tags":[]},"source":"fd99343f8f917d87.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f3a5a45a080>"]}