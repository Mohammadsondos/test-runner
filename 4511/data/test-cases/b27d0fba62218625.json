{"uid":"b27d0fba62218625","name":"test_can_create_connection[Test for Joystream, url: wss://rpc.joystream.org]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"0531002b3c72e5f090f0c59bbed56551","time":{"start":1705234176964,"stop":1705234176964,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1705234138775,"stop":1705234140424,"duration":1649},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Sun, 14 Jan 2024 12:09:00 GMT', 'content-length': '0'} -+-+- b''\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705234155491,"stop":1705234157093,"duration":1602},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Sun, 14 Jan 2024 12:09:17 GMT', 'content-length': '0'} -+-+- b''\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705234172161,"stop":1705234176963,"duration":4802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"54705477ebc537c3","name":"stdout","source":"54705477ebc537c3.txt","type":"text/plain","size":502}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1055-224"},{"name":"thread","value":"2079-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.joystream.org', 'name': 'Joystream'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b22f43a577674090","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Sun, 14 Jan 2024 12:09:17 GMT', 'content-length': '0'} -+-+- b''","time":{"start":1705234155491,"stop":1705234155491,"duration":0}},{"uid":"28720dc02819d2b2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'alt-svc': 'h3=\":443\"; ma=2592000', 'server': 'Caddy', 'date': 'Sun, 14 Jan 2024 12:09:00 GMT', 'content-length': '0'} -+-+- b''","time":{"start":1705234138774,"stop":1705234138774,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":151,"unknown":0,"total":151},"items":[{"uid":"92bbf8571609b5df","reportUrl":"https://novasamatech.github.io/test-runner/4510//#testresult/92bbf8571609b5df","status":"passed","time":{"start":1705219776940,"stop":1705219776940,"duration":0}},{"uid":"9a4731d5cddd47a3","reportUrl":"https://novasamatech.github.io/test-runner/4509//#testresult/9a4731d5cddd47a3","status":"passed","time":{"start":1705205333240,"stop":1705205333240,"duration":0}},{"uid":"fc7c2a7d97fd0f22","reportUrl":"https://novasamatech.github.io/test-runner/4508//#testresult/fc7c2a7d97fd0f22","status":"passed","time":{"start":1705191043213,"stop":1705191043213,"duration":0}},{"uid":"3a2179f0db586128","reportUrl":"https://novasamatech.github.io/test-runner/4507//#testresult/3a2179f0db586128","status":"passed","time":{"start":1705176579027,"stop":1705176579027,"duration":0}},{"uid":"9b1ae8287deaee06","reportUrl":"https://novasamatech.github.io/test-runner/4506//#testresult/9b1ae8287deaee06","status":"passed","time":{"start":1705162164148,"stop":1705162164148,"duration":0}},{"uid":"e0c79fc67580da0a","reportUrl":"https://novasamatech.github.io/test-runner/4505//#testresult/e0c79fc67580da0a","status":"passed","time":{"start":1705147731410,"stop":1705147731410,"duration":0}},{"uid":"fa9a88681a40ad27","reportUrl":"https://novasamatech.github.io/test-runner/4504//#testresult/fa9a88681a40ad27","status":"passed","time":{"start":1705133353872,"stop":1705133353872,"duration":0}},{"uid":"a1219f1ac901b63c","reportUrl":"https://novasamatech.github.io/test-runner/4503//#testresult/a1219f1ac901b63c","status":"passed","time":{"start":1705118949472,"stop":1705118949473,"duration":1}},{"uid":"dc30a992a5cae5b9","reportUrl":"https://novasamatech.github.io/test-runner/4502//#testresult/dc30a992a5cae5b9","status":"passed","time":{"start":1705104575635,"stop":1705104575635,"duration":0}},{"uid":"4a332567c185d0ea","reportUrl":"https://novasamatech.github.io/test-runner/4501//#testresult/4a332567c185d0ea","status":"passed","time":{"start":1705090247542,"stop":1705090247542,"duration":0}},{"uid":"c7178c5771f3cf2e","reportUrl":"https://novasamatech.github.io/test-runner/4500//#testresult/c7178c5771f3cf2e","status":"passed","time":{"start":1705075761119,"stop":1705075761120,"duration":1}},{"uid":"d8b054524efc5a39","reportUrl":"https://novasamatech.github.io/test-runner/4499//#testresult/d8b054524efc5a39","status":"passed","time":{"start":1705061401899,"stop":1705061401900,"duration":1}},{"uid":"9adf1b5b2bb0dbff","reportUrl":"https://novasamatech.github.io/test-runner/4498//#testresult/9adf1b5b2bb0dbff","status":"passed","time":{"start":1705046991205,"stop":1705046991205,"duration":0}},{"uid":"514f1992ca3dae6d","reportUrl":"https://novasamatech.github.io/test-runner/4497//#testresult/514f1992ca3dae6d","status":"passed","time":{"start":1705032584396,"stop":1705032584396,"duration":0}},{"uid":"75fa939231d000b9","reportUrl":"https://novasamatech.github.io/test-runner/4496//#testresult/75fa939231d000b9","status":"passed","time":{"start":1705018194295,"stop":1705018194295,"duration":0}},{"uid":"f375bb4d46f07741","reportUrl":"https://novasamatech.github.io/test-runner/4495//#testresult/f375bb4d46f07741","status":"passed","time":{"start":1705003813433,"stop":1705003813433,"duration":0}},{"uid":"b8defef4a8bed0c","reportUrl":"https://novasamatech.github.io/test-runner/4494//#testresult/b8defef4a8bed0c","status":"passed","time":{"start":1704989398428,"stop":1704989398429,"duration":1}},{"uid":"472e2213371659e4","reportUrl":"https://novasamatech.github.io/test-runner/4493//#testresult/472e2213371659e4","status":"passed","time":{"start":1704974993516,"stop":1704974993517,"duration":1}},{"uid":"9be0169cc5832446","reportUrl":"https://novasamatech.github.io/test-runner/4492//#testresult/9be0169cc5832446","status":"passed","time":{"start":1704960548909,"stop":1704960548909,"duration":0}},{"uid":"dcd1735c6120238c","reportUrl":"https://novasamatech.github.io/test-runner/4491//#testresult/dcd1735c6120238c","status":"passed","time":{"start":1704946130621,"stop":1704946130622,"duration":1}}]},"tags":[]},"source":"b27d0fba62218625.json","parameterValues":["{'url': 'wss://rpc.joystream.org', 'name': 'Joystream'}"]}