{"uid":"53143d77c337786a","name":"test_can_create_connection[Test for Moonbeam, url: wss://1rpc.io/glmr]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"fa8c3605e2f5b4f16369f446caef3de6","time":{"start":1703721768144,"stop":1703721768144,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1703721714355,"stop":1703721746947,"duration":32592},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 24, in connection_by_url\n    get_properties(connection)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 648, in init_runtime\n    block_hash = self.get_chain_head()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 434, in get_chain_head\n    if self.supports_rpc_method(\"chain_getHead\"):\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 230, in supports_rpc_method\n    result = self.rpc_request(\"rpc_methods\", []).get('result')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 323, in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 364, in recv\n    opcode, data = self.recv_data()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 387, in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 408, in recv_data_frame\n    frame = self.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 447, in recv_frame\n    return self.frame_buffer.recv_frame()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 340, in recv_frame\n    self.recv_header()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 296, in recv_header\n    header = self.recv_strict(2)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_abnf.py\", line 375, in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 531, in _recv\n    return recv(self.sock, bufsize)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 124, in recv\n    raise WebSocketConnectionClosedException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1703721762132,"stop":1703721768144,"duration":6012},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az569-346"},{"name":"thread","value":"2198-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://1rpc.io/glmr', 'name': 'Moonbeam'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a90c69692e53decf","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1703721714354,"stop":1703721714354,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":687,"unknown":0,"total":692},"items":[{"uid":"12cb8e132812e721","reportUrl":"https://novasamatech.github.io/test-runner/4403//#testresult/12cb8e132812e721","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1703707365714,"stop":1703707365714,"duration":0}},{"uid":"83f716149dcf2529","reportUrl":"https://novasamatech.github.io/test-runner/4402//#testresult/83f716149dcf2529","status":"passed","time":{"start":1703692878748,"stop":1703692878748,"duration":0}},{"uid":"448778865e8b94b3","reportUrl":"https://novasamatech.github.io/test-runner/4401//#testresult/448778865e8b94b3","status":"passed","time":{"start":1703678491183,"stop":1703678491183,"duration":0}},{"uid":"7cf48f25f597e1cf","reportUrl":"https://novasamatech.github.io/test-runner/4400//#testresult/7cf48f25f597e1cf","status":"passed","time":{"start":1703664085458,"stop":1703664085458,"duration":0}},{"uid":"7cedbc98b7669eba","reportUrl":"https://novasamatech.github.io/test-runner/4399//#testresult/7cedbc98b7669eba","status":"passed","time":{"start":1703649688503,"stop":1703649688503,"duration":0}},{"uid":"f7ac659a3120d36c","reportUrl":"https://novasamatech.github.io/test-runner/4398//#testresult/f7ac659a3120d36c","status":"passed","time":{"start":1703635324872,"stop":1703635324872,"duration":0}},{"uid":"a8c3df073b775b29","reportUrl":"https://novasamatech.github.io/test-runner/4397//#testresult/a8c3df073b775b29","status":"passed","time":{"start":1703620911910,"stop":1703620911910,"duration":0}},{"uid":"51cb6daffeb13ef4","reportUrl":"https://novasamatech.github.io/test-runner/4396//#testresult/51cb6daffeb13ef4","status":"passed","time":{"start":1703606487499,"stop":1703606487499,"duration":0}},{"uid":"dacf2ed3ece9daf0","reportUrl":"https://novasamatech.github.io/test-runner/4395//#testresult/dacf2ed3ece9daf0","status":"passed","time":{"start":1703592093686,"stop":1703592093687,"duration":1}},{"uid":"f2cd6d8f0161498a","reportUrl":"https://novasamatech.github.io/test-runner/4394//#testresult/f2cd6d8f0161498a","status":"passed","time":{"start":1703577691385,"stop":1703577691385,"duration":0}},{"uid":"343dc301443adbcb","reportUrl":"https://novasamatech.github.io/test-runner/4393//#testresult/343dc301443adbcb","status":"passed","time":{"start":1703563279411,"stop":1703563279411,"duration":0}},{"uid":"8f4f1f99abff83f8","reportUrl":"https://novasamatech.github.io/test-runner/4392//#testresult/8f4f1f99abff83f8","status":"passed","time":{"start":1703548927101,"stop":1703548927101,"duration":0}},{"uid":"c9f2ffbf9888fc93","reportUrl":"https://novasamatech.github.io/test-runner/4391//#testresult/c9f2ffbf9888fc93","status":"passed","time":{"start":1703534485761,"stop":1703534485761,"duration":0}},{"uid":"4c6bd4be4a8c7b4a","reportUrl":"https://novasamatech.github.io/test-runner/4390//#testresult/4c6bd4be4a8c7b4a","status":"passed","time":{"start":1703520081173,"stop":1703520081173,"duration":0}},{"uid":"1a244fe5b46de33b","reportUrl":"https://novasamatech.github.io/test-runner/4389//#testresult/1a244fe5b46de33b","status":"passed","time":{"start":1703505686023,"stop":1703505686023,"duration":0}},{"uid":"9f05eff0fc7726ca","reportUrl":"https://novasamatech.github.io/test-runner/4388//#testresult/9f05eff0fc7726ca","status":"passed","time":{"start":1703491281173,"stop":1703491281173,"duration":0}},{"uid":"f9915ae274f99910","reportUrl":"https://novasamatech.github.io/test-runner/4387//#testresult/f9915ae274f99910","status":"passed","time":{"start":1703476894233,"stop":1703476894234,"duration":1}},{"uid":"9fe8e951020cf4d2","reportUrl":"https://novasamatech.github.io/test-runner/4386//#testresult/9fe8e951020cf4d2","status":"passed","time":{"start":1703462527966,"stop":1703462527966,"duration":0}},{"uid":"4ad8c646632aa3d4","reportUrl":"https://novasamatech.github.io/test-runner/4385//#testresult/4ad8c646632aa3d4","status":"passed","time":{"start":1703448078291,"stop":1703448078291,"duration":0}},{"uid":"129e646710198e11","reportUrl":"https://novasamatech.github.io/test-runner/4384//#testresult/129e646710198e11","status":"passed","time":{"start":1703433688802,"stop":1703433688803,"duration":1}}]},"tags":[]},"source":"53143d77c337786a.json","parameterValues":["{'url': 'wss://1rpc.io/glmr', 'name': 'Moonbeam'}"]}