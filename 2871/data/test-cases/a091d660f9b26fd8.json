{"uid":"a091d660f9b26fd8","name":"test_can_create_connection[Test for Astar, url: wss://astar-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"f878cae709c019f9ddb6d14c88ec021c","time":{"start":1682165083217,"stop":1682165086681,"duration":3464},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Astar', 'url': 'wss://astar-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Astar', 'url': 'wss://astar-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a9de67e22d5c1467","name":"stdout","source":"a9de67e22d5c1467.txt","type":"text/plain","size":238}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az585-260"},{"name":"thread","value":"1780-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://astar-rpc.dwellir.com', 'name': 'Astar'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"933541f9c3fd6291","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1682165069592,"stop":1682165073085,"duration":3493}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":15,"unknown":0,"total":16},"items":[{"uid":"e8e876937847cf1a","reportUrl":"https://nova-wallet.github.io/test-runner/2870//#testresult/e8e876937847cf1a","status":"passed","time":{"start":1682150657876,"stop":1682150658453,"duration":577}},{"uid":"1ba74ebee0e6e8b6","reportUrl":"https://nova-wallet.github.io/test-runner/2869//#testresult/1ba74ebee0e6e8b6","status":"passed","time":{"start":1682136269405,"stop":1682136269989,"duration":584}},{"uid":"b7ca915e8ef74b5a","reportUrl":"https://nova-wallet.github.io/test-runner/2868//#testresult/b7ca915e8ef74b5a","status":"passed","time":{"start":1682122392265,"stop":1682122392744,"duration":479}},{"uid":"66bf2db335e03a1c","reportUrl":"https://nova-wallet.github.io/test-runner/2867//#testresult/66bf2db335e03a1c","status":"passed","time":{"start":1682107436838,"stop":1682107437506,"duration":668}},{"uid":"31e6e5380a37160c","reportUrl":"https://nova-wallet.github.io/test-runner/2866//#testresult/31e6e5380a37160c","status":"passed","time":{"start":1682093045177,"stop":1682093045748,"duration":571}},{"uid":"a790079bba1651ea","reportUrl":"https://nova-wallet.github.io/test-runner/2865//#testresult/a790079bba1651ea","status":"passed","time":{"start":1682078696878,"stop":1682078697461,"duration":583}},{"uid":"263698b3f03b1c9d","reportUrl":"https://nova-wallet.github.io/test-runner/2864//#testresult/263698b3f03b1c9d","status":"passed","time":{"start":1682064243690,"stop":1682064244178,"duration":488}},{"uid":"846cd98aca07b32f","reportUrl":"https://nova-wallet.github.io/test-runner/2863//#testresult/846cd98aca07b32f","status":"passed","time":{"start":1682049862215,"stop":1682049862727,"duration":512}},{"uid":"7f8f2e01d9f0c39d","reportUrl":"https://nova-wallet.github.io/test-runner/2862//#testresult/7f8f2e01d9f0c39d","status":"passed","time":{"start":1682035947138,"stop":1682035947757,"duration":619}},{"uid":"8e22e4469d48ff70","reportUrl":"https://nova-wallet.github.io/test-runner/2861//#testresult/8e22e4469d48ff70","status":"passed","time":{"start":1682021045569,"stop":1682021046153,"duration":584}},{"uid":"877cda5d428d344d","reportUrl":"https://nova-wallet.github.io/test-runner/2860//#testresult/877cda5d428d344d","status":"passed","time":{"start":1682006664652,"stop":1682006665262,"duration":610}},{"uid":"928f9185bb9ce9f1","reportUrl":"https://nova-wallet.github.io/test-runner/2859//#testresult/928f9185bb9ce9f1","status":"passed","time":{"start":1681992312275,"stop":1681992312815,"duration":540}},{"uid":"fd32715bc572d4a2","reportUrl":"https://nova-wallet.github.io/test-runner/2858//#testresult/fd32715bc572d4a2","status":"passed","time":{"start":1681977855561,"stop":1681977856038,"duration":477}},{"uid":"a050cbebbaecd3a3","reportUrl":"https://nova-wallet.github.io/test-runner/2857//#testresult/a050cbebbaecd3a3","status":"passed","time":{"start":1681972238014,"stop":1681972238473,"duration":459}},{"uid":"95b07caec911ae59","reportUrl":"https://nova-wallet.github.io/test-runner/2856//#testresult/95b07caec911ae59","status":"passed","time":{"start":1681963445821,"stop":1681963446432,"duration":611}}]},"tags":[]},"source":"a091d660f9b26fd8.json","parameterValues":["{'url': 'wss://astar-rpc.dwellir.com', 'name': 'Astar'}"]}