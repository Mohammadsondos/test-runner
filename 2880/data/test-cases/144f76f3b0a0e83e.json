{"uid":"144f76f3b0a0e83e","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://fullnode.parachain.centrifuge.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2d17be314dce269e48e1501c9a65f0d5","time":{"start":1682295208609,"stop":1682295208813,"duration":204},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://fullnode.parachain.centrifuge.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://fullnode.parachain.centrifuge.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"983370d236ca1b01","name":"stdout","source":"983370d236ca1b01.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az389-115"},{"name":"thread","value":"1815-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://fullnode.parachain.centrifuge.io', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"39df7caa15666d58","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1682295198267,"stop":1682295198483,"duration":216}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":18,"unknown":0,"total":25},"items":[{"uid":"cadb76db3d914411","reportUrl":"https://nova-wallet.github.io/test-runner/2879//#testresult/cadb76db3d914411","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1682280277794,"stop":1682280278194,"duration":400}},{"uid":"f1a2202be4d15764","reportUrl":"https://nova-wallet.github.io/test-runner/2878//#testresult/f1a2202be4d15764","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1682265862787,"stop":1682265863170,"duration":383}},{"uid":"9ee0e4ee54a860f5","reportUrl":"https://nova-wallet.github.io/test-runner/2877//#testresult/9ee0e4ee54a860f5","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1682251616004,"stop":1682251747192,"duration":131188}},{"uid":"286f6a7b9dc8e187","reportUrl":"https://nova-wallet.github.io/test-runner/2876//#testresult/286f6a7b9dc8e187","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1682237197817,"stop":1682237329000,"duration":131183}},{"uid":"cb2511645ef11932","reportUrl":"https://nova-wallet.github.io/test-runner/2875//#testresult/cb2511645ef11932","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1682222817091,"stop":1682222948210,"duration":131119}},{"uid":"a451368e59d18971","reportUrl":"https://nova-wallet.github.io/test-runner/2874//#testresult/a451368e59d18971","status":"broken","statusDetails":"TimeoutError: [Errno 110] Connection timed out","time":{"start":1682209020331,"stop":1682209151461,"duration":131130}},{"uid":"7b25847298bd6989","reportUrl":"https://nova-wallet.github.io/test-runner/2873//#testresult/7b25847298bd6989","status":"passed","time":{"start":1682193864138,"stop":1682193864949,"duration":811}},{"uid":"d7947cc7d2b5b443","reportUrl":"https://nova-wallet.github.io/test-runner/2872//#testresult/d7947cc7d2b5b443","status":"passed","time":{"start":1682179449534,"stop":1682179450340,"duration":806}},{"uid":"c2807b2568bbe70","reportUrl":"https://nova-wallet.github.io/test-runner/2871//#testresult/c2807b2568bbe70","status":"passed","time":{"start":1682165086618,"stop":1682165087317,"duration":699}},{"uid":"25e3a9869f05500e","reportUrl":"https://nova-wallet.github.io/test-runner/2870//#testresult/25e3a9869f05500e","status":"passed","time":{"start":1682150674276,"stop":1682150674966,"duration":690}},{"uid":"e91f55fbe1e4e044","reportUrl":"https://nova-wallet.github.io/test-runner/2869//#testresult/e91f55fbe1e4e044","status":"passed","time":{"start":1682136285471,"stop":1682136286137,"duration":666}},{"uid":"ca8a92db3c1a631d","reportUrl":"https://nova-wallet.github.io/test-runner/2868//#testresult/ca8a92db3c1a631d","status":"passed","time":{"start":1682122405342,"stop":1682122405804,"duration":462}},{"uid":"3eb42c2b03690c97","reportUrl":"https://nova-wallet.github.io/test-runner/2867//#testresult/3eb42c2b03690c97","status":"passed","time":{"start":1682107452840,"stop":1682107453506,"duration":666}},{"uid":"415005a9718cd20e","reportUrl":"https://nova-wallet.github.io/test-runner/2866//#testresult/415005a9718cd20e","status":"passed","time":{"start":1682093067642,"stop":1682093068303,"duration":661}},{"uid":"c12ed05e6532f239","reportUrl":"https://nova-wallet.github.io/test-runner/2865//#testresult/c12ed05e6532f239","status":"passed","time":{"start":1682078713699,"stop":1682078714425,"duration":726}},{"uid":"69de5eb5adcaaa8c","reportUrl":"https://nova-wallet.github.io/test-runner/2864//#testresult/69de5eb5adcaaa8c","status":"passed","time":{"start":1682064263708,"stop":1682064264320,"duration":612}},{"uid":"b61fb7e54c7203bb","reportUrl":"https://nova-wallet.github.io/test-runner/2863//#testresult/b61fb7e54c7203bb","status":"passed","time":{"start":1682049871648,"stop":1682049872223,"duration":575}},{"uid":"62e4dd5b7e03b4c","reportUrl":"https://nova-wallet.github.io/test-runner/2862//#testresult/62e4dd5b7e03b4c","status":"passed","time":{"start":1682035963438,"stop":1682035964112,"duration":674}},{"uid":"a957014f8b5f28c5","reportUrl":"https://nova-wallet.github.io/test-runner/2861//#testresult/a957014f8b5f28c5","status":"passed","time":{"start":1682021062153,"stop":1682021062822,"duration":669}},{"uid":"afac62757eca7d1","reportUrl":"https://nova-wallet.github.io/test-runner/2860//#testresult/afac62757eca7d1","status":"passed","time":{"start":1682006679932,"stop":1682006680591,"duration":659}}]},"tags":[]},"source":"144f76f3b0a0e83e.json","parameterValues":["{'url': 'wss://fullnode.parachain.centrifuge.io', 'name': 'Centrifuge Parachain'}"]}