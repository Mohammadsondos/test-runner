{"uid":"bd28bc583262beca","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1693987368732,"stop":1693987369681,"duration":949},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f2b84dddab0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2b85042d40>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f2b84dddab0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2b85042d40>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a04a9ddbd91ee388","name":"stdout","source":"a04a9ddbd91ee388.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az408-563"},{"name":"thread","value":"2039-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f2b85042d40>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3850dda5e27de1e7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693987352836,"stop":1693987353706,"duration":870}},{"uid":"dce42b2688e0b759","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1693987336893,"stop":1693987337810,"duration":917}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":76,"unknown":0,"total":77},"items":[{"uid":"5cf213419f8f1098","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/5cf213419f8f1098","status":"passed","time":{"start":1693972925756,"stop":1693972929447,"duration":3691}},{"uid":"77a4007da91f88a","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/77a4007da91f88a","status":"passed","time":{"start":1693958583652,"stop":1693958587852,"duration":4200}},{"uid":"cf62f5d80ebc7dd9","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/cf62f5d80ebc7dd9","status":"passed","time":{"start":1693944132675,"stop":1693944136184,"duration":3509}},{"uid":"66742b26358cea24","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/66742b26358cea24","status":"passed","time":{"start":1693929732390,"stop":1693929737068,"duration":4678}},{"uid":"2554a6f01167ece4","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/2554a6f01167ece4","status":"passed","time":{"start":1693915348651,"stop":1693915353249,"duration":4598}},{"uid":"136de15147ce8f70","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/136de15147ce8f70","status":"passed","time":{"start":1693872201266,"stop":1693872207923,"duration":6657}},{"uid":"31c304ee3d22ad6f","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/31c304ee3d22ad6f","status":"passed","time":{"start":1693857736854,"stop":1693857742727,"duration":5873}},{"uid":"48fad9418eb209d4","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/48fad9418eb209d4","status":"passed","time":{"start":1693843321458,"stop":1693843326649,"duration":5191}},{"uid":"926fccdd9d263129","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/926fccdd9d263129","status":"passed","time":{"start":1693828920921,"stop":1693828925762,"duration":4841}},{"uid":"c868f0e41f3a45b8","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/c868f0e41f3a45b8","status":"passed","time":{"start":1693814554466,"stop":1693814561422,"duration":6956}},{"uid":"474bc927360dc1fd","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/474bc927360dc1fd","status":"passed","time":{"start":1693800124446,"stop":1693800127844,"duration":3398}},{"uid":"7c9530bc335d01d5","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/7c9530bc335d01d5","status":"passed","time":{"start":1693785786448,"stop":1693785793187,"duration":6739}},{"uid":"9709ff3a5878d16","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/9709ff3a5878d16","status":"passed","time":{"start":1693771325817,"stop":1693771329739,"duration":3922}},{"uid":"213612bb5163d005","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/213612bb5163d005","status":"passed","time":{"start":1693756943463,"stop":1693756948190,"duration":4727}},{"uid":"8c8fdbbea1683e5f","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/8c8fdbbea1683e5f","status":"passed","time":{"start":1693742528061,"stop":1693742531516,"duration":3455}},{"uid":"fbdc99768a907622","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/fbdc99768a907622","status":"passed","time":{"start":1693728147139,"stop":1693728154186,"duration":7047}},{"uid":"89b799497de85b81","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/89b799497de85b81","status":"passed","time":{"start":1693713731185,"stop":1693713736428,"duration":5243}},{"uid":"d183a8d41cec1f77","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/d183a8d41cec1f77","status":"passed","time":{"start":1693699390783,"stop":1693699396019,"duration":5236}},{"uid":"e7747a109bcf38b9","reportUrl":"https://novasamatech.github.io/test-runner/3696//#testresult/e7747a109bcf38b9","status":"passed","time":{"start":1693684931479,"stop":1693684938062,"duration":6583}},{"uid":"20b86c2a35101f06","reportUrl":"https://novasamatech.github.io/test-runner/3695//#testresult/20b86c2a35101f06","status":"passed","time":{"start":1693670524040,"stop":1693670529515,"duration":5475}}]},"tags":[]},"source":"bd28bc583262beca.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f2b85042d40>"]}