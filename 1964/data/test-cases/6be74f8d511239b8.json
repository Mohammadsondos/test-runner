{"uid":"6be74f8d511239b8","name":"test_can_create_connection[Test for Bifrost Polkadot, url: wss://hk.p.bifrost-rpc.liebi.com/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d0609295c8e19f67d624be445efeabe8","time":{"start":1669371276045,"stop":1669371276599,"duration":554},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Bifrost Polkadot', 'url': 'wss://hk.p.bifrost-rpc.liebi.com/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"1584-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://hk.p.bifrost-rpc.liebi.com/ws', 'name': 'Bifrost Polkadot'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"81218522e0932a2c","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371265404,"stop":1669371265985,"duration":581}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":250,"unknown":0,"total":251},"items":[{"uid":"1a73c99c9a8496ce","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/1a73c99c9a8496ce","status":"passed","time":{"start":1669118762388,"stop":1669118763294,"duration":906}},{"uid":"86d96db1b1beea42","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/86d96db1b1beea42","status":"passed","time":{"start":1669104333665,"stop":1669104334427,"duration":762}},{"uid":"dbd80c25d290892d","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/dbd80c25d290892d","status":"passed","time":{"start":1669089901850,"stop":1669089902612,"duration":762}},{"uid":"c5236a3b6bec125b","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/c5236a3b6bec125b","status":"passed","time":{"start":1669076183176,"stop":1669076184064,"duration":888}},{"uid":"c565f628d20397b6","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c565f628d20397b6","status":"passed","time":{"start":1669061107261,"stop":1669061108058,"duration":797}},{"uid":"1e90712492389a7c","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/1e90712492389a7c","status":"passed","time":{"start":1669046776472,"stop":1669046777264,"duration":792}},{"uid":"44b5b3415b25c6a9","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/44b5b3415b25c6a9","status":"passed","time":{"start":1669032375436,"stop":1669032376320,"duration":884}},{"uid":"6f546017d2f65b16","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/6f546017d2f65b16","status":"passed","time":{"start":1669017933032,"stop":1669017933818,"duration":786}},{"uid":"940a0aa3c11c3b66","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/940a0aa3c11c3b66","status":"passed","time":{"start":1669003771339,"stop":1669003772298,"duration":959}},{"uid":"9dcea54dc06eadc0","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/9dcea54dc06eadc0","status":"passed","time":{"start":1668989793406,"stop":1668989794293,"duration":887}},{"uid":"9642fdce20249d10","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/9642fdce20249d10","status":"passed","time":{"start":1668974687572,"stop":1668974688454,"duration":882}},{"uid":"f322e6b645e38379","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/f322e6b645e38379","status":"passed","time":{"start":1668960283643,"stop":1668960284403,"duration":760}},{"uid":"c381b622c94d0d43","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/c381b622c94d0d43","status":"passed","time":{"start":1668945951047,"stop":1668945951718,"duration":671}},{"uid":"6dd1d3b043ca18af","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/6dd1d3b043ca18af","status":"passed","time":{"start":1668931507033,"stop":1668931507890,"duration":857}},{"uid":"ef09952994f0b487","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/ef09952994f0b487","status":"passed","time":{"start":1668917257404,"stop":1668917258168,"duration":764}},{"uid":"c77fdfd3ffc843c2","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/c77fdfd3ffc843c2","status":"passed","time":{"start":1668903393679,"stop":1668903394550,"duration":871}},{"uid":"3f2d06c194f68342","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/3f2d06c194f68342","status":"passed","time":{"start":1668888277927,"stop":1668888278804,"duration":877}},{"uid":"44ad03875253b3f4","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/44ad03875253b3f4","status":"passed","time":{"start":1668873901553,"stop":1668873902412,"duration":859}},{"uid":"152913b5091dabba","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/152913b5091dabba","status":"passed","time":{"start":1668859520921,"stop":1668859521807,"duration":886}},{"uid":"b104324acdc15e26","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/b104324acdc15e26","status":"passed","time":{"start":1668845092223,"stop":1668845093079,"duration":856}}]},"tags":[]},"source":"6be74f8d511239b8.json","parameterValues":["{'url': 'wss://hk.p.bifrost-rpc.liebi.com/ws', 'name': 'Bifrost Polkadot'}"]}