{"uid":"1bdbeba42a8aa779","name":"test_can_create_connection[Test for Statemint, url: wss://statemint.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"ee3539568992694610a2a8831bca3751","time":{"start":1669370911092,"stop":1669370911521,"duration":429},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Statemint', 'url': 'wss://statemint.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"1581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemint.api.onfinality.io/public-ws', 'name': 'Statemint'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b5915b8fc478d86a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370900568,"stop":1669370901033,"duration":465}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":250,"unknown":0,"total":251},"items":[{"uid":"4c50451ad9bb7241","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/4c50451ad9bb7241","status":"passed","time":{"start":1669118716796,"stop":1669118717468,"duration":672}},{"uid":"faad7fcb3e33d041","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/faad7fcb3e33d041","status":"passed","time":{"start":1669104285979,"stop":1669104286621,"duration":642}},{"uid":"2889f6e1e748f578","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/2889f6e1e748f578","status":"passed","time":{"start":1669089847561,"stop":1669089848168,"duration":607}},{"uid":"c33babc3af00a943","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/c33babc3af00a943","status":"passed","time":{"start":1669076138915,"stop":1669076139588,"duration":673}},{"uid":"beec2be59a6637d","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/beec2be59a6637d","status":"passed","time":{"start":1669061045353,"stop":1669061045946,"duration":593}},{"uid":"47ae65d67b9efa53","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/47ae65d67b9efa53","status":"passed","time":{"start":1669046724496,"stop":1669046725075,"duration":579}},{"uid":"b3b66360012313c3","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/b3b66360012313c3","status":"passed","time":{"start":1669032329798,"stop":1669032330462,"duration":664}},{"uid":"3b84c692f2a32b84","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/3b84c692f2a32b84","status":"passed","time":{"start":1669017880222,"stop":1669017880813,"duration":591}},{"uid":"7307a3813e634393","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/7307a3813e634393","status":"passed","time":{"start":1669003727401,"stop":1669003728113,"duration":712}},{"uid":"de2c65888c5dcb15","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/de2c65888c5dcb15","status":"passed","time":{"start":1668989746538,"stop":1668989747223,"duration":685}},{"uid":"7f726922a022b0c7","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/7f726922a022b0c7","status":"passed","time":{"start":1668974635013,"stop":1668974635706,"duration":693}},{"uid":"97ea8fd2bf8165be","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/97ea8fd2bf8165be","status":"passed","time":{"start":1668960236719,"stop":1668960237358,"duration":639}},{"uid":"21b755ef9ee4558d","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/21b755ef9ee4558d","status":"passed","time":{"start":1668945888426,"stop":1668945888929,"duration":503}},{"uid":"2b49c5d1103f990b","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/2b49c5d1103f990b","status":"passed","time":{"start":1668931460705,"stop":1668931461391,"duration":686}},{"uid":"8e418f85b9a0ed64","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/8e418f85b9a0ed64","status":"passed","time":{"start":1668917209389,"stop":1668917209977,"duration":588}},{"uid":"fe8c0f1efd933a22","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/fe8c0f1efd933a22","status":"passed","time":{"start":1668903345149,"stop":1668903345830,"duration":681}},{"uid":"b707302fa4f5afa8","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/b707302fa4f5afa8","status":"passed","time":{"start":1668888232458,"stop":1668888233109,"duration":651}},{"uid":"b101095c717b556","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/b101095c717b556","status":"passed","time":{"start":1668873855699,"stop":1668873856402,"duration":703}},{"uid":"24a2e2e6aecdc08","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/24a2e2e6aecdc08","status":"passed","time":{"start":1668859476225,"stop":1668859476926,"duration":701}},{"uid":"67940d89c43faf9a","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/67940d89c43faf9a","status":"passed","time":{"start":1668845045765,"stop":1668845046456,"duration":691}}]},"tags":[]},"source":"1bdbeba42a8aa779.json","parameterValues":["{'url': 'wss://statemint.api.onfinality.io/public-ws', 'name': 'Statemint'}"]}