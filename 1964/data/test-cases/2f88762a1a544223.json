{"uid":"2f88762a1a544223","name":"test_can_create_connection[Test for Parallel Heiko, url: wss://heiko-rpc.parallel.fi]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d94cffbdb5d3130f13b583ffb63297c6","time":{"start":1669370924277,"stop":1669370924829,"duration":552},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://heiko-rpc.parallel.fi'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"1584-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://heiko-rpc.parallel.fi', 'name': 'Parallel Heiko'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bbabd7c4e2452f79","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370913387,"stop":1669370914197,"duration":810}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":250,"unknown":0,"total":251},"items":[{"uid":"d5f878507348ffc1","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/d5f878507348ffc1","status":"passed","time":{"start":1669118737335,"stop":1669118737869,"duration":534}},{"uid":"f30f11c19f68f286","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/f30f11c19f68f286","status":"passed","time":{"start":1669104314287,"stop":1669104315336,"duration":1049}},{"uid":"5d6f91b02c38618f","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/5d6f91b02c38618f","status":"passed","time":{"start":1669089881853,"stop":1669089882689,"duration":836}},{"uid":"4e91f0d5983dcd0b","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/4e91f0d5983dcd0b","status":"passed","time":{"start":1669076162311,"stop":1669076163147,"duration":836}},{"uid":"c39529d002bd95cb","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c39529d002bd95cb","status":"passed","time":{"start":1669061075104,"stop":1669061076153,"duration":1049}},{"uid":"a09aa5dd7a24b616","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/a09aa5dd7a24b616","status":"passed","time":{"start":1669046707380,"stop":1669046708122,"duration":742}},{"uid":"af045a03ced2f121","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/af045a03ced2f121","status":"passed","time":{"start":1669032355696,"stop":1669032356531,"duration":835}},{"uid":"64b6b27c4a62c1f0","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/64b6b27c4a62c1f0","status":"passed","time":{"start":1669017910166,"stop":1669017911216,"duration":1050}},{"uid":"e58c2d2bacd275e5","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/e58c2d2bacd275e5","status":"passed","time":{"start":1669003751318,"stop":1669003752147,"duration":829}},{"uid":"6832d5ba7120b2a4","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/6832d5ba7120b2a4","status":"passed","time":{"start":1668989763490,"stop":1668989764439,"duration":949}},{"uid":"227bcc302fc97443","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/227bcc302fc97443","status":"passed","time":{"start":1668974660435,"stop":1668974660950,"duration":515}},{"uid":"8fc351af06eb14b6","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/8fc351af06eb14b6","status":"passed","time":{"start":1668960264236,"stop":1668960265319,"duration":1083}},{"uid":"b4a1fc785436328c","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/b4a1fc785436328c","status":"passed","time":{"start":1668945921111,"stop":1668945921939,"duration":828}},{"uid":"fe253d51fb947b65","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/fe253d51fb947b65","status":"passed","time":{"start":1668931483577,"stop":1668931484183,"duration":606}},{"uid":"7228852275705376","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/7228852275705376","status":"passed","time":{"start":1668917238716,"stop":1668917239488,"duration":772}},{"uid":"17cdbd56290db45","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/17cdbd56290db45","status":"passed","time":{"start":1668903373771,"stop":1668903374663,"duration":892}},{"uid":"7ca683ceca096bb0","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/7ca683ceca096bb0","status":"passed","time":{"start":1668888255475,"stop":1668888256389,"duration":914}},{"uid":"efadcb6e8058fdf1","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/efadcb6e8058fdf1","status":"passed","time":{"start":1668873868223,"stop":1668873869118,"duration":895}},{"uid":"7e4524e780f8caaa","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/7e4524e780f8caaa","status":"passed","time":{"start":1668859501831,"stop":1668859502355,"duration":524}},{"uid":"fe52c355448daa27","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/fe52c355448daa27","status":"passed","time":{"start":1668845071696,"stop":1668845072514,"duration":818}}]},"tags":[]},"source":"2f88762a1a544223.json","parameterValues":["{'url': 'wss://heiko-rpc.parallel.fi', 'name': 'Parallel Heiko'}"]}