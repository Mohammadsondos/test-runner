{"uid":"a2d8efb364023389","name":"test_chainId[Test for HydraDX]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"fd961b832d48aae41e93d2cc6ed513e7","time":{"start":1669371283594,"stop":1669371284665,"duration":1071},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7efe62495a00>\nchain = <tests.utils.chain_model.Chain object at 0x7efe6254d880>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7efe6254d880>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] HydraDX\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7efe62495a00>\nchain = <tests.utils.chain_model.Chain object at 0x7efe6254d880>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7efe6254d880>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] HydraDX\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"8a49ac886cf5ed42","name":"stdout","source":"8a49ac886cf5ed42.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az265-855"},{"name":"thread","value":"1631-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7efe6254d880>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e2ef0663109bd9fc","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","time":{"start":1669371272516,"stop":1669371273576,"duration":1060}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":248,"unknown":0,"total":249},"items":[{"uid":"b54fddb2dc2c042","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/b54fddb2dc2c042","status":"passed","time":{"start":1669118928685,"stop":1669118928685,"duration":0}},{"uid":"3aae22db5d4e335d","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/3aae22db5d4e335d","status":"passed","time":{"start":1669104493541,"stop":1669104493542,"duration":1}},{"uid":"4effcc627c2af6f9","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/4effcc627c2af6f9","status":"passed","time":{"start":1669090093239,"stop":1669090093239,"duration":0}},{"uid":"c73fa3692016763","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/c73fa3692016763","status":"passed","time":{"start":1669076407224,"stop":1669076407224,"duration":0}},{"uid":"66b73d4bdffec178","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/66b73d4bdffec178","status":"passed","time":{"start":1669061273919,"stop":1669061273919,"duration":0}},{"uid":"90b5e39fae28a7c0","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/90b5e39fae28a7c0","status":"passed","time":{"start":1669046921066,"stop":1669046921066,"duration":0}},{"uid":"cae1b1992da245b3","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/cae1b1992da245b3","status":"passed","time":{"start":1669032558322,"stop":1669032558322,"duration":0}},{"uid":"8c94ae5c3b92d6c4","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/8c94ae5c3b92d6c4","status":"passed","time":{"start":1669018156742,"stop":1669018156742,"duration":0}},{"uid":"95343081b9a63e46","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/95343081b9a63e46","status":"passed","time":{"start":1669003934547,"stop":1669003934547,"duration":0}},{"uid":"6f3eaa516bc5ef56","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/6f3eaa516bc5ef56","status":"passed","time":{"start":1668989891994,"stop":1668989891994,"duration":0}},{"uid":"35a7fab7622c79f2","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/35a7fab7622c79f2","status":"passed","time":{"start":1668974774228,"stop":1668974774228,"duration":0}},{"uid":"2f2addac58a78d4e","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/2f2addac58a78d4e","status":"passed","time":{"start":1668960368215,"stop":1668960372287,"duration":4072}},{"uid":"22dd85c1ebc738ab","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/22dd85c1ebc738ab","status":"passed","time":{"start":1668946023921,"stop":1668946028251,"duration":4330}},{"uid":"ca89a45e22fdc61f","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/ca89a45e22fdc61f","status":"passed","time":{"start":1668931625708,"stop":1668931625708,"duration":0}},{"uid":"5d858c18c562f13b","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/5d858c18c562f13b","status":"passed","time":{"start":1668917340600,"stop":1668917340600,"duration":0}},{"uid":"edc17cfb38be3819","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/edc17cfb38be3819","status":"passed","time":{"start":1668903481969,"stop":1668903481969,"duration":0}},{"uid":"ca109825ccf1a0ef","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/ca109825ccf1a0ef","status":"passed","time":{"start":1668888365948,"stop":1668888365948,"duration":0}},{"uid":"c20c1c97a5e9eaeb","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/c20c1c97a5e9eaeb","status":"passed","time":{"start":1668873977244,"stop":1668873981007,"duration":3763}},{"uid":"e6001518829c0f9","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/e6001518829c0f9","status":"passed","time":{"start":1668859612784,"stop":1668859612784,"duration":0}},{"uid":"1c2bd96e476fcb46","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/1c2bd96e476fcb46","status":"passed","time":{"start":1668845236337,"stop":1668845236337,"duration":0}}]},"tags":[]},"source":"a2d8efb364023389.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7efe6254d880>"]}