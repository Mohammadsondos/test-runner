{"uid":"15d40e6c8c1f8016","name":"test_precision[Test for Centrifuge Parachain]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"31952912a4c0f47f1dafe26e8c02a8cc","time":{"start":1669371770256,"stop":1669371781735,"duration":11479},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Centrifuge Parachain","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f360eed6ee0>\nchain = <tests.utils.chain_model.Chain object at 0x7f360ef5f6a0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f360ef5f6a0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Centrifuge Parachain\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Centrifuge Parachain","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f360eed6ee0>\nchain = <tests.utils.chain_model.Chain object at 0x7f360ef5f6a0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f360ef5f6a0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Centrifuge Parachain\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"18120cb449120211","name":"stdout","source":"18120cb449120211.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az265-855"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f360ef5f6a0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eaea8eae3a37f8c1","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Centrifuge Parachain","time":{"start":1669371748186,"stop":1669371760238,"duration":12052}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":248,"unknown":0,"total":249},"items":[{"uid":"1e172294107a8393","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/1e172294107a8393","status":"passed","time":{"start":1669119126054,"stop":1669119131773,"duration":5719}},{"uid":"f25295f144f803cf","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/f25295f144f803cf","status":"passed","time":{"start":1669104681512,"stop":1669104687050,"duration":5538}},{"uid":"649c108f7ff3c99","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/649c108f7ff3c99","status":"passed","time":{"start":1669090325636,"stop":1669090336159,"duration":10523}},{"uid":"79e11bc91d2a9e82","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/79e11bc91d2a9e82","status":"passed","time":{"start":1669076515389,"stop":1669076520604,"duration":5215}},{"uid":"38b38786660447b7","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/38b38786660447b7","status":"passed","time":{"start":1669061475876,"stop":1669061482050,"duration":6174}},{"uid":"651d1186e8a489a7","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/651d1186e8a489a7","status":"passed","time":{"start":1669047101283,"stop":1669047108588,"duration":7305}},{"uid":"d49ef9d25c1588f5","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/d49ef9d25c1588f5","status":"passed","time":{"start":1669032779239,"stop":1669032786430,"duration":7191}},{"uid":"92aa11cede481ed6","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/92aa11cede481ed6","status":"passed","time":{"start":1669018299769,"stop":1669018306456,"duration":6687}},{"uid":"e6df8d220e0c77b3","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/e6df8d220e0c77b3","status":"passed","time":{"start":1669004140791,"stop":1669004146251,"duration":5460}},{"uid":"8022c0dfe480edc9","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/8022c0dfe480edc9","status":"passed","time":{"start":1668990039736,"stop":1668990039736,"duration":0}},{"uid":"c677075114eb2db5","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/c677075114eb2db5","status":"passed","time":{"start":1668974912456,"stop":1668974918300,"duration":5844}},{"uid":"8b53e32c9e0ec4b8","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/8b53e32c9e0ec4b8","status":"passed","time":{"start":1668960494235,"stop":1668960494235,"duration":0}},{"uid":"8589916da972fcba","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/8589916da972fcba","status":"passed","time":{"start":1668946166477,"stop":1668946166477,"duration":0}},{"uid":"32483f4b4311e4f9","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/32483f4b4311e4f9","status":"passed","time":{"start":1668931783921,"stop":1668931791880,"duration":7959}},{"uid":"990c6bf4deb7604a","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/990c6bf4deb7604a","status":"passed","time":{"start":1668917464433,"stop":1668917464433,"duration":0}},{"uid":"ff901a0a70f80aeb","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/ff901a0a70f80aeb","status":"passed","time":{"start":1668903617480,"stop":1668903617480,"duration":0}},{"uid":"57f0b13a24c95770","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/57f0b13a24c95770","status":"passed","time":{"start":1668888492690,"stop":1668888492690,"duration":0}},{"uid":"9f322bfa5fc9c664","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/9f322bfa5fc9c664","status":"passed","time":{"start":1668874099181,"stop":1668874099181,"duration":0}},{"uid":"8de9dfb0c9c771f7","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/8de9dfb0c9c771f7","status":"passed","time":{"start":1668859720731,"stop":1668859720731,"duration":0}},{"uid":"d0e3d1ac1c8d9fd5","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/d0e3d1ac1c8d9fd5","status":"passed","time":{"start":1668845395036,"stop":1668845395037,"duration":1}}]},"tags":[]},"source":"15d40e6c8c1f8016.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f360ef5f6a0>"]}