{"uid":"dcb1c202cb63b5ee","name":"test_can_create_connection[Test for Moonriver, url: wss://moonriver.public.blastapi.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"45d3b0ee9950d2832d948dcb8bb46046","time":{"start":1669370782858,"stop":1669370782990,"duration":132},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Moonriver', 'url': 'wss://moonriver.public.blastapi.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az91-612"},{"name":"thread","value":"1584-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://moonriver.public.blastapi.io', 'name': 'Moonriver'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d81c7955e05b7d84","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370772516,"stop":1669370772795,"duration":279}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":250,"unknown":0,"total":251},"items":[{"uid":"f7ca78e00979414d","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/f7ca78e00979414d","status":"passed","time":{"start":1669118699437,"stop":1669118699484,"duration":47}},{"uid":"1766dadd40adc0d7","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/1766dadd40adc0d7","status":"passed","time":{"start":1669104276541,"stop":1669104277053,"duration":512}},{"uid":"4b1266a5ec508ca5","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/4b1266a5ec508ca5","status":"passed","time":{"start":1669089839194,"stop":1669089839511,"duration":317}},{"uid":"3b5a4a6d06d0af93","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/3b5a4a6d06d0af93","status":"passed","time":{"start":1669076124291,"stop":1669076124353,"duration":62}},{"uid":"48dab82ade6945e4","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/48dab82ade6945e4","status":"passed","time":{"start":1669061037490,"stop":1669061038000,"duration":510}},{"uid":"cfe8008828b6e645","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/cfe8008828b6e645","status":"passed","time":{"start":1669046697437,"stop":1669046697910,"duration":473}},{"uid":"d71fe0633e189d48","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/d71fe0633e189d48","status":"passed","time":{"start":1669032318503,"stop":1669032318547,"duration":44}},{"uid":"8a519025400fa985","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/8a519025400fa985","status":"passed","time":{"start":1669017871806,"stop":1669017872124,"duration":318}},{"uid":"2347a08c70d66dce","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/2347a08c70d66dce","status":"passed","time":{"start":1669003715290,"stop":1669003715347,"duration":57}},{"uid":"bc651023ba64f26b","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/bc651023ba64f26b","status":"passed","time":{"start":1668989725976,"stop":1668989726067,"duration":91}},{"uid":"84aca276d9972acc","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/84aca276d9972acc","status":"passed","time":{"start":1668974622179,"stop":1668974622274,"duration":95}},{"uid":"28b3d415e19b8359","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/28b3d415e19b8359","status":"passed","time":{"start":1668960227418,"stop":1668960227703,"duration":285}},{"uid":"2ce5a1dfc345f52c","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/2ce5a1dfc345f52c","status":"passed","time":{"start":1668945879148,"stop":1668945879500,"duration":352}},{"uid":"e6d9e6cdf9a78668","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/e6d9e6cdf9a78668","status":"passed","time":{"start":1668931445166,"stop":1668931445242,"duration":76}},{"uid":"59f97509e4de3414","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/59f97509e4de3414","status":"passed","time":{"start":1668917200417,"stop":1668917200757,"duration":340}},{"uid":"910dc349f4468099","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/910dc349f4468099","status":"passed","time":{"start":1668903336214,"stop":1668903336292,"duration":78}},{"uid":"eba7d7e10577cb8b","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/eba7d7e10577cb8b","status":"passed","time":{"start":1668888219768,"stop":1668888219859,"duration":91}},{"uid":"57e0a910662435de","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/57e0a910662435de","status":"passed","time":{"start":1668873830345,"stop":1668873830424,"duration":79}},{"uid":"c96e2e6438322319","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/c96e2e6438322319","status":"passed","time":{"start":1668859462481,"stop":1668859462530,"duration":49}},{"uid":"100835670272702b","reportUrl":"https://nova-wallet.github.io/test-runner/1927//#testresult/100835670272702b","status":"passed","time":{"start":1668845033569,"stop":1668845033653,"duration":84}}]},"tags":[]},"source":"dcb1c202cb63b5ee.json","parameterValues":["{'url': 'wss://moonriver.public.blastapi.io', 'name': 'Moonriver'}"]}