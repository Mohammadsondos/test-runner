{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Test defects","children":[{"name":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","children":[{"name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc.dwellir.com]","uid":"5c84cd8af3d9e29a","parentUid":"47cc0c6fa0fbcb7e5e0ff54f8fda97b1","status":"broken","time":{"start":1682424337414,"stop":1682424337740,"duration":326},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://karura-rpc.dwellir.com', 'name': 'Karura'}"]},{"name":"test_can_create_connection[Test for Tanganika, url: wss://tanganika.datahighway.com]","uid":"9b729c5ce9b89cca","parentUid":"47cc0c6fa0fbcb7e5e0ff54f8fda97b1","status":"broken","time":{"start":1682424399199,"stop":1682424399500,"duration":301},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"]}],"uid":"47cc0c6fa0fbcb7e5e0ff54f8fda97b1"},{"name":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'fullnode.altair.centrifuge.io'. (_ssl.c:997)","children":[{"name":"test_can_create_connection[Test for Altair, url: wss://fullnode.altair.centrifuge.io]","uid":"66d65cebe4c0ddb0","parentUid":"054cbc59ef1763a7aa9acb9e5601d14f","status":"broken","time":{"start":1682424347620,"stop":1682424347645,"duration":25},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://fullnode.altair.centrifuge.io', 'name': 'Altair'}"]}],"uid":"054cbc59ef1763a7aa9acb9e5601d14f"},{"name":"websocket._exceptions.WebSocketBadStatusException: Handshake status 404 Not Found","children":[{"name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://fullnode.parachain.centrifuge.io]","uid":"d2f1cbbee9148cb7","parentUid":"e273a6f893259f4237d5e7562d8ea4ae","status":"broken","time":{"start":1682424386272,"stop":1682424386578,"duration":306},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://fullnode.parachain.centrifuge.io', 'name': 'Centrifuge Parachain'}"]}],"uid":"e273a6f893259f4237d5e7562d8ea4ae"},{"name":"AttributeError: 'NoneType' object has no attribute 'get_constant'","children":[{"name":"test_address_prefix[Test for Tanganika]","uid":"7bfc6e12f4e692ae","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682424409387,"stop":1682424410364,"duration":977},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fad65c3c220>"]},{"name":"test_has_new_assets[Test for Exosama]","uid":"d63e141daa660e4d","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682424514208,"stop":1682424515757,"duration":1549},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fdd9e1eed40>"]},{"name":"test_address_prefix[Test for Exosama]","uid":"d1b2f509f69e4d6f","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682424515116,"stop":1682424516885,"duration":1769},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fa40950eda0>"]},{"name":"test_chainId[Test for Exosama]","uid":"f69f11d76258e20d","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682424590623,"stop":1682424591745,"duration":1122},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fad65c3c5b0>"]},{"name":"test_precision[Test for Exosama]","uid":"555b64c1984094a5","parentUid":"5aa24b8a3c4111290b34f017f14d2ab4","status":"broken","time":{"start":1682424687308,"stop":1682424688764,"duration":1456},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fa40950eda0>"]}],"uid":"5aa24b8a3c4111290b34f017f14d2ab4"},{"name":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32601, 'message': 'Method system_chain is not supported'}","children":[{"name":"test_can_create_connection[Test for Exosama, url: wss://rpc.exosama.com]","uid":"237f29093978d7d3","parentUid":"216ddde9b6485d42e113b52340f71442","status":"broken","time":{"start":1682424413219,"stop":1682424413640,"duration":421},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["{'url': 'wss://rpc.exosama.com', 'name': 'Exosama'}"]}],"uid":"216ddde9b6485d42e113b52340f71442"},{"name":"Socket state: WaitingForReconnect(url=wss://tanganika.datahighway.com, attempt=9, pendingSendables=[Sendable(611170296)])","children":[{"name":"testBalancesLoading[Getting balance for Tanganika network]","uid":"f2d1928836e1cdf0","parentUid":"7c100b7c91dd019941131e0b21b5eada","status":"broken","time":{"start":1682425083898,"stop":1682425163946,"duration":80048},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"7c100b7c91dd019941131e0b21b5eada"},{"name":"Socket state: Connected(url=wss://parachain-rpc.darwinia.network, toResendOnReconnect=[Sendable(611170296)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=0xcae65f46210bccf0a77f541d0dbd48be, initiatorId=611170296)])","children":[{"name":"testBalancesLoading[Getting balance for Darwinia network]","uid":"8572bffb39030ffb","parentUid":"1c9cb61995b3fff51c33cff103938464","status":"broken","time":{"start":1682425164803,"stop":1682425164823,"duration":20},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"1c9cb61995b3fff51c33cff103938464"}],"uid":"bdbf199525818fae7a8651db9eafe741"},{"name":"Product defects","children":[{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Bifrost Kusama]","uid":"df41aab32e9cf52d","parentUid":"4f259164810e5718c9bb3a676e1dff0a","status":"failed","time":{"start":1682424378264,"stop":1682424379790,"duration":1526},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fdd9e444550>"]}],"uid":"4f259164810e5718c9bb3a676e1dff0a"},{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 3\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: INTR\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n2: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: IBTC\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)\n\n3: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: DOT\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Kintsugi]","uid":"2105a75915891e86","parentUid":"a48452b38450747c54e44e725ec69e07","status":"failed","time":{"start":1682424394973,"stop":1682424396234,"duration":1261},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7f26ee343fd0>"]}],"uid":"a48452b38450747c54e44e725ec69e07"},{"name":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:31\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:28\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: TOKEN\u001B[0m\n                delayed_assert.expect(symbol in chain_assets.keys() or symbol in chain_assets.values(), \"new token to add: \" + symbol)","children":[{"name":"test_has_new_assets[Test for Equilibrium]","uid":"9ecbaacbe10b78ae","parentUid":"bf5f5b50cf82e0ecd1a1af8251119a9e","status":"failed","time":{"start":1682424531196,"stop":1682424533076,"duration":1880},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fdd9e1eece0>"]}],"uid":"bf5f5b50cf82e0ecd1a1af8251119a9e"},{"name":"AssertionError: assert '0xf0b8924b12...0b89ecb60570e' == '0xe71578b37a...d88013a548ad6'\n  - 0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6\n  + 0xf0b8924b12e8108550d28870bc03f7b45a947e1b2b9abf81bfb0b89ecb60570e","children":[{"name":"test_chainId[Test for Darwinia]","uid":"8f18635bea50e7ad","parentUid":"9d774d07bb1e51a1a880295989a7aeff","status":"failed","time":{"start":1682424543217,"stop":1682424544899,"duration":1682},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":false,"parameters":["<scripts.utils.chain_model.Chain object at 0x7fad65c3c3a0>"]}],"uid":"9d774d07bb1e51a1a880295989a7aeff"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}