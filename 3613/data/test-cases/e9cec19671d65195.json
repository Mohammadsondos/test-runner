{"uid":"e9cec19671d65195","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1692561859321,"stop":1692561859685,"duration":364},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 20 Aug 2023 20:04:19 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=tRGXmXpB3Oa%2BHQspj0RYB2wNuWgF8ooB2LgsXPeeIa86ZdKuaihfeuazdI6S9fzWmIofEnoXlvhCz820ox21HINPWb%2FHmSIPp3ytvaE5JkYEzrz%2FD2cSdQoOEZnCA6oMcsayLw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4C83UQJ6dZ9jjS; SameSite=None; Secure; path=/; expires=Mon, 21-Aug-23 19:04:19 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f9d3ea4eca69c37-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 20 Aug 2023 20:04:19 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=tRGXmXpB3Oa%2BHQspj0RYB2wNuWgF8ooB2LgsXPeeIa86ZdKuaihfeuazdI6S9fzWmIofEnoXlvhCz820ox21HINPWb%2FHmSIPp3ytvaE5JkYEzrz%2FD2cSdQoOEZnCA6oMcsayLw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4C83UQJ6dZ9jjS; SameSite=None; Secure; path=/; expires=Mon, 21-Aug-23 19:04:19 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f9d3ea4eca69c37-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 20 Aug 2023 20:04:19 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=tRGXmXpB3Oa%2BHQspj0RYB2wNuWgF8ooB2LgsXPeeIa86ZdKuaihfeuazdI6S9fzWmIofEnoXlvhCz820ox21HINPWb%2FHmSIPp3ytvaE5JkYEzrz%2FD2cSdQoOEZnCA6oMcsayLw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4C83UQJ6dZ9jjS; SameSite=None; Secure; path=/; expires=Mon, 21-Aug-23 19:04:19 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f9d3ea4eca69c37-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"data = {'name': 'Basilisk', 'url': 'wss://rpc.basilisk.cloud'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 20 Aug 2023 20:04:19 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=tRGXmXpB3Oa%2BHQspj0RYB2wNuWgF8ooB2LgsXPeeIa86ZdKuaihfeuazdI6S9fzWmIofEnoXlvhCz820ox21HINPWb%2FHmSIPp3ytvaE5JkYEzrz%2FD2cSdQoOEZnCA6oMcsayLw%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4C83UQJ6dZ9jjS; SameSite=None; Secure; path=/; expires=Mon, 21-Aug-23 19:04:19 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f9d3ea4eca69c37-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9e7e23fd970061c0","name":"stdout","source":"9e7e23fd970061c0.txt","type":"text/plain","size":2542}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az851-148"},{"name":"thread","value":"2041-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"beac9210d85385d7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 20 Aug 2023 20:04:04 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=vAzAKZNYCT6DHVN%2FTKQeBhEIRLRlcmxD%2ByNekOrXnTjt1Xv9mvWcgUYepyeQIalhyV4d0SQaKiG96IXlPeO5eZ73298d4BvQ7Oac%2F3iyK4GgNLhLQEedmWhKVjArhhp4B%2B8ETQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3UAqWmVdsuQwiC; SameSite=None; Secure; path=/; expires=Mon, 21-Aug-23 19:04:04 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f9d3e44ce889c37-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1692561843937,"stop":1692561844237,"duration":300}},{"uid":"da6effedef6bdc74","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 20 Aug 2023 20:03:48 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=9lobKRWNTpIeJRPizCOPXZKM5LN9hNOABcAo6JKoPGb4D5P0qUDt0Qe%2FAVH89y0dXgawZM4ZRqWCy8Rj3Es27OSRNB%2BpwNFYbwa%2Ff51EWQpL%2BDIHWpWKcC0WBRMRyUB1tdzynQ%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8SoXtgbum6WJvT4BjA5G7eXAnAYc; SameSite=None; Secure; path=/; expires=Mon, 21-Aug-23 19:03:48 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '7f9d3de3adfa9c37-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1692561828371,"stop":1692561828767,"duration":396}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":602,"unknown":0,"total":607},"items":[{"uid":"f4cb5e9f04b28f99","reportUrl":"https://novasamatech.github.io/test-runner/3612//#testresult/f4cb5e9f04b28f99","status":"passed","time":{"start":1692547436040,"stop":1692547436592,"duration":552}},{"uid":"a29b53b252138a5e","reportUrl":"https://novasamatech.github.io/test-runner/3611//#testresult/a29b53b252138a5e","status":"passed","time":{"start":1692533061756,"stop":1692533062241,"duration":485}},{"uid":"faa932fe61ce4c5a","reportUrl":"https://novasamatech.github.io/test-runner/3610//#testresult/faa932fe61ce4c5a","status":"passed","time":{"start":1692518670850,"stop":1692518671210,"duration":360}},{"uid":"1488791830abc794","reportUrl":"https://novasamatech.github.io/test-runner/3609//#testresult/1488791830abc794","status":"passed","time":{"start":1692504242379,"stop":1692504243137,"duration":758}},{"uid":"56e28d397a168f1c","reportUrl":"https://novasamatech.github.io/test-runner/3608//#testresult/56e28d397a168f1c","status":"passed","time":{"start":1692490378529,"stop":1692490379275,"duration":746}},{"uid":"4b897b2d7d082e8a","reportUrl":"https://novasamatech.github.io/test-runner/3607//#testresult/4b897b2d7d082e8a","status":"passed","time":{"start":1692475443676,"stop":1692475444239,"duration":563}},{"uid":"f9d7d638d23ac270","reportUrl":"https://novasamatech.github.io/test-runner/3606//#testresult/f9d7d638d23ac270","status":"passed","time":{"start":1692461033167,"stop":1692461033697,"duration":530}},{"uid":"2e06872a71c9a3e1","reportUrl":"https://novasamatech.github.io/test-runner/3605//#testresult/2e06872a71c9a3e1","status":"passed","time":{"start":1692446654811,"stop":1692446655451,"duration":640}},{"uid":"c95b7b0a03536ecd","reportUrl":"https://novasamatech.github.io/test-runner/3604//#testresult/c95b7b0a03536ecd","status":"passed","time":{"start":1692432248923,"stop":1692432249525,"duration":602}},{"uid":"c3eb630314f32041","reportUrl":"https://novasamatech.github.io/test-runner/3603//#testresult/c3eb630314f32041","status":"passed","time":{"start":1692417835149,"stop":1692417835717,"duration":568}},{"uid":"e426b4987916d64c","reportUrl":"https://novasamatech.github.io/test-runner/3602//#testresult/e426b4987916d64c","status":"passed","time":{"start":1692403878621,"stop":1692403879289,"duration":668}},{"uid":"2fa6b3ba1065bea1","reportUrl":"https://novasamatech.github.io/test-runner/3600//#testresult/2fa6b3ba1065bea1","status":"passed","time":{"start":1692374659561,"stop":1692374660208,"duration":647}},{"uid":"2915fc68f1f30bff","reportUrl":"https://novasamatech.github.io/test-runner/3601//#testresult/2915fc68f1f30bff","status":"passed","time":{"start":1692389041633,"stop":1692389042312,"duration":679}},{"uid":"e85abc53800b80b","reportUrl":"https://novasamatech.github.io/test-runner/3599//#testresult/e85abc53800b80b","status":"passed","time":{"start":1692360296126,"stop":1692360296543,"duration":417}},{"uid":"7f058996b4992411","reportUrl":"https://novasamatech.github.io/test-runner/3598//#testresult/7f058996b4992411","status":"passed","time":{"start":1692345866688,"stop":1692345867511,"duration":823}},{"uid":"6e1f6ac2673f4ef3","reportUrl":"https://novasamatech.github.io/test-runner/3597//#testresult/6e1f6ac2673f4ef3","status":"passed","time":{"start":1692331456608,"stop":1692331457139,"duration":531}},{"uid":"c1d1a2c6046357dd","reportUrl":"https://novasamatech.github.io/test-runner/3596//#testresult/c1d1a2c6046357dd","status":"passed","time":{"start":1692317515317,"stop":1692317515869,"duration":552}},{"uid":"dc726d5fb12146f5","reportUrl":"https://novasamatech.github.io/test-runner/3594//#testresult/dc726d5fb12146f5","status":"passed","time":{"start":1692288253673,"stop":1692288254365,"duration":692}},{"uid":"4502fa657cb317e9","reportUrl":"https://novasamatech.github.io/test-runner/3595//#testresult/4502fa657cb317e9","status":"passed","time":{"start":1692302662469,"stop":1692302663079,"duration":610}},{"uid":"38b11611c3d220d3","reportUrl":"https://novasamatech.github.io/test-runner/3593//#testresult/38b11611c3d220d3","status":"passed","time":{"start":1692273913299,"stop":1692273913740,"duration":441}}]},"tags":[]},"source":"e9cec19671d65195.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}