{"uid":"70476f335e65a336","name":"test_has_new_assets[Test for Calamari]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"8edafafb0910af574e27cf9f6c595286","time":{"start":1688155595812,"stop":1688155656345,"duration":60533},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fbf96662590>\nchain = <scripts.utils.chain_model.Chain object at 0x7fbf966600a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fbf96662590>\nchain = <scripts.utils.chain_model.Chain object at 0x7fbf966600a0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"789ead17723dcba0","name":"stdout","source":"789ead17723dcba0.txt","type":"text/plain","size":1650}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az410-43"},{"name":"thread","value":"1949-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fbf966600a0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7c845055bcb4c7a3","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688155520034,"stop":1688155580795,"duration":60761}},{"uid":"847882e1f04f73d0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1688155444430,"stop":1688155504762,"duration":60332}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":268,"unknown":0,"total":272},"items":[{"uid":"c6479b9667797e43","reportUrl":"https://novasamatech.github.io/test-runner/3303//#testresult/c6479b9667797e43","status":"passed","time":{"start":1688141055346,"stop":1688141068696,"duration":13350}},{"uid":"2ee82b6fdbb46302","reportUrl":"https://novasamatech.github.io/test-runner/3302//#testresult/2ee82b6fdbb46302","status":"passed","time":{"start":1688126707688,"stop":1688126715015,"duration":7327}},{"uid":"6079c779119a6df","reportUrl":"https://novasamatech.github.io/test-runner/3301//#testresult/6079c779119a6df","status":"passed","time":{"start":1688112262635,"stop":1688112268028,"duration":5393}},{"uid":"2a97398fa28f5c5e","reportUrl":"https://novasamatech.github.io/test-runner/3300//#testresult/2a97398fa28f5c5e","status":"passed","time":{"start":1688097840662,"stop":1688097845844,"duration":5182}},{"uid":"b703c65f5c749191","reportUrl":"https://novasamatech.github.io/test-runner/3299//#testresult/b703c65f5c749191","status":"passed","time":{"start":1688084091775,"stop":1688084095430,"duration":3655}},{"uid":"6893124118855355","reportUrl":"https://novasamatech.github.io/test-runner/3298//#testresult/6893124118855355","status":"passed","time":{"start":1688069041531,"stop":1688069048193,"duration":6662}},{"uid":"2bffea3d6b3659db","reportUrl":"https://novasamatech.github.io/test-runner/3297//#testresult/2bffea3d6b3659db","status":"passed","time":{"start":1688054647656,"stop":1688054655769,"duration":8113}},{"uid":"d6f024d013de94a7","reportUrl":"https://novasamatech.github.io/test-runner/3296//#testresult/d6f024d013de94a7","status":"passed","time":{"start":1688040323109,"stop":1688040333809,"duration":10700}},{"uid":"7f22827b85d1c1c6","reportUrl":"https://novasamatech.github.io/test-runner/3295//#testresult/7f22827b85d1c1c6","status":"passed","time":{"start":1688025879667,"stop":1688025889440,"duration":9773}},{"uid":"43d36f882bb09345","reportUrl":"https://novasamatech.github.io/test-runner/3294//#testresult/43d36f882bb09345","status":"passed","time":{"start":1688011458973,"stop":1688011467547,"duration":8574}},{"uid":"3235f46b87946334","reportUrl":"https://novasamatech.github.io/test-runner/3293//#testresult/3235f46b87946334","status":"passed","time":{"start":1687997746807,"stop":1687997758803,"duration":11996}},{"uid":"ab7a65100dc87533","reportUrl":"https://novasamatech.github.io/test-runner/3292//#testresult/ab7a65100dc87533","status":"passed","time":{"start":1687982654809,"stop":1687982665185,"duration":10376}},{"uid":"4f97fd3255523b92","reportUrl":"https://novasamatech.github.io/test-runner/3291//#testresult/4f97fd3255523b92","status":"passed","time":{"start":1687968254473,"stop":1687968267235,"duration":12762}},{"uid":"3e333c256a10eedb","reportUrl":"https://novasamatech.github.io/test-runner/3290//#testresult/3e333c256a10eedb","status":"passed","time":{"start":1687953923313,"stop":1687953932511,"duration":9198}},{"uid":"bcf105689434e5be","reportUrl":"https://novasamatech.github.io/test-runner/3289//#testresult/bcf105689434e5be","status":"passed","time":{"start":1687939468971,"stop":1687939476840,"duration":7869}},{"uid":"8bdbb86865b80fdd","reportUrl":"https://novasamatech.github.io/test-runner/3288//#testresult/8bdbb86865b80fdd","status":"passed","time":{"start":1687925069584,"stop":1687925072449,"duration":2865}},{"uid":"c691ead7bb4142c3","reportUrl":"https://novasamatech.github.io/test-runner/3287//#testresult/c691ead7bb4142c3","status":"passed","time":{"start":1687911386702,"stop":1687911399056,"duration":12354}},{"uid":"dc5f0f299d6894fd","reportUrl":"https://novasamatech.github.io/test-runner/3286//#testresult/dc5f0f299d6894fd","status":"passed","time":{"start":1687896299813,"stop":1687896307913,"duration":8100}},{"uid":"307d486f76881a2","reportUrl":"https://novasamatech.github.io/test-runner/3285//#testresult/307d486f76881a2","status":"passed","time":{"start":1687881847297,"stop":1687881849963,"duration":2666}},{"uid":"bad4608c50014e1c","reportUrl":"https://novasamatech.github.io/test-runner/3284//#testresult/bad4608c50014e1c","status":"passed","time":{"start":1687867518153,"stop":1687867526703,"duration":8550}}]},"tags":[]},"source":"70476f335e65a336.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fbf966600a0>"]}