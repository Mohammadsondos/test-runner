{"uid":"c68e7a30840d4ba2","name":"test_has_new_assets[Test for DAO IPCI]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"dc86880bf1eea353867bbdf7bd9268e8","time":{"start":1699459362395,"stop":1699459363097,"duration":702},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f699e9a0fa0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f699e9a04f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f699e9a0fa0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f699e9a04f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"1e075ab7e2cf9237","name":"stdout","source":"1e075ab7e2cf9237.txt","type":"text/plain","size":711}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az568-978"},{"name":"thread","value":"2303-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f699e9a04f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"81a84f05ae9328c7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699459346662,"stop":1699459347371,"duration":709}},{"uid":"15fab88f5133f75c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699459330835,"stop":1699459331646,"duration":811}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":64,"skipped":0,"passed":395,"unknown":0,"total":459},"items":[{"uid":"2cd1121c09d6562b","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/2cd1121c09d6562b","status":"passed","time":{"start":1699444963770,"stop":1699444969717,"duration":5947}},{"uid":"62c3fc7d1fcf904","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/62c3fc7d1fcf904","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699430554627,"stop":1699430555077,"duration":450}},{"uid":"f2b7d2c77718c26f","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/f2b7d2c77718c26f","status":"passed","time":{"start":1699416165759,"stop":1699416170999,"duration":5240}},{"uid":"f9cbf24007244dc0","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/f9cbf24007244dc0","status":"passed","time":{"start":1699401792939,"stop":1699401797623,"duration":4684}},{"uid":"f55e1ab6ad0e19cd","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/f55e1ab6ad0e19cd","status":"passed","time":{"start":1699387342784,"stop":1699387349500,"duration":6716}},{"uid":"408a403cec14f997","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/408a403cec14f997","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372951365,"stop":1699372951671,"duration":306}},{"uid":"f59b3922a53448fe","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/f59b3922a53448fe","status":"passed","time":{"start":1699358554278,"stop":1699358558092,"duration":3814}},{"uid":"f83ed4a036574176","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/f83ed4a036574176","status":"passed","time":{"start":1699344184015,"stop":1699344190525,"duration":6510}},{"uid":"e5dd8b311720971","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/e5dd8b311720971","status":"passed","time":{"start":1699329722496,"stop":1699329725246,"duration":2750}},{"uid":"6384727cd106a379","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/6384727cd106a379","status":"passed","time":{"start":1699315366113,"stop":1699315369306,"duration":3193}},{"uid":"91192395930f564e","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/91192395930f564e","status":"passed","time":{"start":1699300926403,"stop":1699300929573,"duration":3170}},{"uid":"44f57a69a864c76c","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/44f57a69a864c76c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699286572996,"stop":1699286573559,"duration":563}},{"uid":"735598016f88fb63","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/735598016f88fb63","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699272155883,"stop":1699272156444,"duration":561}},{"uid":"230ccc2c47a5144a","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/230ccc2c47a5144a","status":"passed","time":{"start":1699257724502,"stop":1699257727837,"duration":3335}},{"uid":"75b8889db17705a3","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/75b8889db17705a3","status":"passed","time":{"start":1699243338351,"stop":1699243343001,"duration":4650}},{"uid":"3d18ac16be3fba60","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/3d18ac16be3fba60","status":"passed","time":{"start":1699228976462,"stop":1699228980940,"duration":4478}},{"uid":"302f80e82da3881","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/302f80e82da3881","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699214606422,"stop":1699214607877,"duration":1455}},{"uid":"fbb6a95e8f23164f","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/fbb6a95e8f23164f","status":"passed","time":{"start":1699200132323,"stop":1699200136241,"duration":3918}},{"uid":"c95d83c571e48228","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/c95d83c571e48228","status":"passed","time":{"start":1699185711172,"stop":1699185715663,"duration":4491}},{"uid":"f147a178f057952d","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/f147a178f057952d","status":"passed","time":{"start":1699171338454,"stop":1699171342227,"duration":3773}}]},"tags":[]},"source":"c68e7a30840d4ba2.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f699e9a04f0>"]}