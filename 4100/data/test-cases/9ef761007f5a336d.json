{"uid":"9ef761007f5a336d","name":"test_can_create_connection[Test for Kylin, url: wss://polkadot.kylin-node.co.uk]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3ee0d191ab7acb2fad9a82a3aa808e89","time":{"start":1699459323479,"stop":1699459323503,"duration":24},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:02:03 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:02:03 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:02:03 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Kylin', 'url': 'wss://polkadot.kylin-node.co.uk'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:02:03 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"a782b59c39727588","name":"stdout","source":"a782b59c39727588.txt","type":"text/plain","size":1500}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az413-705"},{"name":"thread","value":"2101-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"50840c983bc89644","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:01:48 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699459308203,"stop":1699459308332,"duration":129}},{"uid":"f1ff256f40a6f4e2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Wed, 08 Nov 2023 16:01:33 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699459292981,"stop":1699459293057,"duration":76}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":42,"skipped":0,"passed":418,"unknown":0,"total":460},"items":[{"uid":"47044511db71fab5","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/47044511db71fab5","status":"passed","time":{"start":1699444900584,"stop":1699444900855,"duration":271}},{"uid":"4d1926a26e9dc406","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/4d1926a26e9dc406","status":"passed","time":{"start":1699430498497,"stop":1699430498727,"duration":230}},{"uid":"a836ab8cb7b3634a","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/a836ab8cb7b3634a","status":"passed","time":{"start":1699416113956,"stop":1699416114385,"duration":429}},{"uid":"6356a99801f064e0","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/6356a99801f064e0","status":"passed","time":{"start":1699401732443,"stop":1699401732626,"duration":183}},{"uid":"f0a17f63fbc8a93e","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/f0a17f63fbc8a93e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Tue, 07 Nov 2023 20:01:58 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699387318228,"stop":1699387318274,"duration":46}},{"uid":"602bf6c5e86b1b78","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/602bf6c5e86b1b78","status":"passed","time":{"start":1699372902631,"stop":1699372902688,"duration":57}},{"uid":"951006d4adf4e1c0","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/951006d4adf4e1c0","status":"passed","time":{"start":1699358510319,"stop":1699358510411,"duration":92}},{"uid":"47c3d7d092c290b4","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/47c3d7d092c290b4","status":"passed","time":{"start":1699344090955,"stop":1699344091309,"duration":354}},{"uid":"4b71fda213c794dc","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/4b71fda213c794dc","status":"passed","time":{"start":1699329702162,"stop":1699329702408,"duration":246}},{"uid":"cbf9d11c9f0ad0d5","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/cbf9d11c9f0ad0d5","status":"passed","time":{"start":1699315341311,"stop":1699315341426,"duration":115}},{"uid":"d53f124793c88bb1","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/d53f124793c88bb1","status":"passed","time":{"start":1699300891181,"stop":1699300891350,"duration":169}},{"uid":"7972228a1cd42725","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/7972228a1cd42725","status":"passed","time":{"start":1699286512851,"stop":1699286512986,"duration":135}},{"uid":"3fedf5be95c84021","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/3fedf5be95c84021","status":"passed","time":{"start":1699272101165,"stop":1699272101295,"duration":130}},{"uid":"2b1053ce060a0e23","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/2b1053ce060a0e23","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Mon, 06 Nov 2023 08:02:29 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699257749660,"stop":1699257749848,"duration":188}},{"uid":"4f7114a5c37a970d","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/4f7114a5c37a970d","status":"passed","time":{"start":1699243303981,"stop":1699243304234,"duration":253}},{"uid":"d0d17c7f249831e6","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/d0d17c7f249831e6","status":"passed","time":{"start":1699228928703,"stop":1699228928870,"duration":167}},{"uid":"dd789d995979c22","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/dd789d995979c22","status":"passed","time":{"start":1699214497182,"stop":1699214497444,"duration":262}},{"uid":"9422b2c40d73df58","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/9422b2c40d73df58","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'date': 'Sun, 05 Nov 2023 16:02:00 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'keep-alive', 'server': 'nginx/1.18.0 (Ubuntu)'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1699200120622,"stop":1699200120849,"duration":227}},{"uid":"7c816a9edc093c3","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/7c816a9edc093c3","status":"passed","time":{"start":1699185686358,"stop":1699185686500,"duration":142}},{"uid":"9f669899ffbb94b0","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/9f669899ffbb94b0","status":"passed","time":{"start":1699171284255,"stop":1699171284349,"duration":94}}]},"tags":[]},"source":"9ef761007f5a336d.json","parameterValues":["{'url': 'wss://polkadot.kylin-node.co.uk', 'name': 'Kylin'}"]}