{"uid":"bc1bb6d13839548e","name":"test_can_create_connection[Test for Frequency, url: wss://0.rpc.frequency.xyz]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"19c26034bddffc5dd1f8d98e703505a3","time":{"start":1705349300750,"stop":1705349300750,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1705349279717,"stop":1705349284910,"duration":5193},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 143, in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 316, in read_headers\n    line = recv_line(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 133, in recv_line\n    c = recv(sock, 1)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_socket.py\", line 124, in recv\n    raise WebSocketConnectionClosedException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705349299986,"stop":1705349300749,"duration":763},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"5f44dd0fa016fd82","name":"stdout","source":"5f44dd0fa016fd82.txt","type":"text/plain","size":112}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1435-461"},{"name":"thread","value":"2132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://0.rpc.frequency.xyz', 'name': 'Frequency'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d8cffdfe205b71df","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1705349279717,"stop":1705349279717,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":715,"unknown":0,"total":733},"items":[{"uid":"1c4a3a518d3a2cf8","reportUrl":"https://novasamatech.github.io/test-runner/4518//#testresult/1c4a3a518d3a2cf8","status":"passed","time":{"start":1705334889695,"stop":1705334889695,"duration":0}},{"uid":"64c7aa78ed43241b","reportUrl":"https://novasamatech.github.io/test-runner/4517//#testresult/64c7aa78ed43241b","status":"passed","time":{"start":1705320457056,"stop":1705320457057,"duration":1}},{"uid":"2d8389e78548cde","reportUrl":"https://novasamatech.github.io/test-runner/4516//#testresult/2d8389e78548cde","status":"passed","time":{"start":1705306028417,"stop":1705306028417,"duration":0}},{"uid":"360e6f27c67317db","reportUrl":"https://novasamatech.github.io/test-runner/4515//#testresult/360e6f27c67317db","status":"passed","time":{"start":1705291648607,"stop":1705291648608,"duration":1}},{"uid":"1b0fc365385f0909","reportUrl":"https://novasamatech.github.io/test-runner/4514//#testresult/1b0fc365385f0909","status":"passed","time":{"start":1705277253115,"stop":1705277253115,"duration":0}},{"uid":"765f893423b1a13e","reportUrl":"https://novasamatech.github.io/test-runner/4513//#testresult/765f893423b1a13e","status":"passed","time":{"start":1705262866497,"stop":1705262866497,"duration":0}},{"uid":"aade56e995898e76","reportUrl":"https://novasamatech.github.io/test-runner/4512//#testresult/aade56e995898e76","status":"passed","time":{"start":1705248548893,"stop":1705248548893,"duration":0}},{"uid":"b889839c6a509177","reportUrl":"https://novasamatech.github.io/test-runner/4511//#testresult/b889839c6a509177","status":"passed","time":{"start":1705234040465,"stop":1705234040465,"duration":0}},{"uid":"79bb311f193844d4","reportUrl":"https://novasamatech.github.io/test-runner/4510//#testresult/79bb311f193844d4","status":"passed","time":{"start":1705219669354,"stop":1705219669354,"duration":0}},{"uid":"f12ded4fa5d10235","reportUrl":"https://novasamatech.github.io/test-runner/4509//#testresult/f12ded4fa5d10235","status":"passed","time":{"start":1705205216103,"stop":1705205216104,"duration":1}},{"uid":"dc5e853d237d9f50","reportUrl":"https://novasamatech.github.io/test-runner/4508//#testresult/dc5e853d237d9f50","status":"passed","time":{"start":1705190954888,"stop":1705190954889,"duration":1}},{"uid":"6d5c141560d01c2e","reportUrl":"https://novasamatech.github.io/test-runner/4507//#testresult/6d5c141560d01c2e","status":"passed","time":{"start":1705176463471,"stop":1705176463471,"duration":0}},{"uid":"7d19bcf76bbd0a98","reportUrl":"https://novasamatech.github.io/test-runner/4506//#testresult/7d19bcf76bbd0a98","status":"passed","time":{"start":1705162040727,"stop":1705162040727,"duration":0}},{"uid":"6145b6ae2ae835e9","reportUrl":"https://novasamatech.github.io/test-runner/4505//#testresult/6145b6ae2ae835e9","status":"passed","time":{"start":1705147625444,"stop":1705147625444,"duration":0}},{"uid":"e847bd98499cd7eb","reportUrl":"https://novasamatech.github.io/test-runner/4504//#testresult/e847bd98499cd7eb","status":"passed","time":{"start":1705133265153,"stop":1705133265153,"duration":0}},{"uid":"f8142acea22d26a6","reportUrl":"https://novasamatech.github.io/test-runner/4503//#testresult/f8142acea22d26a6","status":"passed","time":{"start":1705118881973,"stop":1705118881973,"duration":0}},{"uid":"d09058d9bfc39570","reportUrl":"https://novasamatech.github.io/test-runner/4502//#testresult/d09058d9bfc39570","status":"passed","time":{"start":1705104509346,"stop":1705104509346,"duration":0}},{"uid":"823ac7c3c3c09dce","reportUrl":"https://novasamatech.github.io/test-runner/4501//#testresult/823ac7c3c3c09dce","status":"passed","time":{"start":1705090150703,"stop":1705090150703,"duration":0}},{"uid":"82e2641fa8c4c134","reportUrl":"https://novasamatech.github.io/test-runner/4500//#testresult/82e2641fa8c4c134","status":"passed","time":{"start":1705075686569,"stop":1705075686569,"duration":0}},{"uid":"2f10f5a9850366bb","reportUrl":"https://novasamatech.github.io/test-runner/4499//#testresult/2f10f5a9850366bb","status":"passed","time":{"start":1705061379606,"stop":1705061379606,"duration":0}}]},"tags":[]},"source":"bc1bb6d13839548e.json","parameterValues":["{'url': 'wss://0.rpc.frequency.xyz', 'name': 'Frequency'}"]}