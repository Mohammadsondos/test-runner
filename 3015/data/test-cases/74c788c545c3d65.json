{"uid":"74c788c545c3d65","name":"test_can_create_connection[Test for Tanganika, url: wss://tanganika.datahighway.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82948670f054b2cd664c9319f41b4e5e","time":{"start":1684181071191,"stop":1684181071486,"duration":295},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Tanganika', 'url': 'wss://tanganika.datahighway.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"ad70c267d4940d7","name":"stdout","source":"ad70c267d4940d7.txt","type":"text/plain","size":242}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az613-422"},{"name":"thread","value":"1876-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c80ff4acf8c1c1ab","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684181060708,"stop":1684181061012,"duration":304}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":27,"skipped":0,"passed":84,"unknown":0,"total":111},"items":[{"uid":"9a1929a5abd88dac","reportUrl":"https://nova-wallet.github.io/test-runner/3013//#testresult/9a1929a5abd88dac","status":"passed","time":{"start":1684152320156,"stop":1684152320726,"duration":570}},{"uid":"c0057a8bd06374b4","reportUrl":"https://nova-wallet.github.io/test-runner/3012//#testresult/c0057a8bd06374b4","status":"passed","time":{"start":1684137884734,"stop":1684137885210,"duration":476}},{"uid":"e0d4a2c528b56e92","reportUrl":"https://nova-wallet.github.io/test-runner/3011//#testresult/e0d4a2c528b56e92","status":"passed","time":{"start":1684123463142,"stop":1684123463579,"duration":437}},{"uid":"54fc64bed66f04ba","reportUrl":"https://nova-wallet.github.io/test-runner/3010//#testresult/54fc64bed66f04ba","status":"passed","time":{"start":1684109635397,"stop":1684109635821,"duration":424}},{"uid":"2450e66a2e1813fa","reportUrl":"https://nova-wallet.github.io/test-runner/3009//#testresult/2450e66a2e1813fa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684094746080,"stop":1684094746510,"duration":430}},{"uid":"14384930211ea5e9","reportUrl":"https://nova-wallet.github.io/test-runner/3008//#testresult/14384930211ea5e9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684080310044,"stop":1684080310599,"duration":555}},{"uid":"f26f5845d88ea588","reportUrl":"https://nova-wallet.github.io/test-runner/3005//#testresult/f26f5845d88ea588","status":"passed","time":{"start":1684037089010,"stop":1684037089643,"duration":633}},{"uid":"b398df4e7cd12ae8","reportUrl":"https://nova-wallet.github.io/test-runner/3003//#testresult/b398df4e7cd12ae8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684008289382,"stop":1684008289878,"duration":496}},{"uid":"e66b9939764e54ea","reportUrl":"https://nova-wallet.github.io/test-runner/3002//#testresult/e66b9939764e54ea","status":"passed","time":{"start":1683993856565,"stop":1683993856974,"duration":409}},{"uid":"dd340bab12d1a849","reportUrl":"https://nova-wallet.github.io/test-runner/3001//#testresult/dd340bab12d1a849","status":"passed","time":{"start":1683979494551,"stop":1683979495204,"duration":653}},{"uid":"a3aed04199a3b7a4","reportUrl":"https://nova-wallet.github.io/test-runner/3000//#testresult/a3aed04199a3b7a4","status":"passed","time":{"start":1683965070210,"stop":1683965070793,"duration":583}},{"uid":"34b51da43636ef5b","reportUrl":"https://nova-wallet.github.io/test-runner/2999//#testresult/34b51da43636ef5b","status":"passed","time":{"start":1683950657727,"stop":1683950658305,"duration":578}},{"uid":"98d7541986a91872","reportUrl":"https://nova-wallet.github.io/test-runner/2997//#testresult/98d7541986a91872","status":"passed","time":{"start":1683921860434,"stop":1683921860827,"duration":393}},{"uid":"f124b875442e2292","reportUrl":"https://nova-wallet.github.io/test-runner/2996//#testresult/f124b875442e2292","status":"passed","time":{"start":1683907479633,"stop":1683907480314,"duration":681}},{"uid":"146a30370afb7983","reportUrl":"https://nova-wallet.github.io/test-runner/2995//#testresult/146a30370afb7983","status":"passed","time":{"start":1683893211715,"stop":1683893212428,"duration":713}},{"uid":"b18193129c2026c8","reportUrl":"https://nova-wallet.github.io/test-runner/2994//#testresult/b18193129c2026c8","status":"passed","time":{"start":1683878687312,"stop":1683878687904,"duration":592}},{"uid":"a7036f63a30febbe","reportUrl":"https://nova-wallet.github.io/test-runner/2991//#testresult/a7036f63a30febbe","status":"passed","time":{"start":1683835478758,"stop":1683835479468,"duration":710}},{"uid":"ae7ae12c34a179f9","reportUrl":"https://nova-wallet.github.io/test-runner/2990//#testresult/ae7ae12c34a179f9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683821134709,"stop":1683821135142,"duration":433}},{"uid":"9994c879f28d8559","reportUrl":"https://nova-wallet.github.io/test-runner/2989//#testresult/9994c879f28d8559","status":"passed","time":{"start":1683806770263,"stop":1683806770849,"duration":586}},{"uid":"e751ede5d941b53e","reportUrl":"https://nova-wallet.github.io/test-runner/2988//#testresult/e751ede5d941b53e","status":"passed","time":{"start":1683792296421,"stop":1683792296852,"duration":431}}]},"tags":[]},"source":"74c788c545c3d65.json","parameterValues":["{'url': 'wss://tanganika.datahighway.com', 'name': 'Tanganika'}"]}