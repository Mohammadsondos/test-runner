{"uid":"399f6b6097d12f2c","name":"test_precision[Test for Bit.Country Pioneer]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"aaf8da9945b1421f2d266ddb6e2cbda3","time":{"start":1683980232511,"stop":1683980588201,"duration":355690},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f22306bd450>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2230641900>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:69: in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:800: in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f22306bd450>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2230641900>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:69: in get_properties\n    symbol = substrate.properties[\"tokenSymbol\"]\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:800: in properties\n    self.__properties = self.rpc_request(\"system_properties\", []).get('result')\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n../../../../.local/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"b82e9a5192e80168","name":"stdout","source":"b82e9a5192e80168.txt","type":"text/plain","size":210}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az203-773"},{"name":"thread","value":"1862-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f2230641900>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e5db2830a466bf5a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1683980089230,"stop":1683980222263,"duration":133033}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":96,"unknown":0,"total":98},"items":[{"uid":"c7793154a227d848","reportUrl":"https://nova-wallet.github.io/test-runner/3000//#testresult/c7793154a227d848","status":"passed","time":{"start":1683965780547,"stop":1683965792574,"duration":12027}},{"uid":"26dd971489183dcd","reportUrl":"https://nova-wallet.github.io/test-runner/2999//#testresult/26dd971489183dcd","status":"passed","time":{"start":1683951117229,"stop":1683951127192,"duration":9963}},{"uid":"ce00b055ee017b38","reportUrl":"https://nova-wallet.github.io/test-runner/2996//#testresult/ce00b055ee017b38","status":"passed","time":{"start":1683907987342,"stop":1683907999327,"duration":11985}},{"uid":"4c6960af4b696aa7","reportUrl":"https://nova-wallet.github.io/test-runner/2995//#testresult/4c6960af4b696aa7","status":"passed","time":{"start":1683893726764,"stop":1683893737907,"duration":11143}},{"uid":"d37d71f61c09193e","reportUrl":"https://nova-wallet.github.io/test-runner/2994//#testresult/d37d71f61c09193e","status":"broken","statusDetails":"ssl.SSLError: [SSL: BAD_LENGTH] bad length (_ssl.c:2396)","time":{"start":1683880051909,"stop":1683880298663,"duration":246754}},{"uid":"2868a3bb77e3e2c","reportUrl":"https://nova-wallet.github.io/test-runner/2991//#testresult/2868a3bb77e3e2c","status":"passed","time":{"start":1683836077184,"stop":1683836089468,"duration":12284}},{"uid":"84a798f4f3adeff9","reportUrl":"https://nova-wallet.github.io/test-runner/2990//#testresult/84a798f4f3adeff9","status":"passed","time":{"start":1683821675890,"stop":1683821687811,"duration":11921}},{"uid":"fd0591f9433d6841","reportUrl":"https://nova-wallet.github.io/test-runner/2989//#testresult/fd0591f9433d6841","status":"passed","time":{"start":1683808030915,"stop":1683808042238,"duration":11323}},{"uid":"241f0aac9cb8604e","reportUrl":"https://nova-wallet.github.io/test-runner/2988//#testresult/241f0aac9cb8604e","status":"passed","time":{"start":1683792732114,"stop":1683792745163,"duration":13049}},{"uid":"b2b2a8f3f492cf8","reportUrl":"https://nova-wallet.github.io/test-runner/2987//#testresult/b2b2a8f3f492cf8","status":"passed","time":{"start":1683778555256,"stop":1683778567482,"duration":12226}},{"uid":"4d463ab06fd4373b","reportUrl":"https://nova-wallet.github.io/test-runner/2985//#testresult/4d463ab06fd4373b","status":"passed","time":{"start":1683749833668,"stop":1683749846315,"duration":12647}},{"uid":"98822fc10715f522","reportUrl":"https://nova-wallet.github.io/test-runner/2983//#testresult/98822fc10715f522","status":"passed","time":{"start":1683720890436,"stop":1683720902070,"duration":11634}},{"uid":"34f76479de7183a5","reportUrl":"https://nova-wallet.github.io/test-runner/2982//#testresult/34f76479de7183a5","status":"passed","time":{"start":1683706521432,"stop":1683706535500,"duration":14068}},{"uid":"d4aa45722afb1871","reportUrl":"https://nova-wallet.github.io/test-runner/2981//#testresult/d4aa45722afb1871","status":"passed","time":{"start":1683692101486,"stop":1683692113730,"duration":12244}},{"uid":"e268e24f83ef2f47","reportUrl":"https://nova-wallet.github.io/test-runner/2980//#testresult/e268e24f83ef2f47","status":"passed","time":{"start":1683678316236,"stop":1683678329480,"duration":13244}},{"uid":"b3bc9122035078fe","reportUrl":"https://nova-wallet.github.io/test-runner/2979//#testresult/b3bc9122035078fe","status":"passed","time":{"start":1683663310993,"stop":1683663322868,"duration":11875}},{"uid":"fdf051cc91c09673","reportUrl":"https://nova-wallet.github.io/test-runner/2978//#testresult/fdf051cc91c09673","status":"passed","time":{"start":1683648915221,"stop":1683648927530,"duration":12309}},{"uid":"9c556f782d4f39db","reportUrl":"https://nova-wallet.github.io/test-runner/2976//#testresult/9c556f782d4f39db","status":"passed","time":{"start":1683620020376,"stop":1683620031172,"duration":10796}},{"uid":"9c52296888fb1ab0","reportUrl":"https://nova-wallet.github.io/test-runner/2975//#testresult/9c52296888fb1ab0","status":"passed","time":{"start":1683605556475,"stop":1683605566960,"duration":10485}},{"uid":"3e677e0083040218","reportUrl":"https://nova-wallet.github.io/test-runner/2972//#testresult/3e677e0083040218","status":"passed","time":{"start":1683562531325,"stop":1683562543289,"duration":11964}}]},"tags":[]},"source":"399f6b6097d12f2c.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f2230641900>"]}