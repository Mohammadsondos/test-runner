{"uid":"4f85a2925a5aaa43","name":"test_can_create_connection[Test for Hashed Network, url: wss://c2.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c89828a53a64d5be0404b3846fb6bd54","time":{"start":1689523485076,"stop":1689523485306,"duration":230},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:45 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:45 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:45 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:45 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"107dc4b5aa2c0187","name":"stdout","source":"107dc4b5aa2c0187.txt","type":"text/plain","size":1098}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az575-955"},{"name":"thread","value":"1931-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d1198d38535f8c26","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:29 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689523469735,"stop":1689523469971,"duration":236}},{"uid":"d04e1a63487ee165","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 16:04:14 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689523454193,"stop":1689523454563,"duration":370}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":111,"skipped":0,"passed":293,"unknown":0,"total":404},"items":[{"uid":"c70c238e16c02d25","reportUrl":"https://novasamatech.github.io/test-runner/3398//#testresult/c70c238e16c02d25","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 12:05:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689509131472,"stop":1689509131517,"duration":45}},{"uid":"e3a4ea9f65d6517f","reportUrl":"https://novasamatech.github.io/test-runner/3397//#testresult/e3a4ea9f65d6517f","status":"passed","time":{"start":1689494644485,"stop":1689494644548,"duration":63}},{"uid":"94abc39ff20469ab","reportUrl":"https://novasamatech.github.io/test-runner/3396//#testresult/94abc39ff20469ab","status":"passed","time":{"start":1689480240758,"stop":1689480240816,"duration":58}},{"uid":"90d5e3dd56f6b9c2","reportUrl":"https://novasamatech.github.io/test-runner/3395//#testresult/90d5e3dd56f6b9c2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sun, 16 Jul 2023 00:18:31 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689466711041,"stop":1689466711252,"duration":211}},{"uid":"937a8015a1ef1cfc","reportUrl":"https://novasamatech.github.io/test-runner/3394//#testresult/937a8015a1ef1cfc","status":"passed","time":{"start":1689451481048,"stop":1689451481345,"duration":297}},{"uid":"1078657f9e5e0f51","reportUrl":"https://novasamatech.github.io/test-runner/3393//#testresult/1078657f9e5e0f51","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Sat, 15 Jul 2023 16:04:40 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689437080392,"stop":1689437080417,"duration":25}},{"uid":"4b4bde9713a5e185","reportUrl":"https://novasamatech.github.io/test-runner/3392//#testresult/4b4bde9713a5e185","status":"passed","time":{"start":1689422698122,"stop":1689422698352,"duration":230}},{"uid":"9866f0dcec9059a0","reportUrl":"https://novasamatech.github.io/test-runner/3391//#testresult/9866f0dcec9059a0","status":"passed","time":{"start":1689408247854,"stop":1689408248257,"duration":403}},{"uid":"1b65bbdc7d5e9a34","reportUrl":"https://novasamatech.github.io/test-runner/3390//#testresult/1b65bbdc7d5e9a34","status":"passed","time":{"start":1689393844910,"stop":1689393845097,"duration":187}},{"uid":"c0b9b30b2be69550","reportUrl":"https://novasamatech.github.io/test-runner/3389//#testresult/c0b9b30b2be69550","status":"passed","time":{"start":1689380137150,"stop":1689380137437,"duration":287}},{"uid":"e38f92f05586c8b","reportUrl":"https://novasamatech.github.io/test-runner/3388//#testresult/e38f92f05586c8b","status":"passed","time":{"start":1689365049953,"stop":1689365050365,"duration":412}},{"uid":"b10a971302e7f18c","reportUrl":"https://novasamatech.github.io/test-runner/3387//#testresult/b10a971302e7f18c","status":"passed","time":{"start":1689350662486,"stop":1689350662576,"duration":90}},{"uid":"a3e85ed8e268bf31","reportUrl":"https://novasamatech.github.io/test-runner/3386//#testresult/a3e85ed8e268bf31","status":"passed","time":{"start":1689336319670,"stop":1689336319757,"duration":87}},{"uid":"bc59443e33e7e1a7","reportUrl":"https://novasamatech.github.io/test-runner/3385//#testresult/bc59443e33e7e1a7","status":"passed","time":{"start":1689321871529,"stop":1689321871836,"duration":307}},{"uid":"17823708e4c7095a","reportUrl":"https://novasamatech.github.io/test-runner/3384//#testresult/17823708e4c7095a","status":"passed","time":{"start":1689307460572,"stop":1689307460906,"duration":334}},{"uid":"900f29f5674559d8","reportUrl":"https://novasamatech.github.io/test-runner/3383//#testresult/900f29f5674559d8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Fri, 14 Jul 2023 00:16:21 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689293781060,"stop":1689293781111,"duration":51}},{"uid":"8dd683f0fcb31684","reportUrl":"https://novasamatech.github.io/test-runner/3382//#testresult/8dd683f0fcb31684","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 13 Jul 2023 20:04:41 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689278681686,"stop":1689278681907,"duration":221}},{"uid":"cf01740c4ba0f991","reportUrl":"https://novasamatech.github.io/test-runner/3381//#testresult/cf01740c4ba0f991","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 13 Jul 2023 16:04:40 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689264280838,"stop":1689264280909,"duration":71}},{"uid":"b4937ea4da11a5df","reportUrl":"https://novasamatech.github.io/test-runner/3380//#testresult/b4937ea4da11a5df","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 13 Jul 2023 12:06:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1689249978488,"stop":1689249978676,"duration":188}},{"uid":"d29a1d8681e1646a","reportUrl":"https://novasamatech.github.io/test-runner/3379//#testresult/d29a1d8681e1646a","status":"passed","time":{"start":1689235507876,"stop":1689235508140,"duration":264}}]},"tags":[]},"source":"4f85a2925a5aaa43.json","parameterValues":["{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"]}