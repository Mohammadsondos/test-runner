{"uid":"f79c63134ea1ecf3","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1694001776266,"stop":1694001776505,"duration":239},"status":"broken","statusMessage":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLEOFError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n.venv/lib/python3.10/site-packages/websocket/_http.py:135: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:275: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n.venv/lib/python3.10/site-packages/websocket/_http.py:251: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.10/ssl.py:513: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.10/ssl.py:1071: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)\n\n/usr/lib/python3.10/ssl.py:1342: SSLEOFError","steps":[],"attachments":[{"uid":"3d0eaed552949206","name":"stdout","source":"3d0eaed552949206.txt","type":"text/plain","size":814}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1230-353"},{"name":"thread","value":"2080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"26a3c784f11219b3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Wed, 06 Sep 2023 12:02:41 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1694001760725,"stop":1694001761091,"duration":366}},{"uid":"1499a82c64e70c71","status":"broken","statusDetails":"ssl.SSLEOFError: [SSL: UNEXPECTED_EOF_WHILE_READING] EOF occurred in violation of protocol (_ssl.c:1007)","time":{"start":1694001745219,"stop":1694001745533,"duration":314}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":77,"unknown":0,"total":79},"items":[{"uid":"5fa2b157733b21c3","reportUrl":"https://novasamatech.github.io/test-runner/3717//#testresult/5fa2b157733b21c3","status":"passed","time":{"start":1693987332319,"stop":1693987332980,"duration":661}},{"uid":"2813b174dbd84644","reportUrl":"https://novasamatech.github.io/test-runner/3716//#testresult/2813b174dbd84644","status":"passed","time":{"start":1693972923159,"stop":1693972923708,"duration":549}},{"uid":"2c5f260dfaf9f33c","reportUrl":"https://novasamatech.github.io/test-runner/3715//#testresult/2c5f260dfaf9f33c","status":"passed","time":{"start":1693958593764,"stop":1693958594316,"duration":552}},{"uid":"525320a7b747b24b","reportUrl":"https://novasamatech.github.io/test-runner/3714//#testresult/525320a7b747b24b","status":"passed","time":{"start":1693944132741,"stop":1693944133242,"duration":501}},{"uid":"18b705bb4e8a7e7f","reportUrl":"https://novasamatech.github.io/test-runner/3713//#testresult/18b705bb4e8a7e7f","status":"passed","time":{"start":1693929773100,"stop":1693929773479,"duration":379}},{"uid":"b6b209eab56af1f0","reportUrl":"https://novasamatech.github.io/test-runner/3712//#testresult/b6b209eab56af1f0","status":"passed","time":{"start":1693915790022,"stop":1693915790638,"duration":616}},{"uid":"c46e5e20e833aa24","reportUrl":"https://novasamatech.github.io/test-runner/3711//#testresult/c46e5e20e833aa24","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error -+-+- {'server': 'nginx/1.18.0 (Ubuntu)', 'date': 'Tue, 05 Sep 2023 08:03:33 GMT', 'content-type': 'text/html', 'content-length': '186', 'connection': 'close'} -+-+- b'<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1693901012628,"stop":1693901013125,"duration":497}},{"uid":"ec30931f86474273","reportUrl":"https://novasamatech.github.io/test-runner/3709//#testresult/ec30931f86474273","status":"passed","time":{"start":1693872164949,"stop":1693872165639,"duration":690}},{"uid":"f275040ea30c06c1","reportUrl":"https://novasamatech.github.io/test-runner/3708//#testresult/f275040ea30c06c1","status":"passed","time":{"start":1693857715099,"stop":1693857715629,"duration":530}},{"uid":"e92ffe11d74d01be","reportUrl":"https://novasamatech.github.io/test-runner/3707//#testresult/e92ffe11d74d01be","status":"passed","time":{"start":1693843337505,"stop":1693843338008,"duration":503}},{"uid":"deef15a7637cb8f5","reportUrl":"https://novasamatech.github.io/test-runner/3706//#testresult/deef15a7637cb8f5","status":"passed","time":{"start":1693828931603,"stop":1693828932200,"duration":597}},{"uid":"640f8753642dcde2","reportUrl":"https://novasamatech.github.io/test-runner/3705//#testresult/640f8753642dcde2","status":"passed","time":{"start":1693814570898,"stop":1693814571559,"duration":661}},{"uid":"677259cc9e5e4cd9","reportUrl":"https://novasamatech.github.io/test-runner/3704//#testresult/677259cc9e5e4cd9","status":"passed","time":{"start":1693800100945,"stop":1693800101642,"duration":697}},{"uid":"6c079f2b6fbe6687","reportUrl":"https://novasamatech.github.io/test-runner/3703//#testresult/6c079f2b6fbe6687","status":"passed","time":{"start":1693785762799,"stop":1693785763489,"duration":690}},{"uid":"e586a6fed7c5aabf","reportUrl":"https://novasamatech.github.io/test-runner/3702//#testresult/e586a6fed7c5aabf","status":"passed","time":{"start":1693771350987,"stop":1693771351634,"duration":647}},{"uid":"8934eb809e58ca6a","reportUrl":"https://novasamatech.github.io/test-runner/3701//#testresult/8934eb809e58ca6a","status":"passed","time":{"start":1693756914244,"stop":1693756915073,"duration":829}},{"uid":"3e85aef60f0e3818","reportUrl":"https://novasamatech.github.io/test-runner/3700//#testresult/3e85aef60f0e3818","status":"passed","time":{"start":1693742536931,"stop":1693742537604,"duration":673}},{"uid":"9857d84c08802bca","reportUrl":"https://novasamatech.github.io/test-runner/3699//#testresult/9857d84c08802bca","status":"passed","time":{"start":1693728128871,"stop":1693728129263,"duration":392}},{"uid":"cef124930e65aee6","reportUrl":"https://novasamatech.github.io/test-runner/3698//#testresult/cef124930e65aee6","status":"passed","time":{"start":1693713720899,"stop":1693713721482,"duration":583}},{"uid":"693ea8bc738026f0","reportUrl":"https://novasamatech.github.io/test-runner/3697//#testresult/693ea8bc738026f0","status":"passed","time":{"start":1693699351006,"stop":1693699351565,"duration":559}}]},"tags":[]},"source":"f79c63134ea1ecf3.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}