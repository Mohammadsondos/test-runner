{"uid":"93538d0bb6044e64","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc-1.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"1e9e7a74f12b7ce492708745e5aab6c0","time":{"start":1688933092204,"stop":1688933102558,"duration":10354},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 20:05:02 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-1.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 20:05:02 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 20:05:02 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-1.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 20:05:02 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"556ebf20cf695f93","name":"stdout","source":"556ebf20cf695f93.txt","type":"text/plain","size":1293}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az571-97"},{"name":"thread","value":"1953-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc-1.aca-api.network', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4b5deebb84b95f6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 20:04:37 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1688933066752,"stop":1688933077107,"duration":10355}},{"uid":"a02a6ae2dcb3421d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 20:04:11 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1688933041202,"stop":1688933051566,"duration":10364}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":359,"unknown":0,"total":363},"items":[{"uid":"4546085a2efb6b85","reportUrl":"https://novasamatech.github.io/test-runner/3357//#testresult/4546085a2efb6b85","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 16:05:01 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1688918691381,"stop":1688918701451,"duration":10070}},{"uid":"53f3aa3da07dcdce","reportUrl":"https://novasamatech.github.io/test-runner/3355//#testresult/53f3aa3da07dcdce","status":"passed","time":{"start":1688889846280,"stop":1688889846571,"duration":291}},{"uid":"23649cd107ba9a60","reportUrl":"https://novasamatech.github.io/test-runner/3356//#testresult/23649cd107ba9a60","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'server': 'awselb/2.0', 'date': 'Sun, 09 Jul 2023 12:05:57 GMT', 'content-type': 'text/html', 'content-length': '132', 'connection': 'keep-alive'} -+-+- b'<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1688904347121,"stop":1688904357372,"duration":10251}},{"uid":"3ecef0140b7c88d7","reportUrl":"https://novasamatech.github.io/test-runner/3354//#testresult/3ecef0140b7c88d7","status":"passed","time":{"start":1688875458255,"stop":1688875458671,"duration":416}},{"uid":"15164d00d0f5a866","reportUrl":"https://novasamatech.github.io/test-runner/3353//#testresult/15164d00d0f5a866","status":"passed","time":{"start":1688861855658,"stop":1688861855747,"duration":89}},{"uid":"6b9b5b222447c51c","reportUrl":"https://novasamatech.github.io/test-runner/3352//#testresult/6b9b5b222447c51c","status":"passed","time":{"start":1688846637478,"stop":1688846637600,"duration":122}},{"uid":"567085862c4a184b","reportUrl":"https://novasamatech.github.io/test-runner/3351//#testresult/567085862c4a184b","status":"passed","time":{"start":1688832256340,"stop":1688832256459,"duration":119}},{"uid":"d877390b260eb63b","reportUrl":"https://novasamatech.github.io/test-runner/3349//#testresult/d877390b260eb63b","status":"passed","time":{"start":1688803455703,"stop":1688803456054,"duration":351}},{"uid":"1791bc104fff79e5","reportUrl":"https://novasamatech.github.io/test-runner/3350//#testresult/1791bc104fff79e5","status":"passed","time":{"start":1688817906843,"stop":1688817906936,"duration":93}},{"uid":"c88ecfb650a9a088","reportUrl":"https://novasamatech.github.io/test-runner/3348//#testresult/c88ecfb650a9a088","status":"passed","time":{"start":1688789046007,"stop":1688789046098,"duration":91}},{"uid":"7d259e4a062ab990","reportUrl":"https://novasamatech.github.io/test-runner/3347//#testresult/7d259e4a062ab990","status":"passed","time":{"start":1688775306151,"stop":1688775306272,"duration":121}},{"uid":"f483cc8a2748a35b","reportUrl":"https://novasamatech.github.io/test-runner/3346//#testresult/f483cc8a2748a35b","status":"passed","time":{"start":1688760243257,"stop":1688760243372,"duration":115}},{"uid":"7bda0efb628d7dbc","reportUrl":"https://novasamatech.github.io/test-runner/3345//#testresult/7bda0efb628d7dbc","status":"passed","time":{"start":1688745856194,"stop":1688745856444,"duration":250}},{"uid":"cfcb77fc689d9dc5","reportUrl":"https://novasamatech.github.io/test-runner/3344//#testresult/cfcb77fc689d9dc5","status":"passed","time":{"start":1688731527647,"stop":1688731528150,"duration":503}},{"uid":"c0566921551e84f1","reportUrl":"https://novasamatech.github.io/test-runner/3343//#testresult/c0566921551e84f1","status":"passed","time":{"start":1688717082753,"stop":1688717083158,"duration":405}},{"uid":"4a10f78aa51210ba","reportUrl":"https://novasamatech.github.io/test-runner/3342//#testresult/4a10f78aa51210ba","status":"passed","time":{"start":1688702659204,"stop":1688702659974,"duration":770}},{"uid":"a47509bfd6088227","reportUrl":"https://novasamatech.github.io/test-runner/3341//#testresult/a47509bfd6088227","status":"passed","time":{"start":1688688965478,"stop":1688688965857,"duration":379}},{"uid":"6d3cc290de696ac7","reportUrl":"https://novasamatech.github.io/test-runner/3340//#testresult/6d3cc290de696ac7","status":"passed","time":{"start":1688673856134,"stop":1688673856568,"duration":434}},{"uid":"95102a9cedb7e1b1","reportUrl":"https://novasamatech.github.io/test-runner/3339//#testresult/95102a9cedb7e1b1","status":"passed","time":{"start":1688659481097,"stop":1688659481411,"duration":314}},{"uid":"8afa5d288e40c257","reportUrl":"https://novasamatech.github.io/test-runner/3338//#testresult/8afa5d288e40c257","status":"passed","time":{"start":1688645144472,"stop":1688645144717,"duration":245}}]},"tags":[]},"source":"93538d0bb6044e64.json","parameterValues":["{'url': 'wss://karura-rpc-1.aca-api.network', 'name': 'Karura'}"]}