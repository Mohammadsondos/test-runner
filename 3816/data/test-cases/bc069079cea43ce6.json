{"uid":"bc069079cea43ce6","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1695398594898,"stop":1695398595552,"duration":654},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f6e79880940>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6e799e9d20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f6e79880940>\nchain = <scripts.utils.chain_model.Chain object at 0x7f6e799e9d20>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"d3f86299a462b75b","name":"stdout","source":"d3f86299a462b75b.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az563-422"},{"name":"thread","value":"2050-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f6e799e9d20>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5b45ed9fc756ada7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695398579179,"stop":1695398579865,"duration":686}},{"uid":"e1a7b6c84784f1e8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695398563506,"stop":1695398564136,"duration":630}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":157,"unknown":0,"total":175},"items":[{"uid":"e98679105b7d395b","reportUrl":"https://novasamatech.github.io/test-runner/3815//#testresult/e98679105b7d395b","status":"passed","time":{"start":1695384147502,"stop":1695384153203,"duration":5701}},{"uid":"2e698e4435753217","reportUrl":"https://novasamatech.github.io/test-runner/3814//#testresult/2e698e4435753217","status":"passed","time":{"start":1695369798739,"stop":1695369803774,"duration":5035}},{"uid":"ed9d46c1360792d7","reportUrl":"https://novasamatech.github.io/test-runner/3813//#testresult/ed9d46c1360792d7","status":"passed","time":{"start":1695355359423,"stop":1695355362682,"duration":3259}},{"uid":"91b82b36cb48e2ae","reportUrl":"https://novasamatech.github.io/test-runner/3812//#testresult/91b82b36cb48e2ae","status":"passed","time":{"start":1695341026631,"stop":1695341031392,"duration":4761}},{"uid":"99fcec48a8f4d5dc","reportUrl":"https://novasamatech.github.io/test-runner/3810//#testresult/99fcec48a8f4d5dc","status":"passed","time":{"start":1695312180309,"stop":1695312183092,"duration":2783}},{"uid":"d699484c04e0cae6","reportUrl":"https://novasamatech.github.io/test-runner/3809//#testresult/d699484c04e0cae6","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695297796576,"stop":1695297797410,"duration":834}},{"uid":"de7f700a20085895","reportUrl":"https://novasamatech.github.io/test-runner/3808//#testresult/de7f700a20085895","status":"passed","time":{"start":1695283367464,"stop":1695283371663,"duration":4199}},{"uid":"44b991bedb231033","reportUrl":"https://novasamatech.github.io/test-runner/3807//#testresult/44b991bedb231033","status":"passed","time":{"start":1695268947654,"stop":1695268950410,"duration":2756}},{"uid":"7400d581343fbd07","reportUrl":"https://novasamatech.github.io/test-runner/3806//#testresult/7400d581343fbd07","status":"passed","time":{"start":1695254635240,"stop":1695254638255,"duration":3015}},{"uid":"2ce70c85069950c4","reportUrl":"https://novasamatech.github.io/test-runner/3805//#testresult/2ce70c85069950c4","status":"passed","time":{"start":1695240152740,"stop":1695240156862,"duration":4122}},{"uid":"3bed19d4ebd33ad1","reportUrl":"https://novasamatech.github.io/test-runner/3804//#testresult/3bed19d4ebd33ad1","status":"passed","time":{"start":1695225755585,"stop":1695225757508,"duration":1923}},{"uid":"335a0a7239f236f7","reportUrl":"https://novasamatech.github.io/test-runner/3803//#testresult/335a0a7239f236f7","status":"passed","time":{"start":1695211338317,"stop":1695211339815,"duration":1498}},{"uid":"ff36714a9844d143","reportUrl":"https://novasamatech.github.io/test-runner/3802//#testresult/ff36714a9844d143","status":"passed","time":{"start":1695196951117,"stop":1695196956777,"duration":5660}},{"uid":"28a3ab2b12d649ff","reportUrl":"https://novasamatech.github.io/test-runner/3801//#testresult/28a3ab2b12d649ff","status":"passed","time":{"start":1695182549965,"stop":1695182552428,"duration":2463}},{"uid":"737c3a3eefabbbe2","reportUrl":"https://novasamatech.github.io/test-runner/3800//#testresult/737c3a3eefabbbe2","status":"passed","time":{"start":1695168219100,"stop":1695168222895,"duration":3795}},{"uid":"228b667fcc4b6fbd","reportUrl":"https://novasamatech.github.io/test-runner/3799//#testresult/228b667fcc4b6fbd","status":"passed","time":{"start":1695153798295,"stop":1695153801665,"duration":3370}},{"uid":"d983dcb199d4108a","reportUrl":"https://novasamatech.github.io/test-runner/3798//#testresult/d983dcb199d4108a","status":"passed","time":{"start":1695139359728,"stop":1695139363332,"duration":3604}},{"uid":"3727d812438bb39b","reportUrl":"https://novasamatech.github.io/test-runner/3797//#testresult/3727d812438bb39b","status":"passed","time":{"start":1695124942513,"stop":1695124943670,"duration":1157}},{"uid":"c3e7c871019ed0ca","reportUrl":"https://novasamatech.github.io/test-runner/3796//#testresult/c3e7c871019ed0ca","status":"passed","time":{"start":1695110553983,"stop":1695110557234,"duration":3251}},{"uid":"c59b8015b9f541d3","reportUrl":"https://novasamatech.github.io/test-runner/3795//#testresult/c59b8015b9f541d3","status":"passed","time":{"start":1695096137901,"stop":1695096140281,"duration":2380}}]},"tags":[]},"source":"bc069079cea43ce6.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f6e799e9d20>"]}