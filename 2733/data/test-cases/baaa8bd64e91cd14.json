{"uid":"baaa8bd64e91cd14","name":"test_can_create_connection[Test for Hashed Network, url: wss://c1.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82d36aa15e8a5bcf4ff7d8702aa21bfe","time":{"start":1680206688959,"stop":1680206689011,"duration":52},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"1a30467c71ced4b4","name":"stdout","source":"1a30467c71ced4b4.txt","type":"text/plain","size":226}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az180-857"},{"name":"thread","value":"1768-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"363d787436238fee","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680206678785,"stop":1680206678846,"duration":61}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":32,"unknown":0,"total":41},"items":[{"uid":"f98c5a327368f2b5","reportUrl":"https://nova-wallet.github.io/test-runner/2732//#testresult/f98c5a327368f2b5","status":"passed","time":{"start":1680192263606,"stop":1680192263794,"duration":188}},{"uid":"5cbb3575b994f882","reportUrl":"https://nova-wallet.github.io/test-runner/2731//#testresult/5cbb3575b994f882","status":"passed","time":{"start":1680177982042,"stop":1680177982254,"duration":212}},{"uid":"3f6f3cdbdd706278","reportUrl":"https://nova-wallet.github.io/test-runner/2730//#testresult/3f6f3cdbdd706278","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680163489434,"stop":1680163489487,"duration":53}},{"uid":"a790ff7d61648ba7","reportUrl":"https://nova-wallet.github.io/test-runner/2729//#testresult/a790ff7d61648ba7","status":"passed","time":{"start":1680149079331,"stop":1680149079419,"duration":88}},{"uid":"df1192721683fb09","reportUrl":"https://nova-wallet.github.io/test-runner/2728//#testresult/df1192721683fb09","status":"passed","time":{"start":1680135287126,"stop":1680135287450,"duration":324}},{"uid":"44f436eb1441bf77","reportUrl":"https://nova-wallet.github.io/test-runner/2727//#testresult/44f436eb1441bf77","status":"passed","time":{"start":1680120298222,"stop":1680120298505,"duration":283}},{"uid":"d9b5c92656b29cde","reportUrl":"https://nova-wallet.github.io/test-runner/2726//#testresult/d9b5c92656b29cde","status":"passed","time":{"start":1680109616697,"stop":1680109616964,"duration":267}},{"uid":"5db04523071dbc84","reportUrl":"https://nova-wallet.github.io/test-runner/2725//#testresult/5db04523071dbc84","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680091575046,"stop":1680091575266,"duration":220}},{"uid":"b2b57124068825e","reportUrl":"https://nova-wallet.github.io/test-runner/2724//#testresult/b2b57124068825e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680077156278,"stop":1680077156329,"duration":51}},{"uid":"f1c3b2ffbb4334ea","reportUrl":"https://nova-wallet.github.io/test-runner/2723//#testresult/f1c3b2ffbb4334ea","status":"passed","time":{"start":1680062703810,"stop":1680062704120,"duration":310}},{"uid":"aa09b5201095ec31","reportUrl":"https://nova-wallet.github.io/test-runner/2722//#testresult/aa09b5201095ec31","status":"passed","time":{"start":1680052301422,"stop":1680052301675,"duration":253}},{"uid":"b1a4572368fc9312","reportUrl":"https://nova-wallet.github.io/test-runner/2721//#testresult/b1a4572368fc9312","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1680034487349,"stop":1680034487398,"duration":49}},{"uid":"c7fc425512e9151b","reportUrl":"https://nova-wallet.github.io/test-runner/2720//#testresult/c7fc425512e9151b","status":"passed","time":{"start":1680020736754,"stop":1680020736797,"duration":43}},{"uid":"ecb5424827a3ade6","reportUrl":"https://nova-wallet.github.io/test-runner/2718//#testresult/ecb5424827a3ade6","status":"passed","time":{"start":1679991500554,"stop":1679991500618,"duration":64}},{"uid":"6c30424a2fc91879","reportUrl":"https://nova-wallet.github.io/test-runner/2717//#testresult/6c30424a2fc91879","status":"passed","time":{"start":1679976988760,"stop":1679976988792,"duration":32}},{"uid":"9c0610bb875a8d2d","reportUrl":"https://nova-wallet.github.io/test-runner/2716//#testresult/9c0610bb875a8d2d","status":"passed","time":{"start":1679965637962,"stop":1679965638043,"duration":81}},{"uid":"ebab5483af079738","reportUrl":"https://nova-wallet.github.io/test-runner/2715//#testresult/ebab5483af079738","status":"passed","time":{"start":1679948151923,"stop":1679948151991,"duration":68}},{"uid":"29075a98261ecfab","reportUrl":"https://nova-wallet.github.io/test-runner/2714//#testresult/29075a98261ecfab","status":"passed","time":{"start":1679933872205,"stop":1679933872266,"duration":61}},{"uid":"19bb77bc4c6396d6","reportUrl":"https://nova-wallet.github.io/test-runner/2713//#testresult/19bb77bc4c6396d6","status":"passed","time":{"start":1679923548769,"stop":1679923548993,"duration":224}},{"uid":"55f9bb5200f43aa","reportUrl":"https://nova-wallet.github.io/test-runner/2712//#testresult/55f9bb5200f43aa","status":"passed","time":{"start":1679905105614,"stop":1679905105915,"duration":301}}]},"tags":[]},"source":"baaa8bd64e91cd14.json","parameterValues":["{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"]}