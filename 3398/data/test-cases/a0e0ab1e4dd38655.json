{"uid":"a0e0ab1e4dd38655","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1689509201058,"stop":1689509201438,"duration":380},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f18229ec910>\nchain = <scripts.utils.chain_model.Chain object at 0x7f1822f7d180>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f18229ec910>\nchain = <scripts.utils.chain_model.Chain object at 0x7f1822f7d180>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"da518a6aceebbc6b","name":"stdout","source":"da518a6aceebbc6b.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1111-703"},{"name":"thread","value":"1950-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f1822f7d180>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f9567f64663fdbaa","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689509185011,"stop":1689509186027,"duration":1016}},{"uid":"fbf8ce26f10cd374","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689509168847,"stop":1689509169944,"duration":1097}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":96,"skipped":0,"passed":306,"unknown":0,"total":402},"items":[{"uid":"7414ca1a3d6c9074","reportUrl":"https://novasamatech.github.io/test-runner/3397//#testresult/7414ca1a3d6c9074","status":"passed","time":{"start":1689494693049,"stop":1689494703874,"duration":10825}},{"uid":"6952f8e27e8a6082","reportUrl":"https://novasamatech.github.io/test-runner/3396//#testresult/6952f8e27e8a6082","status":"passed","time":{"start":1689480283354,"stop":1689480294395,"duration":11041}},{"uid":"3ffcfe7e349c3fca","reportUrl":"https://novasamatech.github.io/test-runner/3395//#testresult/3ffcfe7e349c3fca","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689466749756,"stop":1689466749926,"duration":170}},{"uid":"a96fe0905b226749","reportUrl":"https://novasamatech.github.io/test-runner/3394//#testresult/a96fe0905b226749","status":"passed","time":{"start":1689451497930,"stop":1689451499871,"duration":1941}},{"uid":"f202800c8202a37f","reportUrl":"https://novasamatech.github.io/test-runner/3393//#testresult/f202800c8202a37f","status":"passed","time":{"start":1689437112159,"stop":1689437114377,"duration":2218}},{"uid":"9984286c6db5658c","reportUrl":"https://novasamatech.github.io/test-runner/3392//#testresult/9984286c6db5658c","status":"passed","time":{"start":1689422744264,"stop":1689422755336,"duration":11072}},{"uid":"b238e18c45fc0595","reportUrl":"https://novasamatech.github.io/test-runner/3391//#testresult/b238e18c45fc0595","status":"passed","time":{"start":1689408296806,"stop":1689408308928,"duration":12122}},{"uid":"3243b04bf8429779","reportUrl":"https://novasamatech.github.io/test-runner/3390//#testresult/3243b04bf8429779","status":"passed","time":{"start":1689393896574,"stop":1689393909035,"duration":12461}},{"uid":"865f2d2a66546b00","reportUrl":"https://novasamatech.github.io/test-runner/3389//#testresult/865f2d2a66546b00","status":"passed","time":{"start":1689380194442,"stop":1689380208174,"duration":13732}},{"uid":"58968942e404ae68","reportUrl":"https://novasamatech.github.io/test-runner/3388//#testresult/58968942e404ae68","status":"passed","time":{"start":1689365093895,"stop":1689365100633,"duration":6738}},{"uid":"1a7d8ab2f39dc7b8","reportUrl":"https://novasamatech.github.io/test-runner/3387//#testresult/1a7d8ab2f39dc7b8","status":"passed","time":{"start":1689350720319,"stop":1689350730253,"duration":9934}},{"uid":"b36e4ae7ead2990","reportUrl":"https://novasamatech.github.io/test-runner/3386//#testresult/b36e4ae7ead2990","status":"passed","time":{"start":1689336358181,"stop":1689336368514,"duration":10333}},{"uid":"3e30f3bbd97f11b6","reportUrl":"https://novasamatech.github.io/test-runner/3385//#testresult/3e30f3bbd97f11b6","status":"passed","time":{"start":1689321932156,"stop":1689321946537,"duration":14381}},{"uid":"edfb6dd9b1c7d7bf","reportUrl":"https://novasamatech.github.io/test-runner/3384//#testresult/edfb6dd9b1c7d7bf","status":"passed","time":{"start":1689307498984,"stop":1689307510677,"duration":11693}},{"uid":"4d3f271073af9d10","reportUrl":"https://novasamatech.github.io/test-runner/3383//#testresult/4d3f271073af9d10","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689293822189,"stop":1689293822372,"duration":183}},{"uid":"1445078fde1961b2","reportUrl":"https://novasamatech.github.io/test-runner/3382//#testresult/1445078fde1961b2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689278742415,"stop":1689278742813,"duration":398}},{"uid":"11cc695981e6ecaa","reportUrl":"https://novasamatech.github.io/test-runner/3381//#testresult/11cc695981e6ecaa","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689264319642,"stop":1689264320005,"duration":363}},{"uid":"d2dcb69cad80da68","reportUrl":"https://novasamatech.github.io/test-runner/3380//#testresult/d2dcb69cad80da68","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689250014334,"stop":1689250014546,"duration":212}},{"uid":"be57f6d9b2c550c2","reportUrl":"https://novasamatech.github.io/test-runner/3379//#testresult/be57f6d9b2c550c2","status":"passed","time":{"start":1689235546481,"stop":1689235549568,"duration":3087}},{"uid":"a10ac64d2fdbae9e","reportUrl":"https://novasamatech.github.io/test-runner/3378//#testresult/a10ac64d2fdbae9e","status":"passed","time":{"start":1689221118649,"stop":1689221131002,"duration":12353}}]},"tags":[]},"source":"a0e0ab1e4dd38655.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f1822f7d180>"]}