{"uid":"68cc081200a8ae4e","name":"test_precision[Test for Bittensor]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"3c12ea931b4fcd65868d09c1ec1e610d","time":{"start":1707897741628,"stop":1707897741628,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"chain_model","time":{"start":1707897732915,"stop":1707897734280,"duration":1365},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1707897739435,"stop":1707897741627,"duration":2192},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az1196-190"},{"name":"thread","value":"2094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7fa769fbb400>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e022f956531bd190","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1707897732914,"stop":1707897732914,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":887,"unknown":0,"total":888},"items":[{"uid":"458f3cd924a3e9ec","reportUrl":"https://novasamatech.github.io/test-runner/4696//#testresult/458f3cd924a3e9ec","status":"passed","time":{"start":1707883324284,"stop":1707883324284,"duration":0}},{"uid":"9b5d63b1f8cae2d","reportUrl":"https://novasamatech.github.io/test-runner/4695//#testresult/9b5d63b1f8cae2d","status":"passed","time":{"start":1707868976154,"stop":1707868976154,"duration":0}},{"uid":"8da477f24913b2f8","reportUrl":"https://novasamatech.github.io/test-runner/4694//#testresult/8da477f24913b2f8","status":"passed","time":{"start":1707854520589,"stop":1707854520590,"duration":1}},{"uid":"4e1a3ed05651fbc2","reportUrl":"https://novasamatech.github.io/test-runner/4693//#testresult/4e1a3ed05651fbc2","status":"passed","time":{"start":1707840123422,"stop":1707840123422,"duration":0}},{"uid":"6933fa8175e4b135","reportUrl":"https://novasamatech.github.io/test-runner/4692//#testresult/6933fa8175e4b135","status":"passed","time":{"start":1707825737707,"stop":1707825737707,"duration":0}},{"uid":"a2d6a07d0821d4c0","reportUrl":"https://novasamatech.github.io/test-runner/4691//#testresult/a2d6a07d0821d4c0","status":"passed","time":{"start":1707811317178,"stop":1707811317178,"duration":0}},{"uid":"8fadaf3b51abf004","reportUrl":"https://novasamatech.github.io/test-runner/4690//#testresult/8fadaf3b51abf004","status":"passed","time":{"start":1707796931783,"stop":1707796931783,"duration":0}},{"uid":"1da4ecc42ab4bf93","reportUrl":"https://novasamatech.github.io/test-runner/4689//#testresult/1da4ecc42ab4bf93","status":"passed","time":{"start":1707782572184,"stop":1707782572184,"duration":0}},{"uid":"c6c8ce42bfd1ca7d","reportUrl":"https://novasamatech.github.io/test-runner/4688//#testresult/c6c8ce42bfd1ca7d","status":"passed","time":{"start":1707768114157,"stop":1707768114157,"duration":0}},{"uid":"90d99994203d494e","reportUrl":"https://novasamatech.github.io/test-runner/4687//#testresult/90d99994203d494e","status":"passed","time":{"start":1707753724309,"stop":1707753724309,"duration":0}},{"uid":"16e09d9c7ef98a54","reportUrl":"https://novasamatech.github.io/test-runner/4686//#testresult/16e09d9c7ef98a54","status":"passed","time":{"start":1707739334946,"stop":1707739334946,"duration":0}},{"uid":"fe22904c1fa0bcd4","reportUrl":"https://novasamatech.github.io/test-runner/4685//#testresult/fe22904c1fa0bcd4","status":"passed","time":{"start":1707724935564,"stop":1707724935564,"duration":0}},{"uid":"28c1f22e21787a92","reportUrl":"https://novasamatech.github.io/test-runner/4684//#testresult/28c1f22e21787a92","status":"passed","time":{"start":1707710516692,"stop":1707710516692,"duration":0}},{"uid":"b459aa26752514c5","reportUrl":"https://novasamatech.github.io/test-runner/4683//#testresult/b459aa26752514c5","status":"passed","time":{"start":1707696173250,"stop":1707696173250,"duration":0}},{"uid":"46f8a079ebdcd41e","reportUrl":"https://novasamatech.github.io/test-runner/4682//#testresult/46f8a079ebdcd41e","status":"passed","time":{"start":1707681721293,"stop":1707681721293,"duration":0}},{"uid":"b273c23a396a9240","reportUrl":"https://novasamatech.github.io/test-runner/4681//#testresult/b273c23a396a9240","status":"passed","time":{"start":1707667325349,"stop":1707667325349,"duration":0}},{"uid":"33920b1a7b434596","reportUrl":"https://novasamatech.github.io/test-runner/4680//#testresult/33920b1a7b434596","status":"passed","time":{"start":1707652918842,"stop":1707652918842,"duration":0}},{"uid":"1810f50e12101399","reportUrl":"https://novasamatech.github.io/test-runner/4678//#testresult/1810f50e12101399","status":"passed","time":{"start":1707624120995,"stop":1707624120996,"duration":1}},{"uid":"1f8c2a2d8b82c99c","reportUrl":"https://novasamatech.github.io/test-runner/4679//#testresult/1f8c2a2d8b82c99c","status":"passed","time":{"start":1707638520249,"stop":1707638520249,"duration":0}},{"uid":"4c4cbca9e06f3872","reportUrl":"https://novasamatech.github.io/test-runner/4677//#testresult/4c4cbca9e06f3872","status":"passed","time":{"start":1707609773355,"stop":1707609773355,"duration":0}}]},"tags":[]},"source":"68cc081200a8ae4e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa769fbb400>"]}