{"uid":"dbe9f1e0e0cb56c6","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1694865782861,"stop":1694865784270,"duration":1409},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f67aaf2fa30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f67aae59f30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f67aaf2fa30>\nchain = <scripts.utils.chain_model.Chain object at 0x7f67aae59f30>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"df6c0c3c0f6dd2dd","name":"stdout","source":"df6c0c3c0f6dd2dd.txt","type":"text/plain","size":1353}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az554-57"},{"name":"thread","value":"2024-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f67aae59f30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5f4288cbe5d7f2b9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694865767003,"stop":1694865767832,"duration":829}},{"uid":"c1c05b0c65eaf92c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1694865751025,"stop":1694865751972,"duration":947}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":135,"unknown":0,"total":139},"items":[{"uid":"aea15ca06ab58c7c","reportUrl":"https://novasamatech.github.io/test-runner/3778//#testresult/aea15ca06ab58c7c","status":"passed","time":{"start":1694851381750,"stop":1694851388573,"duration":6823}},{"uid":"61457ecc118714ba","reportUrl":"https://novasamatech.github.io/test-runner/3777//#testresult/61457ecc118714ba","status":"passed","time":{"start":1694836969293,"stop":1694836977315,"duration":8022}},{"uid":"4620ac09ea9fdb94","reportUrl":"https://novasamatech.github.io/test-runner/3776//#testresult/4620ac09ea9fdb94","status":"passed","time":{"start":1694822599263,"stop":1694822605532,"duration":6269}},{"uid":"6f9fb02ed76ee45e","reportUrl":"https://novasamatech.github.io/test-runner/3775//#testresult/6f9fb02ed76ee45e","status":"passed","time":{"start":1694808181066,"stop":1694808184010,"duration":2944}},{"uid":"9e176fdeb079a0df","reportUrl":"https://novasamatech.github.io/test-runner/3774//#testresult/9e176fdeb079a0df","status":"passed","time":{"start":1694793765483,"stop":1694793769546,"duration":4063}},{"uid":"4e5322597e608ddf","reportUrl":"https://novasamatech.github.io/test-runner/3773//#testresult/4e5322597e608ddf","status":"passed","time":{"start":1694779401555,"stop":1694779408014,"duration":6459}},{"uid":"7c0ec6a9efb9b343","reportUrl":"https://novasamatech.github.io/test-runner/3772//#testresult/7c0ec6a9efb9b343","status":"passed","time":{"start":1694764968317,"stop":1694764973033,"duration":4716}},{"uid":"663463e90a8e5ccf","reportUrl":"https://novasamatech.github.io/test-runner/3771//#testresult/663463e90a8e5ccf","status":"passed","time":{"start":1694750612953,"stop":1694750623092,"duration":10139}},{"uid":"cde7230a709ae126","reportUrl":"https://novasamatech.github.io/test-runner/3770//#testresult/cde7230a709ae126","status":"passed","time":{"start":1694736219408,"stop":1694736224535,"duration":5127}},{"uid":"e661babc0c3472ca","reportUrl":"https://novasamatech.github.io/test-runner/3769//#testresult/e661babc0c3472ca","status":"passed","time":{"start":1694721755232,"stop":1694721758264,"duration":3032}},{"uid":"18b4a3ca974b37fb","reportUrl":"https://novasamatech.github.io/test-runner/3768//#testresult/18b4a3ca974b37fb","status":"passed","time":{"start":1694707379388,"stop":1694707383613,"duration":4225}},{"uid":"e1b206182ac3d3b8","reportUrl":"https://novasamatech.github.io/test-runner/3767//#testresult/e1b206182ac3d3b8","status":"passed","time":{"start":1694692974299,"stop":1694692981407,"duration":7108}},{"uid":"7fa14f73e867cbac","reportUrl":"https://novasamatech.github.io/test-runner/3766//#testresult/7fa14f73e867cbac","status":"passed","time":{"start":1694678589779,"stop":1694678594412,"duration":4633}},{"uid":"b1b0a212a9fb5a5c","reportUrl":"https://novasamatech.github.io/test-runner/3765//#testresult/b1b0a212a9fb5a5c","status":"passed","time":{"start":1694664152779,"stop":1694664156768,"duration":3989}},{"uid":"864cfa394065598b","reportUrl":"https://novasamatech.github.io/test-runner/3764//#testresult/864cfa394065598b","status":"passed","time":{"start":1694649814867,"stop":1694649822910,"duration":8043}},{"uid":"2d3e1dbaab80644b","reportUrl":"https://novasamatech.github.io/test-runner/3763//#testresult/2d3e1dbaab80644b","status":"passed","time":{"start":1694635377373,"stop":1694635382545,"duration":5172}},{"uid":"ccb07c3d2bc84d42","reportUrl":"https://novasamatech.github.io/test-runner/3762//#testresult/ccb07c3d2bc84d42","status":"passed","time":{"start":1694620951824,"stop":1694620954816,"duration":2992}},{"uid":"c06019e14fbbbfae","reportUrl":"https://novasamatech.github.io/test-runner/3761//#testresult/c06019e14fbbbfae","status":"passed","time":{"start":1694606581495,"stop":1694606585796,"duration":4301}},{"uid":"b1f19dc66debd866","reportUrl":"https://novasamatech.github.io/test-runner/3760//#testresult/b1f19dc66debd866","status":"passed","time":{"start":1694597375356,"stop":1694597378562,"duration":3206}},{"uid":"73a21f48734dad8b","reportUrl":"https://novasamatech.github.io/test-runner/3759//#testresult/73a21f48734dad8b","status":"passed","time":{"start":1694592174863,"stop":1694592181191,"duration":6328}}]},"tags":[]},"source":"dbe9f1e0e0cb56c6.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f67aae59f30>"]}