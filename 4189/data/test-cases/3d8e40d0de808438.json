{"uid":"3d8e40d0de808438","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://1rpc.io/eth]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"9e0c16e1a7876bd51b49d655a0298c26","time":{"start":1700740871813,"stop":1700740872105,"duration":292},"status":"broken","statusMessage":"websockets.exceptions.ConnectionClosedError: received 1011 (internal error) IR300: this operation is not implemented yet. Please contact your administrator; then sent 1011 (internal error) IR300: this operation is not implemented yet. Please contact your administrator","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f294daf6bc0>\ndata = {'name': 'Ethereum', 'url': 'https://1rpc.io/eth'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n>       assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n\ntests/test_eth_nodes_availability.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/main.py:445: in is_connected\n    return self.provider.is_connected()\n.venv/lib/python3.10/site-packages/web3/providers/base.py:110: in is_connected\n    response = self.make_request(RPCEndpoint(\"web3_clientVersion\"), [])\n.venv/lib/python3.10/site-packages/web3/providers/websocket.py:135: in make_request\n    return future.result()\n/usr/lib/python3.10/concurrent/futures/_base.py:458: in result\n    return self.__get_result()\n/usr/lib/python3.10/concurrent/futures/_base.py:403: in __get_result\n    raise self._exception\n.venv/lib/python3.10/site-packages/web3/providers/websocket.py:124: in coro_make_request\n    await asyncio.wait_for(conn.recv(), timeout=self.websocket_timeout)\n/usr/lib/python3.10/asyncio/tasks.py:445: in wait_for\n    return fut.result()\n.venv/lib/python3.10/site-packages/websockets/legacy/protocol.py:568: in recv\n    await self.ensure_open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <websockets.legacy.client.WebSocketClientProtocol object at 0x7f294db0f160>\n\n    async def ensure_open(self) -> None:\n        \"\"\"\n        Check that the WebSocket connection is open.\n    \n        Raise :exc:`~websockets.exceptions.ConnectionClosed` if it isn't.\n    \n        \"\"\"\n        # Handle cases from most common to least common for performance.\n        if self.state is State.OPEN:\n            # If self.transfer_data_task exited without a closing handshake,\n            # self.close_connection_task may be closing the connection, going\n            # straight from OPEN to CLOSED.\n            if self.transfer_data_task.done():\n                await asyncio.shield(self.close_connection_task)\n                raise self.connection_closed_exc()\n            else:\n                return\n    \n        if self.state is State.CLOSED:\n            raise self.connection_closed_exc()\n    \n        if self.state is State.CLOSING:\n            # If we started the closing handshake, wait for its completion to\n            # get the proper close code and reason. self.close_connection_task\n            # will complete within 4 or 5 * close_timeout after close(). The\n            # CLOSING state also occurs when failing the connection. In that\n            # case self.close_connection_task will complete even faster.\n            await asyncio.shield(self.close_connection_task)\n>           raise self.connection_closed_exc()\nE           websockets.exceptions.ConnectionClosedError: received 1011 (internal error) IR300: this operation is not implemented yet. Please contact your administrator; then sent 1011 (internal error) IR300: this operation is not implemented yet. Please contact your administrator\n\n.venv/lib/python3.10/site-packages/websockets/legacy/protocol.py:948: ConnectionClosedError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1196-61"},{"name":"thread","value":"2302-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3d8e40d0de808438.json","parameterValues":["{'url': 'https://1rpc.io/eth', 'name': 'Ethereum'}"]}