{"uid":"d0eafaba8f283e41","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1695888183040,"stop":1695888184516,"duration":1476},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff2ee050eb0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff2eddfa3b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7ff2ee050eb0>\nchain = <scripts.utils.chain_model.Chain object at 0x7ff2eddfa3b0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"6fb548559bdefae3","name":"stdout","source":"6fb548559bdefae3.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az448-230"},{"name":"thread","value":"2037-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7ff2eddfa3b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c391b2d57fbd95","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695888166732,"stop":1695888168003,"duration":1271}},{"uid":"9e910434254d4920","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695888149970,"stop":1695888151693,"duration":1723}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":190,"unknown":0,"total":209},"items":[{"uid":"ff4e211e698fa98","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/ff4e211e698fa98","status":"passed","time":{"start":1695873736810,"stop":1695873741552,"duration":4742}},{"uid":"1315f700df2023f3","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/1315f700df2023f3","status":"passed","time":{"start":1695859371797,"stop":1695859376125,"duration":4328}},{"uid":"85b25831f2371944","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/85b25831f2371944","status":"passed","time":{"start":1695844997315,"stop":1695845001642,"duration":4327}},{"uid":"4fe2ba00d01adf34","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/4fe2ba00d01adf34","status":"passed","time":{"start":1695830548789,"stop":1695830552728,"duration":3939}},{"uid":"9050d5513212fe7a","reportUrl":"https://novasamatech.github.io/test-runner/3845//#testresult/9050d5513212fe7a","status":"passed","time":{"start":1695816154175,"stop":1695816158380,"duration":4205}},{"uid":"42d20845f68b5cea","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/42d20845f68b5cea","status":"passed","time":{"start":1695801733032,"stop":1695801738803,"duration":5771}},{"uid":"f67e6c19cfe01409","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/f67e6c19cfe01409","status":"passed","time":{"start":1695787345755,"stop":1695787350803,"duration":5048}},{"uid":"65edfee45cae405e","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/65edfee45cae405e","status":"passed","time":{"start":1695772986342,"stop":1695772990011,"duration":3669}},{"uid":"7222a4522271889a","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/7222a4522271889a","status":"passed","time":{"start":1695758525382,"stop":1695758528573,"duration":3191}},{"uid":"2842da333280994f","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/2842da333280994f","status":"passed","time":{"start":1695744128531,"stop":1695744132023,"duration":3492}},{"uid":"8155f650ed794c4","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/8155f650ed794c4","status":"passed","time":{"start":1695729747486,"stop":1695729751005,"duration":3519}},{"uid":"3953678dcf180a15","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/3953678dcf180a15","status":"passed","time":{"start":1695715393876,"stop":1695715398976,"duration":5100}},{"uid":"95ffb73bb1866b8a","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/95ffb73bb1866b8a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695700959005,"stop":1695700960217,"duration":1212}},{"uid":"f66340c89d0b2248","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/f66340c89d0b2248","status":"passed","time":{"start":1695686586529,"stop":1695686590106,"duration":3577}},{"uid":"be6b0a0f1122ea66","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/be6b0a0f1122ea66","status":"passed","time":{"start":1695672182697,"stop":1695672188458,"duration":5761}},{"uid":"13f0e7d19476b1f4","reportUrl":"https://novasamatech.github.io/test-runner/3834//#testresult/13f0e7d19476b1f4","status":"passed","time":{"start":1695657738303,"stop":1695657742540,"duration":4237}},{"uid":"19f47a44565a0a90","reportUrl":"https://novasamatech.github.io/test-runner/3833//#testresult/19f47a44565a0a90","status":"passed","time":{"start":1695643378064,"stop":1695643383519,"duration":5455}},{"uid":"51330c790e1c805","reportUrl":"https://novasamatech.github.io/test-runner/3832//#testresult/51330c790e1c805","status":"passed","time":{"start":1695628930645,"stop":1695628934215,"duration":3570}},{"uid":"ba6c341dfa26895b","reportUrl":"https://novasamatech.github.io/test-runner/3831//#testresult/ba6c341dfa26895b","status":"passed","time":{"start":1695614531410,"stop":1695614536453,"duration":5043}},{"uid":"eb1b4ddfbf8e6971","reportUrl":"https://novasamatech.github.io/test-runner/3830//#testresult/eb1b4ddfbf8e6971","status":"passed","time":{"start":1695600170056,"stop":1695600173716,"duration":3660}}]},"tags":[]},"source":"d0eafaba8f283e41.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7ff2eddfa3b0>"]}