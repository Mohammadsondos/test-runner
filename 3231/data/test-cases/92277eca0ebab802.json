{"uid":"92277eca0ebab802","name":"test_can_create_connection[Test for Kapex, url: wss://k-ui.kapex.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b53b69a73f8d35a0c27b49a5f165b0c9","time":{"start":1687104264454,"stop":1687104264744,"duration":290},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 18 Jun 2023 16:04:24 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 18 Jun 2023 16:04:24 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 18 Jun 2023 16:04:24 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Kapex', 'url': 'wss://k-ui.kapex.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 18 Jun 2023 16:04:24 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"79a80233973e4cc8","name":"stdout","source":"79a80233973e4cc8.txt","type":"text/plain","size":1002}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az407-896"},{"name":"thread","value":"1962-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4311da72ab5e98b9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 18 Jun 2023 16:04:09 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687104249087,"stop":1687104249377,"duration":290}},{"uid":"d6c271f14f2a34d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sun, 18 Jun 2023 16:03:53 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687104233590,"stop":1687104233947,"duration":357}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":249,"unknown":0,"total":272},"items":[{"uid":"1ed6aa2bffad465b","reportUrl":"https://novasamatech.github.io/test-runner/3230//#testresult/1ed6aa2bffad465b","status":"passed","time":{"start":1687089889713,"stop":1687089890263,"duration":550}},{"uid":"3154038e07c2af2b","reportUrl":"https://novasamatech.github.io/test-runner/3229//#testresult/3154038e07c2af2b","status":"passed","time":{"start":1687075439350,"stop":1687075439883,"duration":533}},{"uid":"5a19e9813b782908","reportUrl":"https://novasamatech.github.io/test-runner/3228//#testresult/5a19e9813b782908","status":"passed","time":{"start":1687061051307,"stop":1687061052054,"duration":747}},{"uid":"bb189e995960c1ae","reportUrl":"https://novasamatech.github.io/test-runner/3227//#testresult/bb189e995960c1ae","status":"passed","time":{"start":1687047335547,"stop":1687047335996,"duration":449}},{"uid":"d0cff5d6f9aae2f5","reportUrl":"https://novasamatech.github.io/test-runner/3226//#testresult/d0cff5d6f9aae2f5","status":"passed","time":{"start":1687032235061,"stop":1687032235637,"duration":576}},{"uid":"32f9b419989d08b6","reportUrl":"https://novasamatech.github.io/test-runner/3225//#testresult/32f9b419989d08b6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 17 Jun 2023 16:04:55 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687017895275,"stop":1687017895756,"duration":481}},{"uid":"215ae4d26157e468","reportUrl":"https://novasamatech.github.io/test-runner/3224//#testresult/215ae4d26157e468","status":"passed","time":{"start":1687003474431,"stop":1687003475018,"duration":587}},{"uid":"acc80f1caed119e4","reportUrl":"https://novasamatech.github.io/test-runner/3223//#testresult/acc80f1caed119e4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Sat, 17 Jun 2023 08:04:42 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686989082471,"stop":1686989082894,"duration":423}},{"uid":"d5072def4615101a","reportUrl":"https://novasamatech.github.io/test-runner/3222//#testresult/d5072def4615101a","status":"passed","time":{"start":1686974651658,"stop":1686974652381,"duration":723}},{"uid":"fc25d46443e86d20","reportUrl":"https://novasamatech.github.io/test-runner/3221//#testresult/fc25d46443e86d20","status":"passed","time":{"start":1686960816006,"stop":1686960816652,"duration":646}},{"uid":"88b3b6d37ed26a93","reportUrl":"https://novasamatech.github.io/test-runner/3220//#testresult/88b3b6d37ed26a93","status":"passed","time":{"start":1686945841990,"stop":1686945842448,"duration":458}},{"uid":"e4881e095d63f31","reportUrl":"https://novasamatech.github.io/test-runner/3219//#testresult/e4881e095d63f31","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 16:04:37 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686931477286,"stop":1686931477553,"duration":267}},{"uid":"cd3006df96cb0fac","reportUrl":"https://novasamatech.github.io/test-runner/3218//#testresult/cd3006df96cb0fac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 12:05:28 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686917128469,"stop":1686917128826,"duration":357}},{"uid":"bb851bec0dc7ca05","reportUrl":"https://novasamatech.github.io/test-runner/3217//#testresult/bb851bec0dc7ca05","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Fri, 16 Jun 2023 08:04:39 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686902679374,"stop":1686902679993,"duration":619}},{"uid":"a7de614a6fd27b37","reportUrl":"https://novasamatech.github.io/test-runner/3216//#testresult/a7de614a6fd27b37","status":"passed","time":{"start":1686888260041,"stop":1686888260687,"duration":646}},{"uid":"45dfe3c5f85f7e4d","reportUrl":"https://novasamatech.github.io/test-runner/3215//#testresult/45dfe3c5f85f7e4d","status":"passed","time":{"start":1686874447845,"stop":1686874448218,"duration":373}},{"uid":"6f92de3d007bb139","reportUrl":"https://novasamatech.github.io/test-runner/3214//#testresult/6f92de3d007bb139","status":"passed","time":{"start":1686859442982,"stop":1686859443401,"duration":419}},{"uid":"a79f748e6cd5c22f","reportUrl":"https://novasamatech.github.io/test-runner/3213//#testresult/a79f748e6cd5c22f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx/1.22.0 (Ubuntu)', 'date': 'Thu, 15 Jun 2023 16:04:32 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686845072711,"stop":1686845072999,"duration":288}},{"uid":"c45f5b66261d6728","reportUrl":"https://novasamatech.github.io/test-runner/3212//#testresult/c45f5b66261d6728","status":"passed","time":{"start":1686830714173,"stop":1686830714866,"duration":693}},{"uid":"c4f308fe0207b037","reportUrl":"https://novasamatech.github.io/test-runner/3211//#testresult/c4f308fe0207b037","status":"passed","time":{"start":1686816258428,"stop":1686816258785,"duration":357}}]},"tags":[]},"source":"92277eca0ebab802.json","parameterValues":["{'url': 'wss://k-ui.kapex.network', 'name': 'Kapex'}"]}