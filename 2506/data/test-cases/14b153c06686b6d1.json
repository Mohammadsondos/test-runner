{"uid":"14b153c06686b6d1","name":"test_can_create_connection[Test for XX network, url: wss://rpc.xx.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a8e1ede01a7872066249898c0020cb55","time":{"start":1676966765556,"stop":1676966766220,"duration":664},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'XX network', 'url': 'wss://rpc.xx.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","statusTrace":"data = {'name': 'XX network', 'url': 'wss://rpc.xx.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"bce077f2ea7474cb","name":"stdout","source":"bce077f2ea7474cb.txt","type":"text/plain","size":208}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az337-884"},{"name":"thread","value":"1754-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.xx.network', 'name': 'XX network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"212b0e3fa5205d9e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676966754883,"stop":1676966755448,"duration":565}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":64,"skipped":0,"passed":429,"unknown":0,"total":493},"items":[{"uid":"c19527d5a53884ed","reportUrl":"https://nova-wallet.github.io/test-runner/2505//#testresult/c19527d5a53884ed","status":"passed","time":{"start":1676952359768,"stop":1676952360698,"duration":930}},{"uid":"d37c658cb1f751e3","reportUrl":"https://nova-wallet.github.io/test-runner/2504//#testresult/d37c658cb1f751e3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676938557442,"stop":1676938558088,"duration":646}},{"uid":"8c0b326ce9b28836","reportUrl":"https://nova-wallet.github.io/test-runner/2503//#testresult/8c0b326ce9b28836","status":"passed","time":{"start":1676923518863,"stop":1676923519274,"duration":411}},{"uid":"9f1db963705ae709","reportUrl":"https://nova-wallet.github.io/test-runner/2502//#testresult/9f1db963705ae709","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676909142555,"stop":1676909142964,"duration":409}},{"uid":"1c6e51433a66a089","reportUrl":"https://nova-wallet.github.io/test-runner/2501//#testresult/1c6e51433a66a089","status":"passed","time":{"start":1676894819539,"stop":1676894819995,"duration":456}},{"uid":"ccde6913bb759921","reportUrl":"https://nova-wallet.github.io/test-runner/2500//#testresult/ccde6913bb759921","status":"passed","time":{"start":1676880359441,"stop":1676880360606,"duration":1165}},{"uid":"acd57ea36b32548d","reportUrl":"https://nova-wallet.github.io/test-runner/2499//#testresult/acd57ea36b32548d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676877318637,"stop":1676877319201,"duration":564}},{"uid":"ca9ca847084a9e58","reportUrl":"https://nova-wallet.github.io/test-runner/2493//#testresult/ca9ca847084a9e58","status":"passed","time":{"start":1676865923065,"stop":1676865923491,"duration":426}},{"uid":"493b495c39a2340b","reportUrl":"https://nova-wallet.github.io/test-runner/2492//#testresult/493b495c39a2340b","status":"passed","time":{"start":1676852191917,"stop":1676852192532,"duration":615}},{"uid":"6ef2bce7057a08fd","reportUrl":"https://nova-wallet.github.io/test-runner/2491//#testresult/6ef2bce7057a08fd","status":"passed","time":{"start":1676837119321,"stop":1676837120597,"duration":1276}},{"uid":"dba18234435ac18","reportUrl":"https://nova-wallet.github.io/test-runner/2490//#testresult/dba18234435ac18","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676822858145,"stop":1676822858762,"duration":617}},{"uid":"f29fa56a830f4145","reportUrl":"https://nova-wallet.github.io/test-runner/2489//#testresult/f29fa56a830f4145","status":"passed","time":{"start":1676808355122,"stop":1676808355616,"duration":494}},{"uid":"9e7c598bc253944f","reportUrl":"https://nova-wallet.github.io/test-runner/2488//#testresult/9e7c598bc253944f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676793914852,"stop":1676793915479,"duration":627}},{"uid":"679ff4bce1727e4","reportUrl":"https://nova-wallet.github.io/test-runner/2487//#testresult/679ff4bce1727e4","status":"passed","time":{"start":1676779482741,"stop":1676779483841,"duration":1100}},{"uid":"c83cabafd9dba20e","reportUrl":"https://nova-wallet.github.io/test-runner/2485//#testresult/c83cabafd9dba20e","status":"passed","time":{"start":1676750704799,"stop":1676750705376,"duration":577}},{"uid":"8eb66043993a9dd3","reportUrl":"https://nova-wallet.github.io/test-runner/2484//#testresult/8eb66043993a9dd3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 502 Bad Gateway","time":{"start":1676736331613,"stop":1676736332233,"duration":620}},{"uid":"dab42f43bb066a7f","reportUrl":"https://nova-wallet.github.io/test-runner/2483//#testresult/dab42f43bb066a7f","status":"passed","time":{"start":1676721947474,"stop":1676721948661,"duration":1187}},{"uid":"538c08d147465778","reportUrl":"https://nova-wallet.github.io/test-runner/2482//#testresult/538c08d147465778","status":"passed","time":{"start":1676707522775,"stop":1676707523334,"duration":559}},{"uid":"524620c952943ce2","reportUrl":"https://nova-wallet.github.io/test-runner/2480//#testresult/524620c952943ce2","status":"passed","time":{"start":1676679283051,"stop":1676679284136,"duration":1085}},{"uid":"f9ba695fc450bd1d","reportUrl":"https://nova-wallet.github.io/test-runner/2479//#testresult/f9ba695fc450bd1d","status":"passed","time":{"start":1676664324542,"stop":1676664325451,"duration":909}}]},"tags":[]},"source":"14b153c06686b6d1.json","parameterValues":["{'url': 'wss://rpc.xx.network', 'name': 'XX network'}"]}