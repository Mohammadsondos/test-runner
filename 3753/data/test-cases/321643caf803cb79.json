{"uid":"321643caf803cb79","name":"testBalancesLoading[Getting balance for Moonriver network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Moonriver network]","historyId":"691c9f7082fbedde7af3d6ae758eee0c","time":{"start":1694506671004,"stop":1694506751059,"duration":80055},"status":"broken","statusMessage":"Socket state: Connected(url=wss://moonriver.api.onfinality.io/ws?apikey=41935d3d-3d6c-4a90-a0e1-33c065401d05, toResendOnReconnect=[Sendable(2051428517)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=db6c6c31354055bf44e74fa577eeffa2, initiatorId=2051428517)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://moonriver.api.onfinality.io/ws?apikey=41935d3d-3d6c-4a90-a0e1-33c065401d05, toResendOnReconnect=[Sendable(2051428517)], unknownSubscriptionResponses={}, waitingForResponse={}, subscriptions=[Subscription(id=db6c6c31354055bf44e74fa577eeffa2, initiatorId=2051428517)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Moonriver network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":104,"unknown":0,"total":113},"items":[{"uid":"e0273300e40dd46e","reportUrl":"https://novasamatech.github.io/test-runner/3752//#testresult/e0273300e40dd46e","status":"passed","time":{"start":1694492021190,"stop":1694492021220,"duration":30}},{"uid":"d450c90a7a13c62e","reportUrl":"https://novasamatech.github.io/test-runner/3751//#testresult/d450c90a7a13c62e","status":"passed","time":{"start":1694477719050,"stop":1694477719149,"duration":99}},{"uid":"52c032805988660b","reportUrl":"https://novasamatech.github.io/test-runner/3750//#testresult/52c032805988660b","status":"passed","time":{"start":1694463307252,"stop":1694463307302,"duration":50}},{"uid":"941886ab2c88c465","reportUrl":"https://novasamatech.github.io/test-runner/3749//#testresult/941886ab2c88c465","status":"passed","time":{"start":1694449205957,"stop":1694449206000,"duration":43}},{"uid":"62f88181c8c102ae","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/62f88181c8c102ae","status":"passed","time":{"start":1694434939951,"stop":1694434939974,"duration":23}},{"uid":"e81dda498f7415c0","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/e81dda498f7415c0","status":"passed","time":{"start":1694420254920,"stop":1694420254945,"duration":25}},{"uid":"94fae0e62c1e8891","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/94fae0e62c1e8891","status":"passed","time":{"start":1694405663653,"stop":1694405663711,"duration":58}},{"uid":"44ed45b170d7e705","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/44ed45b170d7e705","status":"passed","time":{"start":1694391374803,"stop":1694391374914,"duration":111}},{"uid":"ae583002c754ac1","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/ae583002c754ac1","status":"passed","time":{"start":1694377000697,"stop":1694377000717,"duration":20}},{"uid":"4e535af9a69970e8","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/4e535af9a69970e8","status":"passed","time":{"start":1694362622688,"stop":1694362622781,"duration":93}},{"uid":"78068e1070c01c92","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/78068e1070c01c92","status":"passed","time":{"start":1694347983682,"stop":1694347983699,"duration":17}},{"uid":"ef6e63f33ad2b7b1","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/ef6e63f33ad2b7b1","status":"passed","time":{"start":1694333662927,"stop":1694333662993,"duration":66}},{"uid":"fd8ac1913c9a594e","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/fd8ac1913c9a594e","status":"passed","time":{"start":1694319354366,"stop":1694319354454,"duration":88}},{"uid":"7cbeb41efd6e42eb","reportUrl":"https://novasamatech.github.io/test-runner/3739//#testresult/7cbeb41efd6e42eb","status":"passed","time":{"start":1694304989937,"stop":1694304990025,"duration":88}},{"uid":"2dc974bfe3fadb29","reportUrl":"https://novasamatech.github.io/test-runner/3738//#testresult/2dc974bfe3fadb29","status":"passed","time":{"start":1694290725163,"stop":1694290725290,"duration":127}},{"uid":"da65bc604b467f99","reportUrl":"https://novasamatech.github.io/test-runner/3737//#testresult/da65bc604b467f99","status":"passed","time":{"start":1694276095911,"stop":1694276096006,"duration":95}},{"uid":"b81667457004c621","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/b81667457004c621","status":"passed","time":{"start":1694261662075,"stop":1694261662109,"duration":34}},{"uid":"97edec57271cc8c7","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/97edec57271cc8c7","status":"passed","time":{"start":1694247194650,"stop":1694247194682,"duration":32}},{"uid":"8dbdd0723a51d1a7","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/8dbdd0723a51d1a7","status":"passed","time":{"start":1694232846786,"stop":1694232846807,"duration":21}},{"uid":"9dcbab5b46874723","reportUrl":"https://novasamatech.github.io/test-runner/3732//#testresult/9dcbab5b46874723","status":"passed","time":{"start":1694204112580,"stop":1694204112675,"duration":95}}]},"tags":[]},"source":"321643caf803cb79.json","parameterValues":[]}