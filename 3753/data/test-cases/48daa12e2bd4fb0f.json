{"uid":"48daa12e2bd4fb0f","name":"test_chainId[Test for Nodle Parachain]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"3886273ba352d41229bc96ff4e38bf6a","time":{"start":1694505860695,"stop":1694505944317,"duration":83622},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7fd440adb490>\nchain = <scripts.utils.chain_model.Chain object at 0x7fd440d53af0>\n\n    def test_chainId(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2516: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2490: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:1160: in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:955: in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az167-127"},{"name":"thread","value":"2054-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fd440d53af0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e1fdf6bf8494a837","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1694505784547,"stop":1694505844317,"duration":59770}},{"uid":"27dbd83cb75ad4d1","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1694505709510,"stop":1694505769317,"duration":59807}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":112,"unknown":0,"total":114},"items":[{"uid":"f45303d5108fa2f9","reportUrl":"https://novasamatech.github.io/test-runner/3752//#testresult/f45303d5108fa2f9","status":"passed","time":{"start":1694491298815,"stop":1694491332615,"duration":33800}},{"uid":"342c62276680419b","reportUrl":"https://novasamatech.github.io/test-runner/3751//#testresult/342c62276680419b","status":"passed","time":{"start":1694477031579,"stop":1694477095565,"duration":63986}},{"uid":"ddea6ca57fe3bae3","reportUrl":"https://novasamatech.github.io/test-runner/3750//#testresult/ddea6ca57fe3bae3","status":"passed","time":{"start":1694462514564,"stop":1694462535761,"duration":21197}},{"uid":"5c73998d76458dc2","reportUrl":"https://novasamatech.github.io/test-runner/3749//#testresult/5c73998d76458dc2","status":"passed","time":{"start":1694448219626,"stop":1694448301133,"duration":81507}},{"uid":"23299f979b64fe6a","reportUrl":"https://novasamatech.github.io/test-runner/3748//#testresult/23299f979b64fe6a","status":"passed","time":{"start":1694433716411,"stop":1694433732112,"duration":15701}},{"uid":"7b0a3062af55ae18","reportUrl":"https://novasamatech.github.io/test-runner/3747//#testresult/7b0a3062af55ae18","status":"passed","time":{"start":1694419328983,"stop":1694419373926,"duration":44943}},{"uid":"820ce908e5ab97b2","reportUrl":"https://novasamatech.github.io/test-runner/3746//#testresult/820ce908e5ab97b2","status":"passed","time":{"start":1694404911092,"stop":1694404980744,"duration":69652}},{"uid":"3002cb713a0f0541","reportUrl":"https://novasamatech.github.io/test-runner/3745//#testresult/3002cb713a0f0541","status":"passed","time":{"start":1694390564311,"stop":1694390570366,"duration":6055}},{"uid":"14fa8a78698092a1","reportUrl":"https://novasamatech.github.io/test-runner/3744//#testresult/14fa8a78698092a1","status":"passed","time":{"start":1694376106656,"stop":1694376116779,"duration":10123}},{"uid":"8d975f7650cd2618","reportUrl":"https://novasamatech.github.io/test-runner/3743//#testresult/8d975f7650cd2618","status":"passed","time":{"start":1694361718927,"stop":1694361742297,"duration":23370}},{"uid":"8038ef9f39ca02fc","reportUrl":"https://novasamatech.github.io/test-runner/3742//#testresult/8038ef9f39ca02fc","status":"passed","time":{"start":1694347305256,"stop":1694347309086,"duration":3830}},{"uid":"c62c9e7fcb2c1add","reportUrl":"https://novasamatech.github.io/test-runner/3741//#testresult/c62c9e7fcb2c1add","status":"passed","time":{"start":1694332905751,"stop":1694332926574,"duration":20823}},{"uid":"31d4d5fe3c38dc1e","reportUrl":"https://novasamatech.github.io/test-runner/3740//#testresult/31d4d5fe3c38dc1e","status":"passed","time":{"start":1694318504465,"stop":1694318525602,"duration":21137}},{"uid":"9381108c6bf5a155","reportUrl":"https://novasamatech.github.io/test-runner/3739//#testresult/9381108c6bf5a155","status":"passed","time":{"start":1694304156354,"stop":1694304182583,"duration":26229}},{"uid":"5dfef105f0182f4c","reportUrl":"https://novasamatech.github.io/test-runner/3738//#testresult/5dfef105f0182f4c","status":"passed","time":{"start":1694289733588,"stop":1694289765462,"duration":31874}},{"uid":"864daebf21e2a23e","reportUrl":"https://novasamatech.github.io/test-runner/3737//#testresult/864daebf21e2a23e","status":"passed","time":{"start":1694275305831,"stop":1694275330982,"duration":25151}},{"uid":"7d2ba090c9173b77","reportUrl":"https://novasamatech.github.io/test-runner/3736//#testresult/7d2ba090c9173b77","status":"passed","time":{"start":1694260934126,"stop":1694260946763,"duration":12637}},{"uid":"c7fff3b7601673dd","reportUrl":"https://novasamatech.github.io/test-runner/3735//#testresult/c7fff3b7601673dd","status":"passed","time":{"start":1694246510486,"stop":1694246555435,"duration":44949}},{"uid":"847f4541aecaa941","reportUrl":"https://novasamatech.github.io/test-runner/3734//#testresult/847f4541aecaa941","status":"passed","time":{"start":1694232114110,"stop":1694232127828,"duration":13718}},{"uid":"d752cebf904b7fca","reportUrl":"https://novasamatech.github.io/test-runner/3733//#testresult/d752cebf904b7fca","status":"passed","time":{"start":1694217785634,"stop":1694217795057,"duration":9423}}]},"tags":[]},"source":"48daa12e2bd4fb0f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fd440d53af0>"]}