{"uid":"54bd0b130c428458","name":"test_rpc_node_is_synced[Test for Ethereum, url: https://eth.llamarpc.com]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_is_synced","historyId":"3f32f3f9affb5ea13b781953ebf105f9","time":{"start":1715284881476,"stop":1715284891687,"duration":10211},"status":"failed","statusMessage":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f83997d1a80>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f83997d1a80>> = <web3.main.Web3 object at 0x7f83997d1a80>.is_connected","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f839b8ad990>\ndata = {'name': 'Ethereum', 'url': 'https://eth.llamarpc.com'}\n\n    def test_rpc_node_is_synced(self, data):\n    \n        wss_w3 = Web3(Web3.WebsocketProvider('wss://mainnet.infura.io/ws/v3/32a2be59297444c9bcb2b61bb700c6fe'))\n        # Check if connected to wss node\n        assert wss_w3.is_connected(), \"Failed to connect to Ethereum wss node\"\n    \n        w3_rpc = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to RPC node\n>       assert w3_rpc.is_connected(), \"Failed to connect to Ethereum RPC node\"\nE       AssertionError: Failed to connect to Ethereum RPC node\nE       assert False\nE        +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f83997d1a80>>()\nE        +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f83997d1a80>> = <web3.main.Web3 object at 0x7f83997d1a80>.is_connected\n\ntests/test_eth_nodes_availability.py:37: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az975-700"},{"name":"thread","value":"2107-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3c12ac09158b89ea","status":"broken","statusDetails":"websockets.exceptions.InvalidStatusCode: server rejected WebSocket connection: HTTP 429","time":{"start":1715284876191,"stop":1715284876418,"duration":227}},{"uid":"51d343d405dafcc5","status":"failed","statusDetails":"AssertionError: Failed to connect to Ethereum RPC node\nassert False\n +  where False = <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f839b8aefb0>>()\n +    where <bound method Web3.is_connected of <web3.main.Web3 object at 0x7f839b8aefb0>> = <web3.main.Web3 object at 0x7f839b8aefb0>.is_connected","time":{"start":1715284860712,"stop":1715284871128,"duration":10416}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":55,"skipped":0,"passed":1236,"unknown":0,"total":1293},"items":[{"uid":"45f71a612af1e13c","reportUrl":"https://novasamatech.github.io/test-runner/5216//#testresult/45f71a612af1e13c","status":"passed","time":{"start":1715256062675,"stop":1715256063044,"duration":369}},{"uid":"fb416d394d392211","reportUrl":"https://novasamatech.github.io/test-runner/5215//#testresult/fb416d394d392211","status":"passed","time":{"start":1715241664373,"stop":1715241664903,"duration":530}},{"uid":"7303fa1520bc0918","reportUrl":"https://novasamatech.github.io/test-runner/5213//#testresult/7303fa1520bc0918","status":"passed","time":{"start":1715212914648,"stop":1715212915483,"duration":835}},{"uid":"aa161553024f9d55","reportUrl":"https://novasamatech.github.io/test-runner/5214//#testresult/aa161553024f9d55","status":"passed","time":{"start":1715227259108,"stop":1715227259954,"duration":846}},{"uid":"694c006d8cbc61be","reportUrl":"https://novasamatech.github.io/test-runner/5212//#testresult/694c006d8cbc61be","status":"passed","time":{"start":1715198459902,"stop":1715198460158,"duration":256}},{"uid":"7269c98d0c93c132","reportUrl":"https://novasamatech.github.io/test-runner/5210//#testresult/7269c98d0c93c132","status":"passed","time":{"start":1715169666191,"stop":1715169666640,"duration":449}},{"uid":"e3074cda362a9423","reportUrl":"https://novasamatech.github.io/test-runner/5211//#testresult/e3074cda362a9423","status":"passed","time":{"start":1715184072386,"stop":1715184073275,"duration":889}},{"uid":"f6167e7c9df1b1bb","reportUrl":"https://novasamatech.github.io/test-runner/5208//#testresult/f6167e7c9df1b1bb","status":"passed","time":{"start":1715140862319,"stop":1715140863326,"duration":1007}},{"uid":"5d79587a0b018470","reportUrl":"https://novasamatech.github.io/test-runner/5209//#testresult/5d79587a0b018470","status":"passed","time":{"start":1715155261800,"stop":1715155262479,"duration":679}},{"uid":"e4550dca9d52566c","reportUrl":"https://novasamatech.github.io/test-runner/5207//#testresult/e4550dca9d52566c","status":"passed","time":{"start":1715126486905,"stop":1715126487857,"duration":952}},{"uid":"9c89a9bc1a7feaff","reportUrl":"https://novasamatech.github.io/test-runner/5205//#testresult/9c89a9bc1a7feaff","status":"passed","time":{"start":1715097665796,"stop":1715097666116,"duration":320}},{"uid":"70135d7e3b20f9f5","reportUrl":"https://novasamatech.github.io/test-runner/5206//#testresult/70135d7e3b20f9f5","status":"passed","time":{"start":1715112058644,"stop":1715112058838,"duration":194}},{"uid":"aac9a158a65e19a4","reportUrl":"https://novasamatech.github.io/test-runner/5204//#testresult/aac9a158a65e19a4","status":"passed","time":{"start":1715083274547,"stop":1715083275478,"duration":931}},{"uid":"9bd333bdac30337a","reportUrl":"https://novasamatech.github.io/test-runner/5203//#testresult/9bd333bdac30337a","status":"passed","time":{"start":1715068867670,"stop":1715068868190,"duration":520}},{"uid":"d1c02e71985cd862","reportUrl":"https://novasamatech.github.io/test-runner/5202//#testresult/d1c02e71985cd862","status":"passed","time":{"start":1715054468188,"stop":1715054468588,"duration":400}},{"uid":"f97fc5ad5f311627","reportUrl":"https://novasamatech.github.io/test-runner/5201//#testresult/f97fc5ad5f311627","status":"passed","time":{"start":1715040093785,"stop":1715040094092,"duration":307}},{"uid":"d307e0e7ccf82907","reportUrl":"https://novasamatech.github.io/test-runner/5199//#testresult/d307e0e7ccf82907","status":"passed","time":{"start":1715011260867,"stop":1715011261373,"duration":506}},{"uid":"c6fa3eac15d6df22","reportUrl":"https://novasamatech.github.io/test-runner/5200//#testresult/c6fa3eac15d6df22","status":"passed","time":{"start":1715025658027,"stop":1715025658443,"duration":416}},{"uid":"19120afeb8814f91","reportUrl":"https://novasamatech.github.io/test-runner/5197//#testresult/19120afeb8814f91","status":"passed","time":{"start":1714982466168,"stop":1714982466614,"duration":446}},{"uid":"76692574a833a510","reportUrl":"https://novasamatech.github.io/test-runner/5198//#testresult/76692574a833a510","status":"passed","time":{"start":1714996867369,"stop":1714996867802,"duration":433}}]},"tags":[]},"source":"54bd0b130c428458.json","parameterValues":["{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"]}