{"uid":"c64355fefd781c20","name":"test_has_new_assets[Test for Pichiu]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"be058d023358858ad5000fa68e8b1077","time":{"start":1686168323372,"stop":1686168323993,"duration":621},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9d2ff13460>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9d2ff10400>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f9d2ff13460>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9d2ff10400>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"181682e188acaa3f","name":"stdout","source":"181682e188acaa3f.txt","type":"text/plain","size":1620}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az561-205"},{"name":"thread","value":"1899-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9d2ff10400>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5137018b9dfdf8b7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686168307640,"stop":1686168308324,"duration":684}},{"uid":"55c47507deef6779","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686168291618,"stop":1686168292588,"duration":970}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":204,"unknown":0,"total":206},"items":[{"uid":"8fc13b767fe12ae9","reportUrl":"https://novasamatech.github.io/test-runner/3165//#testresult/8fc13b767fe12ae9","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686153921547,"stop":1686153921704,"duration":157}},{"uid":"7bdbd19a4bd8355d","reportUrl":"https://novasamatech.github.io/test-runner/3164//#testresult/7bdbd19a4bd8355d","status":"passed","time":{"start":1686139516562,"stop":1686139521307,"duration":4745}},{"uid":"ccd6e0505b60e488","reportUrl":"https://novasamatech.github.io/test-runner/3163//#testresult/ccd6e0505b60e488","status":"passed","time":{"start":1686125106125,"stop":1686125115200,"duration":9075}},{"uid":"f39c15d02d4b838b","reportUrl":"https://novasamatech.github.io/test-runner/3162//#testresult/f39c15d02d4b838b","status":"passed","time":{"start":1686110698516,"stop":1686110708491,"duration":9975}},{"uid":"e20126340614ab7d","reportUrl":"https://novasamatech.github.io/test-runner/3161//#testresult/e20126340614ab7d","status":"passed","time":{"start":1686096878832,"stop":1686096887151,"duration":8319}},{"uid":"bd14e1c6f35191dd","reportUrl":"https://novasamatech.github.io/test-runner/3160//#testresult/bd14e1c6f35191dd","status":"passed","time":{"start":1686081903976,"stop":1686081918706,"duration":14730}},{"uid":"6179edd92c186ac1","reportUrl":"https://novasamatech.github.io/test-runner/3159//#testresult/6179edd92c186ac1","status":"passed","time":{"start":1686067479767,"stop":1686067485186,"duration":5419}},{"uid":"e11d8de2effda2e5","reportUrl":"https://novasamatech.github.io/test-runner/3158//#testresult/e11d8de2effda2e5","status":"passed","time":{"start":1686053100249,"stop":1686053106990,"duration":6741}},{"uid":"bedeec956aaa2cf3","reportUrl":"https://novasamatech.github.io/test-runner/3157//#testresult/bedeec956aaa2cf3","status":"passed","time":{"start":1686038682640,"stop":1686038688402,"duration":5762}},{"uid":"90f5744cb1874df0","reportUrl":"https://novasamatech.github.io/test-runner/3156//#testresult/90f5744cb1874df0","status":"passed","time":{"start":1686024278736,"stop":1686024287997,"duration":9261}},{"uid":"82c0393fd062310d","reportUrl":"https://novasamatech.github.io/test-runner/3155//#testresult/82c0393fd062310d","status":"passed","time":{"start":1686010481129,"stop":1686010488631,"duration":7502}},{"uid":"f54b750330dd8293","reportUrl":"https://novasamatech.github.io/test-runner/3154//#testresult/f54b750330dd8293","status":"passed","time":{"start":1685995467458,"stop":1685995474620,"duration":7162}},{"uid":"6e07ae028619586","reportUrl":"https://novasamatech.github.io/test-runner/3153//#testresult/6e07ae028619586","status":"passed","time":{"start":1685981072520,"stop":1685981079894,"duration":7374}},{"uid":"68ac0937b08e9937","reportUrl":"https://novasamatech.github.io/test-runner/3152//#testresult/68ac0937b08e9937","status":"passed","time":{"start":1685966754728,"stop":1685966764848,"duration":10120}},{"uid":"95b40403d502b2e6","reportUrl":"https://novasamatech.github.io/test-runner/3151//#testresult/95b40403d502b2e6","status":"passed","time":{"start":1685952290148,"stop":1685952297716,"duration":7568}},{"uid":"639cc9b7066e03c6","reportUrl":"https://novasamatech.github.io/test-runner/3150//#testresult/639cc9b7066e03c6","status":"passed","time":{"start":1685937897201,"stop":1685937907058,"duration":9857}},{"uid":"28024a238cdbdef2","reportUrl":"https://novasamatech.github.io/test-runner/3149//#testresult/28024a238cdbdef2","status":"passed","time":{"start":1685924090437,"stop":1685924097574,"duration":7137}},{"uid":"3dc0f3ac56a51cb3","reportUrl":"https://novasamatech.github.io/test-runner/3148//#testresult/3dc0f3ac56a51cb3","status":"passed","time":{"start":1685909058819,"stop":1685909064393,"duration":5574}},{"uid":"8095d3fab08933e4","reportUrl":"https://novasamatech.github.io/test-runner/3147//#testresult/8095d3fab08933e4","status":"passed","time":{"start":1685894681807,"stop":1685894686088,"duration":4281}},{"uid":"c2d8c7cd523be2f0","reportUrl":"https://novasamatech.github.io/test-runner/3146//#testresult/c2d8c7cd523be2f0","status":"passed","time":{"start":1685880309148,"stop":1685880317854,"duration":8706}}]},"tags":[]},"source":"c64355fefd781c20.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9d2ff10400>"]}