{"uid":"edd0b2126eb32afd","name":"test_address_prefix[Test for Jur]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"1995a024d596e4bbc19396faa6d15d46","time":{"start":1703176400772,"stop":1703176400772,"duration":0},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_address_prefix[Test for Jur]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1703176400773,"stop":1703176402883,"duration":2110},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 31, in chain_model\n    chain.init_properties()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"request = <SubRequest 'chain_model' for <Function test_address_prefix[Test for Jur]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/conftest.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"7e1cceddfc8dbd86","name":"stdout","source":"7e1cceddfc8dbd86.txt","type":"text/plain","size":2472}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az1242-713"},{"name":"thread","value":"2048-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7fb46593ead0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fba8b895e6c11708","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703176383746,"stop":1703176383746,"duration":0}},{"uid":"44074330f9f6a37f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1703176366653,"stop":1703176366653,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":650,"unknown":0,"total":653},"items":[{"uid":"9ecb1567736846a9","reportUrl":"https://novasamatech.github.io/test-runner/4365//#testresult/9ecb1567736846a9","status":"passed","time":{"start":1703174718656,"stop":1703174718657,"duration":1}},{"uid":"f0f033b1a7433a71","reportUrl":"https://novasamatech.github.io/test-runner/4364//#testresult/f0f033b1a7433a71","status":"passed","time":{"start":1703160390170,"stop":1703160390170,"duration":0}},{"uid":"d0e73d18d5032e4d","reportUrl":"https://novasamatech.github.io/test-runner/4363//#testresult/d0e73d18d5032e4d","status":"passed","time":{"start":1703145925783,"stop":1703145925783,"duration":0}},{"uid":"7706a353e113ab4a","reportUrl":"https://novasamatech.github.io/test-runner/4362//#testresult/7706a353e113ab4a","status":"passed","time":{"start":1703131472813,"stop":1703131472813,"duration":0}},{"uid":"87acf791dd116d17","reportUrl":"https://novasamatech.github.io/test-runner/4361//#testresult/87acf791dd116d17","status":"passed","time":{"start":1703117029815,"stop":1703117029815,"duration":0}},{"uid":"82955a6ba5a87ab2","reportUrl":"https://novasamatech.github.io/test-runner/4360//#testresult/82955a6ba5a87ab2","status":"passed","time":{"start":1703102626393,"stop":1703102626393,"duration":0}},{"uid":"7aa436ee038bfe6d","reportUrl":"https://novasamatech.github.io/test-runner/4359//#testresult/7aa436ee038bfe6d","status":"passed","time":{"start":1703088192689,"stop":1703088192690,"duration":1}},{"uid":"c21bcb1cf4a6485b","reportUrl":"https://novasamatech.github.io/test-runner/4358//#testresult/c21bcb1cf4a6485b","status":"passed","time":{"start":1703073803592,"stop":1703073803592,"duration":0}},{"uid":"b757b9196e1e9e66","reportUrl":"https://novasamatech.github.io/test-runner/4357//#testresult/b757b9196e1e9e66","status":"passed","time":{"start":1703059371101,"stop":1703059371101,"duration":0}},{"uid":"cbb154ec5faeac02","reportUrl":"https://novasamatech.github.io/test-runner/4356//#testresult/cbb154ec5faeac02","status":"passed","time":{"start":1703044962243,"stop":1703044962243,"duration":0}},{"uid":"c70e06c41af5a44d","reportUrl":"https://novasamatech.github.io/test-runner/4355//#testresult/c70e06c41af5a44d","status":"passed","time":{"start":1703030617827,"stop":1703030617827,"duration":0}},{"uid":"710f9ca60dbef088","reportUrl":"https://novasamatech.github.io/test-runner/4354//#testresult/710f9ca60dbef088","status":"passed","time":{"start":1703016206287,"stop":1703016206287,"duration":0}},{"uid":"e58cf486399bc507","reportUrl":"https://novasamatech.github.io/test-runner/4353//#testresult/e58cf486399bc507","status":"passed","time":{"start":1703001773935,"stop":1703001773935,"duration":0}},{"uid":"f16115bcee1bba5b","reportUrl":"https://novasamatech.github.io/test-runner/4352//#testresult/f16115bcee1bba5b","status":"passed","time":{"start":1702987416884,"stop":1702987416885,"duration":1}},{"uid":"5b7dd0f309427b2d","reportUrl":"https://novasamatech.github.io/test-runner/4351//#testresult/5b7dd0f309427b2d","status":"passed","time":{"start":1702972960746,"stop":1702972960746,"duration":0}},{"uid":"3a90a4eee55693b0","reportUrl":"https://novasamatech.github.io/test-runner/4350//#testresult/3a90a4eee55693b0","status":"passed","time":{"start":1702958552859,"stop":1702958552860,"duration":1}},{"uid":"750c47c1697d609f","reportUrl":"https://novasamatech.github.io/test-runner/4349//#testresult/750c47c1697d609f","status":"passed","time":{"start":1702944200793,"stop":1702944200793,"duration":0}},{"uid":"54b27ea8a4284c42","reportUrl":"https://novasamatech.github.io/test-runner/4348//#testresult/54b27ea8a4284c42","status":"passed","time":{"start":1702929814348,"stop":1702929814348,"duration":0}},{"uid":"fa39e9a83b621d8","reportUrl":"https://novasamatech.github.io/test-runner/4347//#testresult/fa39e9a83b621d8","status":"passed","time":{"start":1702915404821,"stop":1702915404821,"duration":0}},{"uid":"f7d4e7f562eeda83","reportUrl":"https://novasamatech.github.io/test-runner/4346//#testresult/f7d4e7f562eeda83","status":"passed","time":{"start":1702900986967,"stop":1702900986967,"duration":0}}]},"tags":[]},"source":"edd0b2126eb32afd.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb46593ead0>"]}