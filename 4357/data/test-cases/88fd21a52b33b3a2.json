{"uid":"88fd21a52b33b3a2","name":"test_rpc_node_work_fast[Test for Ethereum, url: https://eth.llamarpc.com]","fullName":"tests.test_eth_nodes_availability.TestETHNodesAvailability#test_rpc_node_work_fast","historyId":"4431866587dfcd90ccf30e6ffcadeccb","time":{"start":1703059298885,"stop":1703059298996,"duration":111},"status":"broken","statusMessage":"web3.exceptions.BlockNotFound: Block with id: 'latest' not found.","statusTrace":"self = <tests.test_eth_nodes_availability.TestETHNodesAvailability object at 0x7f8f16bff5e0>\ndata = {'name': 'Ethereum', 'url': 'https://eth.llamarpc.com'}\n\n    def test_rpc_node_work_fast(self, data):\n    \n        w3 = Web3(Web3.HTTPProvider(data['url']))\n        # Check if connected to Ethereum RPC node\n        assert w3.is_connected(), \"Failed to connect to Ethereum RPC node\"\n    \n        # Measure time taken to retrieve current block\n        start_time = time.time()\n>       block = w3.eth.get_block('latest')\n\ntests/test_eth_nodes_availability.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv/lib/python3.10/site-packages/web3/eth/eth.py:389: in get_block\n    return self._get_block(block_identifier, full_transactions)\n.venv/lib/python3.10/site-packages/web3/module.py:68: in caller\n    result = w3.manager.request_blocking(\n.venv/lib/python3.10/site-packages/web3/manager.py:232: in request_blocking\n    return self.formatted_response(\n.venv/lib/python3.10/site-packages/web3/manager.py:211: in formatted_response\n    apply_null_result_formatters(null_result_formatters, response, params)\n.venv/lib/python3.10/site-packages/web3/manager.py:85: in apply_null_result_formatters\n    formatted_resp = pipe(params, null_result_formatters)\ncytoolz/functoolz.pyx:680: in cytoolz.functoolz.pipe\n    ???\ncytoolz/functoolz.pyx:655: in cytoolz.functoolz.c_pipe\n    ???\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nparams = ('latest', False)\n\n    def raise_block_not_found(params: Tuple[BlockIdentifier, bool]) -> NoReturn:\n        try:\n            block_identifier = params[0]\n            message = f\"Block with id: {block_identifier!r} not found.\"\n        except IndexError:\n            message = \"Unknown block identifier\"\n    \n>       raise BlockNotFound(message)\nE       web3.exceptions.BlockNotFound: Block with id: 'latest' not found.\n\n.venv/lib/python3.10/site-packages/web3/_utils/method_formatters.py:810: BlockNotFound","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_eth_nodes_availability"},{"name":"subSuite","value":"TestETHNodesAvailability"},{"name":"host","value":"fv-az1206-321"},{"name":"thread","value":"2168-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_eth_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5c5cfe6aba8b3105","status":"broken","statusDetails":"web3.exceptions.BlockNotFound: Block with id: 'latest' not found.","time":{"start":1703059283734,"stop":1703059283847,"duration":113}},{"uid":"70be4a68e46ff678","status":"broken","statusDetails":"web3.exceptions.BlockNotFound: Block with id: 'latest' not found.","time":{"start":1703059268315,"stop":1703059268615,"duration":300}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":4,"skipped":0,"passed":635,"unknown":0,"total":645},"items":[{"uid":"908bece5b3452f28","reportUrl":"https://novasamatech.github.io/test-runner/4356//#testresult/908bece5b3452f28","status":"passed","time":{"start":1703044865192,"stop":1703044865416,"duration":224}},{"uid":"a416aa477961f366","reportUrl":"https://novasamatech.github.io/test-runner/4355//#testresult/a416aa477961f366","status":"passed","time":{"start":1703030505663,"stop":1703030505922,"duration":259}},{"uid":"d9f459925499f3d2","reportUrl":"https://novasamatech.github.io/test-runner/4354//#testresult/d9f459925499f3d2","status":"passed","time":{"start":1703016098390,"stop":1703016098537,"duration":147}},{"uid":"3331447d8d0b94f8","reportUrl":"https://novasamatech.github.io/test-runner/4353//#testresult/3331447d8d0b94f8","status":"passed","time":{"start":1703001661818,"stop":1703001661994,"duration":176}},{"uid":"5295571fb31033de","reportUrl":"https://novasamatech.github.io/test-runner/4352//#testresult/5295571fb31033de","status":"passed","time":{"start":1702987272449,"stop":1702987272648,"duration":199}},{"uid":"98e7ce67e6bc4291","reportUrl":"https://novasamatech.github.io/test-runner/4351//#testresult/98e7ce67e6bc4291","status":"passed","time":{"start":1702972869582,"stop":1702972869728,"duration":146}},{"uid":"3fdbdfa5c7e51a07","reportUrl":"https://novasamatech.github.io/test-runner/4350//#testresult/3fdbdfa5c7e51a07","status":"passed","time":{"start":1702958466691,"stop":1702958466985,"duration":294}},{"uid":"544617953dc697d","reportUrl":"https://novasamatech.github.io/test-runner/4349//#testresult/544617953dc697d","status":"passed","time":{"start":1702944109619,"stop":1702944109964,"duration":345}},{"uid":"b3411f9f934545ed","reportUrl":"https://novasamatech.github.io/test-runner/4348//#testresult/b3411f9f934545ed","status":"passed","time":{"start":1702929666796,"stop":1702929667097,"duration":301}},{"uid":"db371da3051c12ab","reportUrl":"https://novasamatech.github.io/test-runner/4347//#testresult/db371da3051c12ab","status":"passed","time":{"start":1702915266142,"stop":1702915266273,"duration":131}},{"uid":"7185d0162c8bc403","reportUrl":"https://novasamatech.github.io/test-runner/4346//#testresult/7185d0162c8bc403","status":"passed","time":{"start":1702900870312,"stop":1702900870673,"duration":361}},{"uid":"9d5bfd31af3c2184","reportUrl":"https://novasamatech.github.io/test-runner/4345//#testresult/9d5bfd31af3c2184","status":"passed","time":{"start":1702892793363,"stop":1702892793665,"duration":302}},{"uid":"45719d45b53bb79f","reportUrl":"https://novasamatech.github.io/test-runner/4327//#testresult/45719d45b53bb79f","status":"passed","time":{"start":1702641666266,"stop":1702641666471,"duration":205}},{"uid":"9751d3b797534c9","reportUrl":"https://novasamatech.github.io/test-runner/4326//#testresult/9751d3b797534c9","status":"passed","time":{"start":1702641091837,"stop":1702641091958,"duration":121}},{"uid":"89b442cbedffd53b","reportUrl":"https://novasamatech.github.io/test-runner/4325//#testresult/89b442cbedffd53b","status":"passed","time":{"start":1702627265553,"stop":1702627265723,"duration":170}},{"uid":"cdb4ef0fc4968388","reportUrl":"https://novasamatech.github.io/test-runner/4324//#testresult/cdb4ef0fc4968388","status":"passed","time":{"start":1702612865745,"stop":1702612866085,"duration":340}},{"uid":"2153aeb15aec57a","reportUrl":"https://novasamatech.github.io/test-runner/4323//#testresult/2153aeb15aec57a","status":"passed","time":{"start":1702598524353,"stop":1702598524708,"duration":355}},{"uid":"ff00c922c1843510","reportUrl":"https://novasamatech.github.io/test-runner/4322//#testresult/ff00c922c1843510","status":"passed","time":{"start":1702584062010,"stop":1702584062223,"duration":213}},{"uid":"d8cc08af89f610e6","reportUrl":"https://novasamatech.github.io/test-runner/4321//#testresult/d8cc08af89f610e6","status":"passed","time":{"start":1702569666874,"stop":1702569667270,"duration":396}},{"uid":"d16b2cb6dfcea18c","reportUrl":"https://novasamatech.github.io/test-runner/4320//#testresult/d16b2cb6dfcea18c","status":"passed","time":{"start":1702555274915,"stop":1702555275214,"duration":299}}]},"tags":[]},"source":"88fd21a52b33b3a2.json","parameterValues":["{'url': 'https://eth.llamarpc.com', 'name': 'Ethereum'}"]}