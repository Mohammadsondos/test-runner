{"uid":"80e7bdc1804cac40","name":"test_xcm_parameters[Check XCM data for Statemint]","fullName":"tests.test_xcm_data.TestCompareXCMData#test_xcm_parameters","historyId":"64cef8bcad7c5cd26a0b952e2a48fad4","time":{"start":1666209995691,"stop":1666209996307,"duration":616},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","statusTrace":"self = <tests.test_xcm_data.TestCompareXCMData object at 0x7f979e7f90a0>\nchain = <tests.utils.chain_model.Chain object at 0x7f979f8bb850>\n\n    def test_xcm_parameters(self, chain: Chain):\n        connection = chain.create_connection()\n        chain.init_properties()\n        data = connection.get_constant('System', 'BlockWeights').serialize()\n    \n        with open(xcm_data_file_path) as fp:\n            json_data = json.load(fp)\n            changed_data = was_network_data_changed(data, json_data[chain.chainId]['BlockWeights'])\n>           assert not bool(changed_data)\nE           AssertionError: assert not True\nE            +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})\n\ntests/test_xcm_data.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_xcm_data"},{"name":"subSuite","value":"TestCompareXCMData"},{"name":"host","value":"fv-az210-830"},{"name":"thread","value":"1666-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_xcm_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f979f8bb850>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6ef8bff5b6721b1e","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666209982106,"stop":1666209985677,"duration":3571}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":55,"unknown":0,"total":64},"items":[{"uid":"31b2fe0f8479c674","reportUrl":"https://nova-wallet.github.io/test-runner/1741//#testresult/31b2fe0f8479c674","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666195756580,"stop":1666195757205,"duration":625}},{"uid":"9a74760800e71b35","reportUrl":"https://nova-wallet.github.io/test-runner/1740//#testresult/9a74760800e71b35","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666181301415,"stop":1666181302016,"duration":601}},{"uid":"d46600b70e711ce9","reportUrl":"https://nova-wallet.github.io/test-runner/1739//#testresult/d46600b70e711ce9","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666167173847,"stop":1666167174453,"duration":606}},{"uid":"c7bb345251f2361a","reportUrl":"https://nova-wallet.github.io/test-runner/1738//#testresult/c7bb345251f2361a","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666154511900,"stop":1666154512865,"duration":965}},{"uid":"104492853db67412","reportUrl":"https://nova-wallet.github.io/test-runner/1737//#testresult/104492853db67412","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666139024594,"stop":1666139025586,"duration":992}},{"uid":"5fddff23247be18d","reportUrl":"https://nova-wallet.github.io/test-runner/1736//#testresult/5fddff23247be18d","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666123625065,"stop":1666123626049,"duration":984}},{"uid":"f219f4e6bd206994","reportUrl":"https://nova-wallet.github.io/test-runner/1735//#testresult/f219f4e6bd206994","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666109412203,"stop":1666109413204,"duration":1001}},{"uid":"a9ecabe66656cdb4","reportUrl":"https://nova-wallet.github.io/test-runner/1734//#testresult/a9ecabe66656cdb4","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = bool({'type_changes': [<root['base_block'] t1:{'ref_time':...}, t2:5000000000>, <root['max_block'] t1:{'ref_time':...}, t2:...ef_time':...}, t2:125000000000>, <root['per_class']['mandatory']['base_extrinsic'] t1:{'ref_time':...}, t2:125000000>]})","time":{"start":1666094925766,"stop":1666094926729,"duration":963}},{"uid":"da339be1bcd4c9df","reportUrl":"https://nova-wallet.github.io/test-runner/1733//#testresult/da339be1bcd4c9df","status":"passed","time":{"start":1666080591979,"stop":1666080595596,"duration":3617}},{"uid":"bd608a593a1edec4","reportUrl":"https://nova-wallet.github.io/test-runner/1732//#testresult/bd608a593a1edec4","status":"passed","time":{"start":1666068017070,"stop":1666068022861,"duration":5791}},{"uid":"9db875fd698f872a","reportUrl":"https://nova-wallet.github.io/test-runner/1731//#testresult/9db875fd698f872a","status":"passed","time":{"start":1666052633562,"stop":1666052639280,"duration":5718}},{"uid":"b889b8ef3c491ad9","reportUrl":"https://nova-wallet.github.io/test-runner/1730//#testresult/b889b8ef3c491ad9","status":"passed","time":{"start":1666037173756,"stop":1666037179498,"duration":5742}},{"uid":"3f5d7f9938b659e8","reportUrl":"https://nova-wallet.github.io/test-runner/1729//#testresult/3f5d7f9938b659e8","status":"passed","time":{"start":1666023025987,"stop":1666023029696,"duration":3709}},{"uid":"f45f1fba9af47e9","reportUrl":"https://nova-wallet.github.io/test-runner/1728//#testresult/f45f1fba9af47e9","status":"passed","time":{"start":1666008500034,"stop":1666008503612,"duration":3578}},{"uid":"ac3b88d00e53d420","reportUrl":"https://nova-wallet.github.io/test-runner/1727//#testresult/ac3b88d00e53d420","status":"passed","time":{"start":1665994467736,"stop":1665994471122,"duration":3386}},{"uid":"3dc989ba48d9385","reportUrl":"https://nova-wallet.github.io/test-runner/1726//#testresult/3dc989ba48d9385","status":"passed","time":{"start":1665982006946,"stop":1665982010372,"duration":3426}},{"uid":"789bcf325b9994cb","reportUrl":"https://nova-wallet.github.io/test-runner/1725//#testresult/789bcf325b9994cb","status":"passed","time":{"start":1665966324775,"stop":1665966328444,"duration":3669}},{"uid":"acf15ae8b3be92b2","reportUrl":"https://nova-wallet.github.io/test-runner/1724//#testresult/acf15ae8b3be92b2","status":"passed","time":{"start":1665950774477,"stop":1665950779848,"duration":5371}},{"uid":"14116dd1df23e67f","reportUrl":"https://nova-wallet.github.io/test-runner/1723//#testresult/14116dd1df23e67f","status":"passed","time":{"start":1665936389649,"stop":1665936395324,"duration":5675}},{"uid":"4b9a53bcbde31655","reportUrl":"https://nova-wallet.github.io/test-runner/1722//#testresult/4b9a53bcbde31655","status":"passed","time":{"start":1665922054935,"stop":1665922060388,"duration":5453}}]},"tags":[]},"source":"80e7bdc1804cac40.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f979f8bb850>"]}