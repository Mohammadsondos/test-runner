{"uid":"3de77eb79d1178e","name":"test_precision[Test for Calamari]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"ffd9a01f22907d29c7a127cdb3ecc3e2","time":{"start":1669407609957,"stop":1669407610523,"duration":566},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022e6070>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f027f6ee0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f027f6ee0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Calamari\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022e6070>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f027f6ee0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f027f6ee0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Calamari\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"d0b5a618a3ee540d","name":"stdout","source":"d0b5a618a3ee540d.txt","type":"text/plain","size":54}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1738-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f0f027f6ee0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1319c4ff4b238fee","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669407599372,"stop":1669407599940,"duration":568}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":248,"unknown":0,"total":252},"items":[{"uid":"b12601ecc53fd34a","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/b12601ecc53fd34a","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669393216378,"stop":1669393216548,"duration":170}},{"uid":"b731f78be3ae8f96","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/b731f78be3ae8f96","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669378865310,"stop":1669378865721,"duration":411}},{"uid":"3842924600659fa1","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/3842924600659fa1","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Calamari","time":{"start":1669371643414,"stop":1669371643619,"duration":205}},{"uid":"5ce86f2b75e28cea","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/5ce86f2b75e28cea","status":"passed","time":{"start":1669119105282,"stop":1669119113079,"duration":7797}},{"uid":"fd41914cabb134ab","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/fd41914cabb134ab","status":"passed","time":{"start":1669104650972,"stop":1669104654924,"duration":3952}},{"uid":"46870a7a0a44266c","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/46870a7a0a44266c","status":"passed","time":{"start":1669090339708,"stop":1669090347423,"duration":7715}},{"uid":"cbed5fa4a6601bac","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/cbed5fa4a6601bac","status":"passed","time":{"start":1669076513377,"stop":1669076523307,"duration":9930}},{"uid":"3de2cd0a50ea00c7","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/3de2cd0a50ea00c7","status":"passed","time":{"start":1669061449029,"stop":1669061454034,"duration":5005}},{"uid":"3dff13a48e7831ea","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/3dff13a48e7831ea","status":"passed","time":{"start":1669047116343,"stop":1669047124360,"duration":8017}},{"uid":"137dff8cd7ceba59","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/137dff8cd7ceba59","status":"passed","time":{"start":1669032755075,"stop":1669032761451,"duration":6376}},{"uid":"7c6a8967c2c66ee6","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/7c6a8967c2c66ee6","status":"passed","time":{"start":1669018333029,"stop":1669018340084,"duration":7055}},{"uid":"bd6021b98ee8b0b6","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/bd6021b98ee8b0b6","status":"passed","time":{"start":1669004070124,"stop":1669004076503,"duration":6379}},{"uid":"6ccc34246bd75013","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/6ccc34246bd75013","status":"passed","time":{"start":1668990026388,"stop":1668990032824,"duration":6436}},{"uid":"548ffa64dff930ee","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/548ffa64dff930ee","status":"passed","time":{"start":1668974890500,"stop":1668974896007,"duration":5507}},{"uid":"e2ac02ca830930db","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/e2ac02ca830930db","status":"passed","time":{"start":1668960487368,"stop":1668960487368,"duration":0}},{"uid":"166e5f9571a3febf","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/166e5f9571a3febf","status":"passed","time":{"start":1668946159201,"stop":1668946159201,"duration":0}},{"uid":"15a01683b0a0327a","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/15a01683b0a0327a","status":"passed","time":{"start":1668931764289,"stop":1668931771768,"duration":7479}},{"uid":"3e6f64e4015b2cf7","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/3e6f64e4015b2cf7","status":"passed","time":{"start":1668917453308,"stop":1668917457671,"duration":4363}},{"uid":"57f343a7e57442f","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/57f343a7e57442f","status":"passed","time":{"start":1668903604560,"stop":1668903610500,"duration":5940}},{"uid":"2bc6cd3d6d8ef835","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/2bc6cd3d6d8ef835","status":"passed","time":{"start":1668888480982,"stop":1668888486883,"duration":5901}}]},"tags":[]},"source":"3de77eb79d1178e.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f0f027f6ee0>"]}