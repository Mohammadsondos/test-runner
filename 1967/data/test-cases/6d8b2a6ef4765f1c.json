{"uid":"6d8b2a6ef4765f1c","name":"test_precision[Test for Phala]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"e284fa911e6254e96eae398d20b1eb79","time":{"start":1669407811223,"stop":1669407811956,"duration":733},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Phala","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022e6df0>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f0235b340>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f0235b340>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Phala\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Phala","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022e6df0>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f0235b340>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f0235b340>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Phala\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"5cb6f9cf66161e84","name":"stdout","source":"5cb6f9cf66161e84.txt","type":"text/plain","size":54}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1738-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f0f0235b340>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e8780ec679b35381","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Phala","time":{"start":1669407800506,"stop":1669407801205,"duration":699}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":247,"unknown":0,"total":252},"items":[{"uid":"bed881884c79938f","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/bed881884c79938f","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Phala","time":{"start":1669393408934,"stop":1669393409567,"duration":633}},{"uid":"dc2341bd5aedcb96","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/dc2341bd5aedcb96","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Phala","time":{"start":1669379070512,"stop":1669379071160,"duration":648}},{"uid":"739007b69fd1c89e","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/739007b69fd1c89e","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Phala","time":{"start":1669371840679,"stop":1669371841360,"duration":681}},{"uid":"5f402e401ca6bffd","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/5f402e401ca6bffd","status":"passed","time":{"start":1669119141625,"stop":1669119141625,"duration":0}},{"uid":"c15a060054aac38e","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/c15a060054aac38e","status":"passed","time":{"start":1669104696420,"stop":1669104696420,"duration":0}},{"uid":"410a5a09c59d104d","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/410a5a09c59d104d","status":"passed","time":{"start":1669090350059,"stop":1669090350060,"duration":1}},{"uid":"fb8b121a235c8ef5","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/fb8b121a235c8ef5","status":"passed","time":{"start":1669076529396,"stop":1669076529396,"duration":0}},{"uid":"a28f370728544846","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/a28f370728544846","status":"passed","time":{"start":1669061492815,"stop":1669061492815,"duration":0}},{"uid":"a573bbcbf5c551a6","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/a573bbcbf5c551a6","status":"passed","time":{"start":1669047121761,"stop":1669047121761,"duration":0}},{"uid":"7bccb7f7056d92de","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/7bccb7f7056d92de","status":"passed","time":{"start":1669032799595,"stop":1669032799595,"duration":0}},{"uid":"9ec7e4dfd4c063cd","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/9ec7e4dfd4c063cd","status":"passed","time":{"start":1669018318298,"stop":1669018318299,"duration":1}},{"uid":"5aa50e05b117e531","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/5aa50e05b117e531","status":"passed","time":{"start":1669004154951,"stop":1669004154952,"duration":1}},{"uid":"dfb372c0d90c00c6","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/dfb372c0d90c00c6","status":"passed","time":{"start":1668990045435,"stop":1668990045435,"duration":0}},{"uid":"f65f935ee0906fba","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/f65f935ee0906fba","status":"passed","time":{"start":1668974903292,"stop":1668974903292,"duration":0}},{"uid":"8ab257a90c172351","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/8ab257a90c172351","status":"passed","time":{"start":1668960505584,"stop":1668960513203,"duration":7619}},{"uid":"ae67a2fdd283f35","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/ae67a2fdd283f35","status":"passed","time":{"start":1668946177081,"stop":1668946185074,"duration":7993}},{"uid":"50cb9cf451e9896a","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/50cb9cf451e9896a","status":"passed","time":{"start":1668931779293,"stop":1668931779293,"duration":0}},{"uid":"2dcc8ad772ed0c7d","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/2dcc8ad772ed0c7d","status":"passed","time":{"start":1668917467460,"stop":1668917467460,"duration":0}},{"uid":"243dbbb89e822399","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/243dbbb89e822399","status":"passed","time":{"start":1668903623471,"stop":1668903623471,"duration":0}},{"uid":"aa6673a70e795735","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/aa6673a70e795735","status":"passed","time":{"start":1668888494389,"stop":1668888494389,"duration":0}}]},"tags":[]},"source":"6d8b2a6ef4765f1c.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f0f0235b340>"]}