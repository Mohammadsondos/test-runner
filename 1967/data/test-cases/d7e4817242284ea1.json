{"uid":"d7e4817242284ea1","name":"test_chainId[Test for Kintsugi]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"d099c2b4c2f14e9d59eca5e290a013bc","time":{"start":1669407087915,"stop":1669407099397,"duration":11482},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f947a94df70>\nchain = <tests.utils.chain_model.Chain object at 0x7f947a9911f0>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f947a9911f0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f947a94df70>\nchain = <tests.utils.chain_model.Chain object at 0x7f947a9911f0>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f947a9911f0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"456c26af25a5b41b","name":"stdout","source":"456c26af25a5b41b.txt","type":"text/plain","size":108}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1735-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f947a9911f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c1eb53dc17f3a92","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi","time":{"start":1669407067149,"stop":1669407077897,"duration":10748}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":248,"unknown":0,"total":252},"items":[{"uid":"bbd670f1d2773847","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/bbd670f1d2773847","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi","time":{"start":1669392682564,"stop":1669392693943,"duration":11379}},{"uid":"394bc6e4cebce4d0","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/394bc6e4cebce4d0","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi","time":{"start":1669378349128,"stop":1669378360629,"duration":11501}},{"uid":"594b2290fc9756ae","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/594b2290fc9756ae","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Kintsugi","time":{"start":1669371096850,"stop":1669371108221,"duration":11371}},{"uid":"f8e2d1f1469c3383","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/f8e2d1f1469c3383","status":"passed","time":{"start":1669119099669,"stop":1669119099670,"duration":1}},{"uid":"67e6a6c257a6ccd","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/67e6a6c257a6ccd","status":"passed","time":{"start":1669104656750,"stop":1669104656750,"duration":0}},{"uid":"3d0f7750467e403","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/3d0f7750467e403","status":"passed","time":{"start":1669090295278,"stop":1669090295278,"duration":0}},{"uid":"71c03199a39c042","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/71c03199a39c042","status":"passed","time":{"start":1669076490995,"stop":1669076490995,"duration":0}},{"uid":"d68b06fdce6ad859","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/d68b06fdce6ad859","status":"passed","time":{"start":1669061447464,"stop":1669061447464,"duration":0}},{"uid":"cf52ec3c18c6fb0c","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/cf52ec3c18c6fb0c","status":"passed","time":{"start":1669047074007,"stop":1669047074007,"duration":0}},{"uid":"f8c378ebf129006b","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/f8c378ebf129006b","status":"passed","time":{"start":1669032752122,"stop":1669032752122,"duration":0}},{"uid":"11b48f3452e3ce","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/11b48f3452e3ce","status":"passed","time":{"start":1669018272397,"stop":1669018272397,"duration":0}},{"uid":"3c954909e2570e7d","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/3c954909e2570e7d","status":"passed","time":{"start":1669004117123,"stop":1669004117123,"duration":0}},{"uid":"5c53c2c80ba4f810","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/5c53c2c80ba4f810","status":"passed","time":{"start":1668989857264,"stop":1668989862683,"duration":5419}},{"uid":"a74fed0a02805581","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/a74fed0a02805581","status":"passed","time":{"start":1668974742444,"stop":1668974746519,"duration":4075}},{"uid":"d28bee032b209706","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/d28bee032b209706","status":"passed","time":{"start":1668960341707,"stop":1668960341708,"duration":1}},{"uid":"3cb3207a720bf372","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/3cb3207a720bf372","status":"passed","time":{"start":1668945994538,"stop":1668945994538,"duration":0}},{"uid":"78f562297bea74f9","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/78f562297bea74f9","status":"passed","time":{"start":1668931588945,"stop":1668931594400,"duration":5455}},{"uid":"f2c038028823c179","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/f2c038028823c179","status":"passed","time":{"start":1668917311301,"stop":1668917315113,"duration":3812}},{"uid":"6fce5e45fdc03a78","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/6fce5e45fdc03a78","status":"passed","time":{"start":1668903450313,"stop":1668903454424,"duration":4111}},{"uid":"c53e2058f0095e10","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/c53e2058f0095e10","status":"passed","time":{"start":1668888335938,"stop":1668888340198,"duration":4260}}]},"tags":[]},"source":"d7e4817242284ea1.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f947a9911f0>"]}