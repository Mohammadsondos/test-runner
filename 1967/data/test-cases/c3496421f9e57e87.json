{"uid":"c3496421f9e57e87","name":"test_precision[Test for KILT]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"d18900cd28188dad91c5f89dd9271bda","time":{"start":1669407598551,"stop":1669407599364,"duration":813},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] KILT","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022c7fa0>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f027f6eb0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f027f6eb0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] KILT\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] KILT","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022c7fa0>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f027f6eb0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f027f6eb0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] KILT\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"e46d6b5c94b6bde1","name":"stdout","source":"e46d6b5c94b6bde1.txt","type":"text/plain","size":108}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1738-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f0f027f6eb0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"dc9d671f9023365a","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] KILT","time":{"start":1669407587636,"stop":1669407588532,"duration":896}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":147,"unknown":0,"total":151},"items":[{"uid":"f5ab815317956998","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/f5ab815317956998","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] KILT","time":{"start":1669393205343,"stop":1669393206191,"duration":848}},{"uid":"f1b8ad12bff92cac","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/f1b8ad12bff92cac","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] KILT","time":{"start":1669378854027,"stop":1669378854881,"duration":854}},{"uid":"d0d42cee9fdcec28","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/d0d42cee9fdcec28","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] KILT","time":{"start":1669371632005,"stop":1669371633130,"duration":1125}},{"uid":"a0ca1c394f3c2130","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/a0ca1c394f3c2130","status":"passed","time":{"start":1669119105238,"stop":1669119105238,"duration":0}},{"uid":"5a89857fd30de55","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/5a89857fd30de55","status":"passed","time":{"start":1669104650929,"stop":1669104650929,"duration":0}},{"uid":"53d21e32488b6f4d","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/53d21e32488b6f4d","status":"passed","time":{"start":1669090339665,"stop":1669090339665,"duration":0}},{"uid":"87b25c2d46b14261","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/87b25c2d46b14261","status":"passed","time":{"start":1669076513334,"stop":1669076513334,"duration":0}},{"uid":"bed935cf0cd321f2","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/bed935cf0cd321f2","status":"passed","time":{"start":1669061448984,"stop":1669061448984,"duration":0}},{"uid":"476096d7d0321598","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/476096d7d0321598","status":"passed","time":{"start":1669047116299,"stop":1669047116299,"duration":0}},{"uid":"ef7c97e6a8d0f825","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/ef7c97e6a8d0f825","status":"passed","time":{"start":1669032755031,"stop":1669032755031,"duration":0}},{"uid":"3b6025fa463954ef","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/3b6025fa463954ef","status":"passed","time":{"start":1669018332986,"stop":1669018332987,"duration":1}},{"uid":"9434c52590bc24a6","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/9434c52590bc24a6","status":"passed","time":{"start":1669004070082,"stop":1669004070082,"duration":0}},{"uid":"6edae0b66eb45b69","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/6edae0b66eb45b69","status":"passed","time":{"start":1668990026343,"stop":1668990026343,"duration":0}},{"uid":"76e86215933976fb","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/76e86215933976fb","status":"passed","time":{"start":1668974890458,"stop":1668974890458,"duration":0}},{"uid":"5d73a24b72f2e132","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/5d73a24b72f2e132","status":"passed","time":{"start":1668960481899,"stop":1668960487365,"duration":5466}},{"uid":"2767ce3f495076e6","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/2767ce3f495076e6","status":"passed","time":{"start":1668946153353,"stop":1668946159196,"duration":5843}},{"uid":"850f96f4811e2c2e","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/850f96f4811e2c2e","status":"passed","time":{"start":1668931764245,"stop":1668931764245,"duration":0}},{"uid":"59cf88c308c55ee5","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/59cf88c308c55ee5","status":"passed","time":{"start":1668917453265,"stop":1668917453265,"duration":0}},{"uid":"742e12858034166c","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/742e12858034166c","status":"passed","time":{"start":1668903604519,"stop":1668903604519,"duration":0}},{"uid":"3c9a06fe4afe7337","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/3c9a06fe4afe7337","status":"passed","time":{"start":1668888480941,"stop":1668888480941,"duration":0}}]},"tags":[]},"source":"c3496421f9e57e87.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f0f027f6eb0>"]}