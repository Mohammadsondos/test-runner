{"uid":"a2923dce995682b8","name":"test_can_create_connection[Test for QUARTZ, url: wss://us-ws-quartz.unique.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c90170add3f7fc11fe94a138a71d8345","time":{"start":1669407042226,"stop":1669407042402,"duration":176},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'QUARTZ', 'url': 'wss://us-ws-quartz.unique.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az77-903"},{"name":"thread","value":"1581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://us-ws-quartz.unique.network', 'name': 'QUARTZ'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"756c536291ba8053","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669407031892,"stop":1669407032142,"duration":250}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":250,"unknown":0,"total":254},"items":[{"uid":"342c3d0b602482eb","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/342c3d0b602482eb","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392639915,"stop":1669392640103,"duration":188}},{"uid":"4a8b2a6f396a5ad4","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/4a8b2a6f396a5ad4","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378289184,"stop":1669378289209,"duration":25}},{"uid":"7125739524720c3a","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/7125739524720c3a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371046699,"stop":1669371046872,"duration":173}},{"uid":"9d317810838e87b6","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/9d317810838e87b6","status":"passed","time":{"start":1669118708175,"stop":1669118708244,"duration":69}},{"uid":"7c2bbbe1abaa7e0f","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/7c2bbbe1abaa7e0f","status":"passed","time":{"start":1669104321849,"stop":1669104322087,"duration":238}},{"uid":"24271890c01321e1","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/24271890c01321e1","status":"passed","time":{"start":1669089889159,"stop":1669089889457,"duration":298}},{"uid":"da74f22ab86a966c","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/da74f22ab86a966c","status":"passed","time":{"start":1669076130809,"stop":1669076130875,"duration":66}},{"uid":"35b4cf65f74273bb","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/35b4cf65f74273bb","status":"passed","time":{"start":1669061083059,"stop":1669061083437,"duration":378}},{"uid":"cc9b21e0625d2df8","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/cc9b21e0625d2df8","status":"passed","time":{"start":1669046715008,"stop":1669046715345,"duration":337}},{"uid":"9cc8561082a6bde2","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/9cc8561082a6bde2","status":"passed","time":{"start":1669032322411,"stop":1669032322452,"duration":41}},{"uid":"391057b72c67a3fd","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/391057b72c67a3fd","status":"passed","time":{"start":1669017918077,"stop":1669017918345,"duration":268}},{"uid":"9dcddf859301ce37","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/9dcddf859301ce37","status":"passed","time":{"start":1669003719655,"stop":1669003719705,"duration":50}},{"uid":"53cf6a7f51060ffb","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/53cf6a7f51060ffb","status":"passed","time":{"start":1668989738200,"stop":1668989738310,"duration":110}},{"uid":"12794df7a31934e5","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/12794df7a31934e5","status":"passed","time":{"start":1668974626696,"stop":1668974626798,"duration":102}},{"uid":"fe069d4e7c3e6d1a","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/fe069d4e7c3e6d1a","status":"passed","time":{"start":1668960271949,"stop":1668960272280,"duration":331}},{"uid":"4e45001d279337c2","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/4e45001d279337c2","status":"passed","time":{"start":1668945936241,"stop":1668945936603,"duration":362}},{"uid":"489ed4dc25cc0a7","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/489ed4dc25cc0a7","status":"passed","time":{"start":1668931452174,"stop":1668931452460,"duration":286}},{"uid":"e0b8fb4c5bd3d423","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/e0b8fb4c5bd3d423","status":"passed","time":{"start":1668917246028,"stop":1668917246296,"duration":268}},{"uid":"1d341897f6d0d872","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/1d341897f6d0d872","status":"passed","time":{"start":1668903381149,"stop":1668903381243,"duration":94}},{"uid":"ebedbcc769ccefa","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/ebedbcc769ccefa","status":"passed","time":{"start":1668888223384,"stop":1668888223475,"duration":91}}]},"tags":[]},"source":"a2923dce995682b8.json","parameterValues":["{'url': 'wss://us-ws-quartz.unique.network', 'name': 'QUARTZ'}"]}