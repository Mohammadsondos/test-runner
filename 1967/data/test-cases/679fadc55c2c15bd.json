{"uid":"679fadc55c2c15bd","name":"test_can_create_connection[Test for KILT, url: wss://spiritnet.kilt.io/]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e9f49a30f86013b1729b9ba9efef42ff","time":{"start":1669406976915,"stop":1669406977522,"duration":607},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'KILT', 'url': 'wss://spiritnet.kilt.io/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az77-903"},{"name":"thread","value":"1581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://spiritnet.kilt.io/', 'name': 'KILT'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fd84c145856fc9a6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406966290,"stop":1669406966846,"duration":556}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":148,"unknown":0,"total":152},"items":[{"uid":"13f119d8c95798ae","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/13f119d8c95798ae","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392574339,"stop":1669392574887,"duration":548}},{"uid":"9d1e203bdb2679c6","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/9d1e203bdb2679c6","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378225119,"stop":1669378225482,"duration":363}},{"uid":"1ef91b9c067843b9","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/1ef91b9c067843b9","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370981520,"stop":1669370982054,"duration":534}},{"uid":"dbe1501f2b065d2a","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/dbe1501f2b065d2a","status":"passed","time":{"start":1669118742625,"stop":1669118743099,"duration":474}},{"uid":"af4248cc0004f8aa","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/af4248cc0004f8aa","status":"passed","time":{"start":1669104318283,"stop":1669104318953,"duration":670}},{"uid":"45009c65d8cf8ad3","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/45009c65d8cf8ad3","status":"passed","time":{"start":1669089886249,"stop":1669089886909,"duration":660}},{"uid":"98368664aee4603c","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/98368664aee4603c","status":"passed","time":{"start":1669076166258,"stop":1669076166886,"duration":628}},{"uid":"399497a0e0278782","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/399497a0e0278782","status":"passed","time":{"start":1669061079412,"stop":1669061080099,"duration":687}},{"uid":"8bb540bc1dbd396c","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/8bb540bc1dbd396c","status":"passed","time":{"start":1669046711314,"stop":1669046711983,"duration":669}},{"uid":"1913f57892d80f7d","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/1913f57892d80f7d","status":"passed","time":{"start":1669032360094,"stop":1669032360568,"duration":474}},{"uid":"e66ace0d73440f27","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/e66ace0d73440f27","status":"passed","time":{"start":1669017914784,"stop":1669017915441,"duration":657}},{"uid":"580e9973c3c2bbb7","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/580e9973c3c2bbb7","status":"passed","time":{"start":1669003755257,"stop":1669003755738,"duration":481}},{"uid":"e29ffe4bcf26b25c","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/e29ffe4bcf26b25c","status":"passed","time":{"start":1668989767523,"stop":1668989768173,"duration":650}},{"uid":"9d074147e4a2c6af","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/9d074147e4a2c6af","status":"passed","time":{"start":1668974664297,"stop":1668974664796,"duration":499}},{"uid":"bba98c234f925d9b","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/bba98c234f925d9b","status":"passed","time":{"start":1668960268531,"stop":1668960269208,"duration":677}},{"uid":"d0d3e258057083fe","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/d0d3e258057083fe","status":"passed","time":{"start":1668945932681,"stop":1668945933550,"duration":869}},{"uid":"97e2a6612ca79f0","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/97e2a6612ca79f0","status":"passed","time":{"start":1668931487268,"stop":1668931487797,"duration":529}},{"uid":"6a53d423c0369eca","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/6a53d423c0369eca","status":"passed","time":{"start":1668917242612,"stop":1668917243255,"duration":643}},{"uid":"311d4ec46a478358","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/311d4ec46a478358","status":"passed","time":{"start":1668903378206,"stop":1668903378712,"duration":506}},{"uid":"84e42894dbcd2a1e","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/84e42894dbcd2a1e","status":"passed","time":{"start":1668888260337,"stop":1668888260975,"duration":638}}]},"tags":[]},"source":"679fadc55c2c15bd.json","parameterValues":["{'url': 'wss://spiritnet.kilt.io/', 'name': 'KILT'}"]}