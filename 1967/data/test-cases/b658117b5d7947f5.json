{"uid":"b658117b5d7947f5","name":"test_can_create_connection[Test for Polkadot, url: wss://polkadot.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"3d6e4d900ee752640ae09aecc5be71f8","time":{"start":1669406642412,"stop":1669406642566,"duration":154},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Polkadot', 'url': 'wss://polkadot.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az77-903"},{"name":"thread","value":"1578-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://polkadot.api.onfinality.io/public-ws', 'name': 'Polkadot'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c9271194f9902497","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406632065,"stop":1669406632314,"duration":249}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":250,"unknown":0,"total":254},"items":[{"uid":"8b8cd9cc48e7e2b3","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/8b8cd9cc48e7e2b3","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392239590,"stop":1669392239779,"duration":189}},{"uid":"6f8c0f5894401d34","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/6f8c0f5894401d34","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669377897962,"stop":1669377897980,"duration":18}},{"uid":"b4ea0b96492d2f26","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/b4ea0b96492d2f26","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370643284,"stop":1669370643402,"duration":118}},{"uid":"a66efa3dce1602e0","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/a66efa3dce1602e0","status":"passed","time":{"start":1669118696049,"stop":1669118696107,"duration":58}},{"uid":"da718ac7e76b5e88","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/da718ac7e76b5e88","status":"passed","time":{"start":1669104271354,"stop":1669104271598,"duration":244}},{"uid":"9ee06fc24b5ae0a4","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/9ee06fc24b5ae0a4","status":"passed","time":{"start":1669089833858,"stop":1669089834105,"duration":247}},{"uid":"f049f188ac81b3a7","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/f049f188ac81b3a7","status":"passed","time":{"start":1669076121054,"stop":1669076121111,"duration":57}},{"uid":"7b3f520619aee580","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/7b3f520619aee580","status":"passed","time":{"start":1669061031298,"stop":1669061031554,"duration":256}},{"uid":"73bc6eece7ec6b45","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/73bc6eece7ec6b45","status":"passed","time":{"start":1669046630930,"stop":1669046631171,"duration":241}},{"uid":"f49aae07006b15f1","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/f49aae07006b15f1","status":"passed","time":{"start":1669032315386,"stop":1669032315432,"duration":46}},{"uid":"b9530b2272433522","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/b9530b2272433522","status":"passed","time":{"start":1669017866687,"stop":1669017866946,"duration":259}},{"uid":"a05d53a520c19f4e","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/a05d53a520c19f4e","status":"passed","time":{"start":1669003712172,"stop":1669003712224,"duration":52}},{"uid":"7af5c5257a6c2b35","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/7af5c5257a6c2b35","status":"passed","time":{"start":1668989722257,"stop":1668989722349,"duration":92}},{"uid":"4e7b1a60d3d27648","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/4e7b1a60d3d27648","status":"passed","time":{"start":1668974618711,"stop":1668974618807,"duration":96}},{"uid":"a5b8e81673d00b24","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/a5b8e81673d00b24","status":"passed","time":{"start":1668960222219,"stop":1668960222445,"duration":226}},{"uid":"6f6ba1cda6624cfe","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/6f6ba1cda6624cfe","status":"passed","time":{"start":1668945872800,"stop":1668945873162,"duration":362}},{"uid":"881bb61618b7f530","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/881bb61618b7f530","status":"passed","time":{"start":1668931441575,"stop":1668931441662,"duration":87}},{"uid":"ad305be355405617","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/ad305be355405617","status":"passed","time":{"start":1668917195442,"stop":1668917195671,"duration":229}},{"uid":"d870345a8ea90975","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/d870345a8ea90975","status":"passed","time":{"start":1668903332353,"stop":1668903332440,"duration":87}},{"uid":"ec34bc35eedc5d1","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/ec34bc35eedc5d1","status":"passed","time":{"start":1668888215592,"stop":1668888215689,"duration":97}}]},"tags":[]},"source":"b658117b5d7947f5.json","parameterValues":["{'url': 'wss://polkadot.api.onfinality.io/public-ws', 'name': 'Polkadot'}"]}