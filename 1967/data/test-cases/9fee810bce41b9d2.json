{"uid":"9fee810bce41b9d2","name":"test_can_create_connection[Test for Interlay, url: wss://interlay.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"61443488771014427266469478d39a64","time":{"start":1669407152950,"stop":1669407153110,"duration":160},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Interlay', 'url': 'wss://interlay.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az77-903"},{"name":"thread","value":"1581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://interlay.api.onfinality.io/public-ws', 'name': 'Interlay'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d3f838a04c5d9974","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669407142686,"stop":1669407142882,"duration":196}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":236,"unknown":0,"total":254},"items":[{"uid":"2fc99df9830b700c","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/2fc99df9830b700c","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392749889,"stop":1669392750034,"duration":145}},{"uid":"49213843884a7301","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/49213843884a7301","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378410143,"stop":1669378410174,"duration":31}},{"uid":"ae94de85c026c0b","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/ae94de85c026c0b","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371156199,"stop":1669371156307,"duration":108}},{"uid":"87b8c4ec4abf4728","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/87b8c4ec4abf4728","status":"passed","time":{"start":1669118757383,"stop":1669118757436,"duration":53}},{"uid":"8cb24b01048d5a33","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/8cb24b01048d5a33","status":"passed","time":{"start":1669104327663,"stop":1669104327894,"duration":231}},{"uid":"478b0147c7d8c509","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/478b0147c7d8c509","status":"passed","time":{"start":1669089896455,"stop":1669089896671,"duration":216}},{"uid":"7869e7eee534138f","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7869e7eee534138f","status":"passed","time":{"start":1669076178888,"stop":1669076178939,"duration":51}},{"uid":"ec70ea42a2206358","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/ec70ea42a2206358","status":"passed","time":{"start":1669061099511,"stop":1669061099713,"duration":202}},{"uid":"21638d44a492bc01","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/21638d44a492bc01","status":"passed","time":{"start":1669046768709,"stop":1669046768965,"duration":256}},{"uid":"9e5c3ee92aadd0cd","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/9e5c3ee92aadd0cd","status":"passed","time":{"start":1669032371136,"stop":1669032371168,"duration":32}},{"uid":"9652d8febbf3f7e","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/9652d8febbf3f7e","status":"passed","time":{"start":1669017926722,"stop":1669017926942,"duration":220}},{"uid":"a6016b9747ce6ba5","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/a6016b9747ce6ba5","status":"passed","time":{"start":1669003767980,"stop":1669003768032,"duration":52}},{"uid":"ee791cfc183af718","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/ee791cfc183af718","status":"passed","time":{"start":1668989788522,"stop":1668989788621,"duration":99}},{"uid":"77d4013903fa55f0","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/77d4013903fa55f0","status":"passed","time":{"start":1668974683253,"stop":1668974683329,"duration":76}},{"uid":"7a7ff361b7b35025","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/7a7ff361b7b35025","status":"passed","time":{"start":1668960278163,"stop":1668960278434,"duration":271}},{"uid":"8dccb616acff312d","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/8dccb616acff312d","status":"passed","time":{"start":1668945944057,"stop":1668945944450,"duration":393}},{"uid":"e0718274a3d7bc19","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/e0718274a3d7bc19","status":"passed","time":{"start":1668931502260,"stop":1668931502351,"duration":91}},{"uid":"225eddf27d8e865a","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/225eddf27d8e865a","status":"passed","time":{"start":1668917252063,"stop":1668917252277,"duration":214}},{"uid":"18f3694bd3b21107","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/18f3694bd3b21107","status":"passed","time":{"start":1668903388703,"stop":1668903388785,"duration":82}},{"uid":"7005709e2a3ae6be","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/7005709e2a3ae6be","status":"passed","time":{"start":1668888274059,"stop":1668888274135,"duration":76}}]},"tags":[]},"source":"9fee810bce41b9d2.json","parameterValues":["{'url': 'wss://interlay.api.onfinality.io/public-ws', 'name': 'Interlay'}"]}