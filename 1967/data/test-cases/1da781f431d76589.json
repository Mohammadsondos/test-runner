{"uid":"1da781f431d76589","name":"test_chainId[Test for Picasso]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"581e5089c01e9d4a3f599ba74d040215","time":{"start":1669407109949,"stop":1669407110332,"duration":383},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Picasso","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f947a8ee040>\nchain = <tests.utils.chain_model.Chain object at 0x7f947a991220>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f947a991220>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Picasso\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Picasso","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f947a8ee040>\nchain = <tests.utils.chain_model.Chain object at 0x7f947a991220>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f947a991220>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Picasso\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"8eb7a2a5dfe2110c","name":"stdout","source":"8eb7a2a5dfe2110c.txt","type":"text/plain","size":54}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1735-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f947a991220>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"773543c70ba3c92b","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Picasso","time":{"start":1669407099404,"stop":1669407099931,"duration":527}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":248,"unknown":0,"total":252},"items":[{"uid":"6378166d3b3df271","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/6378166d3b3df271","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Picasso","time":{"start":1669392704716,"stop":1669392705124,"duration":408}},{"uid":"607a928161871be2","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/607a928161871be2","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Picasso","time":{"start":1669378370947,"stop":1669378371235,"duration":288}},{"uid":"b861176e1f19ed85","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/b861176e1f19ed85","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Picasso","time":{"start":1669371118700,"stop":1669371119194,"duration":494}},{"uid":"5718e30dcc27c0a7","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/5718e30dcc27c0a7","status":"passed","time":{"start":1669119099710,"stop":1669119105218,"duration":5508}},{"uid":"2ba736e2e0456475","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/2ba736e2e0456475","status":"passed","time":{"start":1669104656792,"stop":1669104661973,"duration":5181}},{"uid":"388a07c155978ca7","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/388a07c155978ca7","status":"passed","time":{"start":1669090295320,"stop":1669090303147,"duration":7827}},{"uid":"8cbe16824e210762","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/8cbe16824e210762","status":"passed","time":{"start":1669076491037,"stop":1669076495929,"duration":4892}},{"uid":"e77423ffb60f21b4","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/e77423ffb60f21b4","status":"passed","time":{"start":1669061447505,"stop":1669061453642,"duration":6137}},{"uid":"4bccce787a8c1931","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/4bccce787a8c1931","status":"passed","time":{"start":1669047074051,"stop":1669047080878,"duration":6827}},{"uid":"e66c5d6acfe06a74","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/e66c5d6acfe06a74","status":"passed","time":{"start":1669032752165,"stop":1669032758854,"duration":6689}},{"uid":"cf5afad1285fb6aa","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/cf5afad1285fb6aa","status":"passed","time":{"start":1669018272442,"stop":1669018278834,"duration":6392}},{"uid":"197f1a54ed46eb3a","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/197f1a54ed46eb3a","status":"passed","time":{"start":1669004117167,"stop":1669004122100,"duration":4933}},{"uid":"e90359023f12a524","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/e90359023f12a524","status":"passed","time":{"start":1668989862690,"stop":1668989862690,"duration":0}},{"uid":"7fdfdb9d84f462f1","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/7fdfdb9d84f462f1","status":"passed","time":{"start":1668974746523,"stop":1668974746523,"duration":0}},{"uid":"dd16f30c91e0e782","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/dd16f30c91e0e782","status":"passed","time":{"start":1668960341753,"stop":1668960345438,"duration":3685}},{"uid":"c5771e1d58d96abb","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/c5771e1d58d96abb","status":"passed","time":{"start":1668945994583,"stop":1668945998825,"duration":4242}},{"uid":"c3eb851340a3f026","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/c3eb851340a3f026","status":"passed","time":{"start":1668931594405,"stop":1668931594405,"duration":0}},{"uid":"327154b53054259f","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/327154b53054259f","status":"passed","time":{"start":1668917315117,"stop":1668917315118,"duration":1}},{"uid":"63c62ec105262ea0","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/63c62ec105262ea0","status":"passed","time":{"start":1668903454430,"stop":1668903454430,"duration":0}},{"uid":"9dfb7b5b7bd9e276","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/9dfb7b5b7bd9e276","status":"passed","time":{"start":1668888340202,"stop":1668888340202,"duration":0}}]},"tags":[]},"source":"1da781f431d76589.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f947a991220>"]}