{"uid":"3859c49c7d64ee84","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc-1.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"1e9e7a74f12b7ce492708745e5aab6c0","time":{"start":1669406729204,"stop":1669406729611,"duration":407},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-1.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az77-903"},{"name":"thread","value":"1581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc-1.aca-api.network', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fe91ae9b9ffbb7f9","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669406718682,"stop":1669406719135,"duration":453}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":247,"unknown":0,"total":254},"items":[{"uid":"dc1c3a42b7f364f0","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/dc1c3a42b7f364f0","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392328369,"stop":1669392328813,"duration":444}},{"uid":"46b7e54c879c4331","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/46b7e54c879c4331","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669377982671,"stop":1669377982966,"duration":295}},{"uid":"89806c9e60484bfa","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/89806c9e60484bfa","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370729723,"stop":1669370730193,"duration":470}},{"uid":"eed9b369e06cbbff","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/eed9b369e06cbbff","status":"passed","time":{"start":1669118698697,"stop":1669118699060,"duration":363}},{"uid":"f7841ecc7ce4c2a9","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/f7841ecc7ce4c2a9","status":"passed","time":{"start":1669104274937,"stop":1669104275475,"duration":538}},{"uid":"b7df3cd9bb465b01","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/b7df3cd9bb465b01","status":"passed","time":{"start":1669089837400,"stop":1669089837972,"duration":572}},{"uid":"becb2b7f9b610362","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/becb2b7f9b610362","status":"passed","time":{"start":1669076123557,"stop":1669076123926,"duration":369}},{"uid":"95303ad9ab7b3cd0","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/95303ad9ab7b3cd0","status":"passed","time":{"start":1669061034707,"stop":1669061035257,"duration":550}},{"uid":"632868531eaab10c","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/632868531eaab10c","status":"passed","time":{"start":1669046675233,"stop":1669046675806,"duration":573}},{"uid":"b561aa7b7cd74a3b","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/b561aa7b7cd74a3b","status":"passed","time":{"start":1669032317804,"stop":1669032318168,"duration":364}},{"uid":"2792c2d4f6204715","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/2792c2d4f6204715","status":"passed","time":{"start":1669017870172,"stop":1669017870720,"duration":548}},{"uid":"fdbbd0eb11cf3","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/fdbbd0eb11cf3","status":"passed","time":{"start":1669003714588,"stop":1669003714954,"duration":366}},{"uid":"5075d1b8a475143e","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/5075d1b8a475143e","status":"passed","time":{"start":1668989724970,"stop":1668989725365,"duration":395}},{"uid":"579e0d99040fc071","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/579e0d99040fc071","status":"passed","time":{"start":1668974621310,"stop":1668974621705,"duration":395}},{"uid":"bf9bb3ed0b317351","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/bf9bb3ed0b317351","status":"passed","time":{"start":1668960225804,"stop":1668960226381,"duration":577}},{"uid":"51b0eff19ade7e8c","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/51b0eff19ade7e8c","status":"passed","time":{"start":1668945876918,"stop":1668945877677,"duration":759}},{"uid":"3515e07fd6f53e88","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/3515e07fd6f53e88","status":"passed","time":{"start":1668931444222,"stop":1668931444616,"duration":394}},{"uid":"e3bb8dcd3e7c6c0f","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/e3bb8dcd3e7c6c0f","status":"passed","time":{"start":1668917198871,"stop":1668917199420,"duration":549}},{"uid":"f827e09cd6a9fab7","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/f827e09cd6a9fab7","status":"passed","time":{"start":1668903335229,"stop":1668903335624,"duration":395}},{"uid":"2d9cc3ce09ec59a0","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/2d9cc3ce09ec59a0","status":"passed","time":{"start":1668888218196,"stop":1668888218591,"duration":395}}]},"tags":[]},"source":"3859c49c7d64ee84.json","parameterValues":["{'url': 'wss://karura-rpc-1.aca-api.network', 'name': 'Karura'}"]}