{"uid":"d33eba2f0718f56","name":"test_can_create_connection[Test for Phala, url: wss://api.phala.network/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"db9f156d5a7a09a53633b370d0c7986e","time":{"start":1669407185744,"stop":1669407186381,"duration":637},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Phala', 'url': 'wss://api.phala.network/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az77-903"},{"name":"thread","value":"1581-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://api.phala.network/ws', 'name': 'Phala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9cf882d8865ea122","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669407174666,"stop":1669407175660,"duration":994}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":249,"unknown":0,"total":254},"items":[{"uid":"af0a3d3c8faf7f6a","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/af0a3d3c8faf7f6a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669392782397,"stop":1669392783142,"duration":745}},{"uid":"633ee00b9566c786","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/633ee00b9566c786","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378442095,"stop":1669378442767,"duration":672}},{"uid":"a2c48c3a1381fc66","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/a2c48c3a1381fc66","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371188569,"stop":1669371189214,"duration":645}},{"uid":"a562a2cc57c30b72","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/a562a2cc57c30b72","status":"passed","time":{"start":1669118758022,"stop":1669118758975,"duration":953}},{"uid":"14cf4593051913c9","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/14cf4593051913c9","status":"passed","time":{"start":1669104328692,"stop":1669104329579,"duration":887}},{"uid":"1f14c8fa26b30dc1","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/1f14c8fa26b30dc1","status":"passed","time":{"start":1669089897505,"stop":1669089898429,"duration":924}},{"uid":"f3a2abe0b24699cd","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/f3a2abe0b24699cd","status":"passed","time":{"start":1669076179475,"stop":1669076180399,"duration":924}},{"uid":"859aeeae86801d30","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/859aeeae86801d30","status":"passed","time":{"start":1669061100628,"stop":1669061101828,"duration":1200}},{"uid":"dda61e7e723413f9","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/dda61e7e723413f9","status":"passed","time":{"start":1669046769783,"stop":1669046770730,"duration":947}},{"uid":"11ef0f9bb3cde084","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/11ef0f9bb3cde084","status":"passed","time":{"start":1669032371700,"stop":1669032372654,"duration":954}},{"uid":"cb0a1ec28159dc","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/cb0a1ec28159dc","status":"passed","time":{"start":1669017927736,"stop":1669017928635,"duration":899}},{"uid":"779e96b3e2af866f","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/779e96b3e2af866f","status":"passed","time":{"start":1669003768548,"stop":1669003769476,"duration":928}},{"uid":"19446a52c11d44ba","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/19446a52c11d44ba","status":"passed","time":{"start":1668989789208,"stop":1668989790129,"duration":921}},{"uid":"b37fc200f1fd96a3","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/b37fc200f1fd96a3","status":"passed","time":{"start":1668974683911,"stop":1668974684853,"duration":942}},{"uid":"c3954ce4e87d2ff7","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/c3954ce4e87d2ff7","status":"passed","time":{"start":1668960279342,"stop":1668960280257,"duration":915}},{"uid":"ef89c246ef686ca6","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/ef89c246ef686ca6","status":"passed","time":{"start":1668945945549,"stop":1668945946460,"duration":911}},{"uid":"3c7304b3f4806d34","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/3c7304b3f4806d34","status":"passed","time":{"start":1668931502977,"stop":1668931504098,"duration":1121}},{"uid":"d7dbaf2f45905f96","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/d7dbaf2f45905f96","status":"passed","time":{"start":1668917253064,"stop":1668917253981,"duration":917}},{"uid":"e2c45fcdee8a10c6","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/e2c45fcdee8a10c6","status":"passed","time":{"start":1668903389434,"stop":1668903390372,"duration":938}},{"uid":"6a89bea149c1909c","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/6a89bea149c1909c","status":"passed","time":{"start":1668888274697,"stop":1668888275736,"duration":1039}}]},"tags":[]},"source":"d33eba2f0718f56.json","parameterValues":["{'url': 'wss://api.phala.network/ws', 'name': 'Phala'}"]}