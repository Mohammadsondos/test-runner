{"uid":"853f1d841b1d5b26","name":"test_address_prefix[Test for HydraDX]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"be8d1e0fc9aa46cd9417934e23d31fb7","time":{"start":1669406873704,"stop":1669406874559,"duration":855},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f0f022fedf0>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f0235b2b0>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f0235b2b0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] HydraDX\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7f0f022fedf0>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f0235b2b0>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f0235b2b0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] HydraDX\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"e28a99aec67e240c","name":"stdout","source":"e28a99aec67e240c.txt","type":"text/plain","size":108}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1738-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f0f0235b2b0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b3625f395067c7c0","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","time":{"start":1669406862719,"stop":1669406863686,"duration":967}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":248,"unknown":0,"total":252},"items":[{"uid":"e971e9bb06c7c2f4","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/e971e9bb06c7c2f4","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","time":{"start":1669392478395,"stop":1669392479218,"duration":823}},{"uid":"f47296a5856a3835","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/f47296a5856a3835","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","time":{"start":1669378132491,"stop":1669378133322,"duration":831}},{"uid":"8aaf90891698bb37","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/8aaf90891698bb37","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] HydraDX","time":{"start":1669370883018,"stop":1669370884066,"duration":1048}},{"uid":"f085fa525437596a","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/f085fa525437596a","status":"passed","time":{"start":1669118898044,"stop":1669118901257,"duration":3213}},{"uid":"770c283e108172b","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/770c283e108172b","status":"passed","time":{"start":1669104465016,"stop":1669104468041,"duration":3025}},{"uid":"93b3c363e757bdec","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/93b3c363e757bdec","status":"passed","time":{"start":1669090055584,"stop":1669090060141,"duration":4557}},{"uid":"7b9883a6d704ac65","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7b9883a6d704ac65","status":"passed","time":{"start":1669076380060,"stop":1669076383133,"duration":3073}},{"uid":"6a5dd0ae400ea079","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/6a5dd0ae400ea079","status":"passed","time":{"start":1669061242181,"stop":1669061245745,"duration":3564}},{"uid":"f7edaa9de9043089","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/f7edaa9de9043089","status":"passed","time":{"start":1669046875678,"stop":1669046880099,"duration":4421}},{"uid":"e921d55e1e455f94","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/e921d55e1e455f94","status":"passed","time":{"start":1669032522163,"stop":1669032526814,"duration":4651}},{"uid":"898e1e2aa0d0cb08","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/898e1e2aa0d0cb08","status":"passed","time":{"start":1669018125342,"stop":1669018128966,"duration":3624}},{"uid":"ec722f6bb58d55bb","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/ec722f6bb58d55bb","status":"passed","time":{"start":1669003908044,"stop":1669003910870,"duration":2826}},{"uid":"aafd840481f20111","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/aafd840481f20111","status":"passed","time":{"start":1668989808448,"stop":1668989812453,"duration":4005}},{"uid":"916230c15c714a82","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/916230c15c714a82","status":"passed","time":{"start":1668974697058,"stop":1668974700443,"duration":3385}},{"uid":"e607b3c8ce807605","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/e607b3c8ce807605","status":"passed","time":{"start":1668960292132,"stop":1668960295139,"duration":3007}},{"uid":"e348ab7219c0883","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/e348ab7219c0883","status":"passed","time":{"start":1668945943562,"stop":1668945946655,"duration":3093}},{"uid":"e5bc1a1224650eed","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/e5bc1a1224650eed","status":"passed","time":{"start":1668931537106,"stop":1668931541735,"duration":4629}},{"uid":"f8012e2dba1eec44","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/f8012e2dba1eec44","status":"passed","time":{"start":1668917268621,"stop":1668917271712,"duration":3091}},{"uid":"ebf0c754b8521c93","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/ebf0c754b8521c93","status":"passed","time":{"start":1668903405570,"stop":1668903409069,"duration":3499}},{"uid":"3b55a365d6a7b8c1","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/3b55a365d6a7b8c1","status":"passed","time":{"start":1668888292886,"stop":1668888296764,"duration":3878}}]},"tags":[]},"source":"853f1d841b1d5b26.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f0f0235b2b0>"]}