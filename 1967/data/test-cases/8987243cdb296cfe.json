{"uid":"8987243cdb296cfe","name":"test_precision[Test for Basilisk]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"c44c1b87500e42dbc156756883321e5e","time":{"start":1669407523526,"stop":1669407524340,"duration":814},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Basilisk","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022c7d60>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f027f6dc0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f027f6dc0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Basilisk\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Basilisk","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7f0f022c7d60>\nchain = <tests.utils.chain_model.Chain object at 0x7f0f027f6dc0>\n\n    def test_precision(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f0f027f6dc0>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Basilisk\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"d7aa0528af34e89a","name":"stdout","source":"d7aa0528af34e89a.txt","type":"text/plain","size":108}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az424-565"},{"name":"thread","value":"1738-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f0f027f6dc0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"716292e97b252273","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Basilisk","time":{"start":1669407512139,"stop":1669407513518,"duration":1379}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":248,"unknown":0,"total":252},"items":[{"uid":"207fe4af6f8ca928","reportUrl":"https://nova-wallet.github.io/test-runner/1966//#testresult/207fe4af6f8ca928","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Basilisk","time":{"start":1669393133575,"stop":1669393134920,"duration":1345}},{"uid":"942de3be2cb0b6b7","reportUrl":"https://nova-wallet.github.io/test-runner/1965//#testresult/942de3be2cb0b6b7","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Basilisk","time":{"start":1669378778151,"stop":1669378779153,"duration":1002}},{"uid":"8573d0984706ff54","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/8573d0984706ff54","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Basilisk","time":{"start":1669371556087,"stop":1669371557329,"duration":1242}},{"uid":"444da7274f185414","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/444da7274f185414","status":"passed","time":{"start":1669119090529,"stop":1669119090529,"duration":0}},{"uid":"c5aeee78ff789dc8","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/c5aeee78ff789dc8","status":"passed","time":{"start":1669104637348,"stop":1669104637348,"duration":0}},{"uid":"da3d38c68a9d4cea","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/da3d38c68a9d4cea","status":"passed","time":{"start":1669090322236,"stop":1669090322236,"duration":0}},{"uid":"60f3baf7672bec07","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/60f3baf7672bec07","status":"passed","time":{"start":1669076514861,"stop":1669076514861,"duration":0}},{"uid":"f9a07c6730130114","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/f9a07c6730130114","status":"passed","time":{"start":1669061433342,"stop":1669061433342,"duration":0}},{"uid":"7d21dd9c5a85e562","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/7d21dd9c5a85e562","status":"passed","time":{"start":1669047100304,"stop":1669047100304,"duration":0}},{"uid":"31e87cf3800937ac","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/31e87cf3800937ac","status":"passed","time":{"start":1669032738459,"stop":1669032738459,"duration":0}},{"uid":"509eca8dccea0c8b","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/509eca8dccea0c8b","status":"passed","time":{"start":1669018317818,"stop":1669018317818,"duration":0}},{"uid":"c11e6c6a7be232cb","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/c11e6c6a7be232cb","status":"passed","time":{"start":1669004057256,"stop":1669004057256,"duration":0}},{"uid":"335eebbe5c573507","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/335eebbe5c573507","status":"passed","time":{"start":1668990010846,"stop":1668990010846,"duration":0}},{"uid":"2860a326d4889962","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/2860a326d4889962","status":"passed","time":{"start":1668974875645,"stop":1668974875645,"duration":0}},{"uid":"d22805d3d5158a5d","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/d22805d3d5158a5d","status":"passed","time":{"start":1668960469640,"stop":1668960475144,"duration":5504}},{"uid":"77e70c3a0c2c88d7","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/77e70c3a0c2c88d7","status":"passed","time":{"start":1668946141245,"stop":1668946146977,"duration":5732}},{"uid":"4331143f0f2ce24f","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/4331143f0f2ce24f","status":"passed","time":{"start":1668931746914,"stop":1668931746914,"duration":0}},{"uid":"34e3f7767dc918fa","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/34e3f7767dc918fa","status":"passed","time":{"start":1668917439710,"stop":1668917439710,"duration":0}},{"uid":"b84c6bf67599d33c","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/b84c6bf67599d33c","status":"passed","time":{"start":1668903589612,"stop":1668903589612,"duration":0}},{"uid":"8419738cf78deb4e","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/8419738cf78deb4e","status":"passed","time":{"start":1668888458736,"stop":1668888458736,"duration":0}}]},"tags":[]},"source":"8987243cdb296cfe.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f0f027f6dc0>"]}