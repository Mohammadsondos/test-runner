{"uid":"7de7a06e17b116","name":"test_can_create_connection[Test for Pichiu, url: wss://pichiu.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5d38ef88a22293e2d22b76dd74c65b9f","time":{"start":1673798733953,"stop":1673798793234,"duration":59281},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Pichiu', 'url': 'wss://pichiu.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"f7cd49376fa20ace","name":"stdout","source":"f7cd49376fa20ace.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az370-738"},{"name":"thread","value":"1748-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5d52457f33e9dbb3","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1673798664253,"stop":1673798723870,"duration":59617}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":69,"skipped":0,"passed":475,"unknown":0,"total":544},"items":[{"uid":"dac25bf89da27469","reportUrl":"https://nova-wallet.github.io/test-runner/2277//#testresult/dac25bf89da27469","status":"passed","time":{"start":1673784364869,"stop":1673784365086,"duration":217}},{"uid":"58d2ea2db05d2af0","reportUrl":"https://nova-wallet.github.io/test-runner/2276//#testresult/58d2ea2db05d2af0","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1673770007469,"stop":1673770066893,"duration":59424}},{"uid":"70101f2e11e8d2ea","reportUrl":"https://nova-wallet.github.io/test-runner/2275//#testresult/70101f2e11e8d2ea","status":"passed","time":{"start":1673755551604,"stop":1673755551683,"duration":79}},{"uid":"15d681ed97c74413","reportUrl":"https://nova-wallet.github.io/test-runner/2274//#testresult/15d681ed97c74413","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1673741818543,"stop":1673741877883,"duration":59340}},{"uid":"54570437ca4b170d","reportUrl":"https://nova-wallet.github.io/test-runner/2273//#testresult/54570437ca4b170d","status":"passed","time":{"start":1673726751022,"stop":1673726751318,"duration":296}},{"uid":"c6dbcaa0fc611dbb","reportUrl":"https://nova-wallet.github.io/test-runner/2272//#testresult/c6dbcaa0fc611dbb","status":"passed","time":{"start":1673712418360,"stop":1673712418728,"duration":368}},{"uid":"df4f13b72c7bf72f","reportUrl":"https://nova-wallet.github.io/test-runner/2271//#testresult/df4f13b72c7bf72f","status":"passed","time":{"start":1673697999113,"stop":1673697999431,"duration":318}},{"uid":"fb6394cd6ec828a9","reportUrl":"https://nova-wallet.github.io/test-runner/2270//#testresult/fb6394cd6ec828a9","status":"passed","time":{"start":1673683563999,"stop":1673683611238,"duration":47239}},{"uid":"77e20e407f865d61","reportUrl":"https://nova-wallet.github.io/test-runner/2269//#testresult/77e20e407f865d61","status":"passed","time":{"start":1673669149118,"stop":1673669149417,"duration":299}},{"uid":"a865ed63ed4459d4","reportUrl":"https://nova-wallet.github.io/test-runner/2268//#testresult/a865ed63ed4459d4","status":"passed","time":{"start":1673655304279,"stop":1673655304553,"duration":274}},{"uid":"280e47ff1ebf8b89","reportUrl":"https://nova-wallet.github.io/test-runner/2267//#testresult/280e47ff1ebf8b89","status":"passed","time":{"start":1673640413411,"stop":1673640433050,"duration":19639}},{"uid":"4fbb6bcbb9245296","reportUrl":"https://nova-wallet.github.io/test-runner/2266//#testresult/4fbb6bcbb9245296","status":"passed","time":{"start":1673625976591,"stop":1673625976844,"duration":253}},{"uid":"4aace28060c87768","reportUrl":"https://nova-wallet.github.io/test-runner/2265//#testresult/4aace28060c87768","status":"passed","time":{"start":1673611530430,"stop":1673611530757,"duration":327}},{"uid":"b248a7d8bf104bff","reportUrl":"https://nova-wallet.github.io/test-runner/2264//#testresult/b248a7d8bf104bff","status":"passed","time":{"start":1673597122355,"stop":1673597122446,"duration":91}},{"uid":"8b206fe421008768","reportUrl":"https://nova-wallet.github.io/test-runner/2263//#testresult/8b206fe421008768","status":"passed","time":{"start":1673582685721,"stop":1673582685918,"duration":197}},{"uid":"b6b711d992afe687","reportUrl":"https://nova-wallet.github.io/test-runner/2262//#testresult/b6b711d992afe687","status":"passed","time":{"start":1673568863557,"stop":1673568863760,"duration":203}},{"uid":"56dacfb3102fa7d4","reportUrl":"https://nova-wallet.github.io/test-runner/2261//#testresult/56dacfb3102fa7d4","status":"passed","time":{"start":1673553852649,"stop":1673553852722,"duration":73}},{"uid":"9a004147aa807eec","reportUrl":"https://nova-wallet.github.io/test-runner/2259//#testresult/9a004147aa807eec","status":"passed","time":{"start":1673525160579,"stop":1673525160904,"duration":325}},{"uid":"488cb827b6861040","reportUrl":"https://nova-wallet.github.io/test-runner/2258//#testresult/488cb827b6861040","status":"passed","time":{"start":1673510726336,"stop":1673510726527,"duration":191}},{"uid":"ff5e019ab5821d41","reportUrl":"https://nova-wallet.github.io/test-runner/2257//#testresult/ff5e019ab5821d41","status":"passed","time":{"start":1673496345375,"stop":1673496385048,"duration":39673}}]},"tags":[]},"source":"7de7a06e17b116.json","parameterValues":["{'url': 'wss://pichiu.api.onfinality.io/public-ws', 'name': 'Pichiu'}"]}