{"uid":"67e20a56608e2117","name":"test_can_create_connection[Test for Snow, url: wss://snow-rpc.icenetwork.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"8e5e67017ef0114b0400d3445956124e","time":{"start":1669378687320,"stop":1669378687692,"duration":372},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Snow', 'url': 'wss://snow-rpc.icenetwork.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://snow-rpc.icenetwork.io', 'name': 'Snow'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8d37fa944d0d775a","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378676856,"stop":1669378677251,"duration":395}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":189,"unknown":0,"total":191},"items":[{"uid":"beb48c6ca6a3e34e","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/beb48c6ca6a3e34e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371432314,"stop":1669371432818,"duration":504}},{"uid":"7ae1bfddd7f7b49b","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/7ae1bfddd7f7b49b","status":"passed","time":{"start":1669118799964,"stop":1669118800477,"duration":513}},{"uid":"ddf62ed9b09cd137","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/ddf62ed9b09cd137","status":"passed","time":{"start":1669104372438,"stop":1669104373131,"duration":693}},{"uid":"381509e1b4173503","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/381509e1b4173503","status":"passed","time":{"start":1669089941978,"stop":1669089942698,"duration":720}},{"uid":"74cafcc3dc39bb1a","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/74cafcc3dc39bb1a","status":"passed","time":{"start":1669076219081,"stop":1669076219572,"duration":491}},{"uid":"e1f8459e75107f9f","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/e1f8459e75107f9f","status":"passed","time":{"start":1669061156213,"stop":1669061156889,"duration":676}},{"uid":"37ce0f03a64a3502","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/37ce0f03a64a3502","status":"passed","time":{"start":1669046811721,"stop":1669046812468,"duration":747}},{"uid":"97ac355d710d4247","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/97ac355d710d4247","status":"passed","time":{"start":1669032423238,"stop":1669032423730,"duration":492}},{"uid":"64cd36a0d6a4526","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/64cd36a0d6a4526","status":"passed","time":{"start":1669017962899,"stop":1669017963593,"duration":694}},{"uid":"c7db4ad6cc482e48","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/c7db4ad6cc482e48","status":"passed","time":{"start":1669003797782,"stop":1669003798276,"duration":494}},{"uid":"2e2ea178ea56a20b","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/2e2ea178ea56a20b","status":"passed","time":{"start":1668989828321,"stop":1668989828841,"duration":520}},{"uid":"c21bf0710c8011c3","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/c21bf0710c8011c3","status":"passed","time":{"start":1668974712987,"stop":1668974713497,"duration":510}},{"uid":"5c52e96eb112950c","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/5c52e96eb112950c","status":"passed","time":{"start":1668960326186,"stop":1668960326883,"duration":697}},{"uid":"85e45bc6d46f1806","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/85e45bc6d46f1806","status":"passed","time":{"start":1668945983442,"stop":1668945984503,"duration":1061}},{"uid":"b0834bc7c59748d1","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/b0834bc7c59748d1","status":"passed","time":{"start":1668931532354,"stop":1668931532863,"duration":509}},{"uid":"e940224c842c6b45","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/e940224c842c6b45","status":"passed","time":{"start":1668917286935,"stop":1668917287632,"duration":697}},{"uid":"fef0f13bf8501763","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/fef0f13bf8501763","status":"passed","time":{"start":1668903419616,"stop":1668903420137,"duration":521}},{"uid":"fee25d5572cdb8c","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/fee25d5572cdb8c","status":"passed","time":{"start":1668888303675,"stop":1668888304198,"duration":523}},{"uid":"c51c13baf67f5f96","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/c51c13baf67f5f96","status":"passed","time":{"start":1668873947057,"stop":1668873947584,"duration":527}},{"uid":"3d2cd5c2a1768424","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/3d2cd5c2a1768424","status":"passed","time":{"start":1668859546906,"stop":1668859547396,"duration":490}}]},"tags":[]},"source":"67e20a56608e2117.json","parameterValues":["{'url': 'wss://snow-rpc.icenetwork.io', 'name': 'Snow'}"]}