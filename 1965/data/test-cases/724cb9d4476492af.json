{"uid":"724cb9d4476492af","name":"test_can_create_connection[Test for Crab, url: wss://crab-parachain-rpc.darwinia.network/]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"ccf77dc619fe1e503d43df857f41185c","time":{"start":1669378334671,"stop":1669378335197,"duration":526},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Crab', 'url': 'wss://crab-parachain-rpc.darwinia.network/'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://crab-parachain-rpc.darwinia.network/', 'name': 'Crab'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1acf3697f2305fce","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378324031,"stop":1669378324574,"duration":543}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":248,"unknown":0,"total":252},"items":[{"uid":"e65b677ac7e06d46","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/e65b677ac7e06d46","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371079055,"stop":1669371079541,"duration":486}},{"uid":"384207e519dc6f74","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/384207e519dc6f74","status":"passed","time":{"start":1669118746600,"stop":1669118747373,"duration":773}},{"uid":"be5e3af3aa9a6715","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/be5e3af3aa9a6715","status":"passed","time":{"start":1669104327518,"stop":1669104328273,"duration":755}},{"uid":"b436aeb5614d3d8d","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/b436aeb5614d3d8d","status":"passed","time":{"start":1669089889201,"stop":1669089890032,"duration":831}},{"uid":"ac60b73a2d77c28a","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/ac60b73a2d77c28a","status":"passed","time":{"start":1669076170195,"stop":1669076170993,"duration":798}},{"uid":"37c66e4c56b4240b","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/37c66e4c56b4240b","status":"passed","time":{"start":1669061084990,"stop":1669061085782,"duration":792}},{"uid":"930ff3f5bdc53d9e","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/930ff3f5bdc53d9e","status":"passed","time":{"start":1669046722152,"stop":1669046722982,"duration":830}},{"uid":"71a504ac489292bc","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/71a504ac489292bc","status":"passed","time":{"start":1669032363373,"stop":1669032364106,"duration":733}},{"uid":"14a4fbe522b6791c","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/14a4fbe522b6791c","status":"passed","time":{"start":1669017920313,"stop":1669017921073,"duration":760}},{"uid":"dbd9e1d99feb8c55","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/dbd9e1d99feb8c55","status":"passed","time":{"start":1669003759245,"stop":1669003760018,"duration":773}},{"uid":"bf9c389a63f7a748","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/bf9c389a63f7a748","status":"passed","time":{"start":1668989787097,"stop":1668989787915,"duration":818}},{"uid":"6a52119f06758c2b","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/6a52119f06758c2b","status":"passed","time":{"start":1668974681954,"stop":1668974682753,"duration":799}},{"uid":"fefa425de14263c1","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/fefa425de14263c1","status":"passed","time":{"start":1668960277736,"stop":1668960278517,"duration":781}},{"uid":"a6e4beacc8408a3e","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/a6e4beacc8408a3e","status":"passed","time":{"start":1668945930179,"stop":1668945930862,"duration":683}},{"uid":"6f64502dd09ffc52","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/6f64502dd09ffc52","status":"passed","time":{"start":1668931500821,"stop":1668931501597,"duration":776}},{"uid":"5e31ee30fac83f45","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/5e31ee30fac83f45","status":"passed","time":{"start":1668917249790,"stop":1668917250575,"duration":785}},{"uid":"dea2fae7fb79c6c4","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/dea2fae7fb79c6c4","status":"passed","time":{"start":1668903386973,"stop":1668903387739,"duration":766}},{"uid":"7865637663d66152","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/7865637663d66152","status":"passed","time":{"start":1668888272787,"stop":1668888273576,"duration":789}},{"uid":"e448044a69b434b","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/e448044a69b434b","status":"passed","time":{"start":1668873895516,"stop":1668873896333,"duration":817}},{"uid":"7a5c2cf5fbcb8d6c","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/7a5c2cf5fbcb8d6c","status":"passed","time":{"start":1668859509236,"stop":1668859509984,"duration":748}}]},"tags":[]},"source":"724cb9d4476492af.json","parameterValues":["{'url': 'wss://crab-parachain-rpc.darwinia.network/', 'name': 'Crab'}"]}