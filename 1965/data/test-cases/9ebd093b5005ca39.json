{"uid":"9ebd093b5005ca39","name":"test_can_create_connection[Test for Ternoa, url: wss://mainnet.ternoa.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"aa42128142274ee3db283cfebc49b26c","time":{"start":1669378654448,"stop":1669378654784,"duration":336},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Ternoa', 'url': 'wss://mainnet.ternoa.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://mainnet.ternoa.network', 'name': 'Ternoa'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"829bba01e34fc8bd","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378644048,"stop":1669378644378,"duration":330}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":250,"unknown":0,"total":252},"items":[{"uid":"c189ca1bf7374b95","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/c189ca1bf7374b95","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371398811,"stop":1669371399236,"duration":425}},{"uid":"7bee8d486fcfeccf","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/7bee8d486fcfeccf","status":"passed","time":{"start":1669118795264,"stop":1669118795686,"duration":422}},{"uid":"9807916c107bce6a","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/9807916c107bce6a","status":"passed","time":{"start":1669104368982,"stop":1669104369559,"duration":577}},{"uid":"5370b2916630f86a","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/5370b2916630f86a","status":"passed","time":{"start":1669089937477,"stop":1669089938110,"duration":633}},{"uid":"1ece62070890f412","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/1ece62070890f412","status":"passed","time":{"start":1669076216036,"stop":1669076216514,"duration":478}},{"uid":"715678818acc2457","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/715678818acc2457","status":"passed","time":{"start":1669061152543,"stop":1669061153191,"duration":648}},{"uid":"39f13b04402e9792","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/39f13b04402e9792","status":"passed","time":{"start":1669046808451,"stop":1669046809064,"duration":613}},{"uid":"bbe8138ff03f8f1b","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/bbe8138ff03f8f1b","status":"passed","time":{"start":1669032418192,"stop":1669032418661,"duration":469}},{"uid":"3db6874a57282c5d","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/3db6874a57282c5d","status":"passed","time":{"start":1669017958294,"stop":1669017958905,"duration":611}},{"uid":"f8be611394ac8ee3","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/f8be611394ac8ee3","status":"passed","time":{"start":1669003794847,"stop":1669003795322,"duration":475}},{"uid":"ae96c6123ab0fb2d","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/ae96c6123ab0fb2d","status":"passed","time":{"start":1668989825536,"stop":1668989826015,"duration":479}},{"uid":"64268e6fc236e159","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/64268e6fc236e159","status":"passed","time":{"start":1668974709800,"stop":1668974710238,"duration":438}},{"uid":"6ab58112cfa76cc4","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/6ab58112cfa76cc4","status":"passed","time":{"start":1668960322619,"stop":1668960323237,"duration":618}},{"uid":"925e79b27139a693","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/925e79b27139a693","status":"passed","time":{"start":1668945978663,"stop":1668945979408,"duration":745}},{"uid":"16675b9bdaa5aed9","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/16675b9bdaa5aed9","status":"passed","time":{"start":1668931529255,"stop":1668931529744,"duration":489}},{"uid":"769efb069cae9fd4","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/769efb069cae9fd4","status":"passed","time":{"start":1668917282066,"stop":1668917282719,"duration":653}},{"uid":"a4c356a8eb255aeb","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/a4c356a8eb255aeb","status":"passed","time":{"start":1668903416502,"stop":1668903416924,"duration":422}},{"uid":"d11095e4cf4e65b1","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/d11095e4cf4e65b1","status":"passed","time":{"start":1668888300309,"stop":1668888300756,"duration":447}},{"uid":"5880602367699d08","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/5880602367699d08","status":"passed","time":{"start":1668873944364,"stop":1668873944828,"duration":464}},{"uid":"fd3b8a3521c7edac","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/fd3b8a3521c7edac","status":"passed","time":{"start":1668859543572,"stop":1668859544008,"duration":436}}]},"tags":[]},"source":"9ebd093b5005ca39.json","parameterValues":["{'url': 'wss://mainnet.ternoa.network', 'name': 'Ternoa'}"]}