{"uid":"f296ac0882d3e36d","name":"test_chainId[Test for Ternoa]","fullName":"tests.test_network_parameters.TestChainId#test_chainId","historyId":"63c5085e70abeb317ba07949db597429","time":{"start":1669378796454,"stop":1669378796895,"duration":441},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Ternoa","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f9eae027670>\nchain = <tests.utils.chain_model.Chain object at 0x7f9eae0d2c10>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f9eae0d2c10>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Ternoa\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Ternoa","statusTrace":"self = <tests.test_network_parameters.TestChainId object at 0x7f9eae027670>\nchain = <tests.utils.chain_model.Chain object at 0x7f9eae0d2c10>\n\n    def test_chainId(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7f9eae0d2c10>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Ternoa\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"40d805b625689ae1","name":"stdout","source":"40d805b625689ae1.txt","type":"text/plain","size":54}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestChainId"},{"name":"host","value":"fv-az335-773"},{"name":"thread","value":"1641-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7f9eae0d2c10>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e7f03f97901ae402","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Ternoa","time":{"start":1669378785905,"stop":1669378786436,"duration":531}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":248,"unknown":0,"total":250},"items":[{"uid":"1bad4b29ca2bdf60","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/1bad4b29ca2bdf60","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Ternoa","time":{"start":1669371541496,"stop":1669371542081,"duration":585}},{"uid":"aa744302e71d7c63","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/aa744302e71d7c63","status":"passed","time":{"start":1669119004279,"stop":1669119009065,"duration":4786}},{"uid":"d343240eb9ef01e","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/d343240eb9ef01e","status":"passed","time":{"start":1669104565489,"stop":1669104570083,"duration":4594}},{"uid":"671c0844a3dae059","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/671c0844a3dae059","status":"passed","time":{"start":1669090227287,"stop":1669090237815,"duration":10528}},{"uid":"bebde66b412fd8ac","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/bebde66b412fd8ac","status":"passed","time":{"start":1669076465318,"stop":1669076473007,"duration":7689}},{"uid":"f56d63b32403b6f3","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/f56d63b32403b6f3","status":"passed","time":{"start":1669061350176,"stop":1669061354919,"duration":4743}},{"uid":"fadc3223cd72f7dd","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/fadc3223cd72f7dd","status":"passed","time":{"start":1669047008763,"stop":1669047014769,"duration":6006}},{"uid":"8a08951d6e88e136","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/8a08951d6e88e136","status":"passed","time":{"start":1669032648364,"stop":1669032654237,"duration":5873}},{"uid":"df4bc6346683f8ee","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/df4bc6346683f8ee","status":"passed","time":{"start":1669018231576,"stop":1669018241537,"duration":9961}},{"uid":"fac23f49027a04e9","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/fac23f49027a04e9","status":"passed","time":{"start":1669003991467,"stop":1669003998777,"duration":7310}},{"uid":"98d5e92eb53f4764","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/98d5e92eb53f4764","status":"passed","time":{"start":1668990001186,"stop":1668990001186,"duration":0}},{"uid":"adea2e6218f0bbb6","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/adea2e6218f0bbb6","status":"passed","time":{"start":1668974885973,"stop":1668974885974,"duration":1}},{"uid":"fc3a15d7a501e9e1","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/fc3a15d7a501e9e1","status":"passed","time":{"start":1668960441644,"stop":1668960446569,"duration":4925}},{"uid":"dda65b72e31c50f","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/dda65b72e31c50f","status":"passed","time":{"start":1668946109919,"stop":1668946115413,"duration":5494}},{"uid":"83bfe9f044a1cea9","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/83bfe9f044a1cea9","status":"passed","time":{"start":1668931755075,"stop":1668931755075,"duration":0}},{"uid":"52fe87ca291045a3","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/52fe87ca291045a3","status":"passed","time":{"start":1668917428364,"stop":1668917428364,"duration":0}},{"uid":"ed0dbcabfcd0b44e","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/ed0dbcabfcd0b44e","status":"passed","time":{"start":1668903580748,"stop":1668903580748,"duration":0}},{"uid":"b156e6a50bc88f2d","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/b156e6a50bc88f2d","status":"passed","time":{"start":1668888455935,"stop":1668888455935,"duration":0}},{"uid":"ca97b436a4af7d4","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/ca97b436a4af7d4","status":"passed","time":{"start":1668874047147,"stop":1668874051786,"duration":4639}},{"uid":"3bb62a0f74035da9","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/3bb62a0f74035da9","status":"passed","time":{"start":1668859685300,"stop":1668859685300,"duration":0}}]},"tags":[]},"source":"f296ac0882d3e36d.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7f9eae0d2c10>"]}