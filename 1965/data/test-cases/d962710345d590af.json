{"uid":"d962710345d590af","name":"test_can_create_connection[Test for QUARTZ, url: wss://quartz.unique.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"67750adbcf1a73e519d444bb50df2851","time":{"start":1669378268176,"stop":1669378268217,"duration":41},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'QUARTZ', 'url': 'wss://quartz.unique.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1637-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://quartz.unique.network', 'name': 'QUARTZ'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"11ab35f9efdd48f7","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378258060,"stop":1669378258115,"duration":55}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":250,"unknown":0,"total":252},"items":[{"uid":"ecdf515f7c7971a7","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/ecdf515f7c7971a7","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371025139,"stop":1669371025306,"duration":167}},{"uid":"33f07af439ccedc5","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/33f07af439ccedc5","status":"passed","time":{"start":1669118707664,"stop":1669118707731,"duration":67}},{"uid":"ec0892b3408ca9d0","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/ec0892b3408ca9d0","status":"passed","time":{"start":1669104320911,"stop":1669104321199,"duration":288}},{"uid":"6b792d5f232842d6","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/6b792d5f232842d6","status":"passed","time":{"start":1669089888150,"stop":1669089888488,"duration":338}},{"uid":"8ebd61ae74677e2f","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/8ebd61ae74677e2f","status":"passed","time":{"start":1669076130345,"stop":1669076130395,"duration":50}},{"uid":"64733fdb40213b17","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/64733fdb40213b17","status":"passed","time":{"start":1669061081953,"stop":1669061082375,"duration":422}},{"uid":"fb44bee87f40433","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/fb44bee87f40433","status":"passed","time":{"start":1669046713930,"stop":1669046714303,"duration":373}},{"uid":"9aec740b79eaf809","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/9aec740b79eaf809","status":"passed","time":{"start":1669032321952,"stop":1669032322001,"duration":49}},{"uid":"3aaf0fd9bb8ccd97","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/3aaf0fd9bb8ccd97","status":"passed","time":{"start":1669017917169,"stop":1669017917428,"duration":259}},{"uid":"b264bba715d6aa7","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/b264bba715d6aa7","status":"passed","time":{"start":1669003719162,"stop":1669003719222,"duration":60}},{"uid":"dc49a8059e169e26","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/dc49a8059e169e26","status":"passed","time":{"start":1668989737629,"stop":1668989737736,"duration":107}},{"uid":"ccc8a339d020bead","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/ccc8a339d020bead","status":"passed","time":{"start":1668974626122,"stop":1668974626219,"duration":97}},{"uid":"74f40240702019e6","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/74f40240702019e6","status":"passed","time":{"start":1668960270958,"stop":1668960271300,"duration":342}},{"uid":"56e757a71125d46f","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/56e757a71125d46f","status":"passed","time":{"start":1668945935275,"stop":1668945935601,"duration":326}},{"uid":"6970c2c00a0c3875","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/6970c2c00a0c3875","status":"passed","time":{"start":1668931451631,"stop":1668931451727,"duration":96}},{"uid":"f03d69d2bd684869","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/f03d69d2bd684869","status":"passed","time":{"start":1668917245005,"stop":1668917245294,"duration":289}},{"uid":"5ec7c30297f8c9a2","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/5ec7c30297f8c9a2","status":"passed","time":{"start":1668903380418,"stop":1668903380671,"duration":253}},{"uid":"248032d23bb0f404","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/248032d23bb0f404","status":"passed","time":{"start":1668888222808,"stop":1668888222900,"duration":92}},{"uid":"4cb69fc3d0d87838","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/4cb69fc3d0d87838","status":"passed","time":{"start":1668873835585,"stop":1668873835703,"duration":118}},{"uid":"88c021f50688124d","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/88c021f50688124d","status":"passed","time":{"start":1668859465821,"stop":1668859465876,"duration":55}}]},"tags":[]},"source":"d962710345d590af.json","parameterValues":["{'url': 'wss://quartz.unique.network', 'name': 'QUARTZ'}"]}