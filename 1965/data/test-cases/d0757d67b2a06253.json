{"uid":"d0757d67b2a06253","name":"test_can_create_connection[Test for Bifrost Kusama, url: wss://bifrost-rpc.liebi.com/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"70ec85e5ca3498a04694b5036aadbb80","time":{"start":1669378067731,"stop":1669378068369,"duration":638},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Bifrost Kusama', 'url': 'wss://bifrost-rpc.liebi.com/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://bifrost-rpc.liebi.com/ws', 'name': 'Bifrost Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1ff9c3e024bcc9e2","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378056964,"stop":1669378057638,"duration":674}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":249,"unknown":0,"total":252},"items":[{"uid":"e44accf9c175aa80","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/e44accf9c175aa80","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370821540,"stop":1669370822126,"duration":586}},{"uid":"5bc60d58220b703a","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/5bc60d58220b703a","status":"passed","time":{"start":1669118706027,"stop":1669118706980,"duration":953}},{"uid":"68fc88d6f45924da","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/68fc88d6f45924da","status":"passed","time":{"start":1669104279197,"stop":1669104279948,"duration":751}},{"uid":"51647d7a2c55c6da","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/51647d7a2c55c6da","status":"passed","time":{"start":1669089841236,"stop":1669089842006,"duration":770}},{"uid":"8d8ecb90960b2248","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/8d8ecb90960b2248","status":"passed","time":{"start":1669076128748,"stop":1669076129663,"duration":915}},{"uid":"6923a641d7bb9511","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/6923a641d7bb9511","status":"passed","time":{"start":1669061039007,"stop":1669061039804,"duration":797}},{"uid":"4f41e7b6343a34d6","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/4f41e7b6343a34d6","status":"passed","time":{"start":1669046669234,"stop":1669046670022,"duration":788}},{"uid":"28af73c28c5b002f","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/28af73c28c5b002f","status":"passed","time":{"start":1669032320350,"stop":1669032321228,"duration":878}},{"uid":"25cc7e21095e04b2","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/25cc7e21095e04b2","status":"passed","time":{"start":1669017873910,"stop":1669017874698,"duration":788}},{"uid":"567ba60a7c14fe97","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/567ba60a7c14fe97","status":"passed","time":{"start":1669003717530,"stop":1669003718450,"duration":920}},{"uid":"dab6b784d11f295b","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/dab6b784d11f295b","status":"passed","time":{"start":1668989736042,"stop":1668989736921,"duration":879}},{"uid":"76789152cb2b753f","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/76789152cb2b753f","status":"passed","time":{"start":1668974624491,"stop":1668974625367,"duration":876}},{"uid":"29b05c24ef6bf68d","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/29b05c24ef6bf68d","status":"passed","time":{"start":1668960229730,"stop":1668960230537,"duration":807}},{"uid":"eefaf9f2fc362971","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/eefaf9f2fc362971","status":"passed","time":{"start":1668945881750,"stop":1668945882386,"duration":636}},{"uid":"a075a2dcfa14e0af","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/a075a2dcfa14e0af","status":"passed","time":{"start":1668931450084,"stop":1668931450940,"duration":856}},{"uid":"b661b7f530436ea8","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/b661b7f530436ea8","status":"passed","time":{"start":1668917202770,"stop":1668917203566,"duration":796}},{"uid":"bad4c7c8f3ac0b86","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/bad4c7c8f3ac0b86","status":"passed","time":{"start":1668903337668,"stop":1668903338535,"duration":867}},{"uid":"f3eb52046d704282","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/f3eb52046d704282","status":"passed","time":{"start":1668888221208,"stop":1668888222097,"duration":889}},{"uid":"c23f6405f0b9f34f","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/c23f6405f0b9f34f","status":"passed","time":{"start":1668873833999,"stop":1668873834871,"duration":872}},{"uid":"76533f7b84dfeda7","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/76533f7b84dfeda7","status":"passed","time":{"start":1668859464217,"stop":1668859465090,"duration":873}}]},"tags":[]},"source":"d0757d67b2a06253.json","parameterValues":["{'url': 'wss://bifrost-rpc.liebi.com/ws', 'name': 'Bifrost Kusama'}"]}