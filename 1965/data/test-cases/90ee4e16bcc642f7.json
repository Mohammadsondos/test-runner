{"uid":"90ee4e16bcc642f7","name":"test_can_create_connection[Test for Altair, url: wss://altair.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"21accf31cfdd1e2d64086949e5ee4c2e","time":{"start":1669378121209,"stop":1669378121430,"duration":221},"status":"broken","statusMessage":"ValueError: Unsupported type registry preset \"metadata_types\"","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:582: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:3085: in reload_type_registry\n    self.runtime_config.update_type_registry(load_type_registry_preset(name=\"metadata_types\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'metadata_types', use_remote_preset = False\n\n    def load_type_registry_preset(name: str, use_remote_preset: bool = False) -> Optional[dict]:\n        \"\"\"\n        Loads a type registry JSON file into a dict\n    \n        Parameters\n        ----------\n        name\n        use_remote_preset: When True preset is downloaded from Github master, otherwise use files from local installed scalecodec package\n    \n        Returns\n        -------\n    \n        \"\"\"\n    \n        if name not in SUPPORTED_TYPE_REGISTRY_PRESETS:\n>           raise ValueError(f'Unsupported type registry preset \"{name}\"')\nE           ValueError: Unsupported type registry preset \"metadata_types\"\n\n../../../../.local/lib/python3.8/site-packages/scalecodec/type_registry/__init__.py:46: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1637-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair.api.onfinality.io/public-ws', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8b125dd62bf8b539","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669378110884,"stop":1669378111145,"duration":261}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":249,"unknown":0,"total":252},"items":[{"uid":"da139d9018d9c5c2","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/da139d9018d9c5c2","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669370876934,"stop":1669370877258,"duration":324}},{"uid":"a37d6d3add36b2a8","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/a37d6d3add36b2a8","status":"passed","time":{"start":1669118704610,"stop":1669118704931,"duration":321}},{"uid":"f8db61de5173a88a","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/f8db61de5173a88a","status":"passed","time":{"start":1669104281861,"stop":1669104282315,"duration":454}},{"uid":"6e13112199778489","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/6e13112199778489","status":"passed","time":{"start":1669089848612,"stop":1669089849059,"duration":447}},{"uid":"7a35cf37fa6019d8","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7a35cf37fa6019d8","status":"passed","time":{"start":1669076128110,"stop":1669076128431,"duration":321}},{"uid":"851e77ae68937c07","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/851e77ae68937c07","status":"passed","time":{"start":1669061041745,"stop":1669061042240,"duration":495}},{"uid":"93ced9e9c5f6b846","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/93ced9e9c5f6b846","status":"passed","time":{"start":1669046673089,"stop":1669046673573,"duration":484}},{"uid":"eb39a976eca16580","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/eb39a976eca16580","status":"passed","time":{"start":1669032323113,"stop":1669032323425,"duration":312}},{"uid":"a1bee944c544e307","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/a1bee944c544e307","status":"passed","time":{"start":1669017877682,"stop":1669017878117,"duration":435}},{"uid":"806fe32b6e23f063","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/806fe32b6e23f063","status":"passed","time":{"start":1669003719156,"stop":1669003719475,"duration":319}},{"uid":"7386a107a170e088","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/7386a107a170e088","status":"passed","time":{"start":1668989729454,"stop":1668989729797,"duration":343}},{"uid":"72ee313ba384b38b","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/72ee313ba384b38b","status":"passed","time":{"start":1668974625944,"stop":1668974626299,"duration":355}},{"uid":"6ca94a1f1b14f778","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/6ca94a1f1b14f778","status":"passed","time":{"start":1668960231656,"stop":1668960232124,"duration":468}},{"uid":"255fcede2a3249b0","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/255fcede2a3249b0","status":"passed","time":{"start":1668945885754,"stop":1668945886423,"duration":669}},{"uid":"59ed6be265bb1996","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/59ed6be265bb1996","status":"passed","time":{"start":1668931449012,"stop":1668931449369,"duration":357}},{"uid":"dc227ae10f54593a","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/dc227ae10f54593a","status":"passed","time":{"start":1668917205084,"stop":1668917205558,"duration":474}},{"uid":"bdc155e9ff5116a4","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/bdc155e9ff5116a4","status":"passed","time":{"start":1668903340571,"stop":1668903340911,"duration":340}},{"uid":"44781a074aeda6e1","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/44781a074aeda6e1","status":"passed","time":{"start":1668888223907,"stop":1668888224257,"duration":350}},{"uid":"690298bd875fc86a","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/690298bd875fc86a","status":"passed","time":{"start":1668873833775,"stop":1668873834119,"duration":344}},{"uid":"476b066a0718ee4a","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/476b066a0718ee4a","status":"passed","time":{"start":1668859467609,"stop":1668859467931,"duration":322}}]},"tags":[]},"source":"90ee4e16bcc642f7.json","parameterValues":["{'url': 'wss://altair.api.onfinality.io/public-ws', 'name': 'Altair'}"]}