{"uid":"a39a464a486049d7","name":"test_can_create_connection[Test for Picasso, url: wss://picasso-rpc.composable.finance]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a99dc3895865408a2004c053a1261232","time":{"start":1669378279110,"stop":1669378279277,"duration":167},"status":"broken","statusMessage":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)","statusTrace":"data = {'name': 'Picasso', 'url': 'wss://picasso-rpc.composable.finance'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:136: in connect\n    sock = _ssl_socket(sock, options.sslopt, hostname)\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:271: in _ssl_socket\n    sock = _wrap_sni_socket(sock, sslopt, hostname, check_hostname)\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:247: in _wrap_sni_socket\n    return context.wrap_socket(\n/usr/lib/python3.8/ssl.py:500: in wrap_socket\n    return self.sslsocket_class._create(\n/usr/lib/python3.8/ssl.py:1040: in _create\n    self.do_handshake()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nblock = False\n\n    @_sslcopydoc\n    def do_handshake(self, block=False):\n        self._check_connected()\n        timeout = self.gettimeout()\n        try:\n            if timeout == 0.0 and block:\n                self.settimeout(None)\n>           self._sslobj.do_handshake()\nE           ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)\n\n/usr/lib/python3.8/ssl.py:1309: SSLCertVerificationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az137-872"},{"name":"thread","value":"1634-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://picasso-rpc.composable.finance', 'name': 'Picasso'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"24a3401645fb1d59","status":"broken","statusDetails":"ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)","time":{"start":1669378268557,"stop":1669378268923,"duration":366}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":250,"unknown":0,"total":252},"items":[{"uid":"b03dfd964a81493e","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/b03dfd964a81493e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1669371023529,"stop":1669371023922,"duration":393}},{"uid":"596e5541de963612","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/596e5541de963612","status":"passed","time":{"start":1669118753569,"stop":1669118753919,"duration":350}},{"uid":"cf589c60f6f03207","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/cf589c60f6f03207","status":"passed","time":{"start":1669104324400,"stop":1669104324966,"duration":566}},{"uid":"d388588365f3040f","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/d388588365f3040f","status":"passed","time":{"start":1669089885987,"stop":1669089886620,"duration":633}},{"uid":"980324f696a95f75","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/980324f696a95f75","status":"passed","time":{"start":1669076175655,"stop":1669076176241,"duration":586}},{"uid":"c5a613b9cdece2df","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/c5a613b9cdece2df","status":"passed","time":{"start":1669061081743,"stop":1669061082378,"duration":635}},{"uid":"ad5700e425d04659","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/ad5700e425d04659","status":"passed","time":{"start":1669046763174,"stop":1669046763696,"duration":522}},{"uid":"7c1632b39d0b21e7","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/7c1632b39d0b21e7","status":"passed","time":{"start":1669032367768,"stop":1669032368120,"duration":352}},{"uid":"1492d1744e0c9f88","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/1492d1744e0c9f88","status":"passed","time":{"start":1669017917079,"stop":1669017917720,"duration":641}},{"uid":"6510a70566928a3","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/6510a70566928a3","status":"passed","time":{"start":1669003764377,"stop":1669003764720,"duration":343}},{"uid":"b508efddc6222f6","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/b508efddc6222f6","status":"passed","time":{"start":1668989783680,"stop":1668989784333,"duration":653}},{"uid":"50729450b3406743","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/50729450b3406743","status":"passed","time":{"start":1668974678743,"stop":1668974679287,"duration":544}},{"uid":"b9d495899bdf9ddb","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/b9d495899bdf9ddb","status":"passed","time":{"start":1668960274104,"stop":1668960274757,"duration":653}},{"uid":"4d62e173ba368e84","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/4d62e173ba368e84","status":"passed","time":{"start":1668945926883,"stop":1668945927646,"duration":763}},{"uid":"5dffb1ff6ecc9aaf","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/5dffb1ff6ecc9aaf","status":"passed","time":{"start":1668931497659,"stop":1668931498178,"duration":519}},{"uid":"f3243f6b658de285","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/f3243f6b658de285","status":"passed","time":{"start":1668917246702,"stop":1668917247235,"duration":533}},{"uid":"ddd51a48207b51c2","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/ddd51a48207b51c2","status":"passed","time":{"start":1668903383790,"stop":1668903384304,"duration":514}},{"uid":"cda0f52d19fda9bd","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/cda0f52d19fda9bd","status":"passed","time":{"start":1668888269557,"stop":1668888270007,"duration":450}},{"uid":"18cb9cc2010cbaee","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/18cb9cc2010cbaee","status":"passed","time":{"start":1668873892484,"stop":1668873892856,"duration":372}},{"uid":"a6c1660d3bc0df7f","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/a6c1660d3bc0df7f","status":"passed","time":{"start":1668859512748,"stop":1668859513211,"duration":463}}]},"tags":[]},"source":"a39a464a486049d7.json","parameterValues":["{'url': 'wss://picasso-rpc.composable.finance', 'name': 'Picasso'}"]}