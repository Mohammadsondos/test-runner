{"uid":"7e900185486dbc44","name":"test_address_prefix[Test for Parallel]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"c30b52b2b23ece7552ef0a92bd3e34b3","time":{"start":1669378017125,"stop":1669378018023,"duration":898},"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7fc7ee563940>\nchain = <tests.utils.chain_model.Chain object at 0x7fc7eea06460>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fc7eea06460>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Parallel\n\ntests/utils/chain_model.py:29: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel","statusTrace":"self = <tests.test_network_parameters.TestNetworkPrefix object at 0x7fc7ee563940>\nchain = <tests.utils.chain_model.Chain object at 0x7fc7eea06460>\n\n    def test_address_prefix(self, chain: Chain):\n>       chain.create_connection()\n\ntests/test_network_parameters.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.chain_model.Chain object at 0x7fc7eea06460>\n\n    def create_connection(self):\n        for node in self.nodes:\n            if (self.substrate):\n                return self.substrate\n            try:\n                self.substrate = create_connection_by_url(node.get('url'))\n                return self.substrate\n            except:\n                print(\"Can't connect to that node\")\n                continue\n    \n>       raise TimeoutError(\"Can't connect to all nodes of network\", self.name)\nE       TimeoutError: [Errno Can't connect to all nodes of network] Parallel\n\ntests/utils/chain_model.py:29: TimeoutError","steps":[],"attachments":[{"uid":"6fcc7bbc0824f041","name":"stdout","source":"6fcc7bbc0824f041.txt","type":"text/plain","size":108}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az335-773"},{"name":"thread","value":"1644-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<tests.utils.chain_model.Chain object at 0x7fc7eea06460>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"85b7de680f196f16","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel","time":{"start":1669378006047,"stop":1669378007106,"duration":1059}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":248,"unknown":0,"total":250},"items":[{"uid":"b9aefc428515e5cb","reportUrl":"https://nova-wallet.github.io/test-runner/1964//#testresult/b9aefc428515e5cb","status":"broken","statusDetails":"TimeoutError: [Errno Can't connect to all nodes of network] Parallel","time":{"start":1669370762606,"stop":1669370763545,"duration":939}},{"uid":"3e3be3690e1064d5","reportUrl":"https://nova-wallet.github.io/test-runner/1946//#testresult/3e3be3690e1064d5","status":"passed","time":{"start":1669118864769,"stop":1669118869244,"duration":4475}},{"uid":"8da0ced76e2eb84c","reportUrl":"https://nova-wallet.github.io/test-runner/1945//#testresult/8da0ced76e2eb84c","status":"passed","time":{"start":1669104433933,"stop":1669104438014,"duration":4081}},{"uid":"62c55c8bed06dd33","reportUrl":"https://nova-wallet.github.io/test-runner/1944//#testresult/62c55c8bed06dd33","status":"passed","time":{"start":1669090016619,"stop":1669090023337,"duration":6718}},{"uid":"7fcd80bab1a89ad0","reportUrl":"https://nova-wallet.github.io/test-runner/1943//#testresult/7fcd80bab1a89ad0","status":"passed","time":{"start":1669076281648,"stop":1669076353575,"duration":71927}},{"uid":"22dfba80bba19d20","reportUrl":"https://nova-wallet.github.io/test-runner/1942//#testresult/22dfba80bba19d20","status":"passed","time":{"start":1669061205807,"stop":1669061211715,"duration":5908}},{"uid":"e3edf6e6008ef32e","reportUrl":"https://nova-wallet.github.io/test-runner/1941//#testresult/e3edf6e6008ef32e","status":"passed","time":{"start":1669046838308,"stop":1669046844951,"duration":6643}},{"uid":"859b74220d4aebd","reportUrl":"https://nova-wallet.github.io/test-runner/1940//#testresult/859b74220d4aebd","status":"passed","time":{"start":1669032485640,"stop":1669032491272,"duration":5632}},{"uid":"3aed843941e99276","reportUrl":"https://nova-wallet.github.io/test-runner/1939//#testresult/3aed843941e99276","status":"passed","time":{"start":1669018036886,"stop":1669018096925,"duration":60039}},{"uid":"c751cade83adae47","reportUrl":"https://nova-wallet.github.io/test-runner/1938//#testresult/c751cade83adae47","status":"passed","time":{"start":1669003878221,"stop":1669003882195,"duration":3974}},{"uid":"9d328d224f823bdc","reportUrl":"https://nova-wallet.github.io/test-runner/1937//#testresult/9d328d224f823bdc","status":"passed","time":{"start":1668989771904,"stop":1668989777461,"duration":5557}},{"uid":"dd86e61d41c356f2","reportUrl":"https://nova-wallet.github.io/test-runner/1936//#testresult/dd86e61d41c356f2","status":"passed","time":{"start":1668974661789,"stop":1668974666655,"duration":4866}},{"uid":"7ae05dd9cfb3c42f","reportUrl":"https://nova-wallet.github.io/test-runner/1935//#testresult/7ae05dd9cfb3c42f","status":"passed","time":{"start":1668960260457,"stop":1668960264663,"duration":4206}},{"uid":"cfd213165f98a8bc","reportUrl":"https://nova-wallet.github.io/test-runner/1934//#testresult/cfd213165f98a8bc","status":"passed","time":{"start":1668945909049,"stop":1668945914478,"duration":5429}},{"uid":"56342e433df42f89","reportUrl":"https://nova-wallet.github.io/test-runner/1933//#testresult/56342e433df42f89","status":"passed","time":{"start":1668931498213,"stop":1668931504183,"duration":5970}},{"uid":"f987f2e259e8dcd1","reportUrl":"https://nova-wallet.github.io/test-runner/1932//#testresult/f987f2e259e8dcd1","status":"passed","time":{"start":1668917234411,"stop":1668917239501,"duration":5090}},{"uid":"d734f56647838e95","reportUrl":"https://nova-wallet.github.io/test-runner/1931//#testresult/d734f56647838e95","status":"passed","time":{"start":1668903371436,"stop":1668903376885,"duration":5449}},{"uid":"6f08cab795db2fe8","reportUrl":"https://nova-wallet.github.io/test-runner/1930//#testresult/6f08cab795db2fe8","status":"passed","time":{"start":1668888257518,"stop":1668888263112,"duration":5594}},{"uid":"ae212a193294f968","reportUrl":"https://nova-wallet.github.io/test-runner/1929//#testresult/ae212a193294f968","status":"passed","time":{"start":1668873863832,"stop":1668873867892,"duration":4060}},{"uid":"b38d2b4355754547","reportUrl":"https://nova-wallet.github.io/test-runner/1928//#testresult/b38d2b4355754547","status":"passed","time":{"start":1668859507250,"stop":1668859515948,"duration":8698}}]},"tags":[]},"source":"7e900185486dbc44.json","parameterValues":["<tests.utils.chain_model.Chain object at 0x7fc7eea06460>"]}