{"uid":"ed4fafb491fe32e7","name":"test_can_create_connection[Test for Altair, url: wss://altair.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"21accf31cfdd1e2d64086949e5ee4c2e","time":{"start":1668283520994,"stop":1668283580888,"duration":59894},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/create_type_file.py:231: in create_connection_by_url\n    substrate = SubstrateInterface(url=url, use_remote_preset=True)\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:550: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.8/site-packages/substrateinterface/base.py:588: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.8/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.8/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.8/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az255-291"},{"name":"thread","value":"1648-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair.api.onfinality.io/public-ws', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"df2d42a381535a39","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1668283450901,"stop":1668283510888,"duration":59987}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":191,"unknown":0,"total":192},"items":[{"uid":"2c7ec165991ae616","reportUrl":"https://nova-wallet.github.io/test-runner/1887//#testresult/2c7ec165991ae616","status":"passed","time":{"start":1668269061325,"stop":1668269061939,"duration":614}},{"uid":"36a49542ca62afe8","reportUrl":"https://nova-wallet.github.io/test-runner/1886//#testresult/36a49542ca62afe8","status":"passed","time":{"start":1668254707809,"stop":1668254708270,"duration":461}},{"uid":"ade96b8c64bb5439","reportUrl":"https://nova-wallet.github.io/test-runner/1885//#testresult/ade96b8c64bb5439","status":"passed","time":{"start":1668240277932,"stop":1668240278403,"duration":471}},{"uid":"37a81854495f5e2d","reportUrl":"https://nova-wallet.github.io/test-runner/1884//#testresult/37a81854495f5e2d","status":"passed","time":{"start":1668226256283,"stop":1668226256609,"duration":326}},{"uid":"20101ee3e0c03917","reportUrl":"https://nova-wallet.github.io/test-runner/1883//#testresult/20101ee3e0c03917","status":"passed","time":{"start":1668212220054,"stop":1668212220542,"duration":488}},{"uid":"1097903c711ccc52","reportUrl":"https://nova-wallet.github.io/test-runner/1882//#testresult/1097903c711ccc52","status":"passed","time":{"start":1668197041554,"stop":1668197041870,"duration":316}},{"uid":"1391f5f89f5100ba","reportUrl":"https://nova-wallet.github.io/test-runner/1881//#testresult/1391f5f89f5100ba","status":"passed","time":{"start":1668182650199,"stop":1668182650513,"duration":314}},{"uid":"aaf4664d2c4b888c","reportUrl":"https://nova-wallet.github.io/test-runner/1880//#testresult/aaf4664d2c4b888c","status":"passed","time":{"start":1668168329550,"stop":1668168330038,"duration":488}},{"uid":"bbcfbc31de3910d7","reportUrl":"https://nova-wallet.github.io/test-runner/1879//#testresult/bbcfbc31de3910d7","status":"passed","time":{"start":1668156933310,"stop":1668156933764,"duration":454}},{"uid":"7c9b4728366fbed9","reportUrl":"https://nova-wallet.github.io/test-runner/1878//#testresult/7c9b4728366fbed9","status":"passed","time":{"start":1668153903280,"stop":1668153903634,"duration":354}},{"uid":"f600d4f7920c93b4","reportUrl":"https://nova-wallet.github.io/test-runner/1877//#testresult/f600d4f7920c93b4","status":"passed","time":{"start":1668140010092,"stop":1668140010567,"duration":475}},{"uid":"ba96c74a505a3b06","reportUrl":"https://nova-wallet.github.io/test-runner/1876//#testresult/ba96c74a505a3b06","status":"passed","time":{"start":1668125843161,"stop":1668125843671,"duration":510}},{"uid":"a3a9397d7036e11a","reportUrl":"https://nova-wallet.github.io/test-runner/1875//#testresult/a3a9397d7036e11a","status":"passed","time":{"start":1668110659304,"stop":1668110659668,"duration":364}},{"uid":"72a4b49e1171a73","reportUrl":"https://nova-wallet.github.io/test-runner/1874//#testresult/72a4b49e1171a73","status":"passed","time":{"start":1668096247260,"stop":1668096247665,"duration":405}},{"uid":"d685a8f144af12b1","reportUrl":"https://nova-wallet.github.io/test-runner/1873//#testresult/d685a8f144af12b1","status":"passed","time":{"start":1668081942843,"stop":1668081943440,"duration":597}},{"uid":"f208450df9c7efb2","reportUrl":"https://nova-wallet.github.io/test-runner/1872//#testresult/f208450df9c7efb2","status":"passed","time":{"start":1668067487636,"stop":1668067488231,"duration":595}},{"uid":"6bc454b80cc87238","reportUrl":"https://nova-wallet.github.io/test-runner/1871//#testresult/6bc454b80cc87238","status":"passed","time":{"start":1668053782566,"stop":1668053782924,"duration":358}},{"uid":"f167fa72c0925299","reportUrl":"https://nova-wallet.github.io/test-runner/1870//#testresult/f167fa72c0925299","status":"passed","time":{"start":1668039367818,"stop":1668039368191,"duration":373}},{"uid":"12c9e4e525709911","reportUrl":"https://nova-wallet.github.io/test-runner/1869//#testresult/12c9e4e525709911","status":"passed","time":{"start":1668024267530,"stop":1668024268014,"duration":484}},{"uid":"b45e5ab3d039e239","reportUrl":"https://nova-wallet.github.io/test-runner/1868//#testresult/b45e5ab3d039e239","status":"passed","time":{"start":1668009871950,"stop":1668009872465,"duration":515}}]},"tags":[]},"source":"ed4fafb491fe32e7.json","parameterValues":["{'url': 'wss://altair.api.onfinality.io/public-ws', 'name': 'Altair'}"]}