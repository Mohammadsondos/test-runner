{"uid":"6180ad837b3465f","name":"test_address_prefix[Test for Bittensor]","fullName":"tests.test_network_parameters.TestNetworkPrefix#test_address_prefix","historyId":"d3e9ec515582b58b1880ba7eb2e4ffa1","time":{"start":1711166581836,"stop":1711166581836,"duration":0},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","statusTrace":"request = <SubRequest 'chain_model' for <Function test_address_prefix[Test for Bittensor]>>\n\n    @pytest.fixture(scope=\"module\", params=get_substrate_chains(), ids=chain_names)\n    def chain_model(request) -> Chain:\n        chain = request.param\n        execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=chain.create_connection,\n            args=(),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {chain.name}'\n        )\n>       execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=chain.init_properties,\n            args=(),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when initializing properties: {chain.name}'\n        )\n\ntests/conftest.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\nscripts/utils/metadata_interaction.py:68: in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2133: in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:2107: in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:691: in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:518: in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <substrateinterface.base.SubstrateInterface object at 0x7fa714abbe80>\nmethod = 'state_getMetadata'\nparams = ['0x7b81732f021fb872dbc94d8e40f3c5b3e44db30e92e41258c86688c92ce66205']\nresult_handler = None\n\n    def rpc_request(self, method, params, result_handler=None):\n        \"\"\"\n        Method that handles the actual RPC request to the Substrate node. The other implemented functions eventually\n        use this method to perform the request.\n    \n        Parameters\n        ----------\n        result_handler: Callback function that processes the result received from the node\n        method: method of the JSONRPC request\n        params: a list containing the parameters of the JSONRPC request\n    \n        Returns\n        -------\n        a dict with the parsed result of the request.\n        \"\"\"\n    \n        request_id = self.request_id\n        self.request_id += 1\n    \n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": method,\n            \"params\": params,\n            \"id\": request_id\n        }\n    \n        self.debug_message('RPC request #{}: \"{}\"'.format(request_id, method))\n    \n        if self.websocket:\n            try:\n                self.websocket.send(json.dumps(payload))\n            except WebSocketConnectionClosedException:\n                if self.config.get('auto_reconnect') and self.url:\n                    # Try to reconnect websocket and retry rpc_request\n                    self.debug_message(\"Connection Closed; Trying to reconnecting...\")\n                    self.connect_websocket()\n    \n                    return self.rpc_request(method=method, params=params, result_handler=result_handler)\n                else:\n                    # websocket connection is externally created, re-raise exception\n                    raise\n    \n            update_nr = 0\n            json_body = None\n            subscription_id = None\n    \n            while json_body is None:\n                # Search for subscriptions\n                for message, remove_message in list_remove_iter(self.__rpc_message_queue):\n    \n                    # Check if result message is matching request ID\n                    if 'id' in message and message['id'] == request_id:\n    \n                        remove_message()\n    \n                        # Check if response has error\n                        if 'error' in message:\n>                           raise SubstrateRequestException(message['error'])\nE                           substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:293: SubstrateRequestException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1711166533137,"stop":1711166555150,"duration":22013},"status":"broken","statusMessage":"tests.conftest.FixtureTimeoutError: Timeout 15 when initializing properties: Bittensor\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 34, in execute_with_timeout\n    raise FixtureTimeoutError(error_message)\n","steps":[{"name":"Function timed out","time":{"start":1711166555150,"stop":1711166555150,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"e4c039cfbacf2f4","name":"Error","source":"e4c039cfbacf2f4.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1711166560262,"stop":1711166576747,"duration":16485},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"chain_model","time":{"start":1711166581837,"stop":1711166588331,"duration":6494},"status":"broken","statusMessage":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 64, in chain_model\n    execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/chain_model.py\", line 44, in init_properties\n    self.properties = get_properties(self.substrate)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/metadata_interaction.py\", line 68, in get_properties\n    substrate.get_constant('system', 'ss58Prefix')\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2133, in get_constant\n    constant = self.get_metadata_constant(module_name, constant_name, block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 2107, in get_metadata_constant\n    self.init_runtime(block_hash=block_hash)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 691, in init_runtime\n    self.metadata = self.get_block_metadata(block_hash=runtime_block_hash, decode=True)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 518, in get_block_metadata\n    response = self.rpc_request(\"state_getMetadata\", params)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 293, in rpc_request\n    raise SubstrateRequestException(message['error'])\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestNetworkPrefix"},{"name":"host","value":"fv-az801-737"},{"name":"thread","value":"2057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7fa74634ee30>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"425cc789f17e6564","status":"broken","statusDetails":"substrateinterface.exceptions.SubstrateRequestException: {'code': -32000, 'message': 'Client error: Execution failed: failed to instantiate a new WASM module instance: maximum concurrent instance limit of 32 reached'}","time":{"start":1711166560262,"stop":1711166560262,"duration":0}},{"uid":"218e2593319fd637","status":"broken","statusDetails":"tests.conftest.FixtureTimeoutError: Timeout 15 when initializing properties: Bittensor","time":{"start":1711166533136,"stop":1711166533136,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":1035,"unknown":0,"total":1038},"items":[{"uid":"e36782bc2c589282","reportUrl":"https://novasamatech.github.io/test-runner/4927//#testresult/e36782bc2c589282","status":"passed","time":{"start":1711152158498,"stop":1711152158498,"duration":0}},{"uid":"83908d585ef10197","reportUrl":"https://novasamatech.github.io/test-runner/4926//#testresult/83908d585ef10197","status":"passed","time":{"start":1711137709476,"stop":1711137709476,"duration":0}},{"uid":"b4520454b3279610","reportUrl":"https://novasamatech.github.io/test-runner/4925//#testresult/b4520454b3279610","status":"passed","time":{"start":1711123317243,"stop":1711123317243,"duration":0}},{"uid":"f637e72b9b008d3f","reportUrl":"https://novasamatech.github.io/test-runner/4924//#testresult/f637e72b9b008d3f","status":"passed","time":{"start":1711108936706,"stop":1711108936706,"duration":0}},{"uid":"e38334b4875c0ef8","reportUrl":"https://novasamatech.github.io/test-runner/4923//#testresult/e38334b4875c0ef8","status":"passed","time":{"start":1711096537285,"stop":1711096537285,"duration":0}},{"uid":"15ea47956dd69664","reportUrl":"https://novasamatech.github.io/test-runner/4922//#testresult/15ea47956dd69664","status":"passed","time":{"start":1711094533526,"stop":1711094533526,"duration":0}},{"uid":"6005ca3273b19f5d","reportUrl":"https://novasamatech.github.io/test-runner/4921//#testresult/6005ca3273b19f5d","status":"passed","time":{"start":1711080131845,"stop":1711080131845,"duration":0}},{"uid":"ed2544267c1dc142","reportUrl":"https://novasamatech.github.io/test-runner/4920//#testresult/ed2544267c1dc142","status":"passed","time":{"start":1711065775868,"stop":1711065775868,"duration":0}},{"uid":"4b37f5b448b51a0f","reportUrl":"https://novasamatech.github.io/test-runner/4919//#testresult/4b37f5b448b51a0f","status":"passed","time":{"start":1711051313863,"stop":1711051313864,"duration":1}},{"uid":"8ef6c036d90b7e47","reportUrl":"https://novasamatech.github.io/test-runner/4918//#testresult/8ef6c036d90b7e47","status":"passed","time":{"start":1711036919908,"stop":1711036919909,"duration":1}},{"uid":"e9b1e69655dd77b","reportUrl":"https://novasamatech.github.io/test-runner/4917//#testresult/e9b1e69655dd77b","status":"passed","time":{"start":1711022535814,"stop":1711022535815,"duration":1}},{"uid":"b3cdc5d4838a46d2","reportUrl":"https://novasamatech.github.io/test-runner/4916//#testresult/b3cdc5d4838a46d2","status":"passed","time":{"start":1711008125618,"stop":1711008125618,"duration":0}},{"uid":"a1d201c0e0f8137b","reportUrl":"https://novasamatech.github.io/test-runner/4915//#testresult/a1d201c0e0f8137b","status":"passed","time":{"start":1710993721018,"stop":1710993721019,"duration":1}},{"uid":"1522110e27ca9a5","reportUrl":"https://novasamatech.github.io/test-runner/4914//#testresult/1522110e27ca9a5","status":"passed","time":{"start":1710979366655,"stop":1710979366656,"duration":1}},{"uid":"ff07b99d631d7ac8","reportUrl":"https://novasamatech.github.io/test-runner/4913//#testresult/ff07b99d631d7ac8","status":"passed","time":{"start":1710964913927,"stop":1710964913927,"duration":0}},{"uid":"6c04c3fe8fb24ab5","reportUrl":"https://novasamatech.github.io/test-runner/4912//#testresult/6c04c3fe8fb24ab5","status":"passed","time":{"start":1710950528972,"stop":1710950528972,"duration":0}},{"uid":"9a795268a9fd6502","reportUrl":"https://novasamatech.github.io/test-runner/4911//#testresult/9a795268a9fd6502","status":"passed","time":{"start":1710936124183,"stop":1710936124183,"duration":0}},{"uid":"5445e0ca1afca2ab","reportUrl":"https://novasamatech.github.io/test-runner/4910//#testresult/5445e0ca1afca2ab","status":"passed","time":{"start":1710921721140,"stop":1710921721140,"duration":0}},{"uid":"30f833073dd9145b","reportUrl":"https://novasamatech.github.io/test-runner/4909//#testresult/30f833073dd9145b","status":"passed","time":{"start":1710907325988,"stop":1710907325988,"duration":0}},{"uid":"67c53da8acca019a","reportUrl":"https://novasamatech.github.io/test-runner/4908//#testresult/67c53da8acca019a","status":"passed","time":{"start":1710892960066,"stop":1710892960066,"duration":0}}]},"tags":[]},"source":"6180ad837b3465f.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa74634ee30>"]}