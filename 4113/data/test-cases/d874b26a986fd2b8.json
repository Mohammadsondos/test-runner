{"uid":"d874b26a986fd2b8","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1699646594103,"stop":1699646595031,"duration":928},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f2d0e13fbe0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2d0e192650>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f2d0e13fbe0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f2d0e192650>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"f328d1ace8ea379a","name":"stdout","source":"f328d1ace8ea379a.txt","type":"text/plain","size":1338}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az570-844"},{"name":"thread","value":"2100-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f2d0e192650>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4ef6e100248f656","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699646578351,"stop":1699646579076,"duration":725}},{"uid":"e73b343b1c5ca0fe","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699646562600,"stop":1699646563325,"duration":725}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":15,"skipped":0,"passed":457,"unknown":0,"total":472},"items":[{"uid":"124338831b3a9aaf","reportUrl":"https://novasamatech.github.io/test-runner/4112//#testresult/124338831b3a9aaf","status":"passed","time":{"start":1699632195811,"stop":1699632200325,"duration":4514}},{"uid":"420159f1ed047072","reportUrl":"https://novasamatech.github.io/test-runner/4111//#testresult/420159f1ed047072","status":"passed","time":{"start":1699617766163,"stop":1699617768711,"duration":2548}},{"uid":"ba1b7a8600923c7b","reportUrl":"https://novasamatech.github.io/test-runner/4110//#testresult/ba1b7a8600923c7b","status":"passed","time":{"start":1699603370041,"stop":1699603373083,"duration":3042}},{"uid":"b3876ea7ff9e02ab","reportUrl":"https://novasamatech.github.io/test-runner/4109//#testresult/b3876ea7ff9e02ab","status":"passed","time":{"start":1699588975142,"stop":1699588980179,"duration":5037}},{"uid":"a995f1be13d10a02","reportUrl":"https://novasamatech.github.io/test-runner/4108//#testresult/a995f1be13d10a02","status":"passed","time":{"start":1699574612173,"stop":1699574614490,"duration":2317}},{"uid":"f3ac5b0334626b19","reportUrl":"https://novasamatech.github.io/test-runner/4107//#testresult/f3ac5b0334626b19","status":"passed","time":{"start":1699560244498,"stop":1699560247199,"duration":2701}},{"uid":"de2d0278477d14cb","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/de2d0278477d14cb","status":"passed","time":{"start":1699545759100,"stop":1699545761213,"duration":2113}},{"uid":"cecc47eb026edf03","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/cecc47eb026edf03","status":"passed","time":{"start":1699531390907,"stop":1699531403082,"duration":12175}},{"uid":"b4b11812cb5c5cd5","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/b4b11812cb5c5cd5","status":"passed","time":{"start":1699516951855,"stop":1699516955403,"duration":3548}},{"uid":"b4bd06de8663c957","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/b4bd06de8663c957","status":"passed","time":{"start":1699502548867,"stop":1699502553649,"duration":4782}},{"uid":"ac2b5ec203bb643e","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/ac2b5ec203bb643e","status":"passed","time":{"start":1699488173373,"stop":1699488178037,"duration":4664}},{"uid":"671188a256f7c559","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/671188a256f7c559","status":"passed","time":{"start":1699473800260,"stop":1699473804690,"duration":4430}},{"uid":"87380d0bdcc81d8d","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/87380d0bdcc81d8d","status":"passed","time":{"start":1699459341841,"stop":1699459346905,"duration":5064}},{"uid":"7a2b139b79a161","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/7a2b139b79a161","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699445011323,"stop":1699445012101,"duration":778}},{"uid":"472b97931fdd6bf0","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/472b97931fdd6bf0","status":"passed","time":{"start":1699430532259,"stop":1699430534738,"duration":2479}},{"uid":"fc0979028f40b264","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/fc0979028f40b264","status":"passed","time":{"start":1699416177688,"stop":1699416183599,"duration":5911}},{"uid":"7876954757eca751","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/7876954757eca751","status":"passed","time":{"start":1699401807387,"stop":1699401811273,"duration":3886}},{"uid":"c43dfdaf36ec6753","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/c43dfdaf36ec6753","status":"passed","time":{"start":1699387355838,"stop":1699387359168,"duration":3330}},{"uid":"a2a8ca2959b0528e","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/a2a8ca2959b0528e","status":"passed","time":{"start":1699372962934,"stop":1699372964874,"duration":1940}},{"uid":"4b42bab99931bd26","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/4b42bab99931bd26","status":"passed","time":{"start":1699358561557,"stop":1699358568602,"duration":7045}}]},"tags":[]},"source":"d874b26a986fd2b8.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f2d0e192650>"]}