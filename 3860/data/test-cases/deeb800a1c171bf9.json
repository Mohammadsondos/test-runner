{"uid":"deeb800a1c171bf9","name":"test_can_create_connection[Test for Zeitgeist, url: wss://zeitgeist.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"4e4bafe18ecd3560f8865fceae8e0c9e","time":{"start":1696032908515,"stop":1696033268764,"duration":360249},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 30 Sep 2023 00:21:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 30 Sep 2023 00:21:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 30 Sep 2023 00:21:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Zeitgeist', 'url': 'wss://zeitgeist.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 30 Sep 2023 00:21:08 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300004', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"e489c6c9953ad6dc","name":"stdout","source":"e489c6c9953ad6dc.txt","type":"text/plain","size":1359}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az586-499"},{"name":"thread","value":"2055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://zeitgeist.api.onfinality.io/public-ws', 'name': 'Zeitgeist'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4af8d52e18d14a58","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 30 Sep 2023 00:14:53 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60003', 'x-kong-proxy-latency': '300002', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1696032533114,"stop":1696032893396,"duration":360282}},{"uid":"c6729fc2bdd409b1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Sat, 30 Sep 2023 00:08:37 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'NA', 'x-cluster': 'gh', 'x-kong-upstream-latency': '60002', 'x-kong-proxy-latency': '300001', 'via': 'kong/3.3.1'} -+-+- b'The upstream server is timing out\\n'","time":{"start":1696032157742,"stop":1696032518025,"duration":360283}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":217,"unknown":0,"total":220},"items":[{"uid":"ff2f337f3f2d334a","reportUrl":"https://novasamatech.github.io/test-runner/3859//#testresult/ff2f337f3f2d334a","status":"passed","time":{"start":1696018475758,"stop":1696018476675,"duration":917}},{"uid":"831a750c407b5bb1","reportUrl":"https://novasamatech.github.io/test-runner/3858//#testresult/831a750c407b5bb1","status":"passed","time":{"start":1696003667472,"stop":1696003668537,"duration":1065}},{"uid":"ba21f018291965b","reportUrl":"https://novasamatech.github.io/test-runner/3857//#testresult/ba21f018291965b","status":"passed","time":{"start":1695988906321,"stop":1695988907601,"duration":1280}},{"uid":"53052a4185e0af64","reportUrl":"https://novasamatech.github.io/test-runner/3856//#testresult/53052a4185e0af64","status":"passed","time":{"start":1695974521943,"stop":1695974523127,"duration":1184}},{"uid":"6081f9a4563ee7ed","reportUrl":"https://novasamatech.github.io/test-runner/3855//#testresult/6081f9a4563ee7ed","status":"passed","time":{"start":1695960463202,"stop":1695960464134,"duration":932}},{"uid":"6e9eb1d7312891b7","reportUrl":"https://novasamatech.github.io/test-runner/3854//#testresult/6e9eb1d7312891b7","status":"passed","time":{"start":1695945753881,"stop":1695945755092,"duration":1211}},{"uid":"cb8e92147f6f5782","reportUrl":"https://novasamatech.github.io/test-runner/3853//#testresult/cb8e92147f6f5782","status":"passed","time":{"start":1695931310273,"stop":1695931311460,"duration":1187}},{"uid":"59da68d970f1ea19","reportUrl":"https://novasamatech.github.io/test-runner/3852//#testresult/59da68d970f1ea19","status":"passed","time":{"start":1695916920237,"stop":1695916921365,"duration":1128}},{"uid":"291c3cbd1cd33b72","reportUrl":"https://novasamatech.github.io/test-runner/3851//#testresult/291c3cbd1cd33b72","status":"passed","time":{"start":1695902499552,"stop":1695902500481,"duration":929}},{"uid":"fc18336f63b8b450","reportUrl":"https://novasamatech.github.io/test-runner/3850//#testresult/fc18336f63b8b450","status":"passed","time":{"start":1695888092822,"stop":1695888093781,"duration":959}},{"uid":"cebd4ac12d55f95","reportUrl":"https://novasamatech.github.io/test-runner/3849//#testresult/cebd4ac12d55f95","status":"passed","time":{"start":1695873710073,"stop":1695873711003,"duration":930}},{"uid":"4b095c89e0032d7b","reportUrl":"https://novasamatech.github.io/test-runner/3848//#testresult/4b095c89e0032d7b","status":"passed","time":{"start":1695859331363,"stop":1695859332285,"duration":922}},{"uid":"591917a7e8c516bd","reportUrl":"https://novasamatech.github.io/test-runner/3847//#testresult/591917a7e8c516bd","status":"passed","time":{"start":1695844933445,"stop":1695844934416,"duration":971}},{"uid":"673b49c93ca97845","reportUrl":"https://novasamatech.github.io/test-runner/3846//#testresult/673b49c93ca97845","status":"passed","time":{"start":1695830529420,"stop":1695830530010,"duration":590}},{"uid":"ad77f399b11e2979","reportUrl":"https://novasamatech.github.io/test-runner/3845//#testresult/ad77f399b11e2979","status":"passed","time":{"start":1695816102137,"stop":1695816103296,"duration":1159}},{"uid":"da89b2c37d7c3954","reportUrl":"https://novasamatech.github.io/test-runner/3844//#testresult/da89b2c37d7c3954","status":"passed","time":{"start":1695801711826,"stop":1695801712994,"duration":1168}},{"uid":"fb0d72981add3d50","reportUrl":"https://novasamatech.github.io/test-runner/3843//#testresult/fb0d72981add3d50","status":"passed","time":{"start":1695787331051,"stop":1695787331638,"duration":587}},{"uid":"f566cf9c1ae4f713","reportUrl":"https://novasamatech.github.io/test-runner/3842//#testresult/f566cf9c1ae4f713","status":"passed","time":{"start":1695772945532,"stop":1695772946386,"duration":854}},{"uid":"853a8922a61207c2","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/853a8922a61207c2","status":"passed","time":{"start":1695758532937,"stop":1695758534107,"duration":1170}},{"uid":"18b344a4d3fcbbd8","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/18b344a4d3fcbbd8","status":"passed","time":{"start":1695744099711,"stop":1695744101010,"duration":1299}}]},"tags":[]},"source":"deeb800a1c171bf9.json","parameterValues":["{'url': 'wss://zeitgeist.api.onfinality.io/public-ws', 'name': 'Zeitgeist'}"]}