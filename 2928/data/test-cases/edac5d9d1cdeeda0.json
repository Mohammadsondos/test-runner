{"uid":"edac5d9d1cdeeda0","name":"test_can_create_connection[Test for Karura, url: wss://karura-rpc-0.aca-api.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"74abac3bcfd546cd2faa7dbde7c71997","time":{"start":1682989463693,"stop":1682989464065,"duration":372},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","statusTrace":"data = {'name': 'Karura', 'url': 'wss://karura-rpc-0.aca-api.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"eab88e9ef0c4e676","name":"stdout","source":"eab88e9ef0c4e676.txt","type":"text/plain","size":256}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az627-736"},{"name":"thread","value":"1908-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://karura-rpc-0.aca-api.network', 'name': 'Karura'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e404de2ffeb228b7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682989453147,"stop":1682989453524,"duration":377}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":54,"unknown":0,"total":58},"items":[{"uid":"fed59d3b49f4fcde","reportUrl":"https://nova-wallet.github.io/test-runner/2924//#testresult/fed59d3b49f4fcde","status":"passed","time":{"start":1682928952454,"stop":1682928953097,"duration":643}},{"uid":"fdc806448df644a2","reportUrl":"https://nova-wallet.github.io/test-runner/2922//#testresult/fdc806448df644a2","status":"passed","time":{"start":1682903214714,"stop":1682903215548,"duration":834}},{"uid":"195d8c7f02625e82","reportUrl":"https://nova-wallet.github.io/test-runner/2920//#testresult/195d8c7f02625e82","status":"passed","time":{"start":1682871272692,"stop":1682871273324,"duration":632}},{"uid":"693447308e28e15a","reportUrl":"https://nova-wallet.github.io/test-runner/2918//#testresult/693447308e28e15a","status":"passed","time":{"start":1682842445286,"stop":1682842446003,"duration":717}},{"uid":"2c6ee615153ab17b","reportUrl":"https://nova-wallet.github.io/test-runner/2917//#testresult/2c6ee615153ab17b","status":"passed","time":{"start":1682828062708,"stop":1682828063446,"duration":738}},{"uid":"34bdff8616f52606","reportUrl":"https://nova-wallet.github.io/test-runner/2916//#testresult/34bdff8616f52606","status":"passed","time":{"start":1682816918611,"stop":1682816919251,"duration":640}},{"uid":"4e268430d4dd6d6f","reportUrl":"https://nova-wallet.github.io/test-runner/2912//#testresult/4e268430d4dd6d6f","status":"passed","time":{"start":1682756053430,"stop":1682756054149,"duration":719}},{"uid":"2aa7c94182256fda","reportUrl":"https://nova-wallet.github.io/test-runner/2911//#testresult/2aa7c94182256fda","status":"passed","time":{"start":1682741659145,"stop":1682741659753,"duration":608}},{"uid":"b8c9f235d7790d35","reportUrl":"https://nova-wallet.github.io/test-runner/2908//#testresult/b8c9f235d7790d35","status":"passed","time":{"start":1682697845060,"stop":1682697845683,"duration":623}},{"uid":"a4679c1f67228e58","reportUrl":"https://nova-wallet.github.io/test-runner/2907//#testresult/a4679c1f67228e58","status":"passed","time":{"start":1682683486509,"stop":1682683487266,"duration":757}},{"uid":"669dcc7ed0418382","reportUrl":"https://nova-wallet.github.io/test-runner/2905//#testresult/669dcc7ed0418382","status":"passed","time":{"start":1682654647811,"stop":1682654648429,"duration":618}},{"uid":"d2ff16d13de9eff3","reportUrl":"https://nova-wallet.github.io/test-runner/2904//#testresult/d2ff16d13de9eff3","status":"passed","time":{"start":1682640799591,"stop":1682640800209,"duration":618}},{"uid":"3ad31a35e0b21167","reportUrl":"https://nova-wallet.github.io/test-runner/2902//#testresult/3ad31a35e0b21167","status":"passed","time":{"start":1682611447374,"stop":1682611448136,"duration":762}},{"uid":"6b2ae94f3e422c95","reportUrl":"https://nova-wallet.github.io/test-runner/2900//#testresult/6b2ae94f3e422c95","status":"passed","time":{"start":1682582659292,"stop":1682582659801,"duration":509}},{"uid":"d5d5e7afcf8b1469","reportUrl":"https://nova-wallet.github.io/test-runner/2899//#testresult/d5d5e7afcf8b1469","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682568245584,"stop":1682568245950,"duration":366}},{"uid":"223746dbe382fce5","reportUrl":"https://nova-wallet.github.io/test-runner/2898//#testresult/223746dbe382fce5","status":"passed","time":{"start":1682554394670,"stop":1682554395518,"duration":848}},{"uid":"fca4cd8438f04c3a","reportUrl":"https://nova-wallet.github.io/test-runner/2897//#testresult/fca4cd8438f04c3a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682539443531,"stop":1682539444007,"duration":476}},{"uid":"1e90838c5b1aab29","reportUrl":"https://nova-wallet.github.io/test-runner/2896//#testresult/1e90838c5b1aab29","status":"passed","time":{"start":1682525063325,"stop":1682525064024,"duration":699}},{"uid":"30738953f96168c1","reportUrl":"https://nova-wallet.github.io/test-runner/2895//#testresult/30738953f96168c1","status":"passed","time":{"start":1682510787721,"stop":1682510788206,"duration":485}},{"uid":"fd127d9314a5f9e9","reportUrl":"https://nova-wallet.github.io/test-runner/2894//#testresult/fd127d9314a5f9e9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 500 Internal Server Error","time":{"start":1682496271893,"stop":1682496272441,"duration":548}}]},"tags":[]},"source":"edac5d9d1cdeeda0.json","parameterValues":["{'url': 'wss://karura-rpc-0.aca-api.network', 'name': 'Karura'}"]}