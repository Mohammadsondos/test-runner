{"uid":"b5356e52221c2284","name":"test_can_create_connection[Test for Centrifuge Parachain, url: wss://centrifuge-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c61d3131e170cf9bb6fa392a1937f08b","time":{"start":1671307523758,"stop":1671307536414,"duration":12656},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Centrifuge Parachain', 'url': 'wss://centrifuge-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"5e5e00469577cfb9","name":"stdout","source":"5e5e00469577cfb9.txt","type":"text/plain","size":248}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az251-937"},{"name":"thread","value":"1767-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"33157ac3ca6c9cc2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671307501031,"stop":1671307513685,"duration":12654}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":164,"skipped":0,"passed":208,"unknown":0,"total":372},"items":[{"uid":"8a7f0d4accb2829f","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/8a7f0d4accb2829f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671293153699,"stop":1671293166581,"duration":12882}},{"uid":"fff6b252a98578bd","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/fff6b252a98578bd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671278760369,"stop":1671278772987,"duration":12618}},{"uid":"427cfd9eaae8d5c4","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/427cfd9eaae8d5c4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671264404346,"stop":1671264417070,"duration":12724}},{"uid":"1b9f4b9e5b9bccf4","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/1b9f4b9e5b9bccf4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671249947047,"stop":1671249959901,"duration":12854}},{"uid":"c340a7b6cb15a5d5","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/c340a7b6cb15a5d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671236034729,"stop":1671236047369,"duration":12640}},{"uid":"5bfaed71ed20adb1","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/5bfaed71ed20adb1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671221139323,"stop":1671221150746,"duration":11423}},{"uid":"1fe9d5c7c447e597","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/1fe9d5c7c447e597","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671206745897,"stop":1671206757316,"duration":11419}},{"uid":"f7e7810f3b4a7d95","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/f7e7810f3b4a7d95","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671192374086,"stop":1671192386714,"duration":12628}},{"uid":"ca0014f22e7e678e","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/ca0014f22e7e678e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671177956900,"stop":1671177968309,"duration":11409}},{"uid":"76a7a10c6a645e55","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/76a7a10c6a645e55","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671163557779,"stop":1671163569210,"duration":11431}},{"uid":"bdc9406117bffbe0","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/bdc9406117bffbe0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671149700676,"stop":1671149713308,"duration":12632}},{"uid":"574b7bbf4559bddc","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/574b7bbf4559bddc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671134741966,"stop":1671134753385,"duration":11419}},{"uid":"cfa69ed8504db766","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/cfa69ed8504db766","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671120356581,"stop":1671120369327,"duration":12746}},{"uid":"2a925e38ed0ff4bf","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/2a925e38ed0ff4bf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671106017093,"stop":1671106029753,"duration":12660}},{"uid":"fa6d4088981455f0","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/fa6d4088981455f0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671091587140,"stop":1671091598556,"duration":11416}},{"uid":"c0d727ab82774b9d","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/c0d727ab82774b9d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671077167453,"stop":1671077180170,"duration":12717}},{"uid":"b7fc1de08c6cd24f","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/b7fc1de08c6cd24f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671063323585,"stop":1671063335019,"duration":11434}},{"uid":"67432780befb8d24","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/67432780befb8d24","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671048354603,"stop":1671048366581,"duration":11978}},{"uid":"9d1513da0e6c16ac","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/9d1513da0e6c16ac","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671034100634,"stop":1671034112066,"duration":11432}},{"uid":"7359406139c37361","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/7359406139c37361","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671019590437,"stop":1671019602629,"duration":12192}}]},"tags":[]},"source":"b5356e52221c2284.json","parameterValues":["{'url': 'wss://centrifuge-rpc.dwellir.com', 'name': 'Centrifuge Parachain'}"]}