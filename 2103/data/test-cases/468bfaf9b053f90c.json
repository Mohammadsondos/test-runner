{"uid":"468bfaf9b053f90c","name":"test_can_create_connection[Test for Altair, url: wss://altair-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"abcba6d159bf02fac13745bbd963686a","time":{"start":1671307441875,"stop":1671307454559,"duration":12684},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9f03fc31c3a788ba","name":"stdout","source":"9f03fc31c3a788ba.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az251-937"},{"name":"thread","value":"1767-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bcc4fb205ff1dbc4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671307419098,"stop":1671307431764,"duration":12666}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":164,"skipped":0,"passed":208,"unknown":0,"total":372},"items":[{"uid":"38ee9aa90a7f285","reportUrl":"https://nova-wallet.github.io/test-runner/2102//#testresult/38ee9aa90a7f285","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671293064239,"stop":1671293076345,"duration":12106}},{"uid":"2ebb2c23c2783791","reportUrl":"https://nova-wallet.github.io/test-runner/2101//#testresult/2ebb2c23c2783791","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671278678460,"stop":1671278690839,"duration":12379}},{"uid":"278cf574ac666084","reportUrl":"https://nova-wallet.github.io/test-runner/2100//#testresult/278cf574ac666084","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671264302624,"stop":1671264315371,"duration":12747}},{"uid":"945d5521b8e884b","reportUrl":"https://nova-wallet.github.io/test-runner/2099//#testresult/945d5521b8e884b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671249854561,"stop":1671249867421,"duration":12860}},{"uid":"a672b0305c36776e","reportUrl":"https://nova-wallet.github.io/test-runner/2098//#testresult/a672b0305c36776e","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671235956382,"stop":1671235967781,"duration":11399}},{"uid":"559a2babe7a8e40c","reportUrl":"https://nova-wallet.github.io/test-runner/2097//#testresult/559a2babe7a8e40c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671221050711,"stop":1671221063325,"duration":12614}},{"uid":"b7c49e70390ac5d4","reportUrl":"https://nova-wallet.github.io/test-runner/2096//#testresult/b7c49e70390ac5d4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671206653233,"stop":1671206665960,"duration":12727}},{"uid":"c9405579bdfc990a","reportUrl":"https://nova-wallet.github.io/test-runner/2095//#testresult/c9405579bdfc990a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671192288527,"stop":1671192301111,"duration":12584}},{"uid":"f2a5bee8d7bbfc7f","reportUrl":"https://nova-wallet.github.io/test-runner/2094//#testresult/f2a5bee8d7bbfc7f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671177874834,"stop":1671177887541,"duration":12707}},{"uid":"6cd089eda74dfa71","reportUrl":"https://nova-wallet.github.io/test-runner/2093//#testresult/6cd089eda74dfa71","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671163468888,"stop":1671163481530,"duration":12642}},{"uid":"e355c630502aa1f8","reportUrl":"https://nova-wallet.github.io/test-runner/2092//#testresult/e355c630502aa1f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671149610296,"stop":1671149622937,"duration":12641}},{"uid":"aa2b66cb144759c3","reportUrl":"https://nova-wallet.github.io/test-runner/2091//#testresult/aa2b66cb144759c3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671134652424,"stop":1671134665203,"duration":12779}},{"uid":"4b4e5c81bacf3f15","reportUrl":"https://nova-wallet.github.io/test-runner/2090//#testresult/4b4e5c81bacf3f15","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671120269516,"stop":1671120282218,"duration":12702}},{"uid":"a7b8911b8b7d7884","reportUrl":"https://nova-wallet.github.io/test-runner/2089//#testresult/a7b8911b8b7d7884","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671105931741,"stop":1671105944345,"duration":12604}},{"uid":"864d24e7599753b7","reportUrl":"https://nova-wallet.github.io/test-runner/2088//#testresult/864d24e7599753b7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671091494070,"stop":1671091505437,"duration":11367}},{"uid":"4752393a774e21f5","reportUrl":"https://nova-wallet.github.io/test-runner/2087//#testresult/4752393a774e21f5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671077075882,"stop":1671077088648,"duration":12766}},{"uid":"2a97bf7dd00452d2","reportUrl":"https://nova-wallet.github.io/test-runner/2086//#testresult/2a97bf7dd00452d2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671063234655,"stop":1671063247371,"duration":12716}},{"uid":"719a4025a7a59387","reportUrl":"https://nova-wallet.github.io/test-runner/2085//#testresult/719a4025a7a59387","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671048262779,"stop":1671048275641,"duration":12862}},{"uid":"add65a3d6c948535","reportUrl":"https://nova-wallet.github.io/test-runner/2084//#testresult/add65a3d6c948535","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671033876542,"stop":1671033889247,"duration":12705}},{"uid":"3350cdc9cfb8456c","reportUrl":"https://nova-wallet.github.io/test-runner/2083//#testresult/3350cdc9cfb8456c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable","time":{"start":1671019509263,"stop":1671019521885,"duration":12622}}]},"tags":[]},"source":"468bfaf9b053f90c.json","parameterValues":["{'url': 'wss://altair-rpc.dwellir.com', 'name': 'Altair'}"]}