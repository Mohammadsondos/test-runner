{"uid":"6c09705c826328f3","name":"test_precision[Test for 3DPass]","fullName":"tests.test_network_parameters.TestPrecision#test_precision","historyId":"23ee790b9b841482308a355e462f0690","time":{"start":1699344343042,"stop":1699344343891,"duration":849},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7faa1971c700>\nchain = <scripts.utils.chain_model.Chain object at 0x7faa197ce020>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_network_parameters.TestPrecision object at 0x7faa1971c700>\nchain = <scripts.utils.chain_model.Chain object at 0x7faa197ce020>\n\n    def test_precision(self, chain: Chain):\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_network_parameters.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"d192287f2ab2fb89","name":"stdout","source":"d192287f2ab2fb89.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_network_parameters"},{"name":"subSuite","value":"TestPrecision"},{"name":"host","value":"fv-az576-746"},{"name":"thread","value":"2083-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_network_parameters"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7faa197ce020>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b8fb07a892c0224","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699344327147,"stop":1699344328012,"duration":865}},{"uid":"9a8240fc344a6da8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699344160966,"stop":1699344312117,"duration":151151}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":32,"skipped":0,"passed":420,"unknown":0,"total":452},"items":[{"uid":"48f05c9cffcdf146","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/48f05c9cffcdf146","status":"passed","time":{"start":1699329747354,"stop":1699329751742,"duration":4388}},{"uid":"ec2824ece62019f9","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/ec2824ece62019f9","status":"passed","time":{"start":1699315373327,"stop":1699315378219,"duration":4892}},{"uid":"921ae47d5308824d","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/921ae47d5308824d","status":"passed","time":{"start":1699300937025,"stop":1699300940439,"duration":3414}},{"uid":"35c5d9378d1f5696","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/35c5d9378d1f5696","status":"passed","time":{"start":1699286596464,"stop":1699286600735,"duration":4271}},{"uid":"d87429a3675ac8af","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/d87429a3675ac8af","status":"passed","time":{"start":1699272223912,"stop":1699272230966,"duration":7054}},{"uid":"294066a6253c57","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/294066a6253c57","status":"passed","time":{"start":1699257759988,"stop":1699257764530,"duration":4542}},{"uid":"80578cf80e13c452","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/80578cf80e13c452","status":"passed","time":{"start":1699243363673,"stop":1699243369391,"duration":5718}},{"uid":"1c567d9a4e78bcde","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/1c567d9a4e78bcde","status":"passed","time":{"start":1699228980196,"stop":1699228986225,"duration":6029}},{"uid":"7a03ed4e4db12745","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/7a03ed4e4db12745","status":"passed","time":{"start":1699214542490,"stop":1699214546701,"duration":4211}},{"uid":"3d8d33b8de7fcf30","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/3d8d33b8de7fcf30","status":"passed","time":{"start":1699200142631,"stop":1699200146837,"duration":4206}},{"uid":"e4c67aaf68ad6412","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/e4c67aaf68ad6412","status":"passed","time":{"start":1699185735653,"stop":1699185742353,"duration":6700}},{"uid":"ffa4a7b2556b19aa","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/ffa4a7b2556b19aa","status":"passed","time":{"start":1699171335618,"stop":1699171340004,"duration":4386}},{"uid":"b46c5cf89cb4c856","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/b46c5cf89cb4c856","status":"passed","time":{"start":1699156973189,"stop":1699156978441,"duration":5252}},{"uid":"235b541822239c9d","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/235b541822239c9d","status":"passed","time":{"start":1699142581051,"stop":1699142584646,"duration":3595}},{"uid":"f8a34c72675d8912","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/f8a34c72675d8912","status":"passed","time":{"start":1699128185528,"stop":1699128192681,"duration":7153}},{"uid":"ea8a0396c1580091","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/ea8a0396c1580091","status":"passed","time":{"start":1699113780893,"stop":1699113787083,"duration":6190}},{"uid":"93ecaafba1b4c10e","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/93ecaafba1b4c10e","status":"passed","time":{"start":1699099323446,"stop":1699099328818,"duration":5372}},{"uid":"66a99c704eac80d6","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/66a99c704eac80d6","status":"passed","time":{"start":1699084972820,"stop":1699084979112,"duration":6292}},{"uid":"922fa1bd526279b8","reportUrl":"https://novasamatech.github.io/test-runner/4073//#testresult/922fa1bd526279b8","status":"passed","time":{"start":1699070577403,"stop":1699070583373,"duration":5970}},{"uid":"8e4f8997600d6398","reportUrl":"https://novasamatech.github.io/test-runner/4071//#testresult/8e4f8997600d6398","status":"passed","time":{"start":1699041742801,"stop":1699041747014,"duration":4213}}]},"tags":[]},"source":"6c09705c826328f3.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7faa197ce020>"]}