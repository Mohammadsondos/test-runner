{"uid":"ab67968e01fd7e7d","name":"test_has_new_assets[Test for 3DPass]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"e08a8292a954daf47f218175329e8df6","time":{"start":1699344343313,"stop":1699344344433,"duration":1120},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa91e781f60>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa91e8ecca0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa91e781f60>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa91e8ecca0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"785d66dbeb2fcc8d","name":"stdout","source":"785d66dbeb2fcc8d.txt","type":"text/plain","size":1644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az176-439"},{"name":"thread","value":"2220-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa91e8ecca0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eeab6cefbe87862a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699344327146,"stop":1699344328282,"duration":1136}},{"uid":"dde3356ada7bb257","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699344189591,"stop":1699344312120,"duration":122529}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":32,"skipped":0,"passed":419,"unknown":0,"total":451},"items":[{"uid":"6d01a1db5421dfc1","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/6d01a1db5421dfc1","status":"passed","time":{"start":1699329734187,"stop":1699329740321,"duration":6134}},{"uid":"5189357c07dc2299","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/5189357c07dc2299","status":"passed","time":{"start":1699315376685,"stop":1699315380024,"duration":3339}},{"uid":"e2f374bbcc8c7e6c","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/e2f374bbcc8c7e6c","status":"passed","time":{"start":1699300942718,"stop":1699300946438,"duration":3720}},{"uid":"20e37eed47c98cdd","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/20e37eed47c98cdd","status":"passed","time":{"start":1699286556518,"stop":1699286560879,"duration":4361}},{"uid":"9787fa5fb0929d1e","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/9787fa5fb0929d1e","status":"passed","time":{"start":1699272135765,"stop":1699272140232,"duration":4467}},{"uid":"301b75a5322dfa4c","reportUrl":"https://novasamatech.github.io/test-runner/4086//#testresult/301b75a5322dfa4c","status":"passed","time":{"start":1699257734830,"stop":1699257737934,"duration":3104}},{"uid":"3b21a5037d5c04ef","reportUrl":"https://novasamatech.github.io/test-runner/4085//#testresult/3b21a5037d5c04ef","status":"passed","time":{"start":1699243349655,"stop":1699243353730,"duration":4075}},{"uid":"242e93993539f099","reportUrl":"https://novasamatech.github.io/test-runner/4084//#testresult/242e93993539f099","status":"passed","time":{"start":1699228991029,"stop":1699228998281,"duration":7252}},{"uid":"1e68820195b0ddd2","reportUrl":"https://novasamatech.github.io/test-runner/4083//#testresult/1e68820195b0ddd2","status":"passed","time":{"start":1699214586906,"stop":1699214593951,"duration":7045}},{"uid":"da57133a11b0a6e2","reportUrl":"https://novasamatech.github.io/test-runner/4082//#testresult/da57133a11b0a6e2","status":"passed","time":{"start":1699200141590,"stop":1699200145869,"duration":4279}},{"uid":"7a9d522e7a88aa30","reportUrl":"https://novasamatech.github.io/test-runner/4081//#testresult/7a9d522e7a88aa30","status":"passed","time":{"start":1699185721154,"stop":1699185724852,"duration":3698}},{"uid":"8c07b69fb33ff432","reportUrl":"https://novasamatech.github.io/test-runner/4080//#testresult/8c07b69fb33ff432","status":"passed","time":{"start":1699171353412,"stop":1699171357710,"duration":4298}},{"uid":"b149eb42fe0ca944","reportUrl":"https://novasamatech.github.io/test-runner/4079//#testresult/b149eb42fe0ca944","status":"passed","time":{"start":1699156946587,"stop":1699156951080,"duration":4493}},{"uid":"73a2eab4ee401c22","reportUrl":"https://novasamatech.github.io/test-runner/4078//#testresult/73a2eab4ee401c22","status":"passed","time":{"start":1699142629518,"stop":1699142634552,"duration":5034}},{"uid":"1a153dbfb5240c3c","reportUrl":"https://novasamatech.github.io/test-runner/4077//#testresult/1a153dbfb5240c3c","status":"passed","time":{"start":1699128172130,"stop":1699128180720,"duration":8590}},{"uid":"62cd8a43a935f4a8","reportUrl":"https://novasamatech.github.io/test-runner/4076//#testresult/62cd8a43a935f4a8","status":"passed","time":{"start":1699113763554,"stop":1699113769140,"duration":5586}},{"uid":"b086496ff50f224e","reportUrl":"https://novasamatech.github.io/test-runner/4075//#testresult/b086496ff50f224e","status":"passed","time":{"start":1699099322471,"stop":1699099328370,"duration":5899}},{"uid":"4ceae83a02566268","reportUrl":"https://novasamatech.github.io/test-runner/4074//#testresult/4ceae83a02566268","status":"passed","time":{"start":1699084946797,"stop":1699084951450,"duration":4653}},{"uid":"382705fbab56a3f5","reportUrl":"https://novasamatech.github.io/test-runner/4073//#testresult/382705fbab56a3f5","status":"passed","time":{"start":1699070536869,"stop":1699070544025,"duration":7156}},{"uid":"846018f6cfda9ea","reportUrl":"https://novasamatech.github.io/test-runner/4071//#testresult/846018f6cfda9ea","status":"passed","time":{"start":1699041727689,"stop":1699041731146,"duration":3457}}]},"tags":[]},"source":"ab67968e01fd7e7d.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa91e8ecca0>"]}