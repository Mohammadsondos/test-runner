{"uid":"fb19bf42087e5e82","name":"test_has_new_assets[Test for Dora Factory (PAUSED)]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2618293375d61e703515aac3ceeb0de7","time":{"start":1695773008647,"stop":1695773010210,"duration":1563},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fe0daa51de0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fe0dad46ef0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fe0daa51de0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fe0dad46ef0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"36802eae9b26c8b5","name":"stdout","source":"36802eae9b26c8b5.txt","type":"text/plain","size":3228}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az446-795"},{"name":"thread","value":"2055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fe0dad46ef0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"18dd7003c9cdaa75","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695772991875,"stop":1695772993612,"duration":1737}},{"uid":"651f6405e68b8b8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695772975492,"stop":1695772976848,"duration":1356}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":63,"skipped":0,"passed":138,"unknown":0,"total":201},"items":[{"uid":"ed5075ec2f48f445","reportUrl":"https://novasamatech.github.io/test-runner/3841//#testresult/ed5075ec2f48f445","status":"passed","time":{"start":1695758554848,"stop":1695758561529,"duration":6681}},{"uid":"fb21bd54b1f1a1c","reportUrl":"https://novasamatech.github.io/test-runner/3840//#testresult/fb21bd54b1f1a1c","status":"passed","time":{"start":1695744138056,"stop":1695744145381,"duration":7325}},{"uid":"9a42cdc8646331b7","reportUrl":"https://novasamatech.github.io/test-runner/3839//#testresult/9a42cdc8646331b7","status":"passed","time":{"start":1695729721190,"stop":1695729727522,"duration":6332}},{"uid":"fa418365d205fee6","reportUrl":"https://novasamatech.github.io/test-runner/3838//#testresult/fa418365d205fee6","status":"passed","time":{"start":1695715371632,"stop":1695715376496,"duration":4864}},{"uid":"7067fd1c95f33e72","reportUrl":"https://novasamatech.github.io/test-runner/3837//#testresult/7067fd1c95f33e72","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695700958329,"stop":1695700959588,"duration":1259}},{"uid":"943873708b586e7","reportUrl":"https://novasamatech.github.io/test-runner/3836//#testresult/943873708b586e7","status":"passed","time":{"start":1695686610072,"stop":1695686616087,"duration":6015}},{"uid":"10007619762ce310","reportUrl":"https://novasamatech.github.io/test-runner/3835//#testresult/10007619762ce310","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695672181949,"stop":1695672183142,"duration":1193}},{"uid":"601af9adb46a3af2","reportUrl":"https://novasamatech.github.io/test-runner/3834//#testresult/601af9adb46a3af2","status":"passed","time":{"start":1695657764362,"stop":1695657770057,"duration":5695}},{"uid":"6257a0a9d2421532","reportUrl":"https://novasamatech.github.io/test-runner/3833//#testresult/6257a0a9d2421532","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695643388724,"stop":1695643389969,"duration":1245}},{"uid":"1982404b39c101d9","reportUrl":"https://novasamatech.github.io/test-runner/3832//#testresult/1982404b39c101d9","status":"passed","time":{"start":1695628930681,"stop":1695628937336,"duration":6655}},{"uid":"a6c49f024a7ca0be","reportUrl":"https://novasamatech.github.io/test-runner/3831//#testresult/a6c49f024a7ca0be","status":"passed","time":{"start":1695614561108,"stop":1695614566195,"duration":5087}},{"uid":"704f2f03398bc2fb","reportUrl":"https://novasamatech.github.io/test-runner/3830//#testresult/704f2f03398bc2fb","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695600195496,"stop":1695600196941,"duration":1445}},{"uid":"840c7d47bbf931d8","reportUrl":"https://novasamatech.github.io/test-runner/3829//#testresult/840c7d47bbf931d8","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695585752284,"stop":1695585753730,"duration":1446}},{"uid":"d8d3c7e361cf95da","reportUrl":"https://novasamatech.github.io/test-runner/3828//#testresult/d8d3c7e361cf95da","status":"passed","time":{"start":1695571333701,"stop":1695571338936,"duration":5235}},{"uid":"a7fa6f629e57e6d2","reportUrl":"https://novasamatech.github.io/test-runner/3827//#testresult/a7fa6f629e57e6d2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695556957246,"stop":1695556958252,"duration":1006}},{"uid":"553605cd67d4d54e","reportUrl":"https://novasamatech.github.io/test-runner/3826//#testresult/553605cd67d4d54e","status":"passed","time":{"start":1695542567409,"stop":1695542573763,"duration":6354}},{"uid":"f91c8298bffbddf3","reportUrl":"https://novasamatech.github.io/test-runner/3825//#testresult/f91c8298bffbddf3","status":"passed","time":{"start":1695528121713,"stop":1695528126728,"duration":5015}},{"uid":"d5db347495db5b81","reportUrl":"https://novasamatech.github.io/test-runner/3824//#testresult/d5db347495db5b81","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695513800289,"stop":1695513801566,"duration":1277}},{"uid":"51702b3e80219d83","reportUrl":"https://novasamatech.github.io/test-runner/3823//#testresult/51702b3e80219d83","status":"passed","time":{"start":1695499330555,"stop":1695499335588,"duration":5033}},{"uid":"5a9fe81573d77e9a","reportUrl":"https://novasamatech.github.io/test-runner/3822//#testresult/5a9fe81573d77e9a","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695484954457,"stop":1695484955785,"duration":1328}}]},"tags":[]},"source":"fb19bf42087e5e82.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fe0dad46ef0>"]}