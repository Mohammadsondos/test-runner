{"uid":"2ad48361f89c9a62","name":"test_has_new_assets[Test for Bifrost Kusama]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"939a6ae6895ec375521fbe9513c8afbf","time":{"start":1709078518233,"stop":1709078518295,"duration":62},"status":"failed","statusMessage":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f745528a920>\nchain_model = <scripts.utils.chain_model.Chain object at 0x7f74557bea40>\n\n    def test_has_new_assets(self, chain_model: Chain):\n    \n        chain_assets = {asset['symbol'].upper(\n        ): '' for asset in chain_model.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain_model.name in self.exclusions:\n            chain_assets.update(\n                {ex_asset: '' for ex_asset in self.exclusions[chain_model.name]})\n        symbols = chain_model.substrate.token_symbol if isinstance(chain_model.substrate.token_symbol, list) else [\n            chain_model.properties.symbol]\n    \n        for symbol in symbols:\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),\n                                  \"new token to add: \" + symbol)\n    \n>       delayed_assert.assert_expectations()\n\ntests/test_check_new_assets.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def assert_expectations():\n        'raise an assert if there are any failed expectations'\n        if _failed_expectations:\n>           assert False, _report_failures()\nE           AssertionError: \u001B[93m\nE           \nE           assert_expectations() called at\u001B[0m\nE           \u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\nE           \nE           \u001B[91m\u001B[4mFailed Expectations : 1\nE           \u001B[0m\nE           1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\nE           \t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\nE                       delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),\n\n.venv/lib/python3.10/site-packages/delayed_assert/delayed_assert.py:74: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"chain_model","time":{"start":1709078501869,"stop":1709078508044,"duration":6175},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1040-150"},{"name":"thread","value":"2153-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain_model","value":"<scripts.utils.chain_model.Chain object at 0x7f74557bea40>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"da78782fac8b3c30","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1709078513148,"stop":1709078513223,"duration":75}},{"uid":"b5d47606587cde93","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1709078508044,"stop":1709078508136,"duration":92}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":14,"skipped":0,"passed":879,"unknown":0,"total":898},"items":[{"uid":"a7c8855b55a60a4e","reportUrl":"https://novasamatech.github.io/test-runner/4780//#testresult/a7c8855b55a60a4e","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1709064096350,"stop":1709064096402,"duration":52}},{"uid":"fd45b4b7c38998e2","reportUrl":"https://novasamatech.github.io/test-runner/4779//#testresult/fd45b4b7c38998e2","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1709049690016,"stop":1709049690067,"duration":51}},{"uid":"d9ac9cf8c303ad93","reportUrl":"https://novasamatech.github.io/test-runner/4778//#testresult/d9ac9cf8c303ad93","status":"failed","statusDetails":"AssertionError: \u001B[93m\n\nassert_expectations() called at\u001B[0m\n\u001B[4m\u001B[94m\"/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:33\"\u001B[0m\u001B[93m in test_has_new_assets()\n\n\u001B[91m\u001B[4mFailed Expectations : 1\n\u001B[0m\n1: \u001B[91mFailed at \"\u001B[0m\u001B[94m\u001B[4m/home/runner/work/test-runner/test-runner/nova-utils/tests/test_check_new_assets.py:30\u001B[0m\u001B[91m\", in test_has_new_assets()\n\t\u001B[1m\u001B[4mErrorMessage:\u001B[0m\u001B[91m\tnew token to add: RMRK\u001B[0m\n            delayed_assert.expect(symbol.upper() in chain_assets.keys() or symbol.upper() in chain_assets.values(),","time":{"start":1709035297768,"stop":1709035297823,"duration":55}},{"uid":"1bf977c9588b22f2","reportUrl":"https://novasamatech.github.io/test-runner/4776//#testresult/1bf977c9588b22f2","status":"passed","time":{"start":1709032496085,"stop":1709032496154,"duration":69}},{"uid":"5119ac68d775561c","reportUrl":"https://novasamatech.github.io/test-runner/4703//#testresult/5119ac68d775561c","status":"passed","time":{"start":1707984077278,"stop":1707984077327,"duration":49}},{"uid":"9bc35cdef898237d","reportUrl":"https://novasamatech.github.io/test-runner/4702//#testresult/9bc35cdef898237d","status":"passed","time":{"start":1707969684266,"stop":1707969684310,"duration":44}},{"uid":"9bd3c350b4913fe9","reportUrl":"https://novasamatech.github.io/test-runner/4701//#testresult/9bd3c350b4913fe9","status":"passed","time":{"start":1707955327293,"stop":1707955327336,"duration":43}},{"uid":"9b2db42824919dc9","reportUrl":"https://novasamatech.github.io/test-runner/4700//#testresult/9b2db42824919dc9","status":"passed","time":{"start":1707940884731,"stop":1707940884794,"duration":63}},{"uid":"b79e527d3494f976","reportUrl":"https://novasamatech.github.io/test-runner/4699//#testresult/b79e527d3494f976","status":"passed","time":{"start":1707926479796,"stop":1707926479848,"duration":52}},{"uid":"562337aafa3b6423","reportUrl":"https://novasamatech.github.io/test-runner/4698//#testresult/562337aafa3b6423","status":"passed","time":{"start":1707912089526,"stop":1707912089582,"duration":56}},{"uid":"97f55e0d3b95b0e0","reportUrl":"https://novasamatech.github.io/test-runner/4697//#testresult/97f55e0d3b95b0e0","status":"passed","time":{"start":1707897684087,"stop":1707897684131,"duration":44}},{"uid":"fb110a12cf5aed6d","reportUrl":"https://novasamatech.github.io/test-runner/4696//#testresult/fb110a12cf5aed6d","status":"passed","time":{"start":1707883286818,"stop":1707883286887,"duration":69}},{"uid":"65c8fa37f3ccb133","reportUrl":"https://novasamatech.github.io/test-runner/4695//#testresult/65c8fa37f3ccb133","status":"passed","time":{"start":1707868921302,"stop":1707868921368,"duration":66}},{"uid":"d49cc8f17c460be1","reportUrl":"https://novasamatech.github.io/test-runner/4694//#testresult/d49cc8f17c460be1","status":"passed","time":{"start":1707854474885,"stop":1707854474935,"duration":50}},{"uid":"fd295e2c1560c4f1","reportUrl":"https://novasamatech.github.io/test-runner/4693//#testresult/fd295e2c1560c4f1","status":"passed","time":{"start":1707840086777,"stop":1707840086837,"duration":60}},{"uid":"d28c157f141c36ef","reportUrl":"https://novasamatech.github.io/test-runner/4692//#testresult/d28c157f141c36ef","status":"passed","time":{"start":1707825689168,"stop":1707825689214,"duration":46}},{"uid":"cc59cdef120f71c5","reportUrl":"https://novasamatech.github.io/test-runner/4691//#testresult/cc59cdef120f71c5","status":"passed","time":{"start":1707811277709,"stop":1707811277759,"duration":50}},{"uid":"c6245822ab26bced","reportUrl":"https://novasamatech.github.io/test-runner/4690//#testresult/c6245822ab26bced","status":"passed","time":{"start":1707796885242,"stop":1707796885295,"duration":53}},{"uid":"d9db96b871eaa615","reportUrl":"https://novasamatech.github.io/test-runner/4689//#testresult/d9db96b871eaa615","status":"passed","time":{"start":1707782521049,"stop":1707782521091,"duration":42}},{"uid":"2996d5ea4bd14921","reportUrl":"https://novasamatech.github.io/test-runner/4688//#testresult/2996d5ea4bd14921","status":"passed","time":{"start":1707768072876,"stop":1707768072919,"duration":43}}]},"tags":[]},"source":"2ad48361f89c9a62.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f74557bea40>"]}