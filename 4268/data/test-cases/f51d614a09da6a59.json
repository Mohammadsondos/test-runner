{"uid":"f51d614a09da6a59","name":"test_can_create_connection[Test for Vara, url: wss://rpc.vara-network.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5212b10e0b518ec890104168521e7152","time":{"start":1701806717633,"stop":1701806717633,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Vara, url: wss://rpc.vara-network.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1701806686639,"stop":1701806687081,"duration":442},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:04:47 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"connection_by_url","time":{"start":1701806702148,"stop":1701806702577,"duration":429},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:02 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"connection_by_url","time":{"start":1701806717633,"stop":1701806718061,"duration":428},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Vara, url: wss://rpc.vara-network.io]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"6875da76c95b6104","name":"stdout","source":"6875da76c95b6104.txt","type":"text/plain","size":1050}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az891-76"},{"name":"thread","value":"2161-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.vara-network.io', 'name': 'Vara'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"79747f848c2b0761","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:05:02 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1701806702148,"stop":1701806702148,"duration":0}},{"uid":"9cd01d6b0a9b628c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 20:04:47 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1701806686638,"stop":1701806686638,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":582,"unknown":0,"total":584},"items":[{"uid":"a4994f0d9850bb47","reportUrl":"https://novasamatech.github.io/test-runner/4267//#testresult/a4994f0d9850bb47","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'server': 'nginx', 'date': 'Tue, 05 Dec 2023 16:06:01 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'x-hostname': 'vara-rpc-eu-1'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1701792360967,"stop":1701792360967,"duration":0}},{"uid":"2070f97ad4256e14","reportUrl":"https://novasamatech.github.io/test-runner/4266//#testresult/2070f97ad4256e14","status":"passed","time":{"start":1701777945875,"stop":1701777945875,"duration":0}},{"uid":"15e6bedbdb76c5ff","reportUrl":"https://novasamatech.github.io/test-runner/4265//#testresult/15e6bedbdb76c5ff","status":"passed","time":{"start":1701763534140,"stop":1701763534140,"duration":0}},{"uid":"d710cfeeacdc9f9e","reportUrl":"https://novasamatech.github.io/test-runner/4264//#testresult/d710cfeeacdc9f9e","status":"passed","time":{"start":1701749063519,"stop":1701749063519,"duration":0}},{"uid":"7751a23326c3432","reportUrl":"https://novasamatech.github.io/test-runner/4263//#testresult/7751a23326c3432","status":"passed","time":{"start":1701734734333,"stop":1701734734333,"duration":0}},{"uid":"90a561ccf10b2cc4","reportUrl":"https://novasamatech.github.io/test-runner/4262//#testresult/90a561ccf10b2cc4","status":"passed","time":{"start":1701720307353,"stop":1701720307353,"duration":0}},{"uid":"80b13bb68a728d3f","reportUrl":"https://novasamatech.github.io/test-runner/4261//#testresult/80b13bb68a728d3f","status":"passed","time":{"start":1701705933731,"stop":1701705933731,"duration":0}},{"uid":"ae8bae1ec8317bcd","reportUrl":"https://novasamatech.github.io/test-runner/4260//#testresult/ae8bae1ec8317bcd","status":"passed","time":{"start":1701691541466,"stop":1701691541466,"duration":0}},{"uid":"a58fe85a18fb31e6","reportUrl":"https://novasamatech.github.io/test-runner/4259//#testresult/a58fe85a18fb31e6","status":"passed","time":{"start":1701677084487,"stop":1701677084488,"duration":1}},{"uid":"eb7c70b75670e56f","reportUrl":"https://novasamatech.github.io/test-runner/4224//#testresult/eb7c70b75670e56f","status":"passed","time":{"start":1701173116593,"stop":1701173116594,"duration":1}},{"uid":"de7f1beb2cc2f386","reportUrl":"https://novasamatech.github.io/test-runner/4223//#testresult/de7f1beb2cc2f386","status":"passed","time":{"start":1701158672981,"stop":1701158672982,"duration":1}},{"uid":"e0b749aaa8156748","reportUrl":"https://novasamatech.github.io/test-runner/4222//#testresult/e0b749aaa8156748","status":"passed","time":{"start":1701144271538,"stop":1701144271538,"duration":0}},{"uid":"13683a55d897c1d3","reportUrl":"https://novasamatech.github.io/test-runner/4221//#testresult/13683a55d897c1d3","status":"passed","time":{"start":1701129931427,"stop":1701129931427,"duration":0}},{"uid":"48bf70e4c7b731ff","reportUrl":"https://novasamatech.github.io/test-runner/4220//#testresult/48bf70e4c7b731ff","status":"passed","time":{"start":1701115533511,"stop":1701115533511,"duration":0}},{"uid":"b78eee98b78975df","reportUrl":"https://novasamatech.github.io/test-runner/4219//#testresult/b78eee98b78975df","status":"passed","time":{"start":1701101129021,"stop":1701101129021,"duration":0}},{"uid":"948431b1849925d6","reportUrl":"https://novasamatech.github.io/test-runner/4218//#testresult/948431b1849925d6","status":"passed","time":{"start":1701086686245,"stop":1701086686245,"duration":0}},{"uid":"29623790b5748eb5","reportUrl":"https://novasamatech.github.io/test-runner/4217//#testresult/29623790b5748eb5","status":"passed","time":{"start":1701072300959,"stop":1701072300959,"duration":0}},{"uid":"7aaf8ee76af7baef","reportUrl":"https://novasamatech.github.io/test-runner/4216//#testresult/7aaf8ee76af7baef","status":"passed","time":{"start":1701067705931,"stop":1701067705931,"duration":0}},{"uid":"13c6d2a1fa4f802e","reportUrl":"https://novasamatech.github.io/test-runner/4215//#testresult/13c6d2a1fa4f802e","status":"passed","time":{"start":1701057904117,"stop":1701057904117,"duration":0}},{"uid":"b13096f32d46defa","reportUrl":"https://novasamatech.github.io/test-runner/4214//#testresult/b13096f32d46defa","status":"passed","time":{"start":1701043567287,"stop":1701043567287,"duration":0}}]},"tags":[]},"source":"f51d614a09da6a59.json","parameterValues":["{'url': 'wss://rpc.vara-network.io', 'name': 'Vara'}"]}