{"uid":"33c297c1866d6d97","name":"test_can_create_connection[Test for Hashed Network, url: wss://c2.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c89828a53a64d5be0404b3846fb6bd54","time":{"start":1688054689543,"stop":1688054689782,"duration":239},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 16:04:49 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 16:04:49 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 16:04:49 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 16:04:49 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"1495cedcf628a951","name":"stdout","source":"1495cedcf628a951.txt","type":"text/plain","size":1098}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az454-150"},{"name":"thread","value":"1958-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f7f7cc4df6485b63","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 16:04:34 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1688054674193,"stop":1688054674436,"duration":243}},{"uid":"89b0ffc91f731ef7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 16:04:18 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1688054658693,"stop":1688054659028,"duration":335}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":88,"skipped":0,"passed":213,"unknown":0,"total":301},"items":[{"uid":"fcd4c295eda99752","reportUrl":"https://novasamatech.github.io/test-runner/3296//#testresult/fcd4c295eda99752","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 29 Jun 2023 12:05:58 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1688040358593,"stop":1688040358669,"duration":76}},{"uid":"9ec797f1cb3186d1","reportUrl":"https://novasamatech.github.io/test-runner/3295//#testresult/9ec797f1cb3186d1","status":"passed","time":{"start":1688025886651,"stop":1688025886944,"duration":293}},{"uid":"723f5a37131aed16","reportUrl":"https://novasamatech.github.io/test-runner/3294//#testresult/723f5a37131aed16","status":"passed","time":{"start":1688011464230,"stop":1688011464418,"duration":188}},{"uid":"45c5f1f478582048","reportUrl":"https://novasamatech.github.io/test-runner/3293//#testresult/45c5f1f478582048","status":"passed","time":{"start":1687997744219,"stop":1687997744406,"duration":187}},{"uid":"4861e4006fd271f9","reportUrl":"https://novasamatech.github.io/test-runner/3292//#testresult/4861e4006fd271f9","status":"passed","time":{"start":1687982700244,"stop":1687982700713,"duration":469}},{"uid":"6ffad4b725bd427f","reportUrl":"https://novasamatech.github.io/test-runner/3291//#testresult/6ffad4b725bd427f","status":"passed","time":{"start":1687968277719,"stop":1687968277936,"duration":217}},{"uid":"3a8718c2af72cd05","reportUrl":"https://novasamatech.github.io/test-runner/3290//#testresult/3a8718c2af72cd05","status":"passed","time":{"start":1687953953286,"stop":1687953953333,"duration":47}},{"uid":"dc009676877c846d","reportUrl":"https://novasamatech.github.io/test-runner/3289//#testresult/dc009676877c846d","status":"passed","time":{"start":1687939472510,"stop":1687939472710,"duration":200}},{"uid":"5b295f1096f44cd1","reportUrl":"https://novasamatech.github.io/test-runner/3288//#testresult/5b295f1096f44cd1","status":"passed","time":{"start":1687925077500,"stop":1687925077853,"duration":353}},{"uid":"80ed74492c29d722","reportUrl":"https://novasamatech.github.io/test-runner/3287//#testresult/80ed74492c29d722","status":"passed","time":{"start":1687911423464,"stop":1687911423674,"duration":210}},{"uid":"588215f87f347295","reportUrl":"https://novasamatech.github.io/test-runner/3286//#testresult/588215f87f347295","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 27 Jun 2023 20:04:40 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687896280453,"stop":1687896280690,"duration":237}},{"uid":"49a2a1364717fc78","reportUrl":"https://novasamatech.github.io/test-runner/3285//#testresult/49a2a1364717fc78","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 27 Jun 2023 16:04:54 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687881894767,"stop":1687881894980,"duration":213}},{"uid":"e2cd8f9568180f2f","reportUrl":"https://novasamatech.github.io/test-runner/3284//#testresult/e2cd8f9568180f2f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 27 Jun 2023 12:05:54 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687867554471,"stop":1687867554497,"duration":26}},{"uid":"6c917d62d654df9c","reportUrl":"https://novasamatech.github.io/test-runner/3283//#testresult/6c917d62d654df9c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 27 Jun 2023 08:05:20 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687853120379,"stop":1687853120719,"duration":340}},{"uid":"7156d892179eaa4c","reportUrl":"https://novasamatech.github.io/test-runner/3282//#testresult/7156d892179eaa4c","status":"passed","time":{"start":1687838660086,"stop":1687838660160,"duration":74}},{"uid":"c3d1a51b97f9487a","reportUrl":"https://novasamatech.github.io/test-runner/3281//#testresult/c3d1a51b97f9487a","status":"passed","time":{"start":1687824995661,"stop":1687824995884,"duration":223}},{"uid":"4d434c70d65d257a","reportUrl":"https://novasamatech.github.io/test-runner/3280//#testresult/4d434c70d65d257a","status":"passed","time":{"start":1687809857329,"stop":1687809857376,"duration":47}},{"uid":"df23345340db42d3","reportUrl":"https://novasamatech.github.io/test-runner/3279//#testresult/df23345340db42d3","status":"passed","time":{"start":1687795470906,"stop":1687795470943,"duration":37}},{"uid":"ea16fb0f155407b8","reportUrl":"https://novasamatech.github.io/test-runner/3241//#testresult/ea16fb0f155407b8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Tue, 20 Jun 2023 08:04:54 GMT', 'content-type': 'text/plain', 'content-length': '45', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1687248294289,"stop":1687248294528,"duration":239}},{"uid":"9b20d959188c12a8","reportUrl":"https://novasamatech.github.io/test-runner/3240//#testresult/9b20d959188c12a8","status":"passed","time":{"start":1687233854518,"stop":1687233854575,"duration":57}}]},"tags":[]},"source":"33c297c1866d6d97.json","parameterValues":["{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"]}