{"uid":"cbc36f925e340407","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1699560243543,"stop":1699560244482,"duration":939},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb819743730>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb81979a680>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fb819743730>\nchain = <scripts.utils.chain_model.Chain object at 0x7fb81979a680>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"7a7b1ef7550f87a2","name":"stdout","source":"7a7b1ef7550f87a2.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az450-680"},{"name":"thread","value":"2213-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fb81979a680>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"df6df903ba962891","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699560227677,"stop":1699560228512,"duration":835}},{"uid":"e8ee641571b888de","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699560209934,"stop":1699560210780,"duration":846}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":29,"skipped":0,"passed":437,"unknown":0,"total":466},"items":[{"uid":"9e7f8b3ce94250ef","reportUrl":"https://novasamatech.github.io/test-runner/4106//#testresult/9e7f8b3ce94250ef","status":"passed","time":{"start":1699545759712,"stop":1699545763046,"duration":3334}},{"uid":"f7b765552a301ee4","reportUrl":"https://novasamatech.github.io/test-runner/4105//#testresult/f7b765552a301ee4","status":"passed","time":{"start":1699531397217,"stop":1699531403449,"duration":6232}},{"uid":"7eadea65a9243e56","reportUrl":"https://novasamatech.github.io/test-runner/4104//#testresult/7eadea65a9243e56","status":"passed","time":{"start":1699516951171,"stop":1699516954711,"duration":3540}},{"uid":"5a510018424b4368","reportUrl":"https://novasamatech.github.io/test-runner/4103//#testresult/5a510018424b4368","status":"passed","time":{"start":1699502547079,"stop":1699502550973,"duration":3894}},{"uid":"79233c071ac82f07","reportUrl":"https://novasamatech.github.io/test-runner/4102//#testresult/79233c071ac82f07","status":"passed","time":{"start":1699488170236,"stop":1699488173369,"duration":3133}},{"uid":"103f131060859e65","reportUrl":"https://novasamatech.github.io/test-runner/4101//#testresult/103f131060859e65","status":"passed","time":{"start":1699473795044,"stop":1699473800253,"duration":5209}},{"uid":"97b26828d3785024","reportUrl":"https://novasamatech.github.io/test-runner/4100//#testresult/97b26828d3785024","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699459371514,"stop":1699459372145,"duration":631}},{"uid":"c606812a442055d5","reportUrl":"https://novasamatech.github.io/test-runner/4099//#testresult/c606812a442055d5","status":"passed","time":{"start":1699444974985,"stop":1699444982485,"duration":7500}},{"uid":"4aae78fc18e7b496","reportUrl":"https://novasamatech.github.io/test-runner/4098//#testresult/4aae78fc18e7b496","status":"passed","time":{"start":1699430528203,"stop":1699430533342,"duration":5139}},{"uid":"a787b9241ba255ee","reportUrl":"https://novasamatech.github.io/test-runner/4097//#testresult/a787b9241ba255ee","status":"passed","time":{"start":1699416176345,"stop":1699416182294,"duration":5949}},{"uid":"d74cbc372ec72332","reportUrl":"https://novasamatech.github.io/test-runner/4096//#testresult/d74cbc372ec72332","status":"passed","time":{"start":1699401801787,"stop":1699401807372,"duration":5585}},{"uid":"52296d77431bab32","reportUrl":"https://novasamatech.github.io/test-runner/4095//#testresult/52296d77431bab32","status":"passed","time":{"start":1699387352462,"stop":1699387357533,"duration":5071}},{"uid":"99affe569224891c","reportUrl":"https://novasamatech.github.io/test-runner/4094//#testresult/99affe569224891c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699372988628,"stop":1699372989259,"duration":631}},{"uid":"1e852996ec7bfc67","reportUrl":"https://novasamatech.github.io/test-runner/4093//#testresult/1e852996ec7bfc67","status":"passed","time":{"start":1699358560857,"stop":1699358567081,"duration":6224}},{"uid":"1bbd2d4ddd644d07","reportUrl":"https://novasamatech.github.io/test-runner/4092//#testresult/1bbd2d4ddd644d07","status":"passed","time":{"start":1699344173614,"stop":1699344179804,"duration":6190}},{"uid":"22a7d51b7ea3a3cf","reportUrl":"https://novasamatech.github.io/test-runner/4091//#testresult/22a7d51b7ea3a3cf","status":"passed","time":{"start":1699329730563,"stop":1699329734184,"duration":3621}},{"uid":"5070d842f709af1c","reportUrl":"https://novasamatech.github.io/test-runner/4090//#testresult/5070d842f709af1c","status":"passed","time":{"start":1699315371619,"stop":1699315377436,"duration":5817}},{"uid":"2749783a5ad79303","reportUrl":"https://novasamatech.github.io/test-runner/4089//#testresult/2749783a5ad79303","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1699300962448,"stop":1699300963005,"duration":557}},{"uid":"bd4f7508fc0a0820","reportUrl":"https://novasamatech.github.io/test-runner/4088//#testresult/bd4f7508fc0a0820","status":"passed","time":{"start":1699286547484,"stop":1699286553909,"duration":6425}},{"uid":"2b1414b86a82a01b","reportUrl":"https://novasamatech.github.io/test-runner/4087//#testresult/2b1414b86a82a01b","status":"passed","time":{"start":1699272130039,"stop":1699272132503,"duration":2464}}]},"tags":[]},"source":"cbc36f925e340407.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fb81979a680>"]}