{"uid":"bbe547e649b6c0bc","name":"test_has_new_assets[Test for Kylin]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"6298ae40067eb81d0e24ef70d638695a","time":{"start":1698768178321,"stop":1698768179085,"duration":764},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f94716555d0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9471657850>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f94716555d0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f9471657850>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"51ee2bdc54eb5b80","name":"stdout","source":"51ee2bdc54eb5b80.txt","type":"text/plain","size":1713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az590-323"},{"name":"thread","value":"2133-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f9471657850>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b759d4405ea5e767","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698768162741,"stop":1698768163295,"duration":554}},{"uid":"fb7bb27edd40aab4","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698768147056,"stop":1698768147709,"duration":653}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":48,"skipped":0,"passed":363,"unknown":0,"total":411},"items":[{"uid":"cf2909cd6434b182","reportUrl":"https://novasamatech.github.io/test-runner/4051//#testresult/cf2909cd6434b182","status":"passed","time":{"start":1698753774102,"stop":1698753776593,"duration":2491}},{"uid":"711a725d9cc8a927","reportUrl":"https://novasamatech.github.io/test-runner/4050//#testresult/711a725d9cc8a927","status":"passed","time":{"start":1698739348198,"stop":1698739352068,"duration":3870}},{"uid":"3c919970fe714010","reportUrl":"https://novasamatech.github.io/test-runner/4049//#testresult/3c919970fe714010","status":"passed","time":{"start":1698724942441,"stop":1698724944400,"duration":1959}},{"uid":"655877f72fe5e255","reportUrl":"https://novasamatech.github.io/test-runner/4048//#testresult/655877f72fe5e255","status":"passed","time":{"start":1698710576914,"stop":1698710579088,"duration":2174}},{"uid":"efbe5f86d72fdc6b","reportUrl":"https://novasamatech.github.io/test-runner/4047//#testresult/efbe5f86d72fdc6b","status":"passed","time":{"start":1698696148164,"stop":1698696150818,"duration":2654}},{"uid":"2556c10c35c9fd07","reportUrl":"https://novasamatech.github.io/test-runner/4046//#testresult/2556c10c35c9fd07","status":"passed","time":{"start":1698681753192,"stop":1698681755157,"duration":1965}},{"uid":"7e367e58f08fab8f","reportUrl":"https://novasamatech.github.io/test-runner/4045//#testresult/7e367e58f08fab8f","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698667403279,"stop":1698667404462,"duration":1183}},{"uid":"45e37842c3c757d4","reportUrl":"https://novasamatech.github.io/test-runner/4044//#testresult/45e37842c3c757d4","status":"passed","time":{"start":1698652965222,"stop":1698652969731,"duration":4509}},{"uid":"487aa14dd7f1b242","reportUrl":"https://novasamatech.github.io/test-runner/4043//#testresult/487aa14dd7f1b242","status":"passed","time":{"start":1698638554797,"stop":1698638558186,"duration":3389}},{"uid":"d047b8d15fb98cec","reportUrl":"https://novasamatech.github.io/test-runner/4042//#testresult/d047b8d15fb98cec","status":"passed","time":{"start":1698624186138,"stop":1698624188565,"duration":2427}},{"uid":"b073f5d5e3d4b624","reportUrl":"https://novasamatech.github.io/test-runner/4041//#testresult/b073f5d5e3d4b624","status":"passed","time":{"start":1698609731676,"stop":1698609734043,"duration":2367}},{"uid":"b6ec27d9ccf3fc51","reportUrl":"https://novasamatech.github.io/test-runner/4040//#testresult/b6ec27d9ccf3fc51","status":"passed","time":{"start":1698595354249,"stop":1698595356189,"duration":1940}},{"uid":"e028e1f0ea928c4c","reportUrl":"https://novasamatech.github.io/test-runner/4039//#testresult/e028e1f0ea928c4c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698580991887,"stop":1698580992811,"duration":924}},{"uid":"e93431cd25a2647f","reportUrl":"https://novasamatech.github.io/test-runner/4038//#testresult/e93431cd25a2647f","status":"passed","time":{"start":1698566551591,"stop":1698566555411,"duration":3820}},{"uid":"90daea61cacf9703","reportUrl":"https://novasamatech.github.io/test-runner/4037//#testresult/90daea61cacf9703","status":"passed","time":{"start":1698552136035,"stop":1698552138962,"duration":2927}},{"uid":"b9d0e18a440965a1","reportUrl":"https://novasamatech.github.io/test-runner/4036//#testresult/b9d0e18a440965a1","status":"passed","time":{"start":1698537807560,"stop":1698537811597,"duration":4037}},{"uid":"275645aa4d9a009b","reportUrl":"https://novasamatech.github.io/test-runner/4035//#testresult/275645aa4d9a009b","status":"passed","time":{"start":1698523349247,"stop":1698523354365,"duration":5118}},{"uid":"bafbb6e133f9b010","reportUrl":"https://novasamatech.github.io/test-runner/4034//#testresult/bafbb6e133f9b010","status":"passed","time":{"start":1698508963339,"stop":1698508964809,"duration":1470}},{"uid":"b112422efbc23714","reportUrl":"https://novasamatech.github.io/test-runner/4033//#testresult/b112422efbc23714","status":"passed","time":{"start":1698494536017,"stop":1698494538845,"duration":2828}},{"uid":"59a0e8e5c093a0bc","reportUrl":"https://novasamatech.github.io/test-runner/4032//#testresult/59a0e8e5c093a0bc","status":"passed","time":{"start":1698480136536,"stop":1698480139010,"duration":2474}}]},"tags":[]},"source":"bbe547e649b6c0bc.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f9471657850>"]}