{"uid":"940b4fd8e019ff00","name":"test_has_new_assets[Test for Aventus]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"26d2bb085c6b7d2b3dc2f615274675fc","time":{"start":1698768193777,"stop":1698768195287,"duration":1510},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa4d9e4f160>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa4d9d8ded0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa4d9e4f160>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa4d9d8ded0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"9a0f640960754da2","name":"stdout","source":"9a0f640960754da2.txt","type":"text/plain","size":1353}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az590-323"},{"name":"thread","value":"2130-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa4d9d8ded0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c2f68646b76506fa","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698768177585,"stop":1698768178740,"duration":1155}},{"uid":"cae46823485bbd34","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698768161385,"stop":1698768162556,"duration":1171}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":390,"unknown":0,"total":411},"items":[{"uid":"8e456f5e36759272","reportUrl":"https://novasamatech.github.io/test-runner/4051//#testresult/8e456f5e36759272","status":"passed","time":{"start":1698753753082,"stop":1698753756589,"duration":3507}},{"uid":"6bdb18baf79c8f48","reportUrl":"https://novasamatech.github.io/test-runner/4050//#testresult/6bdb18baf79c8f48","status":"passed","time":{"start":1698739362285,"stop":1698739367697,"duration":5412}},{"uid":"fc6b4ea85b06cadd","reportUrl":"https://novasamatech.github.io/test-runner/4049//#testresult/fc6b4ea85b06cadd","status":"passed","time":{"start":1698724950554,"stop":1698724955573,"duration":5019}},{"uid":"bee068799bd3b6","reportUrl":"https://novasamatech.github.io/test-runner/4048//#testresult/bee068799bd3b6","status":"passed","time":{"start":1698710584164,"stop":1698710589039,"duration":4875}},{"uid":"7ed7917dd61c13d9","reportUrl":"https://novasamatech.github.io/test-runner/4047//#testresult/7ed7917dd61c13d9","status":"passed","time":{"start":1698696155460,"stop":1698696163542,"duration":8082}},{"uid":"bc1083ac01703325","reportUrl":"https://novasamatech.github.io/test-runner/4046//#testresult/bc1083ac01703325","status":"passed","time":{"start":1698681744776,"stop":1698681748779,"duration":4003}},{"uid":"3e5b4a411fb0d87a","reportUrl":"https://novasamatech.github.io/test-runner/4045//#testresult/3e5b4a411fb0d87a","status":"passed","time":{"start":1698667380109,"stop":1698667385051,"duration":4942}},{"uid":"d844118a6708927","reportUrl":"https://novasamatech.github.io/test-runner/4044//#testresult/d844118a6708927","status":"passed","time":{"start":1698652983697,"stop":1698652990280,"duration":6583}},{"uid":"d60b96afecaa1f49","reportUrl":"https://novasamatech.github.io/test-runner/4043//#testresult/d60b96afecaa1f49","status":"passed","time":{"start":1698638561615,"stop":1698638569129,"duration":7514}},{"uid":"f58c19261de90bb","reportUrl":"https://novasamatech.github.io/test-runner/4042//#testresult/f58c19261de90bb","status":"passed","time":{"start":1698624194341,"stop":1698624202148,"duration":7807}},{"uid":"e9d6cbac5dacf6c7","reportUrl":"https://novasamatech.github.io/test-runner/4041//#testresult/e9d6cbac5dacf6c7","status":"passed","time":{"start":1698609739636,"stop":1698609747614,"duration":7978}},{"uid":"f958b03894ca95ff","reportUrl":"https://novasamatech.github.io/test-runner/4040//#testresult/f958b03894ca95ff","status":"passed","time":{"start":1698595350351,"stop":1698595354854,"duration":4503}},{"uid":"1c049c16e3fba09","reportUrl":"https://novasamatech.github.io/test-runner/4039//#testresult/1c049c16e3fba09","status":"passed","time":{"start":1698580974719,"stop":1698580979759,"duration":5040}},{"uid":"204c8dbdef12ad21","reportUrl":"https://novasamatech.github.io/test-runner/4038//#testresult/204c8dbdef12ad21","status":"passed","time":{"start":1698566559776,"stop":1698566565599,"duration":5823}},{"uid":"1ac1fb0285bd1fe4","reportUrl":"https://novasamatech.github.io/test-runner/4037//#testresult/1ac1fb0285bd1fe4","status":"passed","time":{"start":1698552143854,"stop":1698552150719,"duration":6865}},{"uid":"2116a05d8651c3e5","reportUrl":"https://novasamatech.github.io/test-runner/4036//#testresult/2116a05d8651c3e5","status":"passed","time":{"start":1698537812579,"stop":1698537819094,"duration":6515}},{"uid":"61a71599809ed7cd","reportUrl":"https://novasamatech.github.io/test-runner/4035//#testresult/61a71599809ed7cd","status":"passed","time":{"start":1698523362291,"stop":1698523367338,"duration":5047}},{"uid":"4c9522aafed45f3c","reportUrl":"https://novasamatech.github.io/test-runner/4034//#testresult/4c9522aafed45f3c","status":"passed","time":{"start":1698508962304,"stop":1698508966639,"duration":4335}},{"uid":"b5a249bb60ff477d","reportUrl":"https://novasamatech.github.io/test-runner/4033//#testresult/b5a249bb60ff477d","status":"passed","time":{"start":1698494542988,"stop":1698494551219,"duration":8231}},{"uid":"4322ee19dd8b0c19","reportUrl":"https://novasamatech.github.io/test-runner/4032//#testresult/4322ee19dd8b0c19","status":"passed","time":{"start":1698480147688,"stop":1698480152314,"duration":4626}}]},"tags":[]},"source":"940b4fd8e019ff00.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa4d9d8ded0>"]}