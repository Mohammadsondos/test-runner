{"uid":"4f5f95af5a74b62a","name":"test_can_create_connection[Test for Hashed Network, url: wss://c2.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"c89828a53a64d5be0404b3846fb6bd54","time":{"start":1684598700181,"stop":1684598700339,"duration":158},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c2.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"b720fc7ce696932c","name":"stdout","source":"b720fc7ce696932c.txt","type":"text/plain","size":226}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az336-389"},{"name":"thread","value":"1881-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"10719ef54c89871b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684598689942,"stop":1684598690110,"duration":168}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":123,"unknown":0,"total":131},"items":[{"uid":"ea75356d90cffd9f","reportUrl":"https://nova-wallet.github.io/test-runner/3043//#testresult/ea75356d90cffd9f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684584330946,"stop":1684584331144,"duration":198}},{"uid":"cf2f4231190bb837","reportUrl":"https://nova-wallet.github.io/test-runner/3042//#testresult/cf2f4231190bb837","status":"passed","time":{"start":1684569865663,"stop":1684569865719,"duration":56}},{"uid":"78ad863ad27d401b","reportUrl":"https://nova-wallet.github.io/test-runner/3041//#testresult/78ad863ad27d401b","status":"passed","time":{"start":1684555468693,"stop":1684555468769,"duration":76}},{"uid":"4244dfb3c739912d","reportUrl":"https://nova-wallet.github.io/test-runner/3040//#testresult/4244dfb3c739912d","status":"passed","time":{"start":1684541570491,"stop":1684541570565,"duration":74}},{"uid":"45b8260d4e586d9c","reportUrl":"https://nova-wallet.github.io/test-runner/3039//#testresult/45b8260d4e586d9c","status":"passed","time":{"start":1684526659424,"stop":1684526659485,"duration":61}},{"uid":"bd1193fcd64967e8","reportUrl":"https://nova-wallet.github.io/test-runner/3038//#testresult/bd1193fcd64967e8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684512310798,"stop":1684512310853,"duration":55}},{"uid":"20bcd45b84b935fd","reportUrl":"https://nova-wallet.github.io/test-runner/3037//#testresult/20bcd45b84b935fd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684497935309,"stop":1684497935361,"duration":52}},{"uid":"cf4e51c76bc6e4e4","reportUrl":"https://nova-wallet.github.io/test-runner/3034//#testresult/cf4e51c76bc6e4e4","status":"passed","time":{"start":1684455234493,"stop":1684455234880,"duration":387}},{"uid":"154c5198b9229c8e","reportUrl":"https://nova-wallet.github.io/test-runner/3033//#testresult/154c5198b9229c8e","status":"passed","time":{"start":1684440276789,"stop":1684440276850,"duration":61}},{"uid":"c5d13bd67a77de82","reportUrl":"https://nova-wallet.github.io/test-runner/3031//#testresult/c5d13bd67a77de82","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684411525320,"stop":1684411525344,"duration":24}},{"uid":"cb501e62cd9a44d7","reportUrl":"https://nova-wallet.github.io/test-runner/3027//#testresult/cb501e62cd9a44d7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1684353902726,"stop":1684353902965,"duration":239}},{"uid":"119f02198d937c01","reportUrl":"https://nova-wallet.github.io/test-runner/3026//#testresult/119f02198d937c01","status":"passed","time":{"start":1684339501564,"stop":1684339501865,"duration":301}},{"uid":"df8e9f440ecbf712","reportUrl":"https://nova-wallet.github.io/test-runner/3024//#testresult/df8e9f440ecbf712","status":"passed","time":{"start":1684310703174,"stop":1684310703321,"duration":147}},{"uid":"9d8456742c53525d","reportUrl":"https://nova-wallet.github.io/test-runner/3023//#testresult/9d8456742c53525d","status":"passed","time":{"start":1684296295693,"stop":1684296295925,"duration":232}},{"uid":"f03a5c290e62432b","reportUrl":"https://nova-wallet.github.io/test-runner/3022//#testresult/f03a5c290e62432b","status":"passed","time":{"start":1684282511049,"stop":1684282511283,"duration":234}},{"uid":"c17a7ec6733461f1","reportUrl":"https://nova-wallet.github.io/test-runner/3020//#testresult/c17a7ec6733461f1","status":"passed","time":{"start":1684253296021,"stop":1684253296216,"duration":195}},{"uid":"ea33f3eb71a87e79","reportUrl":"https://nova-wallet.github.io/test-runner/3019//#testresult/ea33f3eb71a87e79","status":"passed","time":{"start":1684238815236,"stop":1684238815465,"duration":229}},{"uid":"9738573d3c012a4e","reportUrl":"https://nova-wallet.github.io/test-runner/3017//#testresult/9738573d3c012a4e","status":"passed","time":{"start":1684209966325,"stop":1684209966549,"duration":224}},{"uid":"42c5a52cb76e5caf","reportUrl":"https://nova-wallet.github.io/test-runner/3016//#testresult/42c5a52cb76e5caf","status":"passed","time":{"start":1684196037222,"stop":1684196037306,"duration":84}},{"uid":"b3f35bf98ca485be","reportUrl":"https://nova-wallet.github.io/test-runner/3015//#testresult/b3f35bf98ca485be","status":"passed","time":{"start":1684181087061,"stop":1684181087120,"duration":59}}]},"tags":[]},"source":"4f5f95af5a74b62a.json","parameterValues":["{'url': 'wss://c2.hashed.network', 'name': 'Hashed Network'}"]}