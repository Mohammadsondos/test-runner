{"uid":"31891ec05303f4c8","name":"test_can_create_connection[Test for Moonbeam, url: wss://moonbeam.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"5ba7fbb1428fe0820408b3ea00ce843e","time":{"start":1680725106059,"stop":1680725165399,"duration":59340},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Moonbeam', 'url': 'wss://moonbeam.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Moonbeam', 'url': 'wss://moonbeam.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:145: in _get_resp_headers\n    status, resp_headers, status_message = read_headers(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:312: in read_headers\n    line = recv_line(sock)\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:131: in recv_line\n    c = recv(sock, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 1\n\n    def recv(sock, bufsize):\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n../../../../.local/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"9991792d8dffe443","name":"stdout","source":"9991792d8dffe443.txt","type":"text/plain","size":258}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az563-295"},{"name":"thread","value":"1789-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://moonbeam.api.onfinality.io/public-ws', 'name': 'Moonbeam'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"61132cb1e17767aa","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1680725035344,"stop":1680725095912,"duration":60568}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":55,"skipped":0,"passed":893,"unknown":0,"total":948},"items":[{"uid":"92cfd196f5950004","reportUrl":"https://nova-wallet.github.io/test-runner/2768//#testresult/92cfd196f5950004","status":"passed","time":{"start":1680710701928,"stop":1680710718783,"duration":16855}},{"uid":"7c644fe6707294ef","reportUrl":"https://nova-wallet.github.io/test-runner/2766//#testresult/7c644fe6707294ef","status":"passed","time":{"start":1680681879092,"stop":1680681879141,"duration":49}},{"uid":"5277af38fca2a263","reportUrl":"https://nova-wallet.github.io/test-runner/2765//#testresult/5277af38fca2a263","status":"passed","time":{"start":1680667444743,"stop":1680667445091,"duration":348}},{"uid":"1edd0b88496d8a9f","reportUrl":"https://nova-wallet.github.io/test-runner/2764//#testresult/1edd0b88496d8a9f","status":"passed","time":{"start":1680653496261,"stop":1680653496616,"duration":355}},{"uid":"9985680a3afc65a","reportUrl":"https://nova-wallet.github.io/test-runner/2763//#testresult/9985680a3afc65a","status":"passed","time":{"start":1680638636689,"stop":1680638636898,"duration":209}},{"uid":"b527a250ccb4b7a9","reportUrl":"https://nova-wallet.github.io/test-runner/2762//#testresult/b527a250ccb4b7a9","status":"passed","time":{"start":1680624250442,"stop":1680624250677,"duration":235}},{"uid":"f6d61b8528296265","reportUrl":"https://nova-wallet.github.io/test-runner/2761//#testresult/f6d61b8528296265","status":"passed","time":{"start":1680609896499,"stop":1680609896580,"duration":81}},{"uid":"6879e674d1c54e0c","reportUrl":"https://nova-wallet.github.io/test-runner/2759//#testresult/6879e674d1c54e0c","status":"passed","time":{"start":1680581042763,"stop":1680581043229,"duration":466}},{"uid":"de699c579203de9d","reportUrl":"https://nova-wallet.github.io/test-runner/2758//#testresult/de699c579203de9d","status":"passed","time":{"start":1680567182090,"stop":1680567182193,"duration":103}},{"uid":"da4f458ac6c2b998","reportUrl":"https://nova-wallet.github.io/test-runner/2757//#testresult/da4f458ac6c2b998","status":"passed","time":{"start":1680552239440,"stop":1680552239696,"duration":256}},{"uid":"d3ee846d3c9a9969","reportUrl":"https://nova-wallet.github.io/test-runner/2756//#testresult/d3ee846d3c9a9969","status":"passed","time":{"start":1680537842731,"stop":1680537843309,"duration":578}},{"uid":"45356a8e3b97d328","reportUrl":"https://nova-wallet.github.io/test-runner/2755//#testresult/45356a8e3b97d328","status":"passed","time":{"start":1680523492019,"stop":1680523492295,"duration":276}},{"uid":"7ea491d98b168038","reportUrl":"https://nova-wallet.github.io/test-runner/2754//#testresult/7ea491d98b168038","status":"passed","time":{"start":1680509047011,"stop":1680509047099,"duration":88}},{"uid":"ba1a4f923e924714","reportUrl":"https://nova-wallet.github.io/test-runner/2753//#testresult/ba1a4f923e924714","status":"passed","time":{"start":1680494634660,"stop":1680494634920,"duration":260}},{"uid":"f6b4db40a7dd7d33","reportUrl":"https://nova-wallet.github.io/test-runner/2752//#testresult/f6b4db40a7dd7d33","status":"passed","time":{"start":1680480760068,"stop":1680480760300,"duration":232}},{"uid":"7b3b539d5094502c","reportUrl":"https://nova-wallet.github.io/test-runner/2751//#testresult/7b3b539d5094502c","status":"passed","time":{"start":1680465814613,"stop":1680465814868,"duration":255}},{"uid":"a492fce6b63638d4","reportUrl":"https://nova-wallet.github.io/test-runner/2750//#testresult/a492fce6b63638d4","status":"passed","time":{"start":1680451435277,"stop":1680451435602,"duration":325}},{"uid":"59b66a011b3a2497","reportUrl":"https://nova-wallet.github.io/test-runner/2749//#testresult/59b66a011b3a2497","status":"passed","time":{"start":1680437046539,"stop":1680437046795,"duration":256}},{"uid":"e0c661a43bea8191","reportUrl":"https://nova-wallet.github.io/test-runner/2748//#testresult/e0c661a43bea8191","status":"passed","time":{"start":1680422651684,"stop":1680422651753,"duration":69}},{"uid":"a63b29a6c81e506f","reportUrl":"https://nova-wallet.github.io/test-runner/2747//#testresult/a63b29a6c81e506f","status":"passed","time":{"start":1680408237286,"stop":1680408237591,"duration":305}}]},"tags":[]},"source":"31891ec05303f4c8.json","parameterValues":["{'url': 'wss://moonbeam.api.onfinality.io/public-ws', 'name': 'Moonbeam'}"]}