{"uid":"8114080b6b441458","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://eden-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b83cbea806fcf0b5f2c8c12818bb2158","time":{"start":1714003423321,"stop":1714003423321,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Nodle Parachain, url: wss://eden-rpc.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:133: in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhostname = 'eden-rpc.dwellir.com', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7f8b1efc74f0>\n\n    def _get_addrinfo_list(hostname, port: int, is_secure: bool, proxy) -> tuple:\n        phost, pport, pauth = get_proxy_info(\n            hostname,\n            is_secure,\n            proxy.proxy_host,\n            proxy.proxy_port,\n            proxy.auth,\n            proxy.no_proxy,\n        )\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n                addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP\n                )\n                return addrinfo_list, False, None\n            else:\n                pport = pport and pport or 80\n                # when running on windows 10, the getaddrinfo used above\n                # returns a socktype 0. This generates an error exception:\n                # _on_error: exception Socket type must be stream or datagram, not 0\n                # Force the socket type to SOCK_STREAM\n                addrinfo_list = socket.getaddrinfo(\n                    phost, pport, 0, socket.SOCK_STREAM, socket.SOL_TCP\n                )\n                return addrinfo_list, True, pauth\n        except socket.gaierror as e:\n>           raise WebSocketAddressException(e)\nE           websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:187: WebSocketAddressException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1714003412662,"stop":1714003412760,"duration":98},"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 133, in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 187, in _get_addrinfo_list\n    raise WebSocketAddressException(e)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1714003418144,"stop":1714003418257,"duration":113},"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 133, in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 187, in _get_addrinfo_list\n    raise WebSocketAddressException(e)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1714003423321,"stop":1714003423400,"duration":79},"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 256, in connect\n    self.sock, addrs = connect(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 133, in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_http.py\", line 187, in _get_addrinfo_list\n    raise WebSocketAddressException(e)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Nodle Parachain, url: wss://eden-rpc.dwellir.com]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = execute_with_timeout(\n            timeout=FIXTURE_TIMEOUT,\n            function=create_connection_by_url,\n            args=(data[\"url\"],),\n            error_message=f'Timeout {FIXTURE_TIMEOUT} when creating connection: {data[\"url\"]}'\n        )\n\ntests/conftest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:29: in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n.venv/lib/python3.10/site-packages/func_timeout/dafunc.py:108: in func_timeout\n    raise_exception(exception)\n.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py:7: in raise_exception\n    raise exception[0] from None\nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:646: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:256: in connect\n    self.sock, addrs = connect(\n.venv/lib/python3.10/site-packages/websocket/_http.py:133: in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhostname = 'eden-rpc.dwellir.com', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7f8b1efc74f0>\n\n    def _get_addrinfo_list(hostname, port: int, is_secure: bool, proxy) -> tuple:\n        phost, pport, pauth = get_proxy_info(\n            hostname,\n            is_secure,\n            proxy.proxy_host,\n            proxy.proxy_port,\n            proxy.auth,\n            proxy.no_proxy,\n        )\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n                addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP\n                )\n                return addrinfo_list, False, None\n            else:\n                pport = pport and pport or 80\n                # when running on windows 10, the getaddrinfo used above\n                # returns a socktype 0. This generates an error exception:\n                # _on_error: exception Socket type must be stream or datagram, not 0\n                # Force the socket type to SOCK_STREAM\n                addrinfo_list = socket.getaddrinfo(\n                    phost, pport, 0, socket.SOCK_STREAM, socket.SOL_TCP\n                )\n                return addrinfo_list, True, pauth\n        except socket.gaierror as e:\n>           raise WebSocketAddressException(e)\nE           websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known\n\n.venv/lib/python3.10/site-packages/websocket/_http.py:187: WebSocketAddressException","steps":[],"attachments":[{"uid":"ea29b6130740ba15","name":"stdout","source":"ea29b6130740ba15.txt","type":"text/plain","size":342}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az1530-40"},{"name":"thread","value":"2167-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://eden-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"85e9ee5a60d3ee4c","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1714003418144,"stop":1714003418144,"duration":0}},{"uid":"decce0e87e52102d","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1714003412661,"stop":1714003412661,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":62,"skipped":0,"passed":1139,"unknown":0,"total":1201},"items":[{"uid":"a436e4ee08b624a3","reportUrl":"https://novasamatech.github.io/test-runner/5125//#testresult/a436e4ee08b624a3","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713988993967,"stop":1713988993967,"duration":0}},{"uid":"fb5a58caa3d9c4eb","reportUrl":"https://novasamatech.github.io/test-runner/5124//#testresult/fb5a58caa3d9c4eb","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713974595338,"stop":1713974595338,"duration":0}},{"uid":"fed237cb4b2c0f49","reportUrl":"https://novasamatech.github.io/test-runner/5123//#testresult/fed237cb4b2c0f49","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713960182066,"stop":1713960182066,"duration":0}},{"uid":"e0d1cdde2bf37f04","reportUrl":"https://novasamatech.github.io/test-runner/5122//#testresult/e0d1cdde2bf37f04","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713945875838,"stop":1713945875838,"duration":0}},{"uid":"a845cfe607cf31fe","reportUrl":"https://novasamatech.github.io/test-runner/5121//#testresult/a845cfe607cf31fe","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713931430883,"stop":1713931430883,"duration":0}},{"uid":"ae40b760758e1668","reportUrl":"https://novasamatech.github.io/test-runner/5120//#testresult/ae40b760758e1668","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713917010403,"stop":1713917010403,"duration":0}},{"uid":"e551ca25b38efdb1","reportUrl":"https://novasamatech.github.io/test-runner/5119//#testresult/e551ca25b38efdb1","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713902569823,"stop":1713902569823,"duration":0}},{"uid":"1e2f272871f66716","reportUrl":"https://novasamatech.github.io/test-runner/5118//#testresult/1e2f272871f66716","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713888194091,"stop":1713888194091,"duration":0}},{"uid":"81021fb57b18b97f","reportUrl":"https://novasamatech.github.io/test-runner/5117//#testresult/81021fb57b18b97f","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713873789506,"stop":1713873789506,"duration":0}},{"uid":"66ea0b25f3dadc5f","reportUrl":"https://novasamatech.github.io/test-runner/5116//#testresult/66ea0b25f3dadc5f","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713859400287,"stop":1713859400287,"duration":0}},{"uid":"3546fe6ba2f8af97","reportUrl":"https://novasamatech.github.io/test-runner/5115//#testresult/3546fe6ba2f8af97","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713844996826,"stop":1713844996826,"duration":0}},{"uid":"7e74b19d15b5f067","reportUrl":"https://novasamatech.github.io/test-runner/5114//#testresult/7e74b19d15b5f067","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713830638780,"stop":1713830638780,"duration":0}},{"uid":"769b94d2090a479","reportUrl":"https://novasamatech.github.io/test-runner/5113//#testresult/769b94d2090a479","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713816176691,"stop":1713816176691,"duration":0}},{"uid":"ef4d121cfce6eb32","reportUrl":"https://novasamatech.github.io/test-runner/5112//#testresult/ef4d121cfce6eb32","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713801775216,"stop":1713801775216,"duration":0}},{"uid":"3a27056a264b0f7b","reportUrl":"https://novasamatech.github.io/test-runner/5111//#testresult/3a27056a264b0f7b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713787380863,"stop":1713787380863,"duration":0}},{"uid":"c2977d4ce3a6397a","reportUrl":"https://novasamatech.github.io/test-runner/5110//#testresult/c2977d4ce3a6397a","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713772977675,"stop":1713772977675,"duration":0}},{"uid":"c2cfe7220c25584f","reportUrl":"https://novasamatech.github.io/test-runner/5109//#testresult/c2cfe7220c25584f","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713758582825,"stop":1713758582825,"duration":0}},{"uid":"f37f043ca0842052","reportUrl":"https://novasamatech.github.io/test-runner/5108//#testresult/f37f043ca0842052","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713744245987,"stop":1713744245987,"duration":0}},{"uid":"34f9eb7782b5f389","reportUrl":"https://novasamatech.github.io/test-runner/5107//#testresult/34f9eb7782b5f389","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713729788749,"stop":1713729788749,"duration":0}},{"uid":"364edb163c56a95b","reportUrl":"https://novasamatech.github.io/test-runner/5106//#testresult/364edb163c56a95b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -2] Name or service not known","time":{"start":1713715397560,"stop":1713715397560,"duration":0}}]},"tags":[]},"source":"8114080b6b441458.json","parameterValues":["{'url': 'wss://eden-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}