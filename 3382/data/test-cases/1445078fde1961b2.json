{"uid":"1445078fde1961b2","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1689278742415,"stop":1689278742813,"duration":398},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa933fd49a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa938609210>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7fa933fd49a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7fa938609210>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"9b3c4c202914f6ab","name":"stdout","source":"9b3c4c202914f6ab.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az1102-171"},{"name":"thread","value":"1933-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7fa938609210>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f9a0922d2c02e238","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689278726991,"stop":1689278727386,"duration":395}},{"uid":"9b45818562a9c9c2","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689278710454,"stop":1689278711927,"duration":1473}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":93,"skipped":0,"passed":293,"unknown":0,"total":386},"items":[{"uid":"11cc695981e6ecaa","reportUrl":"https://novasamatech.github.io/test-runner/3381//#testresult/11cc695981e6ecaa","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689264319642,"stop":1689264320005,"duration":363}},{"uid":"d2dcb69cad80da68","reportUrl":"https://novasamatech.github.io/test-runner/3380//#testresult/d2dcb69cad80da68","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689250014334,"stop":1689250014546,"duration":212}},{"uid":"be57f6d9b2c550c2","reportUrl":"https://novasamatech.github.io/test-runner/3379//#testresult/be57f6d9b2c550c2","status":"passed","time":{"start":1689235546481,"stop":1689235549568,"duration":3087}},{"uid":"a10ac64d2fdbae9e","reportUrl":"https://novasamatech.github.io/test-runner/3378//#testresult/a10ac64d2fdbae9e","status":"passed","time":{"start":1689221118649,"stop":1689221131002,"duration":12353}},{"uid":"e6aa2d8563cd58eb","reportUrl":"https://novasamatech.github.io/test-runner/3377//#testresult/e6aa2d8563cd58eb","status":"passed","time":{"start":1689207362760,"stop":1689207371228,"duration":8468}},{"uid":"a8be34ab96688f95","reportUrl":"https://novasamatech.github.io/test-runner/3376//#testresult/a8be34ab96688f95","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689192361103,"stop":1689192361275,"duration":172}},{"uid":"41d14b42e6b17a0c","reportUrl":"https://novasamatech.github.io/test-runner/3375//#testresult/41d14b42e6b17a0c","status":"passed","time":{"start":1689177936613,"stop":1689177945361,"duration":8748}},{"uid":"2d1a324c404f2573","reportUrl":"https://novasamatech.github.io/test-runner/3374//#testresult/2d1a324c404f2573","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689163617141,"stop":1689163617526,"duration":385}},{"uid":"a182226c5f649ca5","reportUrl":"https://novasamatech.github.io/test-runner/3373//#testresult/a182226c5f649ca5","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689149144758,"stop":1689149144952,"duration":194}},{"uid":"2651055729918453","reportUrl":"https://novasamatech.github.io/test-runner/3372//#testresult/2651055729918453","status":"passed","time":{"start":1689134687602,"stop":1689134697719,"duration":10117}},{"uid":"998d84d9cb8ac99d","reportUrl":"https://novasamatech.github.io/test-runner/3371//#testresult/998d84d9cb8ac99d","status":"passed","time":{"start":1689121046580,"stop":1689121052604,"duration":6024}},{"uid":"c1bcb89394398e10","reportUrl":"https://novasamatech.github.io/test-runner/3370//#testresult/c1bcb89394398e10","status":"passed","time":{"start":1689105925421,"stop":1689105928943,"duration":3522}},{"uid":"73dba47bf74a68c0","reportUrl":"https://novasamatech.github.io/test-runner/3369//#testresult/73dba47bf74a68c0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1689091534586,"stop":1689091534935,"duration":349}},{"uid":"c0382e0e61b87837","reportUrl":"https://novasamatech.github.io/test-runner/3368//#testresult/c0382e0e61b87837","status":"passed","time":{"start":1689077227833,"stop":1689077230499,"duration":2666}},{"uid":"3ed09e5f8015f307","reportUrl":"https://novasamatech.github.io/test-runner/3366//#testresult/3ed09e5f8015f307","status":"passed","time":{"start":1689048300041,"stop":1689048309040,"duration":8999}},{"uid":"40057b6604800dbf","reportUrl":"https://novasamatech.github.io/test-runner/3367//#testresult/40057b6604800dbf","status":"passed","time":{"start":1689062737807,"stop":1689062747150,"duration":9343}},{"uid":"c881f619ac17d763","reportUrl":"https://novasamatech.github.io/test-runner/3365//#testresult/c881f619ac17d763","status":"passed","time":{"start":1689034618172,"stop":1689034620928,"duration":2756}},{"uid":"bc8b2985a31157ad","reportUrl":"https://novasamatech.github.io/test-runner/3364//#testresult/bc8b2985a31157ad","status":"passed","time":{"start":1689019496391,"stop":1689019505400,"duration":9009}},{"uid":"32a31ae13d7c80a7","reportUrl":"https://novasamatech.github.io/test-runner/3363//#testresult/32a31ae13d7c80a7","status":"passed","time":{"start":1689005113897,"stop":1689005124471,"duration":10574}},{"uid":"51eb308ff9775441","reportUrl":"https://novasamatech.github.io/test-runner/3362//#testresult/51eb308ff9775441","status":"passed","time":{"start":1688990778925,"stop":1688990785278,"duration":6353}}]},"tags":[]},"source":"1445078fde1961b2.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7fa938609210>"]}