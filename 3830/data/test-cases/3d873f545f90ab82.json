{"uid":"3d873f545f90ab82","name":"test_has_new_assets[Test for Hashed Network]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"f9ce5f041da025d241358b30e13d00db","time":{"start":1695600235284,"stop":1695600235692,"duration":408},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f06d2054490>\nchain = <scripts.utils.chain_model.Chain object at 0x7f06d20456f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f06d2054490>\nchain = <scripts.utils.chain_model.Chain object at 0x7f06d20456f0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"a4f90340d5438f3d","name":"stdout","source":"a4f90340d5438f3d.txt","type":"text/plain","size":1338}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az559-141"},{"name":"thread","value":"2047-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f06d20456f0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b6444ec183bc91d1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695600219739,"stop":1695600220257,"duration":518}},{"uid":"df0cb46fab212583","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695600204067,"stop":1695600204706,"duration":639}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":186,"unknown":0,"total":189},"items":[{"uid":"f1d9a957441eddd","reportUrl":"https://novasamatech.github.io/test-runner/3829//#testresult/f1d9a957441eddd","status":"passed","time":{"start":1695585762427,"stop":1695585765035,"duration":2608}},{"uid":"ab20a4468162b936","reportUrl":"https://novasamatech.github.io/test-runner/3828//#testresult/ab20a4468162b936","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1695571407776,"stop":1695571408585,"duration":809}},{"uid":"85dbb909ac7cab96","reportUrl":"https://novasamatech.github.io/test-runner/3827//#testresult/85dbb909ac7cab96","status":"passed","time":{"start":1695556979428,"stop":1695556985210,"duration":5782}},{"uid":"7914b52011bb904a","reportUrl":"https://novasamatech.github.io/test-runner/3826//#testresult/7914b52011bb904a","status":"passed","time":{"start":1695542602802,"stop":1695542607195,"duration":4393}},{"uid":"18132e6dedc5a019","reportUrl":"https://novasamatech.github.io/test-runner/3825//#testresult/18132e6dedc5a019","status":"passed","time":{"start":1695528150887,"stop":1695528153453,"duration":2566}},{"uid":"bb183848f943f1e1","reportUrl":"https://novasamatech.github.io/test-runner/3824//#testresult/bb183848f943f1e1","status":"passed","time":{"start":1695513797170,"stop":1695513799526,"duration":2356}},{"uid":"cc3229b77b2c5b85","reportUrl":"https://novasamatech.github.io/test-runner/3823//#testresult/cc3229b77b2c5b85","status":"passed","time":{"start":1695499366325,"stop":1695499370706,"duration":4381}},{"uid":"750b37ffadd5b40c","reportUrl":"https://novasamatech.github.io/test-runner/3822//#testresult/750b37ffadd5b40c","status":"passed","time":{"start":1695484967526,"stop":1695484969619,"duration":2093}},{"uid":"e77d2fa7cb29b461","reportUrl":"https://novasamatech.github.io/test-runner/3821//#testresult/e77d2fa7cb29b461","status":"passed","time":{"start":1695470550979,"stop":1695470555611,"duration":4632}},{"uid":"eb17026d7f09cf87","reportUrl":"https://novasamatech.github.io/test-runner/3820//#testresult/eb17026d7f09cf87","status":"passed","time":{"start":1695456161283,"stop":1695456165992,"duration":4709}},{"uid":"cf24d8487d534781","reportUrl":"https://novasamatech.github.io/test-runner/3819//#testresult/cf24d8487d534781","status":"passed","time":{"start":1695441743710,"stop":1695441746241,"duration":2531}},{"uid":"b1d2e9dce6e426a","reportUrl":"https://novasamatech.github.io/test-runner/3818//#testresult/b1d2e9dce6e426a","status":"passed","time":{"start":1695427416346,"stop":1695427421676,"duration":5330}},{"uid":"9061cb565b19124a","reportUrl":"https://novasamatech.github.io/test-runner/3817//#testresult/9061cb565b19124a","status":"passed","time":{"start":1695412944139,"stop":1695412947410,"duration":3271}},{"uid":"6a925542ea587f7c","reportUrl":"https://novasamatech.github.io/test-runner/3816//#testresult/6a925542ea587f7c","status":"passed","time":{"start":1695398587612,"stop":1695398590840,"duration":3228}},{"uid":"4a307fb00993fc47","reportUrl":"https://novasamatech.github.io/test-runner/3815//#testresult/4a307fb00993fc47","status":"passed","time":{"start":1695384158717,"stop":1695384163139,"duration":4422}},{"uid":"8fde7634f7c6dd5c","reportUrl":"https://novasamatech.github.io/test-runner/3814//#testresult/8fde7634f7c6dd5c","status":"passed","time":{"start":1695369809034,"stop":1695369815415,"duration":6381}},{"uid":"5a62261a68c3170b","reportUrl":"https://novasamatech.github.io/test-runner/3813//#testresult/5a62261a68c3170b","status":"passed","time":{"start":1695355373239,"stop":1695355378686,"duration":5447}},{"uid":"37114cd839f9c92a","reportUrl":"https://novasamatech.github.io/test-runner/3812//#testresult/37114cd839f9c92a","status":"passed","time":{"start":1695341041633,"stop":1695341046700,"duration":5067}},{"uid":"d3d2d2d6bf2a0c3b","reportUrl":"https://novasamatech.github.io/test-runner/3810//#testresult/d3d2d2d6bf2a0c3b","status":"passed","time":{"start":1695312204620,"stop":1695312212213,"duration":7593}},{"uid":"4a3c0ea3b73b181","reportUrl":"https://novasamatech.github.io/test-runner/3809//#testresult/4a3c0ea3b73b181","status":"passed","time":{"start":1695297814860,"stop":1695297824855,"duration":9995}}]},"tags":[]},"source":"3d873f545f90ab82.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f06d20456f0>"]}