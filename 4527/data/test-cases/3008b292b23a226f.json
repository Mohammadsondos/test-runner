{"uid":"3008b292b23a226f","name":"test_can_create_connection[Test for Crab, url: wss://crab-rpc.darwinia.network/]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"ae3c62215c32eca769411c39859d64a9","time":{"start":1705464476504,"stop":1705464476504,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:08:27 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbbf328a73b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Crab, url: wss://crab-rpc.darwinia.network/]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:08:27 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbbf328a73b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1705464382693,"stop":1705464414375,"duration":31682},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:06:54 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bb9a90b683b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705464430145,"stop":1705464461436,"duration":31291},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:07:41 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbad16a678275-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1705464476504,"stop":1705464507774,"duration":31270},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:08:27 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbbf328a73b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:08:27 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbbf328a73b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Crab, url: wss://crab-rpc.darwinia.network/]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:08:27 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbbf328a73b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"77a42ef3f6c2ef9f","name":"stdout","source":"77a42ef3f6c2ef9f.txt","type":"text/plain","size":1755}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az532-20"},{"name":"thread","value":"2073-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://crab-rpc.darwinia.network/', 'name': 'Crab'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ab3ccab00414c6e9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:07:41 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bbad16a678275-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'","time":{"start":1705464430145,"stop":1705464430145,"duration":0}},{"uid":"7732adee5ef8ce4b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 522 None -+-+- {'date': 'Wed, 17 Jan 2024 04:06:54 GMT', 'content-type': 'text/plain; charset=UTF-8', 'content-length': '15', 'connection': 'keep-alive', 'x-frame-options': 'SAMEORIGIN', 'referrer-policy': 'same-origin', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0', 'expires': 'Thu, 01 Jan 1970 00:00:01 GMT', 'server': 'cloudflare', 'cf-ray': '846bb9a90b683b78-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- b'error code: 522'","time":{"start":1705464382692,"stop":1705464382692,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":733,"unknown":0,"total":741},"items":[{"uid":"ab346d387943089a","reportUrl":"https://novasamatech.github.io/test-runner/4526//#testresult/ab346d387943089a","status":"passed","time":{"start":1705450095710,"stop":1705450095710,"duration":0}},{"uid":"c3f5e75fad0b0f2e","reportUrl":"https://novasamatech.github.io/test-runner/4525//#testresult/c3f5e75fad0b0f2e","status":"passed","time":{"start":1705435690402,"stop":1705435690402,"duration":0}},{"uid":"bb495e13965f7f7","reportUrl":"https://novasamatech.github.io/test-runner/4524//#testresult/bb495e13965f7f7","status":"passed","time":{"start":1705421235944,"stop":1705421235944,"duration":0}},{"uid":"934fb71d8f8d5f88","reportUrl":"https://novasamatech.github.io/test-runner/4523//#testresult/934fb71d8f8d5f88","status":"passed","time":{"start":1705406858563,"stop":1705406858563,"duration":0}},{"uid":"e9079de45aff04bb","reportUrl":"https://novasamatech.github.io/test-runner/4522//#testresult/e9079de45aff04bb","status":"passed","time":{"start":1705392415366,"stop":1705392415366,"duration":0}},{"uid":"331c6111bbc984e0","reportUrl":"https://novasamatech.github.io/test-runner/4521//#testresult/331c6111bbc984e0","status":"passed","time":{"start":1705378065134,"stop":1705378065134,"duration":0}},{"uid":"589918d0d2e98661","reportUrl":"https://novasamatech.github.io/test-runner/4520//#testresult/589918d0d2e98661","status":"passed","time":{"start":1705363671459,"stop":1705363671460,"duration":1}},{"uid":"e18b7093f7673bf","reportUrl":"https://novasamatech.github.io/test-runner/4519//#testresult/e18b7093f7673bf","status":"passed","time":{"start":1705349272397,"stop":1705349272398,"duration":1}},{"uid":"65c6ce5f7968c98","reportUrl":"https://novasamatech.github.io/test-runner/4518//#testresult/65c6ce5f7968c98","status":"passed","time":{"start":1705334880285,"stop":1705334880285,"duration":0}},{"uid":"7f21c0eb5631485c","reportUrl":"https://novasamatech.github.io/test-runner/4517//#testresult/7f21c0eb5631485c","status":"passed","time":{"start":1705320448725,"stop":1705320448725,"duration":0}},{"uid":"dfaf7ea96e94c500","reportUrl":"https://novasamatech.github.io/test-runner/4516//#testresult/dfaf7ea96e94c500","status":"passed","time":{"start":1705306020808,"stop":1705306020808,"duration":0}},{"uid":"b7b7523289f08e98","reportUrl":"https://novasamatech.github.io/test-runner/4515//#testresult/b7b7523289f08e98","status":"passed","time":{"start":1705291618689,"stop":1705291618689,"duration":0}},{"uid":"6fc3cf02001ff92a","reportUrl":"https://novasamatech.github.io/test-runner/4514//#testresult/6fc3cf02001ff92a","status":"passed","time":{"start":1705277244401,"stop":1705277244401,"duration":0}},{"uid":"a5abb019e5d3ae17","reportUrl":"https://novasamatech.github.io/test-runner/4513//#testresult/a5abb019e5d3ae17","status":"passed","time":{"start":1705262854989,"stop":1705262854989,"duration":0}},{"uid":"3cf16db144aab7a8","reportUrl":"https://novasamatech.github.io/test-runner/4512//#testresult/3cf16db144aab7a8","status":"passed","time":{"start":1705248538783,"stop":1705248538784,"duration":1}},{"uid":"6572d692a6ca0438","reportUrl":"https://novasamatech.github.io/test-runner/4511//#testresult/6572d692a6ca0438","status":"passed","time":{"start":1705234009184,"stop":1705234009184,"duration":0}},{"uid":"dc1746712b68bc3a","reportUrl":"https://novasamatech.github.io/test-runner/4510//#testresult/dc1746712b68bc3a","status":"passed","time":{"start":1705219658497,"stop":1705219658497,"duration":0}},{"uid":"dd0b1c46910b1a19","reportUrl":"https://novasamatech.github.io/test-runner/4509//#testresult/dd0b1c46910b1a19","status":"passed","time":{"start":1705205207702,"stop":1705205207702,"duration":0}},{"uid":"c16faf82c0d590b1","reportUrl":"https://novasamatech.github.io/test-runner/4508//#testresult/c16faf82c0d590b1","status":"passed","time":{"start":1705190945293,"stop":1705190945293,"duration":0}},{"uid":"210f4243fa1d9737","reportUrl":"https://novasamatech.github.io/test-runner/4507//#testresult/210f4243fa1d9737","status":"passed","time":{"start":1705176452658,"stop":1705176452658,"duration":0}}]},"tags":[]},"source":"3008b292b23a226f.json","parameterValues":["{'url': 'wss://crab-rpc.darwinia.network/', 'name': 'Crab'}"]}