{"uid":"4fa1f24068d18523","name":"test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"d4f8b12dd1813d5c02b1890d0d3675f0","time":{"start":1700164979186,"stop":1700164979186,"duration":0},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:59 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2ByqtrDxs14mnh8bnOnQvEYDaiqeDtPPePSnkYR1buLflCb0DlGXZbywW6Cx%2F3qoGn0eHNB4zNnJ95u3%2FAPutsFQwaCAVs54yMREpAi78jYV77j%2FTmZW9qtElLQGHmkR0T7S4wg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3Uz7B2phKZUTnt; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:59 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827255b0882e3ae8-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:59 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2ByqtrDxs14mnh8bnOnQvEYDaiqeDtPPePSnkYR1buLflCb0DlGXZbywW6Cx%2F3qoGn0eHNB4zNnJ95u3%2FAPutsFQwaCAVs54yMREpAi78jYV77j%2FTmZW9qtElLQGHmkR0T7S4wg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3Uz7B2phKZUTnt; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:59 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827255b0882e3ae8-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"connection_by_url","time":{"start":1700164947734,"stop":1700164948183,"duration":449},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:28 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=MrM%2Fm13Yt%2BwipKIUM18v5cYZ3S7NXYfyGNLuicdt8VWcJ%2BFHJg4UR30Q694f9cFiXABQe3zHEdM5y%2FyDLYmMNfJKV9ze7BmXVBx6ipc2gqzM0OekxBw8fGCSqGhbxLA9rrcFzg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3UaUxNSgZYqE7e; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:28 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827254ec5ec5391a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"connection_by_url","time":{"start":1700164963257,"stop":1700164963632,"duration":375},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:43 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=CN8t8QozGMLz0zH%2FRlfK37%2F3SXAhxXqcTsoZ9QnGPUZsVMTWFRvyI73ljMULVys7bdVW3oCXNSSpruLe4QVQRhv9Yt3dWRz3lspD1VfJ7pvTZV8nMIbzFdK1uJF9INLmM%2FDn7g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3UnJ4hdgwZ9qxG; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:43 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8272554cffd80809-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"connection_by_url","time":{"start":1700164979186,"stop":1700164979590,"duration":404},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:59 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2ByqtrDxs14mnh8bnOnQvEYDaiqeDtPPePSnkYR1buLflCb0DlGXZbywW6Cx%2F3qoGn0eHNB4zNnJ95u3%2FAPutsFQwaCAVs54yMREpAi78jYV77j%2FTmZW9qtElLQGHmkR0T7S4wg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3Uz7B2phKZUTnt; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:59 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827255b0882e3ae8-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 23, in connection_by_url\n    connection = create_connection_by_url(data[\"url\"])\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 610, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 255, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 57, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:59 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2ByqtrDxs14mnh8bnOnQvEYDaiqeDtPPePSnkYR1buLflCb0DlGXZbywW6Cx%2F3qoGn0eHNB4zNnJ95u3%2FAPutsFQwaCAVs54yMREpAi78jYV77j%2FTmZW9qtElLQGHmkR0T7S4wg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3Uz7B2phKZUTnt; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:59 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827255b0882e3ae8-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","statusTrace":"request = <SubRequest 'connection_by_url' for <Function test_can_create_connection[Test for Basilisk, url: wss://rpc.basilisk.cloud]>>\n\n    @pytest.fixture(scope=\"module\", params=collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def connection_by_url(request):\n        data = request.param\n>       connection = create_connection_by_url(data[\"url\"])\n\ntests/conftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:132: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:177: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:610: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:255: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.TEMPORARY_REDIRECT: 307>, <HTTPStatus.PERMANENT_REDIRECT: 308>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:59 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=%2ByqtrDxs14mnh8bnOnQvEYDaiqeDtPPePSnkYR1buLflCb0DlGXZbywW6Cx%2F3qoGn0eHNB4zNnJ95u3%2FAPutsFQwaCAVs54yMREpAi78jYV77j%2FTmZW9qtElLQGHmkR0T7S4wg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3Uz7B2phKZUTnt; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:59 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827255b0882e3ae8-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"23210aedfd276c0b","name":"stdout","source":"23210aedfd276c0b.txt","type":"text/plain","size":2542}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az847-148"},{"name":"thread","value":"2206-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1691fda7a65ce4c1","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:43 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=CN8t8QozGMLz0zH%2FRlfK37%2F3SXAhxXqcTsoZ9QnGPUZsVMTWFRvyI73ljMULVys7bdVW3oCXNSSpruLe4QVQRhv9Yt3dWRz3lspD1VfJ7pvTZV8nMIbzFdK1uJF9INLmM%2FDn7g%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3UnJ4hdgwZ9qxG; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:43 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '8272554cffd80809-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1700164963257,"stop":1700164963257,"duration":0}},{"uid":"ee3de620a6caa5f5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'date': 'Thu, 16 Nov 2023 20:02:28 GMT', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-cache-status': 'DYNAMIC', 'report-to': '{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=MrM%2Fm13Yt%2BwipKIUM18v5cYZ3S7NXYfyGNLuicdt8VWcJ%2BFHJg4UR30Q694f9cFiXABQe3zHEdM5y%2FyDLYmMNfJKV9ze7BmXVBx6ipc2gqzM0OekxBw8fGCSqGhbxLA9rrcFzg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}', 'nel': '{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}', 'set-cookie': '__cflb=02DiuF7ssEqunvqVe8RAhYKwXzunPiK3UaUxNSgZYqE7e; SameSite=None; Secure; path=/; expires=Fri, 17-Nov-23 19:02:28 GMT; HttpOnly', 'server': 'cloudflare', 'cf-ray': '827254ec5ec5391a-IAD', 'alt-svc': 'h3=\":443\"; ma=86400'} -+-+- None","time":{"start":1700164947732,"stop":1700164947732,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":58,"skipped":0,"passed":441,"unknown":0,"total":499},"items":[{"uid":"ce16b1c6148e505","reportUrl":"https://novasamatech.github.io/test-runner/4148//#testresult/ce16b1c6148e505","status":"passed","time":{"start":1700150604040,"stop":1700150604040,"duration":0}},{"uid":"c562db3df4111813","reportUrl":"https://novasamatech.github.io/test-runner/4147//#testresult/c562db3df4111813","status":"passed","time":{"start":1700136190584,"stop":1700136190584,"duration":0}},{"uid":"3abff540f8e22c1e","reportUrl":"https://novasamatech.github.io/test-runner/4146//#testresult/3abff540f8e22c1e","status":"passed","time":{"start":1700121777653,"stop":1700121777653,"duration":0}},{"uid":"48f9d1dc880b9da3","reportUrl":"https://novasamatech.github.io/test-runner/4145//#testresult/48f9d1dc880b9da3","status":"passed","time":{"start":1700107395096,"stop":1700107395096,"duration":0}},{"uid":"e7be996a71b4cce7","reportUrl":"https://novasamatech.github.io/test-runner/4144//#testresult/e7be996a71b4cce7","status":"passed","time":{"start":1700093012325,"stop":1700093012325,"duration":0}},{"uid":"bb332333af08e460","reportUrl":"https://novasamatech.github.io/test-runner/4143//#testresult/bb332333af08e460","status":"passed","time":{"start":1700078607109,"stop":1700078607109,"duration":0}},{"uid":"57f7f9e746567c79","reportUrl":"https://novasamatech.github.io/test-runner/4142//#testresult/57f7f9e746567c79","status":"passed","time":{"start":1700064230529,"stop":1700064230529,"duration":0}},{"uid":"31aa00d5b8b20962","reportUrl":"https://novasamatech.github.io/test-runner/4141//#testresult/31aa00d5b8b20962","status":"passed","time":{"start":1700049771268,"stop":1700049771269,"duration":1}},{"uid":"79c02b6335bc9cf8","reportUrl":"https://novasamatech.github.io/test-runner/4130//#testresult/79c02b6335bc9cf8","status":"passed","time":{"start":1699891406974,"stop":1699891406975,"duration":1}},{"uid":"24ba1ded268d78be","reportUrl":"https://novasamatech.github.io/test-runner/4129//#testresult/24ba1ded268d78be","status":"passed","time":{"start":1699876981372,"stop":1699876981372,"duration":0}},{"uid":"e75263b48e57d1d6","reportUrl":"https://novasamatech.github.io/test-runner/4128//#testresult/e75263b48e57d1d6","status":"passed","time":{"start":1699862506503,"stop":1699862507144,"duration":641}},{"uid":"e1ab3f00becc6c9a","reportUrl":"https://novasamatech.github.io/test-runner/4127//#testresult/e1ab3f00becc6c9a","status":"passed","time":{"start":1699848093705,"stop":1699848094407,"duration":702}},{"uid":"79eae724e7c4389","reportUrl":"https://novasamatech.github.io/test-runner/4126//#testresult/79eae724e7c4389","status":"passed","time":{"start":1699833789141,"stop":1699833789606,"duration":465}},{"uid":"f0ca1d3b72bca4b9","reportUrl":"https://novasamatech.github.io/test-runner/4125//#testresult/f0ca1d3b72bca4b9","status":"passed","time":{"start":1699819282617,"stop":1699819283188,"duration":571}},{"uid":"91de485e5cc4ab81","reportUrl":"https://novasamatech.github.io/test-runner/4124//#testresult/91de485e5cc4ab81","status":"passed","time":{"start":1699804971982,"stop":1699804972338,"duration":356}},{"uid":"7f62675efb86dfc6","reportUrl":"https://novasamatech.github.io/test-runner/4123//#testresult/7f62675efb86dfc6","status":"passed","time":{"start":1699790483005,"stop":1699790483450,"duration":445}},{"uid":"b68a10f8264b8ab6","reportUrl":"https://novasamatech.github.io/test-runner/4122//#testresult/b68a10f8264b8ab6","status":"passed","time":{"start":1699776211429,"stop":1699776211993,"duration":564}},{"uid":"9ac0bb5c0430522d","reportUrl":"https://novasamatech.github.io/test-runner/4121//#testresult/9ac0bb5c0430522d","status":"passed","time":{"start":1699761894314,"stop":1699761894869,"duration":555}},{"uid":"21f0a1a654ba6a79","reportUrl":"https://novasamatech.github.io/test-runner/4120//#testresult/21f0a1a654ba6a79","status":"passed","time":{"start":1699747476272,"stop":1699747476881,"duration":609}},{"uid":"7c912e5f77d1e3ce","reportUrl":"https://novasamatech.github.io/test-runner/4119//#testresult/7c912e5f77d1e3ce","status":"passed","time":{"start":1699732910259,"stop":1699732910963,"duration":704}}]},"tags":[]},"source":"4fa1f24068d18523.json","parameterValues":["{'url': 'wss://rpc.basilisk.cloud', 'name': 'Basilisk'}"]}