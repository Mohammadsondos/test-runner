{"uid":"a75dcdef01cf0044","name":"test_can_create_connection[Test for Shiden, url: wss://rpc.shiden.astar.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"2defa1b601e079d6c6aedfd497ddce14","time":{"start":1674781757264,"stop":1674781757747,"duration":483},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Shiden', 'url': 'wss://rpc.shiden.astar.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Shiden', 'url': 'wss://rpc.shiden.astar.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3f47f6ccece0f119","name":"stdout","source":"3f47f6ccece0f119.txt","type":"text/plain","size":240}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az255-458"},{"name":"thread","value":"1681-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://rpc.shiden.astar.network', 'name': 'Shiden'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1d76430abfa1013c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1674781746761,"stop":1674781747114,"duration":353}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":56,"skipped":0,"passed":554,"unknown":0,"total":610},"items":[{"uid":"685f3e3f2a737935","reportUrl":"https://nova-wallet.github.io/test-runner/2347//#testresult/685f3e3f2a737935","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1674763438586,"stop":1674763439399,"duration":813}},{"uid":"53b10f3ecd8ddb54","reportUrl":"https://nova-wallet.github.io/test-runner/2346//#testresult/53b10f3ecd8ddb54","status":"passed","time":{"start":1674749037455,"stop":1674749038127,"duration":672}},{"uid":"3246ec4edbbff3bc","reportUrl":"https://nova-wallet.github.io/test-runner/2345//#testresult/3246ec4edbbff3bc","status":"passed","time":{"start":1674734692136,"stop":1674734693477,"duration":1341}},{"uid":"4f04da0248a429b7","reportUrl":"https://nova-wallet.github.io/test-runner/2344//#testresult/4f04da0248a429b7","status":"passed","time":{"start":1674720245275,"stop":1674720246031,"duration":756}},{"uid":"bd5dd85582fb4fe4","reportUrl":"https://nova-wallet.github.io/test-runner/2343//#testresult/bd5dd85582fb4fe4","status":"passed","time":{"start":1674705835125,"stop":1674705836206,"duration":1081}},{"uid":"5de9dd07b802cf8b","reportUrl":"https://nova-wallet.github.io/test-runner/2342//#testresult/5de9dd07b802cf8b","status":"passed","time":{"start":1674692055657,"stop":1674692056233,"duration":576}},{"uid":"5690cd94f22ac958","reportUrl":"https://nova-wallet.github.io/test-runner/2341//#testresult/5690cd94f22ac958","status":"passed","time":{"start":1674677026999,"stop":1674677027151,"duration":152}},{"uid":"fd04af4c905b47c3","reportUrl":"https://nova-wallet.github.io/test-runner/2340//#testresult/fd04af4c905b47c3","status":"passed","time":{"start":1674662631393,"stop":1674662632096,"duration":703}},{"uid":"9b6f19bab4683620","reportUrl":"https://nova-wallet.github.io/test-runner/2339//#testresult/9b6f19bab4683620","status":"passed","time":{"start":1674648296786,"stop":1674648297014,"duration":228}},{"uid":"d6deaf521792403d","reportUrl":"https://nova-wallet.github.io/test-runner/2337//#testresult/d6deaf521792403d","status":"passed","time":{"start":1674619438419,"stop":1674619439289,"duration":870}},{"uid":"8aaf6a3816f0c236","reportUrl":"https://nova-wallet.github.io/test-runner/2336//#testresult/8aaf6a3816f0c236","status":"passed","time":{"start":1674605621824,"stop":1674605622880,"duration":1056}},{"uid":"fd7c16f62ee724be","reportUrl":"https://nova-wallet.github.io/test-runner/2335//#testresult/fd7c16f62ee724be","status":"passed","time":{"start":1674590628111,"stop":1674590628282,"duration":171}},{"uid":"3e592eebf470de0","reportUrl":"https://nova-wallet.github.io/test-runner/2334//#testresult/3e592eebf470de0","status":"passed","time":{"start":1674576348953,"stop":1674576349113,"duration":160}},{"uid":"b8b57b011c5293fc","reportUrl":"https://nova-wallet.github.io/test-runner/2333//#testresult/b8b57b011c5293fc","status":"passed","time":{"start":1674561868624,"stop":1674561869820,"duration":1196}},{"uid":"2c8ea8c30e0ffc49","reportUrl":"https://nova-wallet.github.io/test-runner/2332//#testresult/2c8ea8c30e0ffc49","status":"passed","time":{"start":1674547454599,"stop":1674547455920,"duration":1321}},{"uid":"34099722afc4aaab","reportUrl":"https://nova-wallet.github.io/test-runner/2331//#testresult/34099722afc4aaab","status":"passed","time":{"start":1674533047950,"stop":1674533048634,"duration":684}},{"uid":"c8e28770708474c6","reportUrl":"https://nova-wallet.github.io/test-runner/2330//#testresult/c8e28770708474c6","status":"passed","time":{"start":1674519241581,"stop":1674519242893,"duration":1312}},{"uid":"fbe3be794c2196e1","reportUrl":"https://nova-wallet.github.io/test-runner/2329//#testresult/fbe3be794c2196e1","status":"passed","time":{"start":1674504234286,"stop":1674504234467,"duration":181}},{"uid":"8f0acdf7ce7683ad","reportUrl":"https://nova-wallet.github.io/test-runner/2328//#testresult/8f0acdf7ce7683ad","status":"passed","time":{"start":1674489837822,"stop":1674489838793,"duration":971}},{"uid":"b82bcf94b7df3450","reportUrl":"https://nova-wallet.github.io/test-runner/2327//#testresult/b82bcf94b7df3450","status":"passed","time":{"start":1674475492814,"stop":1674475493644,"duration":830}}]},"tags":[]},"source":"a75dcdef01cf0044.json","parameterValues":["{'url': 'wss://rpc.shiden.astar.network', 'name': 'Shiden'}"]}