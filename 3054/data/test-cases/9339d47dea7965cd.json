{"uid":"9339d47dea7965cd","name":"test_can_create_connection[Test for Hashed Network, url: wss://c1.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82d36aa15e8a5bcf4ff7d8702aa21bfe","time":{"start":1684742717926,"stop":1684742718092,"duration":166},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Mon, 22 May 2023 08:05:18 GMT', 'content-type': 'text/html', 'content-length': '190', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Mon, 22 May 2023 08:05:18 GMT', 'content-type': 'text/html', 'content-length': '190', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Mon, 22 May 2023 08:05:18 GMT', 'content-type': 'text/html', 'content-length': '190', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            response_body = sock.recv(int(resp_headers['content-length']))  # read the body of the HTTP error message response and include it in the exception\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Mon, 22 May 2023 08:05:18 GMT', 'content-type': 'text/html', 'content-length': '190', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:148: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"af066436b1f58b74","name":"stdout","source":"af066436b1f58b74.txt","type":"text/plain","size":1078}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az448-180"},{"name":"thread","value":"1873-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cd00159cb83f9142","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Mon, 22 May 2023 08:05:07 GMT', 'content-type': 'text/html', 'content-length': '190', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1684742707625,"stop":1684742707800,"duration":175}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":75,"skipped":0,"passed":64,"unknown":0,"total":139},"items":[{"uid":"ce54071449aabd61","reportUrl":"https://nova-wallet.github.io/test-runner/3052//#testresult/ce54071449aabd61","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable -+-+- {'date': 'Mon, 22 May 2023 00:14:25 GMT', 'content-type': 'text/html', 'content-length': '190', 'connection': 'keep-alive', 'strict-transport-security': 'max-age=15724800; includeSubDomains'} -+-+- b'<html>\\r\\n<head><title>503 Service Temporarily Unavailable</title></head>\\r\\n<body>\\r\\n<center><h1>503 Service Temporarily Unavailable</h1></center>\\r\\n<hr><center>nginx</center>\\r\\n</body>\\r\\n</html>\\r\\n'","time":{"start":1684714465253,"stop":1684714465392,"duration":139}},{"uid":"c4d21c6952596701","reportUrl":"https://nova-wallet.github.io/test-runner/3050//#testresult/c4d21c6952596701","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684685088230,"stop":1684685088278,"duration":48}},{"uid":"5a8ee35119213400","reportUrl":"https://nova-wallet.github.io/test-runner/3049//#testresult/5a8ee35119213400","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684670690708,"stop":1684670690759,"duration":51}},{"uid":"950b41afa61bea95","reportUrl":"https://nova-wallet.github.io/test-runner/3048//#testresult/950b41afa61bea95","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684656317655,"stop":1684656317992,"duration":337}},{"uid":"996bbe71d3e9a6b8","reportUrl":"https://nova-wallet.github.io/test-runner/3047//#testresult/996bbe71d3e9a6b8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684641872107,"stop":1684641872178,"duration":71}},{"uid":"fdb5609cfda7967a","reportUrl":"https://nova-wallet.github.io/test-runner/3046//#testresult/fdb5609cfda7967a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684628100411,"stop":1684628100631,"duration":220}},{"uid":"555c44d034426c34","reportUrl":"https://nova-wallet.github.io/test-runner/3045//#testresult/555c44d034426c34","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684613091290,"stop":1684613091505,"duration":215}},{"uid":"cb3a2463ccb6946c","reportUrl":"https://nova-wallet.github.io/test-runner/3044//#testresult/cb3a2463ccb6946c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684598689651,"stop":1684598689839,"duration":188}},{"uid":"8343f15ddc306a99","reportUrl":"https://nova-wallet.github.io/test-runner/3043//#testresult/8343f15ddc306a99","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684584320330,"stop":1684584320500,"duration":170}},{"uid":"5000381b17e6a28f","reportUrl":"https://nova-wallet.github.io/test-runner/3042//#testresult/5000381b17e6a28f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684569865565,"stop":1684569865589,"duration":24}},{"uid":"52ad4004cd721ff6","reportUrl":"https://nova-wallet.github.io/test-runner/3041//#testresult/52ad4004cd721ff6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684555468558,"stop":1684555468622,"duration":64}},{"uid":"3c10d00e60fc58ca","reportUrl":"https://nova-wallet.github.io/test-runner/3040//#testresult/3c10d00e60fc58ca","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684541570354,"stop":1684541570421,"duration":67}},{"uid":"9246119e4a3061b7","reportUrl":"https://nova-wallet.github.io/test-runner/3039//#testresult/9246119e4a3061b7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684526659299,"stop":1684526659354,"duration":55}},{"uid":"e29bd6dbd96572dd","reportUrl":"https://nova-wallet.github.io/test-runner/3038//#testresult/e29bd6dbd96572dd","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684512300543,"stop":1684512300601,"duration":58}},{"uid":"ec3900655363f2f8","reportUrl":"https://nova-wallet.github.io/test-runner/3037//#testresult/ec3900655363f2f8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684497924958,"stop":1684497925032,"duration":74}},{"uid":"5baa1604aefbb31","reportUrl":"https://nova-wallet.github.io/test-runner/3034//#testresult/5baa1604aefbb31","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684455234123,"stop":1684455234347,"duration":224}},{"uid":"83a4eb9904a2bac7","reportUrl":"https://nova-wallet.github.io/test-runner/3033//#testresult/83a4eb9904a2bac7","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684440276666,"stop":1684440276716,"duration":50}},{"uid":"9c91caa137061861","reportUrl":"https://nova-wallet.github.io/test-runner/3031//#testresult/9c91caa137061861","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684411515033,"stop":1684411515058,"duration":25}},{"uid":"3294e935069a5fd2","reportUrl":"https://nova-wallet.github.io/test-runner/3027//#testresult/3294e935069a5fd2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684353892064,"stop":1684353892303,"duration":239}},{"uid":"6cd6330d2e74d02c","reportUrl":"https://nova-wallet.github.io/test-runner/3026//#testresult/6cd6330d2e74d02c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1684339501262,"stop":1684339501489,"duration":227}}]},"tags":[]},"source":"9339d47dea7965cd.json","parameterValues":["{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"]}