{"uid":"a6bf6c6493db22dd","name":"testBalancesLoading[Getting balance for Integritee Parachain network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for Integritee Parachain network]","historyId":"ed44c51ca84acb60052b81a51dbcf8e4","time":{"start":1693556431002,"stop":1693556511043,"duration":80041},"status":"broken","statusMessage":"Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(1182364784)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(1182364784)=0}, subscriptions=[]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: Connected(url=wss://integritee-kusama.api.onfinality.io/public-ws, toResendOnReconnect=[Sendable(1182364784)], unknownSubscriptionResponses={}, waitingForResponse={Sendable(1182364784)=0}, subscriptions=[]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for Integritee Parachain network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(169)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":51,"unknown":0,"total":52},"items":[{"uid":"5edbfec496c42828","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/5edbfec496c42828","status":"passed","time":{"start":1693541906085,"stop":1693541906332,"duration":247}},{"uid":"99a24c658bcb9c23","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/99a24c658bcb9c23","status":"passed","time":{"start":1693527623749,"stop":1693527623954,"duration":205}},{"uid":"22fa65d9b97fd93d","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/22fa65d9b97fd93d","status":"passed","time":{"start":1693512937282,"stop":1693512937535,"duration":253}},{"uid":"1c85d414edf358d5","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/1c85d414edf358d5","status":"passed","time":{"start":1693498633874,"stop":1693498634176,"duration":302}},{"uid":"a2fd157a081d6729","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/a2fd157a081d6729","status":"passed","time":{"start":1693484228245,"stop":1693484228446,"duration":201}},{"uid":"ec5576ecde6d421f","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/ec5576ecde6d421f","status":"passed","time":{"start":1693469665308,"stop":1693469665561,"duration":253}},{"uid":"66d0d0356c90f87d","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/66d0d0356c90f87d","status":"passed","time":{"start":1693455417480,"stop":1693455417755,"duration":275}},{"uid":"dcb61cbc44a0e0ab","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/dcb61cbc44a0e0ab","status":"passed","time":{"start":1693441091650,"stop":1693441091862,"duration":212}},{"uid":"fad21b2b48162e2d","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/fad21b2b48162e2d","status":"passed","time":{"start":1693426715623,"stop":1693426715880,"duration":257}},{"uid":"4bdf61a2ae304fcf","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/4bdf61a2ae304fcf","status":"passed","time":{"start":1693412274737,"stop":1693412276417,"duration":1680}},{"uid":"9551b33fcfda9dcf","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/9551b33fcfda9dcf","status":"passed","time":{"start":1693397705893,"stop":1693397706160,"duration":267}},{"uid":"af37c1e848d6b9bb","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/af37c1e848d6b9bb","status":"passed","time":{"start":1693383330918,"stop":1693383331187,"duration":269}},{"uid":"236860fab7aea3c3","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/236860fab7aea3c3","status":"passed","time":{"start":1693368850025,"stop":1693368850268,"duration":243}},{"uid":"7b984aa9fc4beb61","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/7b984aa9fc4beb61","status":"passed","time":{"start":1693354554891,"stop":1693354555147,"duration":256}},{"uid":"1899adc1d8239576","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/1899adc1d8239576","status":"passed","time":{"start":1693340254508,"stop":1693340254772,"duration":264}},{"uid":"5621dd40bc87823","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/5621dd40bc87823","status":"passed","time":{"start":1693325813487,"stop":1693325813727,"duration":240}},{"uid":"c109c50040b51d64","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/c109c50040b51d64","status":"passed","time":{"start":1693311344126,"stop":1693311344522,"duration":396}},{"uid":"f3033e75c9535e27","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/f3033e75c9535e27","status":"passed","time":{"start":1693296956660,"stop":1693296956909,"duration":249}},{"uid":"d714f7cc6852baeb","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/d714f7cc6852baeb","status":"passed","time":{"start":1693282641028,"stop":1693282641233,"duration":205}},{"uid":"56820cd7788925bc","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/56820cd7788925bc","status":"passed","time":{"start":1693268286813,"stop":1693268287055,"duration":242}}]},"tags":[]},"source":"a6bf6c6493db22dd.json","parameterValues":[]}