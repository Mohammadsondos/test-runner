{"uid":"57a168ea7440c161","name":"test_can_create_connection[Test for Kusama Asset Hub, url: wss://statemine.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a2ebf3ab717f78e26d97ae46b142c841","time":{"start":1693555674188,"stop":1693555734871,"duration":60683},"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Kusama Asset Hub', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","statusTrace":"data = {'name': 'Kusama Asset Hub', 'url': 'wss://statemine.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:659: in __init__\n    self.reload_type_registry(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3279: in reload_type_registry\n    self.apply_type_registry_presets(use_remote_preset=use_remote_preset, auto_discover=auto_discover)\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:3293: in apply_type_registry_presets\n    type_registry_name = self.chain.lower().replace(' ', '-')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:806: in chain\n    self.__chain = self.rpc_request(\"system_chain\", []).get('result')\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:732: in rpc_request\n    self.__rpc_message_queue.append(json.loads(self.websocket.recv()))\n.venv/lib/python3.10/site-packages/websocket/_core.py:362: in recv\n    opcode, data = self.recv_data()\n.venv/lib/python3.10/site-packages/websocket/_core.py:385: in recv_data\n    opcode, frame = self.recv_data_frame(control_frame)\n.venv/lib/python3.10/site-packages/websocket/_core.py:406: in recv_data_frame\n    frame = self.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_core.py:445: in recv_frame\n    return self.frame_buffer.recv_frame()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:338: in recv_frame\n    self.recv_header()\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:294: in recv_header\n    header = self.recv_strict(2)\n.venv/lib/python3.10/site-packages/websocket/_abnf.py:373: in recv_strict\n    bytes_ = self.recv(min(16384, shortage))\n.venv/lib/python3.10/site-packages/websocket/_core.py:529: in _recv\n    return recv(self.sock, bufsize)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nbufsize = 2\n\n    def recv(sock: socket.socket, bufsize: int) -> bytes:\n        if not sock:\n            raise WebSocketConnectionClosedException(\"socket is already closed.\")\n    \n        def _recv():\n            try:\n                return sock.recv(bufsize)\n            except SSLWantReadError:\n                pass\n            except socket.error as exc:\n                error_code = extract_error_code(exc)\n                if error_code != errno.EAGAIN and error_code != errno.EWOULDBLOCK:\n                    raise\n    \n            sel = selectors.DefaultSelector()\n            sel.register(sock, selectors.EVENT_READ)\n    \n            r = sel.select(sock.gettimeout())\n            sel.close()\n    \n            if r:\n                return sock.recv(bufsize)\n    \n        try:\n            if sock.gettimeout() == 0:\n                bytes_ = sock.recv(bufsize)\n            else:\n                bytes_ = _recv()\n        except TimeoutError:\n            raise WebSocketTimeoutException(\"Connection timed out\")\n        except socket.timeout as e:\n            message = extract_err_message(e)\n            raise WebSocketTimeoutException(message)\n        except SSLError as e:\n            message = extract_err_message(e)\n            if isinstance(message, str) and 'timed out' in message:\n                raise WebSocketTimeoutException(message)\n            else:\n                raise\n    \n        if not bytes_:\n>           raise WebSocketConnectionClosedException(\n                \"Connection to remote host was lost.\")\nE           websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.\n\n.venv/lib/python3.10/site-packages/websocket/_socket.py:122: WebSocketConnectionClosedException","steps":[],"attachments":[{"uid":"fff05e9016225ad0","name":"stdout","source":"fff05e9016225ad0.txt","type":"text/plain","size":390}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az402-180"},{"name":"thread","value":"2115-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Kusama Asset Hub'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9fce00741946514c","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1693555538264,"stop":1693555659023,"duration":120759}},{"uid":"9b1db8e6de948051","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1693555282268,"stop":1693555522994,"duration":240726}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":48,"unknown":0,"total":49},"items":[{"uid":"3d27fc97b240a679","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/3d27fc97b240a679","status":"passed","time":{"start":1693540886978,"stop":1693540887854,"duration":876}},{"uid":"f79b35b351d00c33","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/f79b35b351d00c33","status":"passed","time":{"start":1693526538889,"stop":1693526539737,"duration":848}},{"uid":"6dd538e8e0c77348","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/6dd538e8e0c77348","status":"passed","time":{"start":1693512088266,"stop":1693512089053,"duration":787}},{"uid":"36a28799f9ccdefe","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/36a28799f9ccdefe","status":"passed","time":{"start":1693497677508,"stop":1693497678756,"duration":1248}},{"uid":"71a8a196567b34f2","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/71a8a196567b34f2","status":"passed","time":{"start":1693483287984,"stop":1693483288902,"duration":918}},{"uid":"3e174a55258b8e05","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/3e174a55258b8e05","status":"passed","time":{"start":1693468877592,"stop":1693468878566,"duration":974}},{"uid":"fa3d07406d4333a3","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/fa3d07406d4333a3","status":"passed","time":{"start":1693454486922,"stop":1693454487791,"duration":869}},{"uid":"4307b9345710d8d7","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/4307b9345710d8d7","status":"passed","time":{"start":1693440132871,"stop":1693440133627,"duration":756}},{"uid":"2b7228d2785edf5f","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/2b7228d2785edf5f","status":"passed","time":{"start":1693425679604,"stop":1693425680699,"duration":1095}},{"uid":"cf8458c24426faa5","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/cf8458c24426faa5","status":"passed","time":{"start":1693411294985,"stop":1693411295719,"duration":734}},{"uid":"7f1ce06799827987","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/7f1ce06799827987","status":"passed","time":{"start":1693396886368,"stop":1693396887256,"duration":888}},{"uid":"b80e49cee94dd769","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/b80e49cee94dd769","status":"passed","time":{"start":1693382478926,"stop":1693382479890,"duration":964}},{"uid":"ece2c96702819635","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/ece2c96702819635","status":"passed","time":{"start":1693368076952,"stop":1693368077968,"duration":1016}},{"uid":"18d983455b1f67dd","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/18d983455b1f67dd","status":"passed","time":{"start":1693353727109,"stop":1693353728142,"duration":1033}},{"uid":"28df529ff8431407","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/28df529ff8431407","status":"passed","time":{"start":1693339277700,"stop":1693339278821,"duration":1121}},{"uid":"ba01ad00a089ec75","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/ba01ad00a089ec75","status":"passed","time":{"start":1693324887708,"stop":1693324888645,"duration":937}},{"uid":"43086d7d3b0f220d","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/43086d7d3b0f220d","status":"passed","time":{"start":1693310487872,"stop":1693310488954,"duration":1082}},{"uid":"ddd88694b3efa1","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/ddd88694b3efa1","status":"passed","time":{"start":1693296077460,"stop":1693296078735,"duration":1275}},{"uid":"a5d7a3a7de476b98","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/a5d7a3a7de476b98","status":"passed","time":{"start":1693281676505,"stop":1693281677665,"duration":1160}},{"uid":"6899293a78faa993","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/6899293a78faa993","status":"passed","time":{"start":1693267329877,"stop":1693267330733,"duration":856}}]},"tags":[]},"source":"57a168ea7440c161.json","parameterValues":["{'url': 'wss://statemine.api.onfinality.io/public-ws', 'name': 'Kusama Asset Hub'}"]}