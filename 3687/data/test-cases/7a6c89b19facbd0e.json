{"uid":"7a6c89b19facbd0e","name":"test_can_create_connection[Test for Altair, url: wss://altair.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"21accf31cfdd1e2d64086949e5ee4c2e","time":{"start":1693555750150,"stop":1693556111957,"duration":361807},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 01 Sep 2023 08:15:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '301208', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 01 Sep 2023 08:15:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '301208', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 01 Sep 2023 08:15:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '301208', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'","statusTrace":"data = {'name': 'Altair', 'url': 'wss://altair.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n.venv/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n.venv/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n.venv/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses: tuple = SUCCESS_STATUSES) -> tuple:\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 504 Gateway Time-out -+-+- {'date': 'Fri, 01 Sep 2023 08:15:11 GMT', 'content-type': 'text/plain; charset=utf-8', 'connection': 'keep-alive', 'content-length': '34', 'x-continent': 'SA', 'x-cluster': 'sk', 'x-kong-upstream-latency': '60001', 'x-kong-proxy-latency': '301208', 'via': 'kong/2.5.2'} -+-+- b'The upstream server is timing out\\n'\n\n.venv/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"327da84472b0df59","name":"stdout","source":"327da84472b0df59.txt","type":"text/plain","size":704}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az402-180"},{"name":"thread","value":"2109-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://altair.api.onfinality.io/public-ws', 'name': 'Altair'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7dd1bf727746f963","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1693555614316,"stop":1693555734974,"duration":120658}},{"uid":"30310f5a53399e20","status":"broken","statusDetails":"websocket._exceptions.WebSocketConnectionClosedException: Connection to remote host was lost.","time":{"start":1693555292853,"stop":1693555599079,"duration":306226}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":48,"unknown":0,"total":49},"items":[{"uid":"c6ca883eff3e919f","reportUrl":"https://novasamatech.github.io/test-runner/3686//#testresult/c6ca883eff3e919f","status":"passed","time":{"start":1693540894982,"stop":1693540895750,"duration":768}},{"uid":"3b697968f52c80a3","reportUrl":"https://novasamatech.github.io/test-runner/3685//#testresult/3b697968f52c80a3","status":"passed","time":{"start":1693526576459,"stop":1693526577318,"duration":859}},{"uid":"c807ecd3115d2ae7","reportUrl":"https://novasamatech.github.io/test-runner/3684//#testresult/c807ecd3115d2ae7","status":"passed","time":{"start":1693512158636,"stop":1693512159377,"duration":741}},{"uid":"37074de7d34a5fcd","reportUrl":"https://novasamatech.github.io/test-runner/3683//#testresult/37074de7d34a5fcd","status":"passed","time":{"start":1693497732319,"stop":1693497733291,"duration":972}},{"uid":"22d69a4eb5973506","reportUrl":"https://novasamatech.github.io/test-runner/3682//#testresult/22d69a4eb5973506","status":"passed","time":{"start":1693483310320,"stop":1693483311191,"duration":871}},{"uid":"cb9c312c392777fa","reportUrl":"https://novasamatech.github.io/test-runner/3681//#testresult/cb9c312c392777fa","status":"passed","time":{"start":1693468902268,"stop":1693468903228,"duration":960}},{"uid":"c5c7da292f27b669","reportUrl":"https://novasamatech.github.io/test-runner/3680//#testresult/c5c7da292f27b669","status":"passed","time":{"start":1693454511696,"stop":1693454512434,"duration":738}},{"uid":"97501188788074b5","reportUrl":"https://novasamatech.github.io/test-runner/3679//#testresult/97501188788074b5","status":"passed","time":{"start":1693440140977,"stop":1693440141717,"duration":740}},{"uid":"fefab0bd90091488","reportUrl":"https://novasamatech.github.io/test-runner/3678//#testresult/fefab0bd90091488","status":"passed","time":{"start":1693425685329,"stop":1693425686302,"duration":973}},{"uid":"4d986a88dc4905ef","reportUrl":"https://novasamatech.github.io/test-runner/3677//#testresult/4d986a88dc4905ef","status":"passed","time":{"start":1693411321405,"stop":1693411322140,"duration":735}},{"uid":"f8d2a60fceb4936c","reportUrl":"https://novasamatech.github.io/test-runner/3676//#testresult/f8d2a60fceb4936c","status":"passed","time":{"start":1693396909806,"stop":1693396910533,"duration":727}},{"uid":"f454eae37e721ecf","reportUrl":"https://novasamatech.github.io/test-runner/3675//#testresult/f454eae37e721ecf","status":"passed","time":{"start":1693382516049,"stop":1693382516983,"duration":934}},{"uid":"648eb9fb8d0aa52c","reportUrl":"https://novasamatech.github.io/test-runner/3674//#testresult/648eb9fb8d0aa52c","status":"passed","time":{"start":1693368083706,"stop":1693368084662,"duration":956}},{"uid":"66b29572eb9a8796","reportUrl":"https://novasamatech.github.io/test-runner/3673//#testresult/66b29572eb9a8796","status":"passed","time":{"start":1693353734234,"stop":1693353735209,"duration":975}},{"uid":"153c8efb00bc51d6","reportUrl":"https://novasamatech.github.io/test-runner/3672//#testresult/153c8efb00bc51d6","status":"passed","time":{"start":1693339285182,"stop":1693339286136,"duration":954}},{"uid":"e5d7a7e9f20e97f1","reportUrl":"https://novasamatech.github.io/test-runner/3671//#testresult/e5d7a7e9f20e97f1","status":"passed","time":{"start":1693324926086,"stop":1693324927740,"duration":1654}},{"uid":"8b2f07d8b656875d","reportUrl":"https://novasamatech.github.io/test-runner/3670//#testresult/8b2f07d8b656875d","status":"passed","time":{"start":1693310494638,"stop":1693310495861,"duration":1223}},{"uid":"2337b625b0561d80","reportUrl":"https://novasamatech.github.io/test-runner/3669//#testresult/2337b625b0561d80","status":"passed","time":{"start":1693296115234,"stop":1693296116172,"duration":938}},{"uid":"5bfef2f662403bc8","reportUrl":"https://novasamatech.github.io/test-runner/3668//#testresult/5bfef2f662403bc8","status":"passed","time":{"start":1693281683950,"stop":1693281684801,"duration":851}},{"uid":"9516e9654544ee21","reportUrl":"https://novasamatech.github.io/test-runner/3667//#testresult/9516e9654544ee21","status":"passed","time":{"start":1693267337256,"stop":1693267338106,"duration":850}}]},"tags":[]},"source":"7a6c89b19facbd0e.json","parameterValues":["{'url': 'wss://altair.api.onfinality.io/public-ws', 'name': 'Altair'}"]}