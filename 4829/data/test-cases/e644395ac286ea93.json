{"uid":"e644395ac286ea93","name":"test_can_create_connection[Test for Nodle Parachain, url: wss://eden-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"b83cbea806fcf0b5f2c8c12818bb2158","time":{"start":1709755393798,"stop":1709755393798,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":true,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"connection_by_url","time":{"start":1709755377064,"stop":1709755382694,"duration":5630},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None\n","statusTrace":"  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 40, in connection_by_url\n    connection = execute_with_timeout(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/tests/conftest.py\", line 29, in execute_with_timeout\n    return func_timeout(timeout=timeout, func=function, args=args)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/dafunc.py\", line 108, in func_timeout\n    raise_exception(exception)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/func_timeout/py3_raise.py\", line 7, in raise_exception\n    raise exception[0] from None\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/scripts/utils/substrate_interface.py\", line 30, in create_connection_by_url\n    substrate = SubstrateInterface(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 132, in __init__\n    self.connect_websocket()\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/substrateinterface/base.py\", line 177, in connect_websocket\n    self.websocket = create_connection(\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 646, in create_connection\n    websock.connect(url, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_core.py\", line 261, in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 65, in handshake\n    status, resp = _get_resp_headers(sock)\n  File \"/home/runner/work/test-runner/test-runner/nova-utils/.venv/lib/python3.10/site-packages/websocket/_handshake.py\", line 150, in _get_resp_headers\n    raise WebSocketBadStatusException(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"connection_by_url","time":{"start":1709755387796,"stop":1709755393797,"duration":6001},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"passed","steps":[],"attachments":[{"uid":"af9570c3bdd2c5e6","name":"stdout","source":"af9570c3bdd2c5e6.txt","type":"text/plain","size":194}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az693-431"},{"name":"thread","value":"2071-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection_by_url","value":"{'url': 'wss://eden-rpc.dwellir.com', 'name': 'Nodle Parachain'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"867df7b7c39314d3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709755377063,"stop":1709755377063,"duration":0}}],"categories":[],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":920,"unknown":0,"total":940},"items":[{"uid":"dbb6698abe62d9b0","reportUrl":"https://novasamatech.github.io/test-runner/4828//#testresult/dbb6698abe62d9b0","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709741016783,"stop":1709741016783,"duration":0}},{"uid":"8977959d518aca28","reportUrl":"https://novasamatech.github.io/test-runner/4827//#testresult/8977959d518aca28","status":"passed","time":{"start":1709726582201,"stop":1709726582202,"duration":1}},{"uid":"3e01a20a7f0ba584","reportUrl":"https://novasamatech.github.io/test-runner/4826//#testresult/3e01a20a7f0ba584","status":"passed","time":{"start":1709712169623,"stop":1709712169624,"duration":1}},{"uid":"6470cc8148aabd1a","reportUrl":"https://novasamatech.github.io/test-runner/4825//#testresult/6470cc8148aabd1a","status":"passed","time":{"start":1709697787210,"stop":1709697787210,"duration":0}},{"uid":"21de0d0e78d57d4","reportUrl":"https://novasamatech.github.io/test-runner/4824//#testresult/21de0d0e78d57d4","status":"passed","time":{"start":1709683424334,"stop":1709683424334,"duration":0}},{"uid":"fd457f4f47ccba3a","reportUrl":"https://novasamatech.github.io/test-runner/4823//#testresult/fd457f4f47ccba3a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709668975579,"stop":1709668975579,"duration":0}},{"uid":"d31c50b21fa0405d","reportUrl":"https://novasamatech.github.io/test-runner/4822//#testresult/d31c50b21fa0405d","status":"passed","time":{"start":1709654591494,"stop":1709654591494,"duration":0}},{"uid":"b56af322385f7645","reportUrl":"https://novasamatech.github.io/test-runner/4821//#testresult/b56af322385f7645","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709640195643,"stop":1709640195643,"duration":0}},{"uid":"cd45b2677c41b64f","reportUrl":"https://novasamatech.github.io/test-runner/4820//#testresult/cd45b2677c41b64f","status":"passed","time":{"start":1709625795830,"stop":1709625795830,"duration":0}},{"uid":"ce1540756fa35b2f","reportUrl":"https://novasamatech.github.io/test-runner/4819//#testresult/ce1540756fa35b2f","status":"passed","time":{"start":1709611411346,"stop":1709611411346,"duration":0}},{"uid":"d572a1ad186b8fc5","reportUrl":"https://novasamatech.github.io/test-runner/4818//#testresult/d572a1ad186b8fc5","status":"passed","time":{"start":1709597010403,"stop":1709597010403,"duration":0}},{"uid":"684b54d7697bb0c8","reportUrl":"https://novasamatech.github.io/test-runner/4817//#testresult/684b54d7697bb0c8","status":"passed","time":{"start":1709582593967,"stop":1709582593967,"duration":0}},{"uid":"f1f8a8c775522366","reportUrl":"https://novasamatech.github.io/test-runner/4816//#testresult/f1f8a8c775522366","status":"passed","time":{"start":1709568174482,"stop":1709568174482,"duration":0}},{"uid":"32dce5132d880c87","reportUrl":"https://novasamatech.github.io/test-runner/4815//#testresult/32dce5132d880c87","status":"passed","time":{"start":1709554090637,"stop":1709554090638,"duration":1}},{"uid":"106761ea0acd8ed8","reportUrl":"https://novasamatech.github.io/test-runner/4814//#testresult/106761ea0acd8ed8","status":"passed","time":{"start":1709539842417,"stop":1709539842417,"duration":0}},{"uid":"7d25d2f00343674e","reportUrl":"https://novasamatech.github.io/test-runner/4813//#testresult/7d25d2f00343674e","status":"passed","time":{"start":1709525266272,"stop":1709525266272,"duration":0}},{"uid":"63586e646fdbbda1","reportUrl":"https://novasamatech.github.io/test-runner/4812//#testresult/63586e646fdbbda1","status":"passed","time":{"start":1709510653317,"stop":1709510653317,"duration":0}},{"uid":"db77ee29bd221005","reportUrl":"https://novasamatech.github.io/test-runner/4811//#testresult/db77ee29bd221005","status":"passed","time":{"start":1709496269267,"stop":1709496269267,"duration":0}},{"uid":"fd69e8466e404be6","reportUrl":"https://novasamatech.github.io/test-runner/4810//#testresult/fd69e8466e404be6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709481821296,"stop":1709481821296,"duration":0}},{"uid":"1b82a70e6c4d6c6a","reportUrl":"https://novasamatech.github.io/test-runner/4809//#testresult/1b82a70e6c4d6c6a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Unavailable -+-+- {'cache-control': 'no-cache', 'content-type': 'text/html'} -+-+- None","time":{"start":1709467392911,"stop":1709467392911,"duration":0}}]},"tags":[]},"source":"e644395ac286ea93.json","parameterValues":["{'url': 'wss://eden-rpc.dwellir.com', 'name': 'Nodle Parachain'}"]}