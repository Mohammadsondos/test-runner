{"uid":"ad3fe0bfa80bc189","name":"test_has_new_assets[Test for Parallel]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2fd85718b9b6b98fdd10354de15443c8","time":{"start":1698264173560,"stop":1698264183252,"duration":9692},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f10d473c4c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f10d473e2c0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f10d473c4c0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f10d473e2c0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"23d6118f8e578493","name":"stdout","source":"23d6118f8e578493.txt","type":"text/plain","size":2607}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az351-264"},{"name":"thread","value":"2118-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f10d473e2c0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3c4e5fdbef5e42c","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698264134782,"stop":1698264158517,"duration":23735}},{"uid":"ddc69ca9f96560c1","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698264107987,"stop":1698264119743,"duration":11756}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":374,"unknown":0,"total":376},"items":[{"uid":"c70c385858ddc450","reportUrl":"https://novasamatech.github.io/test-runner/4016//#testresult/c70c385858ddc450","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1698249883104,"stop":1698249894867,"duration":11763}},{"uid":"a5e6eb2808ab311c","reportUrl":"https://novasamatech.github.io/test-runner/4015//#testresult/a5e6eb2808ab311c","status":"passed","time":{"start":1698235382268,"stop":1698235387002,"duration":4734}},{"uid":"44b62caea9cb173a","reportUrl":"https://novasamatech.github.io/test-runner/4014//#testresult/44b62caea9cb173a","status":"passed","time":{"start":1698220915315,"stop":1698220921949,"duration":6634}},{"uid":"cb435c31c898aca6","reportUrl":"https://novasamatech.github.io/test-runner/4013//#testresult/cb435c31c898aca6","status":"passed","time":{"start":1698206508854,"stop":1698206515633,"duration":6779}},{"uid":"969cf81ed8360cb8","reportUrl":"https://novasamatech.github.io/test-runner/4012//#testresult/969cf81ed8360cb8","status":"passed","time":{"start":1698192147231,"stop":1698192153795,"duration":6564}},{"uid":"b823e88e2afc42f7","reportUrl":"https://novasamatech.github.io/test-runner/4011//#testresult/b823e88e2afc42f7","status":"passed","time":{"start":1698177701908,"stop":1698177706917,"duration":5009}},{"uid":"7678fbd3a0d1ca9e","reportUrl":"https://novasamatech.github.io/test-runner/4010//#testresult/7678fbd3a0d1ca9e","status":"passed","time":{"start":1698163312920,"stop":1698163317142,"duration":4222}},{"uid":"bd1fbc3274340b46","reportUrl":"https://novasamatech.github.io/test-runner/4009//#testresult/bd1fbc3274340b46","status":"passed","time":{"start":1698148911691,"stop":1698148922394,"duration":10703}},{"uid":"c949f2e3e0ed1002","reportUrl":"https://novasamatech.github.io/test-runner/4007//#testresult/c949f2e3e0ed1002","status":"passed","time":{"start":1698120130557,"stop":1698120139099,"duration":8542}},{"uid":"1d251607a947c92a","reportUrl":"https://novasamatech.github.io/test-runner/4008//#testresult/1d251607a947c92a","status":"passed","time":{"start":1698134651259,"stop":1698134655595,"duration":4336}},{"uid":"7d49d3d065dbdc97","reportUrl":"https://novasamatech.github.io/test-runner/4006//#testresult/7d49d3d065dbdc97","status":"passed","time":{"start":1698105753514,"stop":1698105761035,"duration":7521}},{"uid":"b04446e982e16e04","reportUrl":"https://novasamatech.github.io/test-runner/4005//#testresult/b04446e982e16e04","status":"passed","time":{"start":1698091307363,"stop":1698091314134,"duration":6771}},{"uid":"1427e1d3c57fec6c","reportUrl":"https://novasamatech.github.io/test-runner/4004//#testresult/1427e1d3c57fec6c","status":"passed","time":{"start":1698077043803,"stop":1698077050718,"duration":6915}},{"uid":"58f3d88b120d8746","reportUrl":"https://novasamatech.github.io/test-runner/4003//#testresult/58f3d88b120d8746","status":"passed","time":{"start":1698062586342,"stop":1698062593678,"duration":7336}},{"uid":"9032bb98518f318c","reportUrl":"https://novasamatech.github.io/test-runner/4002//#testresult/9032bb98518f318c","status":"passed","time":{"start":1698048115845,"stop":1698048128873,"duration":13028}},{"uid":"72408582e78c73ab","reportUrl":"https://novasamatech.github.io/test-runner/4001//#testresult/72408582e78c73ab","status":"passed","time":{"start":1698033696847,"stop":1698033701065,"duration":4218}},{"uid":"408ae094f339b92a","reportUrl":"https://novasamatech.github.io/test-runner/4000//#testresult/408ae094f339b92a","status":"passed","time":{"start":1698019358536,"stop":1698019363511,"duration":4975}},{"uid":"3a3899262c5c507","reportUrl":"https://novasamatech.github.io/test-runner/3999//#testresult/3a3899262c5c507","status":"passed","time":{"start":1698004915384,"stop":1698004921775,"duration":6391}},{"uid":"ddfb2acea16de398","reportUrl":"https://novasamatech.github.io/test-runner/3998//#testresult/ddfb2acea16de398","status":"passed","time":{"start":1697990506440,"stop":1697990511973,"duration":5533}},{"uid":"aa92e0396c6ae4","reportUrl":"https://novasamatech.github.io/test-runner/3997//#testresult/aa92e0396c6ae4","status":"passed","time":{"start":1697976096932,"stop":1697976102288,"duration":5356}}]},"tags":[]},"source":"ad3fe0bfa80bc189.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f10d473e2c0>"]}