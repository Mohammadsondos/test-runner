{"uid":"d889c28c316a1224","name":"test_can_create_connection[Test for DAO IPCI, url: wss://kusama.rpc.ipci.io]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"a9e2a761292e07c67736c1884dbb9915","time":{"start":1675599877203,"stop":1675599877635,"duration":432},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'DAO IPCI', 'url': 'wss://kusama.rpc.ipci.io'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"4fe72b512b6c75ca","name":"stdout","source":"4fe72b512b6c75ca.txt","type":"text/plain","size":228}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az438-945"},{"name":"thread","value":"1730-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"95a771480eea4e6f","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675599866539,"stop":1675599867105,"duration":566}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":77,"skipped":0,"passed":452,"unknown":0,"total":529},"items":[{"uid":"3525f78722f018ea","reportUrl":"https://nova-wallet.github.io/test-runner/2404//#testresult/3525f78722f018ea","status":"passed","time":{"start":1675584990844,"stop":1675584991220,"duration":376}},{"uid":"263f4453187ebc4c","reportUrl":"https://nova-wallet.github.io/test-runner/2403//#testresult/263f4453187ebc4c","status":"passed","time":{"start":1675570591337,"stop":1675570591897,"duration":560}},{"uid":"c320be00c3b22559","reportUrl":"https://nova-wallet.github.io/test-runner/2402//#testresult/c320be00c3b22559","status":"passed","time":{"start":1675559598804,"stop":1675559599366,"duration":562}},{"uid":"b745d6e9646f6dd9","reportUrl":"https://nova-wallet.github.io/test-runner/2401//#testresult/b745d6e9646f6dd9","status":"passed","time":{"start":1675541617392,"stop":1675541617776,"duration":384}},{"uid":"6ce33edfc20285b3","reportUrl":"https://nova-wallet.github.io/test-runner/2400//#testresult/6ce33edfc20285b3","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675527473405,"stop":1675527473894,"duration":489}},{"uid":"68a769783c767ed","reportUrl":"https://nova-wallet.github.io/test-runner/2399//#testresult/68a769783c767ed","status":"passed","time":{"start":1675513431274,"stop":1675513431952,"duration":678}},{"uid":"2fbdf40210f3fdb8","reportUrl":"https://nova-wallet.github.io/test-runner/2398//#testresult/2fbdf40210f3fdb8","status":"passed","time":{"start":1675498580896,"stop":1675498581275,"duration":379}},{"uid":"eee414d0882b7641","reportUrl":"https://nova-wallet.github.io/test-runner/2397//#testresult/eee414d0882b7641","status":"passed","time":{"start":1675484161997,"stop":1675484162376,"duration":379}},{"uid":"3661529327dc14a3","reportUrl":"https://nova-wallet.github.io/test-runner/2396//#testresult/3661529327dc14a3","status":"passed","time":{"start":1675472936351,"stop":1675472936754,"duration":403}},{"uid":"120519d90b812cf","reportUrl":"https://nova-wallet.github.io/test-runner/2395//#testresult/120519d90b812cf","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675455327115,"stop":1675455327487,"duration":372}},{"uid":"1b76d70c36c542d0","reportUrl":"https://nova-wallet.github.io/test-runner/2394//#testresult/1b76d70c36c542d0","status":"passed","time":{"start":1675441139748,"stop":1675441140240,"duration":492}},{"uid":"b668c24420f7b919","reportUrl":"https://nova-wallet.github.io/test-runner/2393//#testresult/b668c24420f7b919","status":"passed","time":{"start":1675427166675,"stop":1675427167269,"duration":594}},{"uid":"5b1a81366990ded3","reportUrl":"https://nova-wallet.github.io/test-runner/2392//#testresult/5b1a81366990ded3","status":"passed","time":{"start":1675412287931,"stop":1675412288593,"duration":662}},{"uid":"422e491ca2c9d1e9","reportUrl":"https://nova-wallet.github.io/test-runner/2391//#testresult/422e491ca2c9d1e9","status":"passed","time":{"start":1675397801428,"stop":1675397801806,"duration":378}},{"uid":"f433dc37f728d612","reportUrl":"https://nova-wallet.github.io/test-runner/2390//#testresult/f433dc37f728d612","status":"passed","time":{"start":1675386707241,"stop":1675386707821,"duration":580}},{"uid":"4215666b5c1b5fef","reportUrl":"https://nova-wallet.github.io/test-runner/2388//#testresult/4215666b5c1b5fef","status":"passed","time":{"start":1675354764507,"stop":1675354765077,"duration":570}},{"uid":"6548cf377d50601","reportUrl":"https://nova-wallet.github.io/test-runner/2387//#testresult/6548cf377d50601","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1675340904320,"stop":1675340904805,"duration":485}},{"uid":"240aab6a7e80aae4","reportUrl":"https://nova-wallet.github.io/test-runner/2386//#testresult/240aab6a7e80aae4","status":"passed","time":{"start":1675325876684,"stop":1675325877293,"duration":609}},{"uid":"4c76813e90c11c8e","reportUrl":"https://nova-wallet.github.io/test-runner/2385//#testresult/4c76813e90c11c8e","status":"passed","time":{"start":1675311446653,"stop":1675311447053,"duration":400}},{"uid":"f7631c97eb514bfd","reportUrl":"https://nova-wallet.github.io/test-runner/2384//#testresult/f7631c97eb514bfd","status":"passed","time":{"start":1675300208184,"stop":1675300208718,"duration":534}}]},"tags":[]},"source":"d889c28c316a1224.json","parameterValues":["{'url': 'wss://kusama.rpc.ipci.io', 'name': 'DAO IPCI'}"]}