{"uid":"7f71564fcc917192","name":"testBalancesLoading[Getting balance for krest network]","fullName":"io.novafoundation.nova.balances.BalancesIntegrationTest.testBalancesLoading[Getting balance for krest network]","historyId":"8ee5b417c74fda1a742d0e2b170fa1e9","time":{"start":1691511457408,"stop":1691511537458,"duration":80050},"status":"broken","statusMessage":"Socket state: WaitingForReconnect(url=wss://wss-krest.peaq.network, attempt=9, pendingSendables=[Sendable(554443835)]), error: Timed out waiting for 80000 ms","statusTrace":"java.lang.Exception: Socket state: WaitingForReconnect(url=wss://wss-krest.peaq.network, attempt=9, pendingSendables=[Sendable(554443835)]), error: Timed out waiting for 80000 ms\n\tat io.novafoundation.nova.balances.BalancesIntegrationTest$testBalancesInChainAsync$2.invokeSuspend(BalancesIntegrationTest.kt:99)\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:780)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:684)\n\tat kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:671)\nCaused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 80000 ms\n\tat kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:191)\n\tat kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:159)\n\tat kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:501)\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:280)\n\tat kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)\n\tat java.lang.Thread.run(Thread.java:764)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"io.novafoundation.nova.balances"},{"name":"testClass","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"testMethod","value":"testBalancesLoading[Getting balance for krest network]"},{"name":"suite","value":"io.novafoundation.nova.balances.BalancesIntegrationTest"},{"name":"host","value":"localhost"},{"name":"thread","value":"Instr: io.qameta.allure.android.runners.AllureAndroidJUnitRunner(165)"},{"name":"framework","value":"junit4"},{"name":"language","value":"kotlin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":8,"unknown":0,"total":9},"items":[{"uid":"31514273a2971bd0","reportUrl":"https://novasamatech.github.io/test-runner/3536//#testresult/31514273a2971bd0","status":"passed","time":{"start":1691497093608,"stop":1691497141348,"duration":47740}},{"uid":"101a789e2fee13f9","reportUrl":"https://novasamatech.github.io/test-runner/3535//#testresult/101a789e2fee13f9","status":"passed","time":{"start":1691482748095,"stop":1691482748215,"duration":120}},{"uid":"6827d794745d7921","reportUrl":"https://novasamatech.github.io/test-runner/3534//#testresult/6827d794745d7921","status":"passed","time":{"start":1691468354137,"stop":1691468354256,"duration":119}},{"uid":"434279a62db6822d","reportUrl":"https://novasamatech.github.io/test-runner/3533//#testresult/434279a62db6822d","status":"passed","time":{"start":1691454589912,"stop":1691454590095,"duration":183}},{"uid":"fd03fec0a23ee808","reportUrl":"https://novasamatech.github.io/test-runner/3532//#testresult/fd03fec0a23ee808","status":"passed","time":{"start":1691439537890,"stop":1691439538066,"duration":176}},{"uid":"c2c0cde17836d305","reportUrl":"https://novasamatech.github.io/test-runner/3531//#testresult/c2c0cde17836d305","status":"passed","time":{"start":1691425122438,"stop":1691425122569,"duration":131}},{"uid":"445f995f59e1a8dc","reportUrl":"https://novasamatech.github.io/test-runner/3530//#testresult/445f995f59e1a8dc","status":"passed","time":{"start":1691410640359,"stop":1691410640463,"duration":104}},{"uid":"3ae735f509928682","reportUrl":"https://novasamatech.github.io/test-runner/3529//#testresult/3ae735f509928682","status":"passed","time":{"start":1691396231356,"stop":1691396231487,"duration":131}}]},"tags":[]},"source":"7f71564fcc917192.json","parameterValues":[]}