{"uid":"250749134271fdad","name":"test_can_create_connection[Test for Kusama, url: wss://kusama.public.curie.radiumblock.xyz/ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"05e5cbccaeff7205cc25868802d14c80","time":{"start":1671955454795,"stop":1671955454920,"duration":125},"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","statusTrace":"hostname = 'kusama.public.curie.radiumblock.xyz', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7fc7bedc2920>\n\n    def _get_addrinfo_list(hostname, port, is_secure, proxy):\n        phost, pport, pauth = get_proxy_info(\n            hostname, is_secure, proxy.proxy_host, proxy.proxy_port, proxy.auth, proxy.no_proxy)\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n>               addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhost = 'kusama.public.curie.radiumblock.xyz', port = 443, family = 0\ntype = <SocketKind.SOCK_STREAM: 1>, proto = 6, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       socket.gaierror: [Errno -5] No address associated with hostname\n\n/usr/lib/python3.10/socket.py:955: gaierror\n\nDuring handling of the above exception, another exception occurred:\n\ndata = {'name': 'Kusama', 'url': 'wss://kusama.public.curie.radiumblock.xyz/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:122: in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhostname = 'kusama.public.curie.radiumblock.xyz', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7fc7bedc2920>\n\n    def _get_addrinfo_list(hostname, port, is_secure, proxy):\n        phost, pport, pauth = get_proxy_info(\n            hostname, is_secure, proxy.proxy_host, proxy.proxy_port, proxy.auth, proxy.no_proxy)\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n                addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n                return addrinfo_list, False, None\n            else:\n                pport = pport and pport or 80\n                # when running on windows 10, the getaddrinfo used above\n                # returns a socktype 0. This generates an error exception:\n                # _on_error: exception Socket type must be stream or datagram, not 0\n                # Force the socket type to SOCK_STREAM\n                addrinfo_list = socket.getaddrinfo(phost, pport, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n                return addrinfo_list, True, pauth\n        except socket.gaierror as e:\n>           raise WebSocketAddressException(e)\nE           websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname\n\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:167: WebSocketAddressException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","statusTrace":"hostname = 'kusama.public.curie.radiumblock.xyz', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7fc7bedc2920>\n\n    def _get_addrinfo_list(hostname, port, is_secure, proxy):\n        phost, pport, pauth = get_proxy_info(\n            hostname, is_secure, proxy.proxy_host, proxy.proxy_port, proxy.auth, proxy.no_proxy)\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n>               addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:155: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhost = 'kusama.public.curie.radiumblock.xyz', port = 443, family = 0\ntype = <SocketKind.SOCK_STREAM: 1>, proto = 6, flags = 0\n\n    def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0):\n        \"\"\"Resolve host and port into list of address info entries.\n    \n        Translate the host/port argument into a sequence of 5-tuples that contain\n        all the necessary arguments for creating a socket connected to that service.\n        host is a domain name, a string representation of an IPv4/v6 address or\n        None. port is a string service name such as 'http', a numeric port number or\n        None. By passing None as the value of host and port, you can pass NULL to\n        the underlying C API.\n    \n        The family, type and proto arguments can be optionally specified in order to\n        narrow the list of addresses returned. Passing zero as a value for each of\n        these arguments selects the full range of results.\n        \"\"\"\n        # We override this function since we want to translate the numeric family\n        # and socket type values to enum constants.\n        addrlist = []\n>       for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE       socket.gaierror: [Errno -5] No address associated with hostname\n\n/usr/lib/python3.10/socket.py:955: gaierror\n\nDuring handling of the above exception, another exception occurred:\n\ndata = {'name': 'Kusama', 'url': 'wss://kusama.public.curie.radiumblock.xyz/ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:249: in connect\n    self.sock, addrs = connect(url, self.sock_opt, proxy_info(**options),\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:122: in connect\n    addrinfo_list, need_tunnel, auth = _get_addrinfo_list(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhostname = 'kusama.public.curie.radiumblock.xyz', port = 443, is_secure = True\nproxy = <websocket._http.proxy_info object at 0x7fc7bedc2920>\n\n    def _get_addrinfo_list(hostname, port, is_secure, proxy):\n        phost, pport, pauth = get_proxy_info(\n            hostname, is_secure, proxy.proxy_host, proxy.proxy_port, proxy.auth, proxy.no_proxy)\n        try:\n            # when running on windows 10, getaddrinfo without socktype returns a socktype 0.\n            # This generates an error exception: `_on_error: exception Socket type must be stream or datagram, not 0`\n            # or `OSError: [Errno 22] Invalid argument` when creating socket. Force the socket type to SOCK_STREAM.\n            if not phost:\n                addrinfo_list = socket.getaddrinfo(\n                    hostname, port, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n                return addrinfo_list, False, None\n            else:\n                pport = pport and pport or 80\n                # when running on windows 10, the getaddrinfo used above\n                # returns a socktype 0. This generates an error exception:\n                # _on_error: exception Socket type must be stream or datagram, not 0\n                # Force the socket type to SOCK_STREAM\n                addrinfo_list = socket.getaddrinfo(phost, pport, 0, socket.SOCK_STREAM, socket.SOL_TCP)\n                return addrinfo_list, True, pauth\n        except socket.gaierror as e:\n>           raise WebSocketAddressException(e)\nE           websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname\n\n../../../../.local/lib/python3.10/site-packages/websocket/_http.py:167: WebSocketAddressException","steps":[],"attachments":[{"uid":"932025eff4eabb57","name":"stdout","source":"932025eff4eabb57.txt","type":"text/plain","size":284}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az988-330"},{"name":"thread","value":"1715-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://kusama.public.curie.radiumblock.xyz/ws', 'name': 'Kusama'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"98c5bdd9bf0dc2ad","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671955444648,"stop":1671955444681,"duration":33}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":81,"skipped":0,"passed":309,"unknown":0,"total":390},"items":[{"uid":"77e5a94bd8d7944b","reportUrl":"https://nova-wallet.github.io/test-runner/2147//#testresult/77e5a94bd8d7944b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671941049007,"stop":1671941049030,"duration":23}},{"uid":"208d113850148ec6","reportUrl":"https://nova-wallet.github.io/test-runner/2146//#testresult/208d113850148ec6","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671927222789,"stop":1671927222810,"duration":21}},{"uid":"cffd7d43d1c2bc2d","reportUrl":"https://nova-wallet.github.io/test-runner/2145//#testresult/cffd7d43d1c2bc2d","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671912243938,"stop":1671912244007,"duration":69}},{"uid":"8ad51ff3a7a999ca","reportUrl":"https://nova-wallet.github.io/test-runner/2144//#testresult/8ad51ff3a7a999ca","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671897832628,"stop":1671897832661,"duration":33}},{"uid":"826882d0c8770b31","reportUrl":"https://nova-wallet.github.io/test-runner/2143//#testresult/826882d0c8770b31","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671883494026,"stop":1671883498416,"duration":4390}},{"uid":"892cdcfcd38b772b","reportUrl":"https://nova-wallet.github.io/test-runner/2142//#testresult/892cdcfcd38b772b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671869143978,"stop":1671869145564,"duration":1586}},{"uid":"f34eb90a1f9d239b","reportUrl":"https://nova-wallet.github.io/test-runner/2141//#testresult/f34eb90a1f9d239b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671854731839,"stop":1671854731896,"duration":57}},{"uid":"e8c53201e275de35","reportUrl":"https://nova-wallet.github.io/test-runner/2140//#testresult/e8c53201e275de35","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671840696189,"stop":1671840696259,"duration":70}},{"uid":"b979e449b266a6c6","reportUrl":"https://nova-wallet.github.io/test-runner/2139//#testresult/b979e449b266a6c6","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671825850686,"stop":1671825850709,"duration":23}},{"uid":"976cabb8b81f6583","reportUrl":"https://nova-wallet.github.io/test-runner/2138//#testresult/976cabb8b81f6583","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671811446588,"stop":1671811446628,"duration":40}},{"uid":"7dbcf4ee8daa14d1","reportUrl":"https://nova-wallet.github.io/test-runner/2137//#testresult/7dbcf4ee8daa14d1","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671797106511,"stop":1671797106548,"duration":37}},{"uid":"ebcea39cb513fcb9","reportUrl":"https://nova-wallet.github.io/test-runner/2136//#testresult/ebcea39cb513fcb9","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671782661186,"stop":1671782661276,"duration":90}},{"uid":"4d092ea658817939","reportUrl":"https://nova-wallet.github.io/test-runner/2135//#testresult/4d092ea658817939","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671768258489,"stop":1671768258545,"duration":56}},{"uid":"753606175deaa6b4","reportUrl":"https://nova-wallet.github.io/test-runner/2134//#testresult/753606175deaa6b4","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671754392851,"stop":1671754392874,"duration":23}},{"uid":"af5525c03a92894b","reportUrl":"https://nova-wallet.github.io/test-runner/2133//#testresult/af5525c03a92894b","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671739434795,"stop":1671739434882,"duration":87}},{"uid":"1b2b2a5ab934d4b3","reportUrl":"https://nova-wallet.github.io/test-runner/2132//#testresult/1b2b2a5ab934d4b3","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671725065015,"stop":1671725065038,"duration":23}},{"uid":"2dfe647890d4e55c","reportUrl":"https://nova-wallet.github.io/test-runner/2131//#testresult/2dfe647890d4e55c","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671710701807,"stop":1671710701842,"duration":35}},{"uid":"f7244ddec3f29535","reportUrl":"https://nova-wallet.github.io/test-runner/2130//#testresult/f7244ddec3f29535","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671696262741,"stop":1671696262942,"duration":201}},{"uid":"cfd520ad882097a6","reportUrl":"https://nova-wallet.github.io/test-runner/2129//#testresult/cfd520ad882097a6","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671681856708,"stop":1671681856762,"duration":54}},{"uid":"32273946eb7905f9","reportUrl":"https://nova-wallet.github.io/test-runner/2128//#testresult/32273946eb7905f9","status":"broken","statusDetails":"websocket._exceptions.WebSocketAddressException: [Errno -5] No address associated with hostname","time":{"start":1671667987005,"stop":1671667987064,"duration":59}}]},"tags":[]},"source":"250749134271fdad.json","parameterValues":["{'url': 'wss://kusama.public.curie.radiumblock.xyz/ws', 'name': 'Kusama'}"]}