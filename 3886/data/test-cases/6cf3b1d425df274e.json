{"uid":"6cf3b1d425df274e","name":"test_has_new_assets[Test for Polkadex]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"24d79cf039141858b9e166ce41c24f16","time":{"start":1696406560730,"stop":1696406561467,"duration":737},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f62155c52a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f62155c4580>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f62155c52a0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f62155c4580>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"6cd5031d7c08a682","name":"stdout","source":"6cd5031d7c08a682.txt","type":"text/plain","size":1047}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az349-395"},{"name":"thread","value":"2111-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f62155c4580>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"72b62742e6e87661","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696406544993,"stop":1696406545700,"duration":707}},{"uid":"c13522301212d010","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696406529213,"stop":1696406529958,"duration":745}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":224,"unknown":0,"total":245},"items":[{"uid":"98e3d37e8bd8ee1d","reportUrl":"https://novasamatech.github.io/test-runner/3885//#testresult/98e3d37e8bd8ee1d","status":"passed","time":{"start":1696392129419,"stop":1696392134525,"duration":5106}},{"uid":"a65cf0b0ae73d69f","reportUrl":"https://novasamatech.github.io/test-runner/3884//#testresult/a65cf0b0ae73d69f","status":"passed","time":{"start":1696377790704,"stop":1696377796067,"duration":5363}},{"uid":"9150714a19fd3ba6","reportUrl":"https://novasamatech.github.io/test-runner/3883//#testresult/9150714a19fd3ba6","status":"passed","time":{"start":1696363345385,"stop":1696363351464,"duration":6079}},{"uid":"6f1990b013f8be3a","reportUrl":"https://novasamatech.github.io/test-runner/3882//#testresult/6f1990b013f8be3a","status":"passed","time":{"start":1696348926217,"stop":1696348930853,"duration":4636}},{"uid":"e753e31f9cb4ca7c","reportUrl":"https://novasamatech.github.io/test-runner/3881//#testresult/e753e31f9cb4ca7c","status":"passed","time":{"start":1696334545845,"stop":1696334549181,"duration":3336}},{"uid":"bbc596f15f5a5d64","reportUrl":"https://novasamatech.github.io/test-runner/3880//#testresult/bbc596f15f5a5d64","status":"passed","time":{"start":1696320128115,"stop":1696320132164,"duration":4049}},{"uid":"9b8773f7d4448750","reportUrl":"https://novasamatech.github.io/test-runner/3879//#testresult/9b8773f7d4448750","status":"passed","time":{"start":1696305755029,"stop":1696305760424,"duration":5395}},{"uid":"100f876bc103a51f","reportUrl":"https://novasamatech.github.io/test-runner/3878//#testresult/100f876bc103a51f","status":"passed","time":{"start":1696291398914,"stop":1696291404541,"duration":5627}},{"uid":"d95aeba676f4e0ed","reportUrl":"https://novasamatech.github.io/test-runner/3877//#testresult/d95aeba676f4e0ed","status":"passed","time":{"start":1696276947601,"stop":1696276953385,"duration":5784}},{"uid":"4c071f89eed27770","reportUrl":"https://novasamatech.github.io/test-runner/3876//#testresult/4c071f89eed27770","status":"passed","time":{"start":1696262551178,"stop":1696262554549,"duration":3371}},{"uid":"55d8ff1cc87b4400","reportUrl":"https://novasamatech.github.io/test-runner/3875//#testresult/55d8ff1cc87b4400","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1696248187929,"stop":1696248189177,"duration":1248}},{"uid":"3b4929f51148bef4","reportUrl":"https://novasamatech.github.io/test-runner/3874//#testresult/3b4929f51148bef4","status":"passed","time":{"start":1696233773376,"stop":1696233778253,"duration":4877}},{"uid":"e5f3373e582f2b39","reportUrl":"https://novasamatech.github.io/test-runner/3873//#testresult/e5f3373e582f2b39","status":"passed","time":{"start":1696219324662,"stop":1696219328042,"duration":3380}},{"uid":"38b188706e0fd6ce","reportUrl":"https://novasamatech.github.io/test-runner/3872//#testresult/38b188706e0fd6ce","status":"passed","time":{"start":1696204969173,"stop":1696204973373,"duration":4200}},{"uid":"ee28f714e77a10ac","reportUrl":"https://novasamatech.github.io/test-runner/3871//#testresult/ee28f714e77a10ac","status":"passed","time":{"start":1696190543873,"stop":1696190549879,"duration":6006}},{"uid":"bc9012dd8d594930","reportUrl":"https://novasamatech.github.io/test-runner/3870//#testresult/bc9012dd8d594930","status":"passed","time":{"start":1696176119541,"stop":1696176125405,"duration":5864}},{"uid":"c5d2e23380c165df","reportUrl":"https://novasamatech.github.io/test-runner/3869//#testresult/c5d2e23380c165df","status":"passed","time":{"start":1696161730178,"stop":1696161733616,"duration":3438}},{"uid":"5ca440ae008b61c8","reportUrl":"https://novasamatech.github.io/test-runner/3868//#testresult/5ca440ae008b61c8","status":"passed","time":{"start":1696147355200,"stop":1696147360219,"duration":5019}},{"uid":"6653d7e386457e04","reportUrl":"https://novasamatech.github.io/test-runner/3867//#testresult/6653d7e386457e04","status":"passed","time":{"start":1696132945814,"stop":1696132950693,"duration":4879}},{"uid":"2f0ac1e4dab6ede2","reportUrl":"https://novasamatech.github.io/test-runner/3866//#testresult/2f0ac1e4dab6ede2","status":"passed","time":{"start":1696118575823,"stop":1696118579297,"duration":3474}}]},"tags":[]},"source":"6cf3b1d425df274e.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f62155c4580>"]}