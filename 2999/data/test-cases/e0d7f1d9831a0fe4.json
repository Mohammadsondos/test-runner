{"uid":"e0d7f1d9831a0fe4","name":"test_can_create_connection[Test for Hashed Network, url: wss://c1.hashed.network]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"82d36aa15e8a5bcf4ff7d8702aa21bfe","time":{"start":1683950684087,"stop":1683950684246,"duration":159},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","statusTrace":"data = {'name': 'Hashed Network', 'url': 'wss://c1.hashed.network'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"2f52fe0201208cd2","name":"stdout","source":"2f52fe0201208cd2.txt","type":"text/plain","size":254}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az162-227"},{"name":"thread","value":"1856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"738754259f72b4b","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1683950673826,"stop":1683950674005,"duration":179}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":35,"skipped":0,"passed":64,"unknown":0,"total":99},"items":[{"uid":"1030c4e320a34b2a","reportUrl":"https://nova-wallet.github.io/test-runner/2997//#testresult/1030c4e320a34b2a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1683921877337,"stop":1683921877391,"duration":54}},{"uid":"d51c7195bd99f36c","reportUrl":"https://nova-wallet.github.io/test-runner/2996//#testresult/d51c7195bd99f36c","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1683907499665,"stop":1683907500031,"duration":366}},{"uid":"b9640362bf2a66fc","reportUrl":"https://nova-wallet.github.io/test-runner/2995//#testresult/b9640362bf2a66fc","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1683893178518,"stop":1683893178739,"duration":221}},{"uid":"cb3a2bd906299fa6","reportUrl":"https://nova-wallet.github.io/test-runner/2994//#testresult/cb3a2bd906299fa6","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1683878709716,"stop":1683878709886,"duration":170}},{"uid":"608b1db4379c8595","reportUrl":"https://nova-wallet.github.io/test-runner/2991//#testresult/608b1db4379c8595","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 503 Service Temporarily Unavailable","time":{"start":1683835495231,"stop":1683835495465,"duration":234}},{"uid":"9bcb131448141bb8","reportUrl":"https://nova-wallet.github.io/test-runner/2990//#testresult/9bcb131448141bb8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683821178795,"stop":1683821178930,"duration":135}},{"uid":"786e45c2e644fed8","reportUrl":"https://nova-wallet.github.io/test-runner/2989//#testresult/786e45c2e644fed8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683806795990,"stop":1683806796155,"duration":165}},{"uid":"55d188a35a25cec7","reportUrl":"https://nova-wallet.github.io/test-runner/2988//#testresult/55d188a35a25cec7","status":"passed","time":{"start":1683792304796,"stop":1683792304864,"duration":68}},{"uid":"af9204f72b24497a","reportUrl":"https://nova-wallet.github.io/test-runner/2987//#testresult/af9204f72b24497a","status":"passed","time":{"start":1683777894350,"stop":1683777894603,"duration":253}},{"uid":"be9fc0ad06784fe4","reportUrl":"https://nova-wallet.github.io/test-runner/2985//#testresult/be9fc0ad06784fe4","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683749165521,"stop":1683749165596,"duration":75}},{"uid":"bfbe60b4d3c37117","reportUrl":"https://nova-wallet.github.io/test-runner/2983//#testresult/bfbe60b4d3c37117","status":"passed","time":{"start":1683720335745,"stop":1683720335826,"duration":81}},{"uid":"175c0c7caeea4808","reportUrl":"https://nova-wallet.github.io/test-runner/2982//#testresult/175c0c7caeea4808","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683705927246,"stop":1683705927282,"duration":36}},{"uid":"38562892609ba2ba","reportUrl":"https://nova-wallet.github.io/test-runner/2981//#testresult/38562892609ba2ba","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683691499852,"stop":1683691500022,"duration":170}},{"uid":"213e4d4d06f43c90","reportUrl":"https://nova-wallet.github.io/test-runner/2980//#testresult/213e4d4d06f43c90","status":"passed","time":{"start":1683677602593,"stop":1683677602845,"duration":252}},{"uid":"aa562896c202427","reportUrl":"https://nova-wallet.github.io/test-runner/2979//#testresult/aa562896c202427","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683662809989,"stop":1683662810039,"duration":50}},{"uid":"693b3b049e1aadef","reportUrl":"https://nova-wallet.github.io/test-runner/2978//#testresult/693b3b049e1aadef","status":"passed","time":{"start":1683648376472,"stop":1683648376822,"duration":350}},{"uid":"d6b2a6529c7e102e","reportUrl":"https://nova-wallet.github.io/test-runner/2977//#testresult/d6b2a6529c7e102e","status":"passed","time":{"start":1683635554643,"stop":1683635554861,"duration":218}},{"uid":"9345729a6cff8ee1","reportUrl":"https://nova-wallet.github.io/test-runner/2976//#testresult/9345729a6cff8ee1","status":"passed","time":{"start":1683619515938,"stop":1683619516237,"duration":299}},{"uid":"dc0b28b37a491310","reportUrl":"https://nova-wallet.github.io/test-runner/2975//#testresult/dc0b28b37a491310","status":"passed","time":{"start":1683605111045,"stop":1683605111348,"duration":303}},{"uid":"43bc15a84970d3d9","reportUrl":"https://nova-wallet.github.io/test-runner/2972//#testresult/43bc15a84970d3d9","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1683561924211,"stop":1683561924270,"duration":59}}]},"tags":[]},"source":"e0d7f1d9831a0fe4.json","parameterValues":["{'url': 'wss://c1.hashed.network', 'name': 'Hashed Network'}"]}