{"uid":"4272191d840c9e53","name":"test_can_create_connection[Test for Parallel Heiko, url: wss://parallel-heiko.api.onfinality.io/public-ws]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"e63bcdc37ef540889e40b7a474f60dd7","time":{"start":1670414775455,"stop":1670414790996,"duration":15541},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://parallel-heiko.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","statusTrace":"data = {'name': 'Parallel Heiko', 'url': 'wss://parallel-heiko.api.onfinality.io/public-ws'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(chains), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n>           raise WebSocketBadStatusException(\"Handshake status %d %s\", status, status_message, resp_headers)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:147: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"9c87d2a1d2e2b0d1","name":"stdout","source":"9c87d2a1d2e2b0d1.txt","type":"text/plain","size":276}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az842-825"},{"name":"thread","value":"1671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://parallel-heiko.api.onfinality.io/public-ws', 'name': 'Parallel Heiko'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9b76a6493fb50472","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670414749735,"stop":1670414765353,"duration":15618}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":82,"skipped":0,"passed":229,"unknown":0,"total":311},"items":[{"uid":"a47712f6270af4d5","reportUrl":"https://nova-wallet.github.io/test-runner/2040//#testresult/a47712f6270af4d5","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670400313326,"stop":1670400329051,"duration":15725}},{"uid":"4aaca87f2a241a17","reportUrl":"https://nova-wallet.github.io/test-runner/2039//#testresult/4aaca87f2a241a17","status":"passed","time":{"start":1670385878519,"stop":1670385879438,"duration":919}},{"uid":"8b207931e51a5c55","reportUrl":"https://nova-wallet.github.io/test-runner/2038//#testresult/8b207931e51a5c55","status":"passed","time":{"start":1670372081115,"stop":1670372082061,"duration":946}},{"uid":"24548308af847b17","reportUrl":"https://nova-wallet.github.io/test-runner/2037//#testresult/24548308af847b17","status":"passed","time":{"start":1670357079251,"stop":1670357080090,"duration":839}},{"uid":"e25e073e245cf328","reportUrl":"https://nova-wallet.github.io/test-runner/2036//#testresult/e25e073e245cf328","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670342708564,"stop":1670342724196,"duration":15632}},{"uid":"bf5620abd708857e","reportUrl":"https://nova-wallet.github.io/test-runner/2035//#testresult/bf5620abd708857e","status":"passed","time":{"start":1670333429564,"stop":1670333433414,"duration":3850}},{"uid":"2e3d21f68070be5d","reportUrl":"https://nova-wallet.github.io/test-runner/2027//#testresult/2e3d21f68070be5d","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670242184207,"stop":1670242184829,"duration":622}},{"uid":"b167754efd5a012","reportUrl":"https://nova-wallet.github.io/test-runner/2026//#testresult/b167754efd5a012","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670227748499,"stop":1670227749120,"duration":621}},{"uid":"e66e8aa51c745863","reportUrl":"https://nova-wallet.github.io/test-runner/2025//#testresult/e66e8aa51c745863","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670213323510,"stop":1670213324196,"duration":686}},{"uid":"4541d3d829ad402d","reportUrl":"https://nova-wallet.github.io/test-runner/2024//#testresult/4541d3d829ad402d","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670199540130,"stop":1670199555801,"duration":15671}},{"uid":"c09173b2272670d2","reportUrl":"https://nova-wallet.github.io/test-runner/2023//#testresult/c09173b2272670d2","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670184555829,"stop":1670184571553,"duration":15724}},{"uid":"42ed6b4766d744aa","reportUrl":"https://nova-wallet.github.io/test-runner/2022//#testresult/42ed6b4766d744aa","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670170127942,"stop":1670170143653,"duration":15711}},{"uid":"7c4ca5ac591b9424","reportUrl":"https://nova-wallet.github.io/test-runner/2021//#testresult/7c4ca5ac591b9424","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670157010843,"stop":1670157026447,"duration":15604}},{"uid":"9eb2bfe0bb898ed8","reportUrl":"https://nova-wallet.github.io/test-runner/2020//#testresult/9eb2bfe0bb898ed8","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests","time":{"start":1670142098331,"stop":1670142113998,"duration":15667}},{"uid":"3450e02aaf46ba30","reportUrl":"https://nova-wallet.github.io/test-runner/2019//#testresult/3450e02aaf46ba30","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670127664684,"stop":1670127665228,"duration":544}},{"uid":"58d493fc9d22af43","reportUrl":"https://nova-wallet.github.io/test-runner/2018//#testresult/58d493fc9d22af43","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670116423674,"stop":1670116424202,"duration":528}},{"uid":"10fbe4f0f5df0a28","reportUrl":"https://nova-wallet.github.io/test-runner/2017//#testresult/10fbe4f0f5df0a28","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670098687999,"stop":1670098695730,"duration":7731}},{"uid":"ec7eeb00fd1d906e","reportUrl":"https://nova-wallet.github.io/test-runner/2016//#testresult/ec7eeb00fd1d906e","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670084530910,"stop":1670084531536,"duration":626}},{"uid":"46256fb304e43639","reportUrl":"https://nova-wallet.github.io/test-runner/2015//#testresult/46256fb304e43639","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670070506041,"stop":1670070506739,"duration":698}},{"uid":"7dde24fc2fb27480","reportUrl":"https://nova-wallet.github.io/test-runner/2014//#testresult/7dde24fc2fb27480","status":"broken","statusDetails":"ValueError: Unsupported type registry preset \"metadata_types\"","time":{"start":1670055677316,"stop":1670055677995,"duration":679}}]},"tags":[]},"source":"4272191d840c9e53.json","parameterValues":["{'url': 'wss://parallel-heiko.api.onfinality.io/public-ws', 'name': 'Parallel Heiko'}"]}