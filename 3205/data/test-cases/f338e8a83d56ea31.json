{"uid":"f338e8a83d56ea31","name":"test_has_new_assets[Test for Kabocha (PAUSED)]","fullName":"tests.test_check_new_assets.TestAssets#test_has_new_assets","historyId":"2683019a3124663518f1986145ed7bdb","time":{"start":1686729911566,"stop":1686729911995,"duration":429},"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f01153f7bb0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f01153f4bb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute 'get_constant'","statusTrace":"self = <tests.test_check_new_assets.TestAssets object at 0x7f01153f7bb0>\nchain = <scripts.utils.chain_model.Chain object at 0x7f01153f4bb0>\n\n    def test_has_new_assets(self, chain: Chain):\n    \n        chain_assets = {asset['symbol'].upper(): '' for asset in chain.assets}\n        chain_assets.update(self.asset_mapping)\n    \n        if chain.name in self.exclusions:\n            chain_assets.update({ex_asset: '' for ex_asset in self.exclusions[chain.name]})\n        chain.create_connection()\n>       chain.init_properties()\n\ntests/test_check_new_assets.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/chain_model.py:44: in init_properties\n    self.properties = get_properties(self.substrate)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsubstrate = None\n\n    def get_properties(substrate: SubstrateInterface) -> Properties:\n        \"\"\"Get network properties from metadata\n    \n        Args:\n            substrate (SubstrateInterface): Initialized substrate interface\n    \n        Returns:\n            Properties: Oject with network properties\n        \"\"\"\n>       substrate.get_constant('system', 'ss58Prefix')\nE       AttributeError: 'NoneType' object has no attribute 'get_constant'\n\nscripts/utils/metadata_interaction.py:68: AttributeError","steps":[],"attachments":[{"uid":"5967c781525fb0ef","name":"stdout","source":"5967c781525fb0ef.txt","type":"text/plain","size":1647}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_new_assets"},{"name":"subSuite","value":"TestAssets"},{"name":"host","value":"fv-az173-458"},{"name":"thread","value":"1940-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_new_assets"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"chain","value":"<scripts.utils.chain_model.Chain object at 0x7f01153f4bb0>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5f21f375ac374935","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686729895700,"stop":1686729896524,"duration":824}},{"uid":"fc41e85e9f36ede7","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686729879825,"stop":1686729880660,"duration":835}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":74,"unknown":0,"total":78},"items":[{"uid":"7610ed6597beee39","reportUrl":"https://novasamatech.github.io/test-runner/3204//#testresult/7610ed6597beee39","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686715505238,"stop":1686715505688,"duration":450}},{"uid":"28ec1be90ae38bcc","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/28ec1be90ae38bcc","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686701654799,"stop":1686701655373,"duration":574}},{"uid":"692932f2fc2adaba","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/692932f2fc2adaba","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'get_constant'","time":{"start":1686686723684,"stop":1686686724204,"duration":520}},{"uid":"d59cb0cf4fd900d4","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/d59cb0cf4fd900d4","status":"passed","time":{"start":1686672298176,"stop":1686672305879,"duration":7703}},{"uid":"43d18440e5880886","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/43d18440e5880886","status":"passed","time":{"start":1686657933567,"stop":1686657941324,"duration":7757}},{"uid":"6918f844f98b9216","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/6918f844f98b9216","status":"passed","time":{"start":1686643502429,"stop":1686643508620,"duration":6191}},{"uid":"740b654aad7d9f37","reportUrl":"https://novasamatech.github.io/test-runner/3198//#testresult/740b654aad7d9f37","status":"passed","time":{"start":1686629086003,"stop":1686629091379,"duration":5376}},{"uid":"6206c31242ab8dcb","reportUrl":"https://novasamatech.github.io/test-runner/3197//#testresult/6206c31242ab8dcb","status":"passed","time":{"start":1686615290671,"stop":1686615298376,"duration":7705}},{"uid":"54a49c4dbdb36f90","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/54a49c4dbdb36f90","status":"passed","time":{"start":1686600264712,"stop":1686600268976,"duration":4264}},{"uid":"24db8691b62abc65","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/24db8691b62abc65","status":"passed","time":{"start":1686585862076,"stop":1686585870070,"duration":7994}},{"uid":"ec6aeaef95eaa2ca","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/ec6aeaef95eaa2ca","status":"passed","time":{"start":1686571538227,"stop":1686571545893,"duration":7666}},{"uid":"585a9499936133ae","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/585a9499936133ae","status":"passed","time":{"start":1686557090983,"stop":1686557097316,"duration":6333}},{"uid":"b96e8534869483ee","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/b96e8534869483ee","status":"passed","time":{"start":1686542689237,"stop":1686542697962,"duration":8725}},{"uid":"c1123fe103a0cfaa","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/c1123fe103a0cfaa","status":"passed","time":{"start":1686528930576,"stop":1686528936210,"duration":5634}},{"uid":"f8751216444253dd","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/f8751216444253dd","status":"passed","time":{"start":1686513853393,"stop":1686513860467,"duration":7074}},{"uid":"b68248a3b4e34670","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/b68248a3b4e34670","status":"passed","time":{"start":1686499484800,"stop":1686499490909,"duration":6109}},{"uid":"fb8facf653ea5bd3","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/fb8facf653ea5bd3","status":"passed","time":{"start":1686485111147,"stop":1686485116616,"duration":5469}},{"uid":"c897c20dd73be6a0","reportUrl":"https://novasamatech.github.io/test-runner/3187//#testresult/c897c20dd73be6a0","status":"passed","time":{"start":1686470672630,"stop":1686470677377,"duration":4747}},{"uid":"7e7034607fc3d0e5","reportUrl":"https://novasamatech.github.io/test-runner/3186//#testresult/7e7034607fc3d0e5","status":"passed","time":{"start":1686456256166,"stop":1686456261724,"duration":5558}},{"uid":"6c66bc5ddfdb0c61","reportUrl":"https://novasamatech.github.io/test-runner/3185//#testresult/6c66bc5ddfdb0c61","status":"passed","time":{"start":1686442537824,"stop":1686442543042,"duration":5218}}]},"tags":[]},"source":"f338e8a83d56ea31.json","parameterValues":["<scripts.utils.chain_model.Chain object at 0x7f01153f4bb0>"]}