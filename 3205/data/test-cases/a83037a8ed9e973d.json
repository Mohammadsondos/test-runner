{"uid":"a83037a8ed9e973d","name":"test_can_create_connection[Test for Acala, url: wss://acala-rpc.dwellir.com]","fullName":"tests.test_nodes_availability#test_can_create_connection","historyId":"6c77ce47b0ce8fb3c0f86b2e90e26f67","time":{"start":1686729875180,"stop":1686729875550,"duration":370},"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 14 Jun 2023 08:04:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 14 Jun 2023 08:04:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 14 Jun 2023 08:04:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","statusTrace":"data = {'name': 'Acala', 'url': 'wss://acala-rpc.dwellir.com'}\n\n    @pytest.mark.parametrize(\"data\", collect_nodes_for_chains(get_substrate_chains()), ids=task_ids)\n    def test_can_create_connection(data):\n    \n>       connectin = create_connection_by_url(data[\"url\"])\n\ntests/test_nodes_availability.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nscripts/utils/substrate_interface.py:30: in create_connection_by_url\n    substrate = SubstrateInterface(\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:627: in __init__\n    self.connect_websocket()\n../../../../.local/lib/python3.10/site-packages/substrateinterface/base.py:665: in connect_websocket\n    self.websocket = create_connection(\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:608: in create_connection\n    websock.connect(url, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_core.py:253: in connect\n    self.handshake_response = handshake(self.sock, url, *addrs, **options)\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:57: in handshake\n    status, resp = _get_resp_headers(sock)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsock = <ssl.SSLSocket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\nsuccess_statuses = (<HTTPStatus.MOVED_PERMANENTLY: 301>, <HTTPStatus.FOUND: 302>, <HTTPStatus.SEE_OTHER: 303>, <HTTPStatus.SWITCHING_PROTOCOLS: 101>)\n\n    def _get_resp_headers(sock, success_statuses=SUCCESS_STATUSES):\n        status, resp_headers, status_message = read_headers(sock)\n        if status not in success_statuses:\n            content_len = resp_headers.get('content-length')\n            if content_len:\n                response_body = sock.recv(int(content_len))  # read the body of the HTTP error message response and include it in the exception\n            else:\n                response_body = None\n>           raise WebSocketBadStatusException(\"Handshake status {status} {message} -+-+- {headers} -+-+- {body}\".format(status=status, message=status_message, headers=resp_headers, body=response_body), status, status_message, resp_headers, response_body)\nE           websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 14 Jun 2023 08:04:34 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'\n\n../../../../.local/lib/python3.10/site-packages/websocket/_handshake.py:150: WebSocketBadStatusException","steps":[],"attachments":[{"uid":"3a7d18f5c24d4e5b","name":"stdout","source":"3a7d18f5c24d4e5b.txt","type":"text/plain","size":1056}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_nodes_availability"},{"name":"host","value":"fv-az583-422"},{"name":"thread","value":"1968-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_nodes_availability"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'url': 'wss://acala-rpc.dwellir.com', 'name': 'Acala'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"111f62b20ddb0d58","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 14 Jun 2023 08:04:20 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686729859727,"stop":1686729860095,"duration":368}},{"uid":"eebe3a75b5936f8a","status":"broken","statusDetails":"websocket._exceptions.WebSocketBadStatusException: Handshake status 429 Too Many Requests -+-+- {'content-type': 'text/plain', 'content-length': '45', 'date': 'Wed, 14 Jun 2023 08:04:03 GMT', 'strict-transport-security': 'max-age=16000000; includeSubDomains; preload;'} -+-+- b'Too many connections. Please try again later.'","time":{"start":1686729844222,"stop":1686729844560,"duration":338}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":239,"unknown":0,"total":246},"items":[{"uid":"62e4b7683d35f7aa","reportUrl":"https://novasamatech.github.io/test-runner/3204//#testresult/62e4b7683d35f7aa","status":"passed","time":{"start":1686715426578,"stop":1686715427031,"duration":453}},{"uid":"5d3fd77118d7e5e4","reportUrl":"https://novasamatech.github.io/test-runner/3203//#testresult/5d3fd77118d7e5e4","status":"passed","time":{"start":1686701588693,"stop":1686701589164,"duration":471}},{"uid":"8ce3e6e41190f929","reportUrl":"https://novasamatech.github.io/test-runner/3202//#testresult/8ce3e6e41190f929","status":"passed","time":{"start":1686686645737,"stop":1686686646205,"duration":468}},{"uid":"cc6312d01933daa0","reportUrl":"https://novasamatech.github.io/test-runner/3201//#testresult/cc6312d01933daa0","status":"passed","time":{"start":1686672244957,"stop":1686672245580,"duration":623}},{"uid":"fc794e75f9d1c363","reportUrl":"https://novasamatech.github.io/test-runner/3200//#testresult/fc794e75f9d1c363","status":"passed","time":{"start":1686657889530,"stop":1686657890243,"duration":713}},{"uid":"e027c163985117c5","reportUrl":"https://novasamatech.github.io/test-runner/3199//#testresult/e027c163985117c5","status":"passed","time":{"start":1686643457861,"stop":1686643458409,"duration":548}},{"uid":"bb6d9d5e0fa63d13","reportUrl":"https://novasamatech.github.io/test-runner/3198//#testresult/bb6d9d5e0fa63d13","status":"passed","time":{"start":1686629040862,"stop":1686629041384,"duration":522}},{"uid":"a9b543d6f6511706","reportUrl":"https://novasamatech.github.io/test-runner/3197//#testresult/a9b543d6f6511706","status":"passed","time":{"start":1686615256789,"stop":1686615257368,"duration":579}},{"uid":"4a512a92e5964b56","reportUrl":"https://novasamatech.github.io/test-runner/3196//#testresult/4a512a92e5964b56","status":"passed","time":{"start":1686600238997,"stop":1686600239609,"duration":612}},{"uid":"e1df2bf574b656bc","reportUrl":"https://novasamatech.github.io/test-runner/3195//#testresult/e1df2bf574b656bc","status":"passed","time":{"start":1686585825779,"stop":1686585826243,"duration":464}},{"uid":"95a0d361f8ae866f","reportUrl":"https://novasamatech.github.io/test-runner/3194//#testresult/95a0d361f8ae866f","status":"passed","time":{"start":1686571499052,"stop":1686571499490,"duration":438}},{"uid":"7f98bc54a24eba41","reportUrl":"https://novasamatech.github.io/test-runner/3193//#testresult/7f98bc54a24eba41","status":"passed","time":{"start":1686557062639,"stop":1686557063154,"duration":515}},{"uid":"26180f13c173bc2f","reportUrl":"https://novasamatech.github.io/test-runner/3192//#testresult/26180f13c173bc2f","status":"passed","time":{"start":1686542639914,"stop":1686542640395,"duration":481}},{"uid":"fd76f0145dd31fdf","reportUrl":"https://novasamatech.github.io/test-runner/3191//#testresult/fd76f0145dd31fdf","status":"passed","time":{"start":1686528886623,"stop":1686528887104,"duration":481}},{"uid":"9ae64d0daf9d48c2","reportUrl":"https://novasamatech.github.io/test-runner/3190//#testresult/9ae64d0daf9d48c2","status":"passed","time":{"start":1686513815578,"stop":1686513816057,"duration":479}},{"uid":"263d528203555401","reportUrl":"https://novasamatech.github.io/test-runner/3189//#testresult/263d528203555401","status":"passed","time":{"start":1686499442237,"stop":1686499442839,"duration":602}},{"uid":"9e58b08b27a39ca","reportUrl":"https://novasamatech.github.io/test-runner/3188//#testresult/9e58b08b27a39ca","status":"passed","time":{"start":1686485090340,"stop":1686485091086,"duration":746}},{"uid":"d20b2307258d90dc","reportUrl":"https://novasamatech.github.io/test-runner/3187//#testresult/d20b2307258d90dc","status":"passed","time":{"start":1686470639012,"stop":1686470639521,"duration":509}},{"uid":"a269d2af14e2b07b","reportUrl":"https://novasamatech.github.io/test-runner/3186//#testresult/a269d2af14e2b07b","status":"passed","time":{"start":1686456222017,"stop":1686456222512,"duration":495}},{"uid":"bddf707727f3f2af","reportUrl":"https://novasamatech.github.io/test-runner/3185//#testresult/bddf707727f3f2af","status":"passed","time":{"start":1686442516009,"stop":1686442516777,"duration":768}}]},"tags":[]},"source":"a83037a8ed9e973d.json","parameterValues":["{'url': 'wss://acala-rpc.dwellir.com', 'name': 'Acala'}"]}